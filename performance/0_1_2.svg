<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="8971"><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.0000%" y="853" width="0.0111%" height="15" fill="rgb(50,165,165)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.0000%" y="837" width="0.0111%" height="15" fill="rgb(190,90,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="0.0000%" y="821" width="0.0111%" height="15" fill="rgb(244,144,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="0.0000%" y="805" width="0.0111%" height="15" fill="rgb(250,150,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="0.0000%" y="789" width="0.0111%" height="15" fill="rgb(67,181,181)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="0.0000%" y="773" width="0.0111%" height="15" fill="rgb(226,126,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="0.0000%" y="757" width="0.0111%" height="15" fill="rgb(235,135,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="0.0000%" y="917" width="0.0334%" height="15" fill="rgb(196,96,0)" fg:x="0" fg:w="3"/><text x="0.2500%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="0.0000%" y="901" width="0.0334%" height="15" fill="rgb(198,98,0)" fg:x="0" fg:w="3"/><text x="0.2500%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="0.0000%" y="885" width="0.0334%" height="15" fill="rgb(224,124,0)" fg:x="0" fg:w="3"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="0.0000%" y="869" width="0.0334%" height="15" fill="rgb(109,219,219)" fg:x="0" fg:w="3"/><text x="0.2500%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="0.0111%" y="853" width="0.0223%" height="15" fill="rgb(244,144,0)" fg:x="1" fg:w="2"/><text x="0.2611%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="0.0111%" y="837" width="0.0223%" height="15" fill="rgb(195,95,0)" fg:x="1" fg:w="2"/><text x="0.2611%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="0.0111%" y="821" width="0.0223%" height="15" fill="rgb(243,143,0)" fg:x="1" fg:w="2"/><text x="0.2611%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="0.0111%" y="805" width="0.0223%" height="15" fill="rgb(248,148,0)" fg:x="1" fg:w="2"/><text x="0.2611%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="0.0111%" y="789" width="0.0223%" height="15" fill="rgb(210,110,0)" fg:x="1" fg:w="2"/><text x="0.2611%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="0.0111%" y="773" width="0.0223%" height="15" fill="rgb(195,95,0)" fg:x="1" fg:w="2"/><text x="0.2611%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.0334%" y="917" width="0.0111%" height="15" fill="rgb(58,172,172)" fg:x="3" fg:w="1"/><text x="0.2834%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1 samples, 0.01%)</title><rect x="0.0334%" y="901" width="0.0111%" height="15" fill="rgb(102,212,212)" fg:x="3" fg:w="1"/><text x="0.2834%" y="911.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="0.0446%" y="901" width="0.0111%" height="15" fill="rgb(56,171,171)" fg:x="4" fg:w="1"/><text x="0.2946%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="0.0557%" y="901" width="0.0446%" height="15" fill="rgb(199,99,0)" fg:x="5" fg:w="4"/><text x="0.3057%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.1003%" y="901" width="0.0111%" height="15" fill="rgb(97,208,208)" fg:x="9" fg:w="1"/><text x="0.3503%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="0.1003%" y="885" width="0.0111%" height="15" fill="rgb(51,166,166)" fg:x="9" fg:w="1"/><text x="0.3503%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="0.1003%" y="869" width="0.0111%" height="15" fill="rgb(54,169,169)" fg:x="9" fg:w="1"/><text x="0.3503%" y="879.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="0.1003%" y="853" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="863.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.1003%" y="837" width="0.0111%" height="15" fill="rgb(58,172,172)" fg:x="9" fg:w="1"/><text x="0.3503%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.1003%" y="821" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="0.1003%" y="805" width="0.0111%" height="15" fill="rgb(235,135,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="0.1003%" y="789" width="0.0111%" height="15" fill="rgb(231,131,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="0.1003%" y="773" width="0.0111%" height="15" fill="rgb(59,173,173)" fg:x="9" fg:w="1"/><text x="0.3503%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="0.1003%" y="757" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="0.1003%" y="741" width="0.0111%" height="15" fill="rgb(214,114,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="0.1003%" y="725" width="0.0111%" height="15" fill="rgb(241,141,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="0.1003%" y="709" width="0.0111%" height="15" fill="rgb(244,144,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="0.1003%" y="693" width="0.0111%" height="15" fill="rgb(213,113,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="0.1003%" y="677" width="0.0111%" height="15" fill="rgb(200,100,0)" fg:x="9" fg:w="1"/><text x="0.3503%" y="687.50"></text></g><g><title>[libc.so.6] (244 samples, 2.72%)</title><rect x="0.1115%" y="901" width="2.7199%" height="15" fill="rgb(175,175,50)" fg:x="10" fg:w="244"/><text x="0.3615%" y="911.50">[l..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (35 samples, 0.39%)</title><rect x="3.0766%" y="853" width="0.3901%" height="15" fill="rgb(244,144,0)" fg:x="276" fg:w="35"/><text x="3.3266%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 0.39%)</title><rect x="3.0766%" y="837" width="0.3901%" height="15" fill="rgb(237,137,0)" fg:x="276" fg:w="35"/><text x="3.3266%" y="847.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (94 samples, 1.05%)</title><rect x="2.8313%" y="901" width="1.0478%" height="15" fill="rgb(97,208,208)" fg:x="254" fg:w="94"/><text x="3.0813%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (72 samples, 0.80%)</title><rect x="3.0766%" y="885" width="0.8026%" height="15" fill="rgb(207,107,0)" fg:x="276" fg:w="72"/><text x="3.3266%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (72 samples, 0.80%)</title><rect x="3.0766%" y="869" width="0.8026%" height="15" fill="rgb(209,109,0)" fg:x="276" fg:w="72"/><text x="3.3266%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.41%)</title><rect x="3.4667%" y="853" width="0.4124%" height="15" fill="rgb(216,116,0)" fg:x="311" fg:w="37"/><text x="3.7167%" y="863.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="3.8792%" y="885" width="0.0111%" height="15" fill="rgb(80,192,192)" fg:x="348" fg:w="1"/><text x="4.1292%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="3.8792%" y="869" width="0.0111%" height="15" fill="rgb(248,148,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="3.8792%" y="853" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="3.8792%" y="837" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="3.8792%" y="821" width="0.0111%" height="15" fill="rgb(99,210,210)" fg:x="348" fg:w="1"/><text x="4.1292%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="3.8792%" y="805" width="0.0111%" height="15" fill="rgb(207,107,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="3.8792%" y="789" width="0.0111%" height="15" fill="rgb(197,97,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="3.8792%" y="773" width="0.0111%" height="15" fill="rgb(200,100,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="3.8792%" y="757" width="0.0111%" height="15" fill="rgb(250,150,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="3.8792%" y="741" width="0.0111%" height="15" fill="rgb(224,124,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="3.8792%" y="725" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="348" fg:w="1"/><text x="4.1292%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="3.8903%" y="885" width="0.0111%" height="15" fill="rgb(231,131,0)" fg:x="349" fg:w="1"/><text x="4.1403%" y="895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="3.8903%" y="869" width="0.0111%" height="15" fill="rgb(80,193,193)" fg:x="349" fg:w="1"/><text x="4.1403%" y="879.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (3 samples, 0.03%)</title><rect x="3.8792%" y="901" width="0.0334%" height="15" fill="rgb(88,200,200)" fg:x="348" fg:w="3"/><text x="4.1292%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="3.9015%" y="885" width="0.0111%" height="15" fill="rgb(213,113,0)" fg:x="350" fg:w="1"/><text x="4.1515%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="3.9015%" y="869" width="0.0111%" height="15" fill="rgb(193,93,0)" fg:x="350" fg:w="1"/><text x="4.1515%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="3.9015%" y="853" width="0.0111%" height="15" fill="rgb(190,90,0)" fg:x="350" fg:w="1"/><text x="4.1515%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.9015%" y="837" width="0.0111%" height="15" fill="rgb(62,176,176)" fg:x="350" fg:w="1"/><text x="4.1515%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.01%)</title><rect x="3.9015%" y="821" width="0.0111%" height="15" fill="rgb(52,167,167)" fg:x="350" fg:w="1"/><text x="4.1515%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.01%)</title><rect x="3.9015%" y="805" width="0.0111%" height="15" fill="rgb(109,219,219)" fg:x="350" fg:w="1"/><text x="4.1515%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="3.9015%" y="789" width="0.0111%" height="15" fill="rgb(231,131,0)" fg:x="350" fg:w="1"/><text x="4.1515%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="3.9015%" y="773" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="350" fg:w="1"/><text x="4.1515%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.23%)</title><rect x="4.1578%" y="805" width="0.2341%" height="15" fill="rgb(217,117,0)" fg:x="373" fg:w="21"/><text x="4.4078%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.23%)</title><rect x="4.1578%" y="789" width="0.2341%" height="15" fill="rgb(229,129,0)" fg:x="373" fg:w="21"/><text x="4.4078%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.23%)</title><rect x="4.1578%" y="773" width="0.2341%" height="15" fill="rgb(212,112,0)" fg:x="373" fg:w="21"/><text x="4.4078%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.23%)</title><rect x="4.1578%" y="757" width="0.2341%" height="15" fill="rgb(240,140,0)" fg:x="373" fg:w="21"/><text x="4.4078%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.23%)</title><rect x="4.1578%" y="741" width="0.2341%" height="15" fill="rgb(207,107,0)" fg:x="373" fg:w="21"/><text x="4.4078%" y="751.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.23%)</title><rect x="4.1578%" y="725" width="0.2341%" height="15" fill="rgb(233,133,0)" fg:x="373" fg:w="21"/><text x="4.4078%" y="735.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (52 samples, 0.58%)</title><rect x="4.1578%" y="885" width="0.5796%" height="15" fill="rgb(59,173,173)" fg:x="373" fg:w="52"/><text x="4.4078%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.58%)</title><rect x="4.1578%" y="869" width="0.5796%" height="15" fill="rgb(222,122,0)" fg:x="373" fg:w="52"/><text x="4.4078%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.58%)</title><rect x="4.1578%" y="853" width="0.5796%" height="15" fill="rgb(205,105,0)" fg:x="373" fg:w="52"/><text x="4.4078%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.58%)</title><rect x="4.1578%" y="837" width="0.5796%" height="15" fill="rgb(213,113,0)" fg:x="373" fg:w="52"/><text x="4.4078%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.58%)</title><rect x="4.1578%" y="821" width="0.5796%" height="15" fill="rgb(80,193,193)" fg:x="373" fg:w="52"/><text x="4.4078%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (31 samples, 0.35%)</title><rect x="4.3919%" y="805" width="0.3456%" height="15" fill="rgb(202,102,0)" fg:x="394" fg:w="31"/><text x="4.6419%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.35%)</title><rect x="4.3919%" y="789" width="0.3456%" height="15" fill="rgb(200,100,0)" fg:x="394" fg:w="31"/><text x="4.6419%" y="799.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="4.7375%" y="885" width="0.0111%" height="15" fill="rgb(105,215,215)" fg:x="425" fg:w="1"/><text x="4.9875%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="4.7375%" y="869" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="4.7375%" y="853" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="4.7375%" y="837" width="0.0111%" height="15" fill="rgb(250,150,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="4.7375%" y="821" width="0.0111%" height="15" fill="rgb(71,184,184)" fg:x="425" fg:w="1"/><text x="4.9875%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="4.7375%" y="805" width="0.0111%" height="15" fill="rgb(243,143,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="4.7375%" y="789" width="0.0111%" height="15" fill="rgb(250,150,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="4.7375%" y="773" width="0.0111%" height="15" fill="rgb(224,124,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="4.7375%" y="757" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="4.7375%" y="741" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="4.7375%" y="725" width="0.0111%" height="15" fill="rgb(194,94,0)" fg:x="425" fg:w="1"/><text x="4.9875%" y="735.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (4 samples, 0.04%)</title><rect x="4.7486%" y="885" width="0.0446%" height="15" fill="rgb(82,194,194)" fg:x="426" fg:w="4"/><text x="4.9986%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="4.7486%" y="869" width="0.0446%" height="15" fill="rgb(237,137,0)" fg:x="426" fg:w="4"/><text x="4.9986%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.04%)</title><rect x="4.7486%" y="853" width="0.0446%" height="15" fill="rgb(93,204,204)" fg:x="426" fg:w="4"/><text x="4.9986%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="4.7486%" y="837" width="0.0446%" height="15" fill="rgb(106,216,216)" fg:x="426" fg:w="4"/><text x="4.9986%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="4.7486%" y="821" width="0.0446%" height="15" fill="rgb(80,192,192)" fg:x="426" fg:w="4"/><text x="4.9986%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="4.7932%" y="741" width="0.0223%" height="15" fill="rgb(218,118,0)" fg:x="430" fg:w="2"/><text x="5.0432%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="4.7932%" y="725" width="0.0223%" height="15" fill="rgb(193,93,0)" fg:x="430" fg:w="2"/><text x="5.0432%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="4.7932%" y="709" width="0.0223%" height="15" fill="rgb(230,130,0)" fg:x="430" fg:w="2"/><text x="5.0432%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="4.7932%" y="693" width="0.0223%" height="15" fill="rgb(217,117,0)" fg:x="430" fg:w="2"/><text x="5.0432%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="4.7932%" y="677" width="0.0223%" height="15" fill="rgb(248,148,0)" fg:x="430" fg:w="2"/><text x="5.0432%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="4.7932%" y="661" width="0.0223%" height="15" fill="rgb(236,136,0)" fg:x="430" fg:w="2"/><text x="5.0432%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.03%)</title><rect x="4.7932%" y="885" width="0.0334%" height="15" fill="rgb(226,126,0)" fg:x="430" fg:w="3"/><text x="5.0432%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="4.7932%" y="869" width="0.0334%" height="15" fill="rgb(195,95,0)" fg:x="430" fg:w="3"/><text x="5.0432%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="4.7932%" y="853" width="0.0334%" height="15" fill="rgb(220,120,0)" fg:x="430" fg:w="3"/><text x="5.0432%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="4.7932%" y="837" width="0.0334%" height="15" fill="rgb(57,171,171)" fg:x="430" fg:w="3"/><text x="5.0432%" y="847.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="4.7932%" y="821" width="0.0334%" height="15" fill="rgb(108,218,218)" fg:x="430" fg:w="3"/><text x="5.0432%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="4.7932%" y="805" width="0.0334%" height="15" fill="rgb(195,95,0)" fg:x="430" fg:w="3"/><text x="5.0432%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="4.7932%" y="789" width="0.0334%" height="15" fill="rgb(196,96,0)" fg:x="430" fg:w="3"/><text x="5.0432%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="4.7932%" y="773" width="0.0334%" height="15" fill="rgb(191,91,0)" fg:x="430" fg:w="3"/><text x="5.0432%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="4.7932%" y="757" width="0.0334%" height="15" fill="rgb(71,184,184)" fg:x="430" fg:w="3"/><text x="5.0432%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="4.8155%" y="741" width="0.0111%" height="15" fill="rgb(210,110,0)" fg:x="432" fg:w="1"/><text x="5.0655%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="4.8155%" y="725" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="432" fg:w="1"/><text x="5.0655%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.06%)</title><rect x="4.8267%" y="885" width="0.0557%" height="15" fill="rgb(243,143,0)" fg:x="433" fg:w="5"/><text x="5.0767%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (16 samples, 0.18%)</title><rect x="4.8824%" y="885" width="0.1784%" height="15" fill="rgb(222,122,0)" fg:x="438" fg:w="16"/><text x="5.1324%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (16 samples, 0.18%)</title><rect x="4.8824%" y="869" width="0.1784%" height="15" fill="rgb(244,144,0)" fg:x="438" fg:w="16"/><text x="5.1324%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (16 samples, 0.18%)</title><rect x="4.8824%" y="853" width="0.1784%" height="15" fill="rgb(220,120,0)" fg:x="438" fg:w="16"/><text x="5.1324%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.18%)</title><rect x="4.8824%" y="837" width="0.1784%" height="15" fill="rgb(239,139,0)" fg:x="438" fg:w="16"/><text x="5.1324%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.18%)</title><rect x="4.8824%" y="821" width="0.1784%" height="15" fill="rgb(222,122,0)" fg:x="438" fg:w="16"/><text x="5.1324%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.18%)</title><rect x="4.8824%" y="805" width="0.1784%" height="15" fill="rgb(235,135,0)" fg:x="438" fg:w="16"/><text x="5.1324%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.16%)</title><rect x="5.0608%" y="869" width="0.1561%" height="15" fill="rgb(238,138,0)" fg:x="454" fg:w="14"/><text x="5.3108%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (14 samples, 0.16%)</title><rect x="5.0608%" y="853" width="0.1561%" height="15" fill="rgb(196,96,0)" fg:x="454" fg:w="14"/><text x="5.3108%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (14 samples, 0.16%)</title><rect x="5.0608%" y="837" width="0.1561%" height="15" fill="rgb(223,123,0)" fg:x="454" fg:w="14"/><text x="5.3108%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (14 samples, 0.16%)</title><rect x="5.0608%" y="821" width="0.1561%" height="15" fill="rgb(210,110,0)" fg:x="454" fg:w="14"/><text x="5.3108%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (14 samples, 0.16%)</title><rect x="5.0608%" y="805" width="0.1561%" height="15" fill="rgb(209,109,0)" fg:x="454" fg:w="14"/><text x="5.3108%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.16%)</title><rect x="5.0608%" y="789" width="0.1561%" height="15" fill="rgb(225,125,0)" fg:x="454" fg:w="14"/><text x="5.3108%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.16%)</title><rect x="5.0608%" y="773" width="0.1561%" height="15" fill="rgb(200,100,0)" fg:x="454" fg:w="14"/><text x="5.3108%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.16%)</title><rect x="5.0608%" y="757" width="0.1561%" height="15" fill="rgb(224,124,0)" fg:x="454" fg:w="14"/><text x="5.3108%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (15 samples, 0.17%)</title><rect x="5.0608%" y="885" width="0.1672%" height="15" fill="rgb(193,93,0)" fg:x="454" fg:w="15"/><text x="5.3108%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.01%)</title><rect x="5.2168%" y="869" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="468" fg:w="1"/><text x="5.4668%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="5.2168%" y="853" width="0.0111%" height="15" fill="rgb(204,104,0)" fg:x="468" fg:w="1"/><text x="5.4668%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="5.2168%" y="837" width="0.0111%" height="15" fill="rgb(241,141,0)" fg:x="468" fg:w="1"/><text x="5.4668%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="5.2168%" y="821" width="0.0111%" height="15" fill="rgb(194,94,0)" fg:x="468" fg:w="1"/><text x="5.4668%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.04%)</title><rect x="5.2280%" y="885" width="0.0446%" height="15" fill="rgb(254,154,0)" fg:x="469" fg:w="4"/><text x="5.4780%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="5.2280%" y="869" width="0.0446%" height="15" fill="rgb(205,105,0)" fg:x="469" fg:w="4"/><text x="5.4780%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="5.2280%" y="853" width="0.0446%" height="15" fill="rgb(192,92,0)" fg:x="469" fg:w="4"/><text x="5.4780%" y="863.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="5.2280%" y="837" width="0.0446%" height="15" fill="rgb(65,179,179)" fg:x="469" fg:w="4"/><text x="5.4780%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.04%)</title><rect x="5.2280%" y="821" width="0.0446%" height="15" fill="rgb(224,124,0)" fg:x="469" fg:w="4"/><text x="5.4780%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="5.2280%" y="805" width="0.0446%" height="15" fill="rgb(221,121,0)" fg:x="469" fg:w="4"/><text x="5.4780%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="5.2280%" y="789" width="0.0446%" height="15" fill="rgb(195,95,0)" fg:x="469" fg:w="4"/><text x="5.4780%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="5.2280%" y="773" width="0.0446%" height="15" fill="rgb(201,101,0)" fg:x="469" fg:w="4"/><text x="5.4780%" y="783.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (125 samples, 1.39%)</title><rect x="3.9126%" y="901" width="1.3934%" height="15" fill="rgb(82,194,194)" fg:x="351" fg:w="125"/><text x="4.1626%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (3 samples, 0.03%)</title><rect x="5.2725%" y="885" width="0.0334%" height="15" fill="rgb(225,125,0)" fg:x="473" fg:w="3"/><text x="5.5225%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="5.2725%" y="869" width="0.0334%" height="15" fill="rgb(217,117,0)" fg:x="473" fg:w="3"/><text x="5.5225%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (3 samples, 0.03%)</title><rect x="5.2725%" y="853" width="0.0334%" height="15" fill="rgb(242,142,0)" fg:x="473" fg:w="3"/><text x="5.5225%" y="863.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="5.2725%" y="837" width="0.0334%" height="15" fill="rgb(104,214,214)" fg:x="473" fg:w="3"/><text x="5.5225%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (3 samples, 0.03%)</title><rect x="5.2725%" y="821" width="0.0334%" height="15" fill="rgb(246,146,0)" fg:x="473" fg:w="3"/><text x="5.5225%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="5.2725%" y="805" width="0.0334%" height="15" fill="rgb(246,146,0)" fg:x="473" fg:w="3"/><text x="5.5225%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="5.2725%" y="789" width="0.0334%" height="15" fill="rgb(203,103,0)" fg:x="473" fg:w="3"/><text x="5.5225%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="5.2725%" y="773" width="0.0334%" height="15" fill="rgb(199,99,0)" fg:x="473" fg:w="3"/><text x="5.5225%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.33%)</title><rect x="5.3060%" y="901" width="0.3344%" height="15" fill="rgb(199,99,0)" fg:x="476" fg:w="30"/><text x="5.5560%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.11%)</title><rect x="5.6404%" y="901" width="0.1115%" height="15" fill="rgb(247,147,0)" fg:x="506" fg:w="10"/><text x="5.8904%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.11%)</title><rect x="5.6404%" y="885" width="0.1115%" height="15" fill="rgb(218,118,0)" fg:x="506" fg:w="10"/><text x="5.8904%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.04%)</title><rect x="5.7073%" y="869" width="0.0446%" height="15" fill="rgb(221,121,0)" fg:x="512" fg:w="4"/><text x="5.9573%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.04%)</title><rect x="5.7073%" y="853" width="0.0446%" height="15" fill="rgb(210,110,0)" fg:x="512" fg:w="4"/><text x="5.9573%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="5.7519%" y="901" width="0.0223%" height="15" fill="rgb(218,118,0)" fg:x="516" fg:w="2"/><text x="6.0019%" y="911.50"></text></g><g><title>cfree (23 samples, 0.26%)</title><rect x="5.7742%" y="901" width="0.2564%" height="15" fill="rgb(180,180,51)" fg:x="518" fg:w="23"/><text x="6.0242%" y="911.50"></text></g><g><title>[[heap]] (578 samples, 6.44%)</title><rect x="0.0446%" y="917" width="6.4430%" height="15" fill="rgb(214,214,64)" fg:x="4" fg:w="578"/><text x="0.2946%" y="927.50">[[heap]]</text></g><g><title>malloc (41 samples, 0.46%)</title><rect x="6.0305%" y="901" width="0.4570%" height="15" fill="rgb(181,181,52)" fg:x="541" fg:w="41"/><text x="6.2805%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="6.4876%" y="901" width="0.0111%" height="15" fill="rgb(77,190,190)" fg:x="582" fg:w="1"/><text x="6.7376%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="6.4876%" y="885" width="0.0111%" height="15" fill="rgb(60,174,174)" fg:x="582" fg:w="1"/><text x="6.7376%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="6.4876%" y="869" width="0.0111%" height="15" fill="rgb(67,181,181)" fg:x="582" fg:w="1"/><text x="6.7376%" y="879.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="6.4876%" y="853" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="582" fg:w="1"/><text x="6.7376%" y="863.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="6.4987%" y="901" width="0.0223%" height="15" fill="rgb(179,179,51)" fg:x="583" fg:w="2"/><text x="6.7487%" y="911.50"></text></g><g><title>__rdl_realloc (20 samples, 0.22%)</title><rect x="6.5210%" y="901" width="0.2229%" height="15" fill="rgb(194,194,57)" fg:x="585" fg:w="20"/><text x="6.7710%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (20 samples, 0.22%)</title><rect x="6.5210%" y="885" width="0.2229%" height="15" fill="rgb(197,97,0)" fg:x="585" fg:w="20"/><text x="6.7710%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.01%)</title><rect x="6.7440%" y="885" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="605" fg:w="1"/><text x="6.9940%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="6.7440%" y="869" width="0.0111%" height="15" fill="rgb(239,139,0)" fg:x="605" fg:w="1"/><text x="6.9940%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="6.7440%" y="853" width="0.0111%" height="15" fill="rgb(102,213,213)" fg:x="605" fg:w="1"/><text x="6.9940%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="6.7440%" y="837" width="0.0111%" height="15" fill="rgb(70,183,183)" fg:x="605" fg:w="1"/><text x="6.9940%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="6.7440%" y="821" width="0.0111%" height="15" fill="rgb(83,195,195)" fg:x="605" fg:w="1"/><text x="6.9940%" y="831.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (23 samples, 0.26%)</title><rect x="6.7885%" y="869" width="0.2564%" height="15" fill="rgb(62,176,176)" fg:x="609" fg:w="23"/><text x="7.0385%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt;&gt; (10 samples, 0.11%)</title><rect x="6.9335%" y="853" width="0.1115%" height="15" fill="rgb(208,108,0)" fg:x="622" fg:w="10"/><text x="7.1835%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (10 samples, 0.11%)</title><rect x="6.9335%" y="837" width="0.1115%" height="15" fill="rgb(213,113,0)" fg:x="622" fg:w="10"/><text x="7.1835%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.11%)</title><rect x="6.9335%" y="821" width="0.1115%" height="15" fill="rgb(202,102,0)" fg:x="622" fg:w="10"/><text x="7.1835%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (10 samples, 0.11%)</title><rect x="6.9335%" y="805" width="0.1115%" height="15" fill="rgb(233,133,0)" fg:x="622" fg:w="10"/><text x="7.1835%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.11%)</title><rect x="6.9335%" y="789" width="0.1115%" height="15" fill="rgb(64,178,178)" fg:x="622" fg:w="10"/><text x="7.1835%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (10 samples, 0.11%)</title><rect x="6.9335%" y="773" width="0.1115%" height="15" fill="rgb(190,90,0)" fg:x="622" fg:w="10"/><text x="7.1835%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.11%)</title><rect x="6.9335%" y="757" width="0.1115%" height="15" fill="rgb(198,98,0)" fg:x="622" fg:w="10"/><text x="7.1835%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.11%)</title><rect x="6.9335%" y="741" width="0.1115%" height="15" fill="rgb(212,112,0)" fg:x="622" fg:w="10"/><text x="7.1835%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.11%)</title><rect x="6.9335%" y="725" width="0.1115%" height="15" fill="rgb(231,131,0)" fg:x="622" fg:w="10"/><text x="7.1835%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.08%)</title><rect x="7.0449%" y="869" width="0.0780%" height="15" fill="rgb(196,96,0)" fg:x="632" fg:w="7"/><text x="7.2949%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (3 samples, 0.03%)</title><rect x="7.1230%" y="869" width="0.0334%" height="15" fill="rgb(237,137,0)" fg:x="639" fg:w="3"/><text x="7.3730%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (3 samples, 0.03%)</title><rect x="7.1230%" y="853" width="0.0334%" height="15" fill="rgb(233,133,0)" fg:x="639" fg:w="3"/><text x="7.3730%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (3 samples, 0.03%)</title><rect x="7.1230%" y="837" width="0.0334%" height="15" fill="rgb(250,150,0)" fg:x="639" fg:w="3"/><text x="7.3730%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="7.1230%" y="821" width="0.0334%" height="15" fill="rgb(191,91,0)" fg:x="639" fg:w="3"/><text x="7.3730%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="7.1230%" y="805" width="0.0334%" height="15" fill="rgb(219,119,0)" fg:x="639" fg:w="3"/><text x="7.3730%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="7.1230%" y="789" width="0.0334%" height="15" fill="rgb(217,117,0)" fg:x="639" fg:w="3"/><text x="7.3730%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (3 samples, 0.03%)</title><rect x="7.1564%" y="869" width="0.0334%" height="15" fill="rgb(232,132,0)" fg:x="642" fg:w="3"/><text x="7.4064%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (3 samples, 0.03%)</title><rect x="7.1564%" y="853" width="0.0334%" height="15" fill="rgb(246,146,0)" fg:x="642" fg:w="3"/><text x="7.4064%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="7.1564%" y="837" width="0.0334%" height="15" fill="rgb(196,96,0)" fg:x="642" fg:w="3"/><text x="7.4064%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="7.1564%" y="821" width="0.0334%" height="15" fill="rgb(205,105,0)" fg:x="642" fg:w="3"/><text x="7.4064%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="7.1564%" y="805" width="0.0334%" height="15" fill="rgb(197,97,0)" fg:x="642" fg:w="3"/><text x="7.4064%" y="815.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (41 samples, 0.46%)</title><rect x="6.7440%" y="901" width="0.4570%" height="15" fill="rgb(60,174,174)" fg:x="605" fg:w="41"/><text x="6.9940%" y="911.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (40 samples, 0.45%)</title><rect x="6.7551%" y="885" width="0.4459%" height="15" fill="rgb(107,217,217)" fg:x="606" fg:w="40"/><text x="7.0051%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.01%)</title><rect x="7.1898%" y="869" width="0.0111%" height="15" fill="rgb(198,98,0)" fg:x="645" fg:w="1"/><text x="7.4398%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.1898%" y="853" width="0.0111%" height="15" fill="rgb(205,105,0)" fg:x="645" fg:w="1"/><text x="7.4398%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="7.1898%" y="837" width="0.0111%" height="15" fill="rgb(226,126,0)" fg:x="645" fg:w="1"/><text x="7.4398%" y="847.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.1898%" y="821" width="0.0111%" height="15" fill="rgb(105,215,215)" fg:x="645" fg:w="1"/><text x="7.4398%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.01%)</title><rect x="7.1898%" y="805" width="0.0111%" height="15" fill="rgb(199,99,0)" fg:x="645" fg:w="1"/><text x="7.4398%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.1898%" y="789" width="0.0111%" height="15" fill="rgb(232,132,0)" fg:x="645" fg:w="1"/><text x="7.4398%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="7.1898%" y="773" width="0.0111%" height="15" fill="rgb(234,134,0)" fg:x="645" fg:w="1"/><text x="7.4398%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="7.1898%" y="757" width="0.0111%" height="15" fill="rgb(244,144,0)" fg:x="645" fg:w="1"/><text x="7.4398%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.11%)</title><rect x="7.2010%" y="901" width="0.1115%" height="15" fill="rgb(228,128,0)" fg:x="646" fg:w="10"/><text x="7.4510%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.11%)</title><rect x="7.2010%" y="885" width="0.1115%" height="15" fill="rgb(203,103,0)" fg:x="646" fg:w="10"/><text x="7.4510%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="7.3125%" y="901" width="0.0334%" height="15" fill="rgb(201,101,0)" fg:x="656" fg:w="3"/><text x="7.5625%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="7.3125%" y="885" width="0.0334%" height="15" fill="rgb(193,93,0)" fg:x="656" fg:w="3"/><text x="7.5625%" y="895.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="7.3459%" y="901" width="0.0669%" height="15" fill="rgb(218,218,65)" fg:x="659" fg:w="6"/><text x="7.5959%" y="911.50"></text></g><g><title>[[stack]] (142 samples, 1.58%)</title><rect x="6.4876%" y="917" width="1.5829%" height="15" fill="rgb(216,216,65)" fg:x="582" fg:w="142"/><text x="6.7376%" y="927.50"></text></g><g><title>realloc (59 samples, 0.66%)</title><rect x="7.4128%" y="901" width="0.6577%" height="15" fill="rgb(175,175,50)" fg:x="665" fg:w="59"/><text x="7.6628%" y="911.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="8.0704%" y="901" width="0.0111%" height="15" fill="rgb(225,125,0)" fg:x="724" fg:w="1"/><text x="8.3204%" y="911.50"></text></g><g><title>[alc] (2 samples, 0.02%)</title><rect x="8.0704%" y="917" width="0.0223%" height="15" fill="rgb(180,180,51)" fg:x="724" fg:w="2"/><text x="8.3204%" y="927.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="8.0816%" y="901" width="0.0111%" height="15" fill="rgb(223,223,67)" fg:x="725" fg:w="1"/><text x="8.3316%" y="911.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.04%)</title><rect x="8.0927%" y="917" width="0.0446%" height="15" fill="rgb(189,189,55)" fg:x="726" fg:w="4"/><text x="8.3427%" y="927.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.03%)</title><rect x="8.1039%" y="901" width="0.0334%" height="15" fill="rgb(224,224,68)" fg:x="727" fg:w="3"/><text x="8.3539%" y="911.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="8.1262%" y="885" width="0.0111%" height="15" fill="rgb(188,188,54)" fg:x="729" fg:w="1"/><text x="8.3762%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="8.1262%" y="869" width="0.0111%" height="15" fill="rgb(193,193,56)" fg:x="729" fg:w="1"/><text x="8.3762%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="8.1262%" y="853" width="0.0111%" height="15" fill="rgb(204,204,60)" fg:x="729" fg:w="1"/><text x="8.3762%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="8.1262%" y="837" width="0.0111%" height="15" fill="rgb(221,221,66)" fg:x="729" fg:w="1"/><text x="8.3762%" y="847.50"></text></g><g><title>[libc.so.6] (96 samples, 1.07%)</title><rect x="8.1373%" y="917" width="1.0701%" height="15" fill="rgb(216,216,65)" fg:x="730" fg:w="96"/><text x="8.3873%" y="927.50"></text></g><g><title>[libc.so.6] (28 samples, 0.31%)</title><rect x="8.8953%" y="901" width="0.3121%" height="15" fill="rgb(223,223,67)" fg:x="798" fg:w="28"/><text x="9.1453%" y="911.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.12%)</title><rect x="9.2632%" y="901" width="0.1226%" height="15" fill="rgb(65,178,178)" fg:x="831" fg:w="11"/><text x="9.5132%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="9.4527%" y="885" width="0.0223%" height="15" fill="rgb(240,140,0)" fg:x="848" fg:w="2"/><text x="9.7027%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.30%)</title><rect x="9.4750%" y="757" width="0.3010%" height="15" fill="rgb(249,149,0)" fg:x="850" fg:w="27"/><text x="9.7250%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.30%)</title><rect x="9.4750%" y="741" width="0.3010%" height="15" fill="rgb(226,126,0)" fg:x="850" fg:w="27"/><text x="9.7250%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.30%)</title><rect x="9.4750%" y="725" width="0.3010%" height="15" fill="rgb(236,136,0)" fg:x="850" fg:w="27"/><text x="9.7250%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.30%)</title><rect x="9.4750%" y="709" width="0.3010%" height="15" fill="rgb(237,137,0)" fg:x="850" fg:w="27"/><text x="9.7250%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.30%)</title><rect x="9.4750%" y="693" width="0.3010%" height="15" fill="rgb(230,130,0)" fg:x="850" fg:w="27"/><text x="9.7250%" y="703.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.30%)</title><rect x="9.4750%" y="677" width="0.3010%" height="15" fill="rgb(232,132,0)" fg:x="850" fg:w="27"/><text x="9.7250%" y="687.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (45 samples, 0.50%)</title><rect x="9.4750%" y="837" width="0.5016%" height="15" fill="rgb(59,173,173)" fg:x="850" fg:w="45"/><text x="9.7250%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.50%)</title><rect x="9.4750%" y="821" width="0.5016%" height="15" fill="rgb(215,115,0)" fg:x="850" fg:w="45"/><text x="9.7250%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45 samples, 0.50%)</title><rect x="9.4750%" y="805" width="0.5016%" height="15" fill="rgb(250,150,0)" fg:x="850" fg:w="45"/><text x="9.7250%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (45 samples, 0.50%)</title><rect x="9.4750%" y="789" width="0.5016%" height="15" fill="rgb(229,129,0)" fg:x="850" fg:w="45"/><text x="9.7250%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45 samples, 0.50%)</title><rect x="9.4750%" y="773" width="0.5016%" height="15" fill="rgb(93,205,205)" fg:x="850" fg:w="45"/><text x="9.7250%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (18 samples, 0.20%)</title><rect x="9.7759%" y="757" width="0.2006%" height="15" fill="rgb(251,151,0)" fg:x="877" fg:w="18"/><text x="10.0259%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.20%)</title><rect x="9.7759%" y="741" width="0.2006%" height="15" fill="rgb(214,114,0)" fg:x="877" fg:w="18"/><text x="10.0259%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (57 samples, 0.64%)</title><rect x="9.3858%" y="901" width="0.6354%" height="15" fill="rgb(244,144,0)" fg:x="842" fg:w="57"/><text x="9.6358%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (49 samples, 0.55%)</title><rect x="9.4750%" y="885" width="0.5462%" height="15" fill="rgb(215,115,0)" fg:x="850" fg:w="49"/><text x="9.7250%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (49 samples, 0.55%)</title><rect x="9.4750%" y="869" width="0.5462%" height="15" fill="rgb(220,120,0)" fg:x="850" fg:w="49"/><text x="9.7250%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (49 samples, 0.55%)</title><rect x="9.4750%" y="853" width="0.5462%" height="15" fill="rgb(69,182,182)" fg:x="850" fg:w="49"/><text x="9.7250%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="9.9766%" y="837" width="0.0446%" height="15" fill="rgb(229,129,0)" fg:x="895" fg:w="4"/><text x="10.2266%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="9.9766%" y="821" width="0.0446%" height="15" fill="rgb(241,141,0)" fg:x="895" fg:w="4"/><text x="10.2266%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="9.9766%" y="805" width="0.0446%" height="15" fill="rgb(194,94,0)" fg:x="895" fg:w="4"/><text x="10.2266%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="9.9766%" y="789" width="0.0446%" height="15" fill="rgb(192,92,0)" fg:x="895" fg:w="4"/><text x="10.2266%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="9.9766%" y="773" width="0.0446%" height="15" fill="rgb(198,98,0)" fg:x="895" fg:w="4"/><text x="10.2266%" y="783.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="9.9766%" y="757" width="0.0446%" height="15" fill="rgb(205,105,0)" fg:x="895" fg:w="4"/><text x="10.2266%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="10.0435%" y="885" width="0.0111%" height="15" fill="rgb(76,188,188)" fg:x="901" fg:w="1"/><text x="10.2935%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="10.0435%" y="869" width="0.0111%" height="15" fill="rgb(77,190,190)" fg:x="901" fg:w="1"/><text x="10.2935%" y="879.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="10.0435%" y="853" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="901" fg:w="1"/><text x="10.2935%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="10.0212%" y="901" width="0.0446%" height="15" fill="rgb(84,196,196)" fg:x="899" fg:w="4"/><text x="10.2712%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="10.0546%" y="885" width="0.0111%" height="15" fill="rgb(57,171,171)" fg:x="902" fg:w="1"/><text x="10.3046%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="10.0546%" y="869" width="0.0111%" height="15" fill="rgb(70,183,183)" fg:x="902" fg:w="1"/><text x="10.3046%" y="879.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="10.0546%" y="853" width="0.0111%" height="15" fill="rgb(76,188,188)" fg:x="902" fg:w="1"/><text x="10.3046%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="10.0546%" y="837" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="902" fg:w="1"/><text x="10.3046%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="10.0546%" y="821" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="902" fg:w="1"/><text x="10.3046%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="10.0546%" y="805" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="902" fg:w="1"/><text x="10.3046%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="10.0658%" y="789" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="903" fg:w="1"/><text x="10.3158%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.01%)</title><rect x="10.0658%" y="773" width="0.0111%" height="15" fill="rgb(228,128,0)" fg:x="903" fg:w="1"/><text x="10.3158%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.01%)</title><rect x="10.0658%" y="757" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="903" fg:w="1"/><text x="10.3158%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="10.0658%" y="741" width="0.0111%" height="15" fill="rgb(204,104,0)" fg:x="903" fg:w="1"/><text x="10.3158%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="10.0658%" y="725" width="0.0111%" height="15" fill="rgb(252,152,0)" fg:x="903" fg:w="1"/><text x="10.3158%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="10.0658%" y="709" width="0.0111%" height="15" fill="rgb(252,152,0)" fg:x="903" fg:w="1"/><text x="10.3158%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="10.0658%" y="693" width="0.0111%" height="15" fill="rgb(235,135,0)" fg:x="903" fg:w="1"/><text x="10.3158%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="10.0658%" y="677" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="903" fg:w="1"/><text x="10.3158%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="10.0658%" y="901" width="0.0334%" height="15" fill="rgb(67,181,181)" fg:x="903" fg:w="3"/><text x="10.3158%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.03%)</title><rect x="10.0658%" y="885" width="0.0334%" height="15" fill="rgb(72,185,185)" fg:x="903" fg:w="3"/><text x="10.3158%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.03%)</title><rect x="10.0658%" y="869" width="0.0334%" height="15" fill="rgb(89,201,201)" fg:x="903" fg:w="3"/><text x="10.3158%" y="879.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.03%)</title><rect x="10.0658%" y="853" width="0.0334%" height="15" fill="rgb(106,216,216)" fg:x="903" fg:w="3"/><text x="10.3158%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.03%)</title><rect x="10.0658%" y="837" width="0.0334%" height="15" fill="rgb(252,152,0)" fg:x="903" fg:w="3"/><text x="10.3158%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (3 samples, 0.03%)</title><rect x="10.0658%" y="821" width="0.0334%" height="15" fill="rgb(227,127,0)" fg:x="903" fg:w="3"/><text x="10.3158%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.03%)</title><rect x="10.0658%" y="805" width="0.0334%" height="15" fill="rgb(244,144,0)" fg:x="903" fg:w="3"/><text x="10.3158%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.02%)</title><rect x="10.0769%" y="789" width="0.0223%" height="15" fill="rgb(226,126,0)" fg:x="904" fg:w="2"/><text x="10.3269%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="10.0769%" y="773" width="0.0223%" height="15" fill="rgb(222,122,0)" fg:x="904" fg:w="2"/><text x="10.3269%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="10.0769%" y="757" width="0.0223%" height="15" fill="rgb(253,153,0)" fg:x="904" fg:w="2"/><text x="10.3269%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="10.0769%" y="741" width="0.0223%" height="15" fill="rgb(253,153,0)" fg:x="904" fg:w="2"/><text x="10.3269%" y="751.50"></text></g><g><title>[libc.so.6] (420 samples, 4.68%)</title><rect x="10.0992%" y="901" width="4.6818%" height="15" fill="rgb(201,201,59)" fg:x="906" fg:w="420"/><text x="10.3492%" y="911.50">[libc..</text></g><g><title>__rdl_realloc (26 samples, 0.29%)</title><rect x="14.7810%" y="901" width="0.2898%" height="15" fill="rgb(224,224,68)" fg:x="1326" fg:w="26"/><text x="15.0310%" y="911.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (44 samples, 0.49%)</title><rect x="15.0708%" y="901" width="0.4905%" height="15" fill="rgb(61,175,175)" fg:x="1352" fg:w="44"/><text x="15.3208%" y="911.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (3 samples, 0.03%)</title><rect x="15.5613%" y="901" width="0.0334%" height="15" fill="rgb(82,194,194)" fg:x="1396" fg:w="3"/><text x="15.8113%" y="911.50"></text></g><g><title>alc::optimizer::arg_min (3 samples, 0.03%)</title><rect x="15.5947%" y="901" width="0.0334%" height="15" fill="rgb(100,211,211)" fg:x="1399" fg:w="3"/><text x="15.8447%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.17%)</title><rect x="15.6281%" y="901" width="0.1672%" height="15" fill="rgb(212,112,0)" fg:x="1402" fg:w="15"/><text x="15.8781%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.75%)</title><rect x="15.7953%" y="901" width="0.7469%" height="15" fill="rgb(208,108,0)" fg:x="1417" fg:w="67"/><text x="16.0453%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.20%)</title><rect x="16.3415%" y="885" width="0.2006%" height="15" fill="rgb(204,104,0)" fg:x="1466" fg:w="18"/><text x="16.5915%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.20%)</title><rect x="16.3415%" y="869" width="0.2006%" height="15" fill="rgb(199,99,0)" fg:x="1466" fg:w="18"/><text x="16.5915%" y="879.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.20%)</title><rect x="16.3415%" y="853" width="0.2006%" height="15" fill="rgb(229,129,0)" fg:x="1466" fg:w="18"/><text x="16.5915%" y="863.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.01%)</title><rect x="16.5422%" y="901" width="0.0111%" height="15" fill="rgb(235,135,0)" fg:x="1484" fg:w="1"/><text x="16.7922%" y="911.50"></text></g><g><title>cfree (118 samples, 1.32%)</title><rect x="16.5533%" y="901" width="1.3153%" height="15" fill="rgb(228,228,69)" fg:x="1485" fg:w="118"/><text x="16.8033%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.12%)</title><rect x="17.8687%" y="901" width="0.1226%" height="15" fill="rgb(251,151,0)" fg:x="1603" fg:w="11"/><text x="18.1187%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.08%)</title><rect x="17.9133%" y="885" width="0.0780%" height="15" fill="rgb(240,140,0)" fg:x="1607" fg:w="7"/><text x="18.1633%" y="895.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="17.9133%" y="869" width="0.0780%" height="15" fill="rgb(85,197,197)" fg:x="1607" fg:w="7"/><text x="18.1633%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (7 samples, 0.08%)</title><rect x="17.9133%" y="853" width="0.0780%" height="15" fill="rgb(246,146,0)" fg:x="1607" fg:w="7"/><text x="18.1633%" y="863.50"></text></g><g><title>core::hash::Hasher::write_isize (7 samples, 0.08%)</title><rect x="17.9133%" y="837" width="0.0780%" height="15" fill="rgb(252,152,0)" fg:x="1607" fg:w="7"/><text x="18.1633%" y="847.50"></text></g><g><title>core::hash::Hasher::write_usize (5 samples, 0.06%)</title><rect x="17.9913%" y="901" width="0.0557%" height="15" fill="rgb(242,142,0)" fg:x="1614" fg:w="5"/><text x="18.2413%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="18.0470%" y="901" width="0.0223%" height="15" fill="rgb(102,213,213)" fg:x="1619" fg:w="2"/><text x="18.2970%" y="911.50"></text></g><g><title>malloc (67 samples, 0.75%)</title><rect x="18.0693%" y="901" width="0.7469%" height="15" fill="rgb(229,229,69)" fg:x="1621" fg:w="67"/><text x="18.3193%" y="911.50"></text></g><g><title>[unknown] (922 samples, 10.28%)</title><rect x="9.2074%" y="917" width="10.2776%" height="15" fill="rgb(216,216,65)" fg:x="826" fg:w="922"/><text x="9.4574%" y="927.50">[unknown]</text></g><g><title>realloc (60 samples, 0.67%)</title><rect x="18.8162%" y="901" width="0.6688%" height="15" fill="rgb(183,183,52)" fg:x="1688" fg:w="60"/><text x="19.0662%" y="911.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="19.4850%" y="213" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="1748" fg:w="1"/><text x="19.7350%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="19.4850%" y="197" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="1748" fg:w="1"/><text x="19.7350%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="19.4850%" y="181" width="0.0111%" height="15" fill="rgb(254,154,0)" fg:x="1748" fg:w="1"/><text x="19.7350%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (4 samples, 0.04%)</title><rect x="19.4850%" y="277" width="0.0446%" height="15" fill="rgb(57,172,172)" fg:x="1748" fg:w="4"/><text x="19.7350%" y="287.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (4 samples, 0.04%)</title><rect x="19.4850%" y="261" width="0.0446%" height="15" fill="rgb(91,203,203)" fg:x="1748" fg:w="4"/><text x="19.7350%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="19.4850%" y="245" width="0.0446%" height="15" fill="rgb(90,202,202)" fg:x="1748" fg:w="4"/><text x="19.7350%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.04%)</title><rect x="19.4850%" y="229" width="0.0446%" height="15" fill="rgb(190,90,0)" fg:x="1748" fg:w="4"/><text x="19.7350%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.03%)</title><rect x="19.4962%" y="213" width="0.0334%" height="15" fill="rgb(240,140,0)" fg:x="1749" fg:w="3"/><text x="19.7462%" y="223.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="19.4962%" y="197" width="0.0334%" height="15" fill="rgb(56,170,170)" fg:x="1749" fg:w="3"/><text x="19.7462%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="19.4962%" y="181" width="0.0334%" height="15" fill="rgb(193,93,0)" fg:x="1749" fg:w="3"/><text x="19.7462%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.03%)</title><rect x="19.4962%" y="165" width="0.0334%" height="15" fill="rgb(252,152,0)" fg:x="1749" fg:w="3"/><text x="19.7462%" y="175.50"></text></g><g><title>core::hash::Hash::hash_slice (3 samples, 0.03%)</title><rect x="19.4962%" y="149" width="0.0334%" height="15" fill="rgb(246,146,0)" fg:x="1749" fg:w="3"/><text x="19.7462%" y="159.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="19.4962%" y="133" width="0.0334%" height="15" fill="rgb(75,188,188)" fg:x="1749" fg:w="3"/><text x="19.7462%" y="143.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="19.5073%" y="117" width="0.0223%" height="15" fill="rgb(221,121,0)" fg:x="1750" fg:w="2"/><text x="19.7573%" y="127.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="19.5073%" y="101" width="0.0223%" height="15" fill="rgb(213,113,0)" fg:x="1750" fg:w="2"/><text x="19.7573%" y="111.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="19.5184%" y="85" width="0.0111%" height="15" fill="rgb(232,132,0)" fg:x="1751" fg:w="1"/><text x="19.7684%" y="95.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.5184%" y="69" width="0.0111%" height="15" fill="rgb(200,100,0)" fg:x="1751" fg:w="1"/><text x="19.7684%" y="79.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.5184%" y="53" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="1751" fg:w="1"/><text x="19.7684%" y="63.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.5184%" y="37" width="0.0111%" height="15" fill="rgb(253,153,0)" fg:x="1751" fg:w="1"/><text x="19.7684%" y="47.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (5 samples, 0.06%)</title><rect x="19.4850%" y="357" width="0.0557%" height="15" fill="rgb(85,197,197)" fg:x="1748" fg:w="5"/><text x="19.7350%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.06%)</title><rect x="19.4850%" y="341" width="0.0557%" height="15" fill="rgb(58,172,172)" fg:x="1748" fg:w="5"/><text x="19.7350%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.06%)</title><rect x="19.4850%" y="325" width="0.0557%" height="15" fill="rgb(85,197,197)" fg:x="1748" fg:w="5"/><text x="19.7350%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.06%)</title><rect x="19.4850%" y="309" width="0.0557%" height="15" fill="rgb(72,185,185)" fg:x="1748" fg:w="5"/><text x="19.7350%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.06%)</title><rect x="19.4850%" y="293" width="0.0557%" height="15" fill="rgb(96,207,207)" fg:x="1748" fg:w="5"/><text x="19.7350%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.01%)</title><rect x="19.5296%" y="277" width="0.0111%" height="15" fill="rgb(66,180,180)" fg:x="1752" fg:w="1"/><text x="19.7796%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.01%)</title><rect x="19.5296%" y="261" width="0.0111%" height="15" fill="rgb(59,173,173)" fg:x="1752" fg:w="1"/><text x="19.7796%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.01%)</title><rect x="19.5296%" y="245" width="0.0111%" height="15" fill="rgb(66,180,180)" fg:x="1752" fg:w="1"/><text x="19.7796%" y="255.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::combine_with (6 samples, 0.07%)</title><rect x="19.4850%" y="421" width="0.0669%" height="15" fill="rgb(69,182,182)" fg:x="1748" fg:w="6"/><text x="19.7350%" y="431.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::add_from_key_value (6 samples, 0.07%)</title><rect x="19.4850%" y="405" width="0.0669%" height="15" fill="rgb(73,186,186)" fg:x="1748" fg:w="6"/><text x="19.7350%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.07%)</title><rect x="19.4850%" y="389" width="0.0669%" height="15" fill="rgb(247,147,0)" fg:x="1748" fg:w="6"/><text x="19.7350%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.07%)</title><rect x="19.4850%" y="373" width="0.0669%" height="15" fill="rgb(70,183,183)" fg:x="1748" fg:w="6"/><text x="19.7350%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="19.5407%" y="357" width="0.0111%" height="15" fill="rgb(70,183,183)" fg:x="1753" fg:w="1"/><text x="19.7907%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="19.5407%" y="341" width="0.0111%" height="15" fill="rgb(86,198,198)" fg:x="1753" fg:w="1"/><text x="19.7907%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="19.5407%" y="325" width="0.0111%" height="15" fill="rgb(85,197,197)" fg:x="1753" fg:w="1"/><text x="19.7907%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="19.5407%" y="309" width="0.0111%" height="15" fill="rgb(198,98,0)" fg:x="1753" fg:w="1"/><text x="19.7907%" y="319.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="19.5519%" y="309" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="1754" fg:w="1"/><text x="19.8019%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="19.5630%" y="117" width="0.0111%" height="15" fill="rgb(238,138,0)" fg:x="1755" fg:w="1"/><text x="19.8130%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="19.5630%" y="101" width="0.0111%" height="15" fill="rgb(213,113,0)" fg:x="1755" fg:w="1"/><text x="19.8130%" y="111.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::combine_with (3 samples, 0.03%)</title><rect x="19.5519%" y="405" width="0.0334%" height="15" fill="rgb(62,176,176)" fg:x="1754" fg:w="3"/><text x="19.8019%" y="415.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::add_from_key_value (3 samples, 0.03%)</title><rect x="19.5519%" y="389" width="0.0334%" height="15" fill="rgb(54,169,169)" fg:x="1754" fg:w="3"/><text x="19.8019%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.03%)</title><rect x="19.5519%" y="373" width="0.0334%" height="15" fill="rgb(212,112,0)" fg:x="1754" fg:w="3"/><text x="19.8019%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.03%)</title><rect x="19.5519%" y="357" width="0.0334%" height="15" fill="rgb(102,212,212)" fg:x="1754" fg:w="3"/><text x="19.8019%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="19.5519%" y="341" width="0.0334%" height="15" fill="rgb(100,210,210)" fg:x="1754" fg:w="3"/><text x="19.8019%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="19.5519%" y="325" width="0.0334%" height="15" fill="rgb(249,149,0)" fg:x="1754" fg:w="3"/><text x="19.8019%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="19.5630%" y="309" width="0.0223%" height="15" fill="rgb(235,135,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="319.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="19.5630%" y="293" width="0.0223%" height="15" fill="rgb(109,219,219)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="19.5630%" y="277" width="0.0223%" height="15" fill="rgb(214,114,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="19.5630%" y="261" width="0.0223%" height="15" fill="rgb(202,102,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="271.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="19.5630%" y="245" width="0.0223%" height="15" fill="rgb(240,140,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="255.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="19.5630%" y="229" width="0.0223%" height="15" fill="rgb(96,207,207)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="19.5630%" y="213" width="0.0223%" height="15" fill="rgb(252,152,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="223.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="19.5630%" y="197" width="0.0223%" height="15" fill="rgb(237,137,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="19.5630%" y="181" width="0.0223%" height="15" fill="rgb(195,95,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="191.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="19.5630%" y="165" width="0.0223%" height="15" fill="rgb(191,91,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="19.5630%" y="149" width="0.0223%" height="15" fill="rgb(231,131,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="19.5630%" y="133" width="0.0223%" height="15" fill="rgb(226,126,0)" fg:x="1755" fg:w="2"/><text x="19.8130%" y="143.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="19.5742%" y="117" width="0.0111%" height="15" fill="rgb(191,91,0)" fg:x="1756" fg:w="1"/><text x="19.8242%" y="127.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="19.5853%" y="389" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="19.5853%" y="373" width="0.0111%" height="15" fill="rgb(191,91,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="19.5853%" y="357" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="19.5853%" y="341" width="0.0111%" height="15" fill="rgb(85,197,197)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="19.5853%" y="325" width="0.0111%" height="15" fill="rgb(228,128,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="19.5853%" y="309" width="0.0111%" height="15" fill="rgb(195,95,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="19.5853%" y="293" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="19.5853%" y="277" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="19.5853%" y="261" width="0.0111%" height="15" fill="rgb(241,141,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="19.5853%" y="245" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="255.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="19.5853%" y="229" width="0.0111%" height="15" fill="rgb(198,198,58)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="19.5853%" y="213" width="0.0111%" height="15" fill="rgb(225,225,68)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="19.5853%" y="197" width="0.0111%" height="15" fill="rgb(176,176,50)" fg:x="1757" fg:w="1"/><text x="19.8353%" y="207.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_datasets (11 samples, 0.12%)</title><rect x="19.4850%" y="629" width="0.1226%" height="15" fill="rgb(103,213,213)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.12%)</title><rect x="19.4850%" y="613" width="0.1226%" height="15" fill="rgb(248,148,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.12%)</title><rect x="19.4850%" y="597" width="0.1226%" height="15" fill="rgb(206,106,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.12%)</title><rect x="19.4850%" y="581" width="0.1226%" height="15" fill="rgb(242,142,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.12%)</title><rect x="19.4850%" y="565" width="0.1226%" height="15" fill="rgb(221,121,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.12%)</title><rect x="19.4850%" y="549" width="0.1226%" height="15" fill="rgb(232,132,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (11 samples, 0.12%)</title><rect x="19.4850%" y="533" width="0.1226%" height="15" fill="rgb(248,148,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.12%)</title><rect x="19.4850%" y="517" width="0.1226%" height="15" fill="rgb(233,133,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.12%)</title><rect x="19.4850%" y="501" width="0.1226%" height="15" fill="rgb(233,133,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.12%)</title><rect x="19.4850%" y="485" width="0.1226%" height="15" fill="rgb(229,129,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (11 samples, 0.12%)</title><rect x="19.4850%" y="469" width="0.1226%" height="15" fill="rgb(208,108,0)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="479.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_datasets::_{{closure}} (11 samples, 0.12%)</title><rect x="19.4850%" y="453" width="0.1226%" height="15" fill="rgb(62,176,176)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="463.50"></text></g><g><title>alc::text_processor::dataset::FrequencyDataset&lt;u32&gt;::try_from_dir (11 samples, 0.12%)</title><rect x="19.4850%" y="437" width="0.1226%" height="15" fill="rgb(69,182,182)" fg:x="1748" fg:w="11"/><text x="19.7350%" y="447.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_file (5 samples, 0.06%)</title><rect x="19.5519%" y="421" width="0.0557%" height="15" fill="rgb(61,175,175)" fg:x="1754" fg:w="5"/><text x="19.8019%" y="431.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_string (2 samples, 0.02%)</title><rect x="19.5853%" y="405" width="0.0223%" height="15" fill="rgb(89,200,200)" fg:x="1757" fg:w="2"/><text x="19.8353%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="19.5965%" y="389" width="0.0111%" height="15" fill="rgb(198,98,0)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="19.5965%" y="373" width="0.0111%" height="15" fill="rgb(83,196,196)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="19.5965%" y="357" width="0.0111%" height="15" fill="rgb(67,181,181)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="19.5965%" y="341" width="0.0111%" height="15" fill="rgb(67,181,181)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="19.5965%" y="325" width="0.0111%" height="15" fill="rgb(87,199,199)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="19.5965%" y="309" width="0.0111%" height="15" fill="rgb(56,171,171)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="19.5965%" y="293" width="0.0111%" height="15" fill="rgb(81,193,193)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.01%)</title><rect x="19.5965%" y="277" width="0.0111%" height="15" fill="rgb(75,188,188)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.01%)</title><rect x="19.5965%" y="261" width="0.0111%" height="15" fill="rgb(57,171,171)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="19.5965%" y="245" width="0.0111%" height="15" fill="rgb(87,199,199)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="255.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="19.5965%" y="229" width="0.0111%" height="15" fill="rgb(72,185,185)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="19.5965%" y="213" width="0.0111%" height="15" fill="rgb(214,114,0)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="19.5965%" y="197" width="0.0111%" height="15" fill="rgb(248,148,0)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="19.5965%" y="181" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="191.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="19.5965%" y="165" width="0.0111%" height="15" fill="rgb(189,189,55)" fg:x="1758" fg:w="1"/><text x="19.8465%" y="175.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="19.6076%" y="261" width="0.0111%" height="15" fill="rgb(217,217,65)" fg:x="1759" fg:w="1"/><text x="19.8576%" y="271.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="19.6076%" y="437" width="0.0334%" height="15" fill="rgb(53,168,168)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="19.6076%" y="421" width="0.0334%" height="15" fill="rgb(197,97,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="19.6076%" y="405" width="0.0334%" height="15" fill="rgb(200,100,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="19.6076%" y="389" width="0.0334%" height="15" fill="rgb(209,109,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="19.6076%" y="373" width="0.0334%" height="15" fill="rgb(81,193,193)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="19.6076%" y="357" width="0.0334%" height="15" fill="rgb(217,117,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="19.6076%" y="341" width="0.0334%" height="15" fill="rgb(192,92,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="19.6076%" y="325" width="0.0334%" height="15" fill="rgb(217,117,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="19.6076%" y="309" width="0.0334%" height="15" fill="rgb(191,91,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="19.6076%" y="293" width="0.0334%" height="15" fill="rgb(243,143,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="19.6076%" y="277" width="0.0334%" height="15" fill="rgb(214,114,0)" fg:x="1759" fg:w="3"/><text x="19.8576%" y="287.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="19.6188%" y="261" width="0.0223%" height="15" fill="rgb(199,199,58)" fg:x="1760" fg:w="2"/><text x="19.8688%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="19.6188%" y="245" width="0.0223%" height="15" fill="rgb(215,215,64)" fg:x="1760" fg:w="2"/><text x="19.8688%" y="255.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="19.6076%" y="613" width="0.0557%" height="15" fill="rgb(79,192,192)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="19.6076%" y="597" width="0.0557%" height="15" fill="rgb(242,142,0)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="19.6076%" y="581" width="0.0557%" height="15" fill="rgb(74,187,187)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="19.6076%" y="565" width="0.0557%" height="15" fill="rgb(99,210,210)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5 samples, 0.06%)</title><rect x="19.6076%" y="549" width="0.0557%" height="15" fill="rgb(90,201,201)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5 samples, 0.06%)</title><rect x="19.6076%" y="533" width="0.0557%" height="15" fill="rgb(55,170,170)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="543.50"></text></g><g><title>core::clone::Clone::clone (5 samples, 0.06%)</title><rect x="19.6076%" y="517" width="0.0557%" height="15" fill="rgb(249,149,0)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="19.6076%" y="501" width="0.0557%" height="15" fill="rgb(229,129,0)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="19.6076%" y="485" width="0.0557%" height="15" fill="rgb(216,116,0)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="19.6076%" y="469" width="0.0557%" height="15" fill="rgb(240,140,0)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="19.6076%" y="453" width="0.0557%" height="15" fill="rgb(92,204,204)" fg:x="1759" fg:w="5"/><text x="19.8576%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="19.6411%" y="437" width="0.0223%" height="15" fill="rgb(200,100,0)" fg:x="1762" fg:w="2"/><text x="19.8911%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="19.6411%" y="421" width="0.0223%" height="15" fill="rgb(236,136,0)" fg:x="1762" fg:w="2"/><text x="19.8911%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="19.6411%" y="405" width="0.0223%" height="15" fill="rgb(248,148,0)" fg:x="1762" fg:w="2"/><text x="19.8911%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="19.6411%" y="389" width="0.0223%" height="15" fill="rgb(223,123,0)" fg:x="1762" fg:w="2"/><text x="19.8911%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="19.6411%" y="373" width="0.0223%" height="15" fill="rgb(220,120,0)" fg:x="1762" fg:w="2"/><text x="19.8911%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="19.6411%" y="357" width="0.0223%" height="15" fill="rgb(229,129,0)" fg:x="1762" fg:w="2"/><text x="19.8911%" y="367.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="19.6411%" y="341" width="0.0223%" height="15" fill="rgb(195,195,57)" fg:x="1762" fg:w="2"/><text x="19.8911%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="19.6522%" y="325" width="0.0111%" height="15" fill="rgb(220,220,66)" fg:x="1763" fg:w="1"/><text x="19.9022%" y="335.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::shuffle (1 samples, 0.01%)</title><rect x="19.6634%" y="597" width="0.0111%" height="15" fill="rgb(79,191,191)" fg:x="1764" fg:w="1"/><text x="19.9134%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="19.6634%" y="581" width="0.0111%" height="15" fill="rgb(214,114,0)" fg:x="1764" fg:w="1"/><text x="19.9134%" y="591.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="19.6634%" y="565" width="0.0111%" height="15" fill="rgb(245,145,0)" fg:x="1764" fg:w="1"/><text x="19.9134%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="19.6634%" y="549" width="0.0111%" height="15" fill="rgb(198,98,0)" fg:x="1764" fg:w="1"/><text x="19.9134%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="19.6745%" y="597" width="0.0111%" height="15" fill="rgb(205,105,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="19.6745%" y="581" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="19.6745%" y="565" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="19.6745%" y="549" width="0.0111%" height="15" fill="rgb(80,192,192)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="19.6745%" y="533" width="0.0111%" height="15" fill="rgb(210,110,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="19.6745%" y="517" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="19.6745%" y="501" width="0.0111%" height="15" fill="rgb(195,95,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="19.6745%" y="485" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="19.6745%" y="469" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="19.6745%" y="453" width="0.0111%" height="15" fill="rgb(224,124,0)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="463.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="19.6745%" y="437" width="0.0111%" height="15" fill="rgb(196,196,57)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="19.6745%" y="421" width="0.0111%" height="15" fill="rgb(211,211,63)" fg:x="1765" fg:w="1"/><text x="19.9245%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="19.6857%" y="533" width="0.0223%" height="15" fill="rgb(88,200,200)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="19.6857%" y="517" width="0.0223%" height="15" fill="rgb(91,203,203)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="527.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="19.6857%" y="501" width="0.0223%" height="15" fill="rgb(204,104,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.6857%" y="485" width="0.0223%" height="15" fill="rgb(228,128,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.6857%" y="469" width="0.0223%" height="15" fill="rgb(212,112,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.6857%" y="453" width="0.0223%" height="15" fill="rgb(219,119,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.6857%" y="437" width="0.0223%" height="15" fill="rgb(96,207,207)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="447.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.6857%" y="421" width="0.0223%" height="15" fill="rgb(52,167,167)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.6857%" y="405" width="0.0223%" height="15" fill="rgb(220,120,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.6857%" y="389" width="0.0223%" height="15" fill="rgb(252,152,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.6857%" y="373" width="0.0223%" height="15" fill="rgb(204,104,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.6857%" y="357" width="0.0223%" height="15" fill="rgb(90,202,202)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="19.6857%" y="341" width="0.0223%" height="15" fill="rgb(196,96,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="19.6857%" y="325" width="0.0223%" height="15" fill="rgb(195,95,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="19.6857%" y="309" width="0.0223%" height="15" fill="rgb(202,102,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="19.6857%" y="293" width="0.0223%" height="15" fill="rgb(219,119,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="19.6857%" y="277" width="0.0223%" height="15" fill="rgb(213,113,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="19.6857%" y="261" width="0.0223%" height="15" fill="rgb(199,99,0)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="271.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="19.6857%" y="245" width="0.0223%" height="15" fill="rgb(225,225,68)" fg:x="1766" fg:w="2"/><text x="19.9357%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="19.6857%" y="581" width="0.0334%" height="15" fill="rgb(233,133,0)" fg:x="1766" fg:w="3"/><text x="19.9357%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="19.6857%" y="565" width="0.0334%" height="15" fill="rgb(66,180,180)" fg:x="1766" fg:w="3"/><text x="19.9357%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="19.6857%" y="549" width="0.0334%" height="15" fill="rgb(92,203,203)" fg:x="1766" fg:w="3"/><text x="19.9357%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="19.7079%" y="533" width="0.0111%" height="15" fill="rgb(86,198,198)" fg:x="1768" fg:w="1"/><text x="19.9579%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="19.7079%" y="517" width="0.0111%" height="15" fill="rgb(109,219,219)" fg:x="1768" fg:w="1"/><text x="19.9579%" y="527.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="19.7079%" y="501" width="0.0111%" height="15" fill="rgb(104,215,215)" fg:x="1768" fg:w="1"/><text x="19.9579%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="19.7079%" y="485" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="1768" fg:w="1"/><text x="19.9579%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="19.7079%" y="469" width="0.0111%" height="15" fill="rgb(194,94,0)" fg:x="1768" fg:w="1"/><text x="19.9579%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="19.7079%" y="453" width="0.0111%" height="15" fill="rgb(200,100,0)" fg:x="1768" fg:w="1"/><text x="19.9579%" y="463.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="19.7079%" y="437" width="0.0111%" height="15" fill="rgb(218,218,65)" fg:x="1768" fg:w="1"/><text x="19.9579%" y="447.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (1 samples, 0.01%)</title><rect x="19.7191%" y="581" width="0.0111%" height="15" fill="rgb(60,174,174)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="19.7191%" y="565" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="19.7191%" y="549" width="0.0111%" height="15" fill="rgb(245,145,0)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="19.7191%" y="533" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="19.7191%" y="517" width="0.0111%" height="15" fill="rgb(253,153,0)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="19.7191%" y="501" width="0.0111%" height="15" fill="rgb(254,154,0)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="19.7191%" y="485" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="19.7191%" y="469" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="479.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="19.7191%" y="453" width="0.0111%" height="15" fill="rgb(221,221,67)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="19.7191%" y="437" width="0.0111%" height="15" fill="rgb(197,197,58)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="19.7191%" y="421" width="0.0111%" height="15" fill="rgb(184,184,53)" fg:x="1769" fg:w="1"/><text x="19.9691%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.01%)</title><rect x="19.7302%" y="581" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="1770" fg:w="1"/><text x="19.9802%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="19.7302%" y="565" width="0.0111%" height="15" fill="rgb(231,131,0)" fg:x="1770" fg:w="1"/><text x="19.9802%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="19.7302%" y="549" width="0.0111%" height="15" fill="rgb(198,98,0)" fg:x="1770" fg:w="1"/><text x="19.9802%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.7302%" y="533" width="0.0111%" height="15" fill="rgb(210,110,0)" fg:x="1770" fg:w="1"/><text x="19.9802%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="19.7302%" y="517" width="0.0111%" height="15" fill="rgb(250,150,0)" fg:x="1770" fg:w="1"/><text x="19.9802%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="19.7302%" y="501" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="1770" fg:w="1"/><text x="19.9802%" y="511.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="19.7302%" y="485" width="0.0111%" height="15" fill="rgb(180,180,51)" fg:x="1770" fg:w="1"/><text x="19.9802%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.7414%" y="421" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.01%)</title><rect x="19.7414%" y="405" width="0.0111%" height="15" fill="rgb(238,138,0)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.01%)</title><rect x="19.7414%" y="389" width="0.0111%" height="15" fill="rgb(223,123,0)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="19.7414%" y="373" width="0.0111%" height="15" fill="rgb(213,113,0)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="19.7414%" y="357" width="0.0111%" height="15" fill="rgb(201,101,0)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.7414%" y="341" width="0.0111%" height="15" fill="rgb(223,123,0)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="19.7414%" y="325" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="19.7414%" y="309" width="0.0111%" height="15" fill="rgb(222,122,0)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="319.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="19.7414%" y="293" width="0.0111%" height="15" fill="rgb(176,176,50)" fg:x="1771" fg:w="1"/><text x="19.9914%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="19.7414%" y="581" width="0.0334%" height="15" fill="rgb(199,99,0)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (3 samples, 0.03%)</title><rect x="19.7414%" y="565" width="0.0334%" height="15" fill="rgb(215,115,0)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (3 samples, 0.03%)</title><rect x="19.7414%" y="549" width="0.0334%" height="15" fill="rgb(248,148,0)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="19.7414%" y="533" width="0.0334%" height="15" fill="rgb(90,202,202)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.03%)</title><rect x="19.7414%" y="517" width="0.0334%" height="15" fill="rgb(100,211,211)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.03%)</title><rect x="19.7414%" y="501" width="0.0334%" height="15" fill="rgb(79,191,191)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.03%)</title><rect x="19.7414%" y="485" width="0.0334%" height="15" fill="rgb(68,181,181)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.03%)</title><rect x="19.7414%" y="469" width="0.0334%" height="15" fill="rgb(197,97,0)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (3 samples, 0.03%)</title><rect x="19.7414%" y="453" width="0.0334%" height="15" fill="rgb(219,119,0)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.03%)</title><rect x="19.7414%" y="437" width="0.0334%" height="15" fill="rgb(252,152,0)" fg:x="1771" fg:w="3"/><text x="19.9914%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.02%)</title><rect x="19.7525%" y="421" width="0.0223%" height="15" fill="rgb(240,140,0)" fg:x="1772" fg:w="2"/><text x="20.0025%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="19.7525%" y="405" width="0.0223%" height="15" fill="rgb(196,96,0)" fg:x="1772" fg:w="2"/><text x="20.0025%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="19.7525%" y="389" width="0.0223%" height="15" fill="rgb(203,103,0)" fg:x="1772" fg:w="2"/><text x="20.0025%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="19.7525%" y="373" width="0.0223%" height="15" fill="rgb(245,145,0)" fg:x="1772" fg:w="2"/><text x="20.0025%" y="383.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="19.7525%" y="357" width="0.0223%" height="15" fill="rgb(211,211,63)" fg:x="1772" fg:w="2"/><text x="20.0025%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="19.7525%" y="341" width="0.0223%" height="15" fill="rgb(210,210,63)" fg:x="1772" fg:w="2"/><text x="20.0025%" y="351.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::randomize (11 samples, 0.12%)</title><rect x="19.6634%" y="613" width="0.1226%" height="15" fill="rgb(102,213,213)" fg:x="1764" fg:w="11"/><text x="19.9134%" y="623.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (9 samples, 0.10%)</title><rect x="19.6857%" y="597" width="0.1003%" height="15" fill="rgb(88,200,200)" fg:x="1766" fg:w="9"/><text x="19.9357%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="19.7748%" y="581" width="0.0111%" height="15" fill="rgb(226,126,0)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="19.7748%" y="565" width="0.0111%" height="15" fill="rgb(72,185,185)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="19.7748%" y="549" width="0.0111%" height="15" fill="rgb(109,219,219)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="19.7748%" y="533" width="0.0111%" height="15" fill="rgb(239,139,0)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="543.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="19.7748%" y="517" width="0.0111%" height="15" fill="rgb(237,137,0)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="19.7748%" y="501" width="0.0111%" height="15" fill="rgb(238,138,0)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="19.7748%" y="485" width="0.0111%" height="15" fill="rgb(230,130,0)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="19.7748%" y="469" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="19.7748%" y="453" width="0.0111%" height="15" fill="rgb(208,108,0)" fg:x="1774" fg:w="1"/><text x="20.0248%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="19.7860%" y="501" width="0.0111%" height="15" fill="rgb(106,216,216)" fg:x="1775" fg:w="1"/><text x="20.0360%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="19.7860%" y="485" width="0.0111%" height="15" fill="rgb(99,210,210)" fg:x="1775" fg:w="1"/><text x="20.0360%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="19.7860%" y="469" width="0.0111%" height="15" fill="rgb(70,184,184)" fg:x="1775" fg:w="1"/><text x="20.0360%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="19.7860%" y="453" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="1775" fg:w="1"/><text x="20.0360%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="19.7971%" y="405" width="0.0557%" height="15" fill="rgb(244,144,0)" fg:x="1776" fg:w="5"/><text x="20.0471%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="19.7971%" y="389" width="0.0557%" height="15" fill="rgb(200,100,0)" fg:x="1776" fg:w="5"/><text x="20.0471%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="19.7971%" y="373" width="0.0557%" height="15" fill="rgb(192,92,0)" fg:x="1776" fg:w="5"/><text x="20.0471%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="19.7971%" y="357" width="0.0557%" height="15" fill="rgb(220,120,0)" fg:x="1776" fg:w="5"/><text x="20.0471%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="19.7971%" y="341" width="0.0557%" height="15" fill="rgb(230,130,0)" fg:x="1776" fg:w="5"/><text x="20.0471%" y="351.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="19.7971%" y="325" width="0.0557%" height="15" fill="rgb(193,93,0)" fg:x="1776" fg:w="5"/><text x="20.0471%" y="335.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="19.7971%" y="309" width="0.0557%" height="15" fill="rgb(200,200,59)" fg:x="1776" fg:w="5"/><text x="20.0471%" y="319.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="19.8083%" y="293" width="0.0446%" height="15" fill="rgb(207,207,61)" fg:x="1777" fg:w="4"/><text x="20.0583%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (7 samples, 0.08%)</title><rect x="19.7860%" y="533" width="0.0780%" height="15" fill="rgb(103,214,214)" fg:x="1775" fg:w="7"/><text x="20.0360%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (7 samples, 0.08%)</title><rect x="19.7860%" y="517" width="0.0780%" height="15" fill="rgb(70,184,184)" fg:x="1775" fg:w="7"/><text x="20.0360%" y="527.50"></text></g><g><title>core::clone::Clone::clone (6 samples, 0.07%)</title><rect x="19.7971%" y="501" width="0.0669%" height="15" fill="rgb(235,135,0)" fg:x="1776" fg:w="6"/><text x="20.0471%" y="511.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="19.7971%" y="485" width="0.0669%" height="15" fill="rgb(53,168,168)" fg:x="1776" fg:w="6"/><text x="20.0471%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="19.7971%" y="469" width="0.0669%" height="15" fill="rgb(224,124,0)" fg:x="1776" fg:w="6"/><text x="20.0471%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="19.7971%" y="453" width="0.0669%" height="15" fill="rgb(231,131,0)" fg:x="1776" fg:w="6"/><text x="20.0471%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="19.7971%" y="437" width="0.0669%" height="15" fill="rgb(240,140,0)" fg:x="1776" fg:w="6"/><text x="20.0471%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="19.7971%" y="421" width="0.0669%" height="15" fill="rgb(96,207,207)" fg:x="1776" fg:w="6"/><text x="20.0471%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="19.8529%" y="405" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="1781" fg:w="1"/><text x="20.1029%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="19.8529%" y="389" width="0.0111%" height="15" fill="rgb(228,128,0)" fg:x="1781" fg:w="1"/><text x="20.1029%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="19.8529%" y="373" width="0.0111%" height="15" fill="rgb(191,191,55)" fg:x="1781" fg:w="1"/><text x="20.1029%" y="383.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="19.7860%" y="597" width="0.1003%" height="15" fill="rgb(99,210,210)" fg:x="1775" fg:w="9"/><text x="20.0360%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="19.7860%" y="581" width="0.1003%" height="15" fill="rgb(231,131,0)" fg:x="1775" fg:w="9"/><text x="20.0360%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="19.7860%" y="565" width="0.1003%" height="15" fill="rgb(57,172,172)" fg:x="1775" fg:w="9"/><text x="20.0360%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="19.7860%" y="549" width="0.1003%" height="15" fill="rgb(99,210,210)" fg:x="1775" fg:w="9"/><text x="20.0360%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="19.8640%" y="533" width="0.0223%" height="15" fill="rgb(59,173,173)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="19.8640%" y="517" width="0.0223%" height="15" fill="rgb(73,186,186)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="527.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="19.8640%" y="501" width="0.0223%" height="15" fill="rgb(67,180,180)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="19.8640%" y="485" width="0.0223%" height="15" fill="rgb(193,93,0)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="19.8640%" y="469" width="0.0223%" height="15" fill="rgb(209,109,0)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="19.8640%" y="453" width="0.0223%" height="15" fill="rgb(231,131,0)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="463.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="19.8640%" y="437" width="0.0223%" height="15" fill="rgb(182,182,52)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="19.8640%" y="421" width="0.0223%" height="15" fill="rgb(224,224,68)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="19.8640%" y="405" width="0.0223%" height="15" fill="rgb(188,188,54)" fg:x="1782" fg:w="2"/><text x="20.1140%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="19.8752%" y="389" width="0.0111%" height="15" fill="rgb(193,193,56)" fg:x="1783" fg:w="1"/><text x="20.1252%" y="399.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (7 samples, 0.08%)</title><rect x="20.0424%" y="565" width="0.0780%" height="15" fill="rgb(55,170,170)" fg:x="1798" fg:w="7"/><text x="20.2924%" y="575.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (7 samples, 0.08%)</title><rect x="20.0424%" y="549" width="0.0780%" height="15" fill="rgb(52,167,167)" fg:x="1798" fg:w="7"/><text x="20.2924%" y="559.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (4 samples, 0.04%)</title><rect x="20.0758%" y="533" width="0.0446%" height="15" fill="rgb(76,189,189)" fg:x="1801" fg:w="4"/><text x="20.3258%" y="543.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (4 samples, 0.04%)</title><rect x="20.0758%" y="517" width="0.0446%" height="15" fill="rgb(56,171,171)" fg:x="1801" fg:w="4"/><text x="20.3258%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.09%)</title><rect x="20.1204%" y="565" width="0.0892%" height="15" fill="rgb(236,136,0)" fg:x="1805" fg:w="8"/><text x="20.3704%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.09%)</title><rect x="20.1204%" y="549" width="0.0892%" height="15" fill="rgb(247,147,0)" fg:x="1805" fg:w="8"/><text x="20.3704%" y="559.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="20.1873%" y="533" width="0.0223%" height="15" fill="rgb(251,151,0)" fg:x="1811" fg:w="2"/><text x="20.4373%" y="543.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="20.2319%" y="421" width="0.0111%" height="15" fill="rgb(182,182,52)" fg:x="1815" fg:w="1"/><text x="20.4819%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="20.2319%" y="405" width="0.0111%" height="15" fill="rgb(226,126,0)" fg:x="1815" fg:w="1"/><text x="20.4819%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.14%)</title><rect x="20.2096%" y="453" width="0.1449%" height="15" fill="rgb(228,128,0)" fg:x="1813" fg:w="13"/><text x="20.4596%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.14%)</title><rect x="20.2096%" y="437" width="0.1449%" height="15" fill="rgb(209,109,0)" fg:x="1813" fg:w="13"/><text x="20.4596%" y="447.50"></text></g><g><title>cfree (10 samples, 0.11%)</title><rect x="20.2430%" y="421" width="0.1115%" height="15" fill="rgb(193,193,56)" fg:x="1816" fg:w="10"/><text x="20.4930%" y="431.50"></text></g><g><title>[libc.so.6] (8 samples, 0.09%)</title><rect x="20.2653%" y="405" width="0.0892%" height="15" fill="rgb(190,190,55)" fg:x="1818" fg:w="8"/><text x="20.5153%" y="415.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="20.2876%" y="389" width="0.0669%" height="15" fill="rgb(213,213,64)" fg:x="1820" fg:w="6"/><text x="20.5376%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="20.3322%" y="373" width="0.0223%" height="15" fill="rgb(213,213,63)" fg:x="1824" fg:w="2"/><text x="20.5822%" y="383.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (38 samples, 0.42%)</title><rect x="19.9420%" y="581" width="0.4236%" height="15" fill="rgb(93,204,204)" fg:x="1789" fg:w="38"/><text x="20.1920%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt;&gt; (14 samples, 0.16%)</title><rect x="20.2096%" y="565" width="0.1561%" height="15" fill="rgb(252,152,0)" fg:x="1813" fg:w="14"/><text x="20.4596%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (14 samples, 0.16%)</title><rect x="20.2096%" y="549" width="0.1561%" height="15" fill="rgb(249,149,0)" fg:x="1813" fg:w="14"/><text x="20.4596%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.16%)</title><rect x="20.2096%" y="533" width="0.1561%" height="15" fill="rgb(202,102,0)" fg:x="1813" fg:w="14"/><text x="20.4596%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (14 samples, 0.16%)</title><rect x="20.2096%" y="517" width="0.1561%" height="15" fill="rgb(235,135,0)" fg:x="1813" fg:w="14"/><text x="20.4596%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.16%)</title><rect x="20.2096%" y="501" width="0.1561%" height="15" fill="rgb(70,183,183)" fg:x="1813" fg:w="14"/><text x="20.4596%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (14 samples, 0.16%)</title><rect x="20.2096%" y="485" width="0.1561%" height="15" fill="rgb(209,109,0)" fg:x="1813" fg:w="14"/><text x="20.4596%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.16%)</title><rect x="20.2096%" y="469" width="0.1561%" height="15" fill="rgb(214,114,0)" fg:x="1813" fg:w="14"/><text x="20.4596%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="20.3545%" y="453" width="0.0111%" height="15" fill="rgb(222,122,0)" fg:x="1826" fg:w="1"/><text x="20.6045%" y="463.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="20.4102%" y="389" width="0.0223%" height="15" fill="rgb(189,189,55)" fg:x="1831" fg:w="2"/><text x="20.6602%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="20.4102%" y="373" width="0.0223%" height="15" fill="rgb(204,104,0)" fg:x="1831" fg:w="2"/><text x="20.6602%" y="383.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="20.4325%" y="389" width="0.0111%" height="15" fill="rgb(188,188,55)" fg:x="1833" fg:w="1"/><text x="20.6825%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.12%)</title><rect x="20.4102%" y="485" width="0.1226%" height="15" fill="rgb(222,122,0)" fg:x="1831" fg:w="11"/><text x="20.6602%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.12%)</title><rect x="20.4102%" y="469" width="0.1226%" height="15" fill="rgb(233,133,0)" fg:x="1831" fg:w="11"/><text x="20.6602%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.12%)</title><rect x="20.4102%" y="453" width="0.1226%" height="15" fill="rgb(203,103,0)" fg:x="1831" fg:w="11"/><text x="20.6602%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.12%)</title><rect x="20.4102%" y="437" width="0.1226%" height="15" fill="rgb(219,119,0)" fg:x="1831" fg:w="11"/><text x="20.6602%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.12%)</title><rect x="20.4102%" y="421" width="0.1226%" height="15" fill="rgb(198,98,0)" fg:x="1831" fg:w="11"/><text x="20.6602%" y="431.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.12%)</title><rect x="20.4102%" y="405" width="0.1226%" height="15" fill="rgb(223,123,0)" fg:x="1831" fg:w="11"/><text x="20.6602%" y="415.50"></text></g><g><title>malloc (8 samples, 0.09%)</title><rect x="20.4437%" y="389" width="0.0892%" height="15" fill="rgb(179,179,51)" fg:x="1834" fg:w="8"/><text x="20.6937%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="20.5217%" y="373" width="0.0111%" height="15" fill="rgb(206,206,61)" fg:x="1841" fg:w="1"/><text x="20.7717%" y="383.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (14 samples, 0.16%)</title><rect x="20.3991%" y="565" width="0.1561%" height="15" fill="rgb(51,166,166)" fg:x="1830" fg:w="14"/><text x="20.6491%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.16%)</title><rect x="20.3991%" y="549" width="0.1561%" height="15" fill="rgb(190,90,0)" fg:x="1830" fg:w="14"/><text x="20.6491%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.16%)</title><rect x="20.3991%" y="533" width="0.1561%" height="15" fill="rgb(213,113,0)" fg:x="1830" fg:w="14"/><text x="20.6491%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.16%)</title><rect x="20.3991%" y="517" width="0.1561%" height="15" fill="rgb(221,121,0)" fg:x="1830" fg:w="14"/><text x="20.6491%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.16%)</title><rect x="20.3991%" y="501" width="0.1561%" height="15" fill="rgb(62,176,176)" fg:x="1830" fg:w="14"/><text x="20.6491%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="20.5328%" y="485" width="0.0223%" height="15" fill="rgb(234,134,0)" fg:x="1842" fg:w="2"/><text x="20.7828%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="20.5328%" y="469" width="0.0223%" height="15" fill="rgb(249,149,0)" fg:x="1842" fg:w="2"/><text x="20.7828%" y="479.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="20.5328%" y="453" width="0.0223%" height="15" fill="rgb(189,189,55)" fg:x="1842" fg:w="2"/><text x="20.7828%" y="463.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="20.5551%" y="565" width="0.0111%" height="15" fill="rgb(71,184,184)" fg:x="1844" fg:w="1"/><text x="20.8051%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="20.5551%" y="549" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="1844" fg:w="1"/><text x="20.8051%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="20.5551%" y="533" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="1844" fg:w="1"/><text x="20.8051%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="20.5551%" y="517" width="0.0111%" height="15" fill="rgb(226,126,0)" fg:x="1844" fg:w="1"/><text x="20.8051%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="20.5551%" y="501" width="0.0111%" height="15" fill="rgb(99,210,210)" fg:x="1844" fg:w="1"/><text x="20.8051%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="20.5551%" y="485" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="1844" fg:w="1"/><text x="20.8051%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="20.5551%" y="469" width="0.0111%" height="15" fill="rgb(196,96,0)" fg:x="1844" fg:w="1"/><text x="20.8051%" y="479.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="20.6220%" y="325" width="0.0223%" height="15" fill="rgb(177,177,51)" fg:x="1850" fg:w="2"/><text x="20.8720%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="20.6220%" y="309" width="0.0223%" height="15" fill="rgb(253,153,0)" fg:x="1850" fg:w="2"/><text x="20.8720%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="20.5886%" y="421" width="0.0892%" height="15" fill="rgb(224,124,0)" fg:x="1847" fg:w="8"/><text x="20.8386%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="20.5886%" y="405" width="0.0892%" height="15" fill="rgb(209,109,0)" fg:x="1847" fg:w="8"/><text x="20.8386%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.09%)</title><rect x="20.5886%" y="389" width="0.0892%" height="15" fill="rgb(225,125,0)" fg:x="1847" fg:w="8"/><text x="20.8386%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="20.6109%" y="373" width="0.0669%" height="15" fill="rgb(217,117,0)" fg:x="1849" fg:w="6"/><text x="20.8609%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="20.6109%" y="357" width="0.0669%" height="15" fill="rgb(218,118,0)" fg:x="1849" fg:w="6"/><text x="20.8609%" y="367.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.07%)</title><rect x="20.6109%" y="341" width="0.0669%" height="15" fill="rgb(219,119,0)" fg:x="1849" fg:w="6"/><text x="20.8609%" y="351.50"></text></g><g><title>malloc (3 samples, 0.03%)</title><rect x="20.6443%" y="325" width="0.0334%" height="15" fill="rgb(221,221,66)" fg:x="1852" fg:w="3"/><text x="20.8943%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="20.6666%" y="309" width="0.0111%" height="15" fill="rgb(227,227,68)" fg:x="1854" fg:w="1"/><text x="20.9166%" y="319.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (14 samples, 0.16%)</title><rect x="20.5886%" y="501" width="0.1561%" height="15" fill="rgb(88,199,199)" fg:x="1847" fg:w="14"/><text x="20.8386%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.16%)</title><rect x="20.5886%" y="485" width="0.1561%" height="15" fill="rgb(193,93,0)" fg:x="1847" fg:w="14"/><text x="20.8386%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.16%)</title><rect x="20.5886%" y="469" width="0.1561%" height="15" fill="rgb(214,114,0)" fg:x="1847" fg:w="14"/><text x="20.8386%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.16%)</title><rect x="20.5886%" y="453" width="0.1561%" height="15" fill="rgb(218,118,0)" fg:x="1847" fg:w="14"/><text x="20.8386%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.16%)</title><rect x="20.5886%" y="437" width="0.1561%" height="15" fill="rgb(76,188,188)" fg:x="1847" fg:w="14"/><text x="20.8386%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.07%)</title><rect x="20.6777%" y="421" width="0.0669%" height="15" fill="rgb(237,137,0)" fg:x="1855" fg:w="6"/><text x="20.9277%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.07%)</title><rect x="20.6777%" y="405" width="0.0669%" height="15" fill="rgb(200,100,0)" fg:x="1855" fg:w="6"/><text x="20.9277%" y="415.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="20.6777%" y="389" width="0.0669%" height="15" fill="rgb(218,218,65)" fg:x="1855" fg:w="6"/><text x="20.9277%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="20.7446%" y="501" width="0.0334%" height="15" fill="rgb(240,140,0)" fg:x="1861" fg:w="3"/><text x="20.9946%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="20.7446%" y="485" width="0.0334%" height="15" fill="rgb(229,129,0)" fg:x="1861" fg:w="3"/><text x="20.9946%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="20.7446%" y="469" width="0.0334%" height="15" fill="rgb(247,147,0)" fg:x="1861" fg:w="3"/><text x="20.9946%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="20.7669%" y="453" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="1863" fg:w="1"/><text x="21.0169%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="20.7781%" y="501" width="0.0111%" height="15" fill="rgb(196,96,0)" fg:x="1864" fg:w="1"/><text x="21.0281%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="20.7781%" y="485" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="1864" fg:w="1"/><text x="21.0281%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="20.7781%" y="469" width="0.0111%" height="15" fill="rgb(238,138,0)" fg:x="1864" fg:w="1"/><text x="21.0281%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="20.7781%" y="453" width="0.0111%" height="15" fill="rgb(238,138,0)" fg:x="1864" fg:w="1"/><text x="21.0281%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="20.7781%" y="437" width="0.0111%" height="15" fill="rgb(210,110,0)" fg:x="1864" fg:w="1"/><text x="21.0281%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="20.7781%" y="421" width="0.0111%" height="15" fill="rgb(238,138,0)" fg:x="1864" fg:w="1"/><text x="21.0281%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="20.7781%" y="405" width="0.0111%" height="15" fill="rgb(196,196,57)" fg:x="1864" fg:w="1"/><text x="21.0281%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="20.7781%" y="389" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="1864" fg:w="1"/><text x="21.0281%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.27%)</title><rect x="20.5663%" y="565" width="0.2675%" height="15" fill="rgb(202,102,0)" fg:x="1845" fg:w="24"/><text x="20.8163%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.26%)</title><rect x="20.5774%" y="549" width="0.2564%" height="15" fill="rgb(193,93,0)" fg:x="1846" fg:w="23"/><text x="20.8274%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.26%)</title><rect x="20.5774%" y="533" width="0.2564%" height="15" fill="rgb(246,146,0)" fg:x="1846" fg:w="23"/><text x="20.8274%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.26%)</title><rect x="20.5774%" y="517" width="0.2564%" height="15" fill="rgb(73,186,186)" fg:x="1846" fg:w="23"/><text x="20.8274%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.04%)</title><rect x="20.7892%" y="501" width="0.0446%" height="15" fill="rgb(241,141,0)" fg:x="1865" fg:w="4"/><text x="21.0392%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="20.8338%" y="565" width="0.0111%" height="15" fill="rgb(230,130,0)" fg:x="1869" fg:w="1"/><text x="21.0838%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.02%)</title><rect x="20.8449%" y="517" width="0.0223%" height="15" fill="rgb(207,107,0)" fg:x="1870" fg:w="2"/><text x="21.0949%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.02%)</title><rect x="20.8672%" y="485" width="0.0223%" height="15" fill="rgb(220,120,0)" fg:x="1872" fg:w="2"/><text x="21.1172%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="20.8672%" y="469" width="0.0223%" height="15" fill="rgb(223,123,0)" fg:x="1872" fg:w="2"/><text x="21.1172%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="20.8895%" y="453" width="0.0223%" height="15" fill="rgb(197,97,0)" fg:x="1874" fg:w="2"/><text x="21.1395%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.02%)</title><rect x="20.8895%" y="437" width="0.0223%" height="15" fill="rgb(216,116,0)" fg:x="1874" fg:w="2"/><text x="21.1395%" y="447.50"></text></g><g><title>__rdl_realloc (5 samples, 0.06%)</title><rect x="20.9341%" y="389" width="0.0557%" height="15" fill="rgb(225,225,68)" fg:x="1878" fg:w="5"/><text x="21.1841%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.03%)</title><rect x="20.9564%" y="373" width="0.0334%" height="15" fill="rgb(209,109,0)" fg:x="1880" fg:w="3"/><text x="21.2064%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 samples, 0.89%)</title><rect x="20.9118%" y="453" width="0.8918%" height="15" fill="rgb(231,131,0)" fg:x="1876" fg:w="80"/><text x="21.1618%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (78 samples, 0.87%)</title><rect x="20.9341%" y="437" width="0.8695%" height="15" fill="rgb(222,122,0)" fg:x="1878" fg:w="78"/><text x="21.1841%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (78 samples, 0.87%)</title><rect x="20.9341%" y="421" width="0.8695%" height="15" fill="rgb(191,91,0)" fg:x="1878" fg:w="78"/><text x="21.1841%" y="431.50"></text></g><g><title>alloc::alloc::realloc (78 samples, 0.87%)</title><rect x="20.9341%" y="405" width="0.8695%" height="15" fill="rgb(235,135,0)" fg:x="1878" fg:w="78"/><text x="21.1841%" y="415.50"></text></g><g><title>realloc (73 samples, 0.81%)</title><rect x="20.9899%" y="389" width="0.8137%" height="15" fill="rgb(192,192,56)" fg:x="1883" fg:w="73"/><text x="21.2399%" y="399.50"></text></g><g><title>[libc.so.6] (57 samples, 0.64%)</title><rect x="21.1682%" y="373" width="0.6354%" height="15" fill="rgb(203,203,60)" fg:x="1899" fg:w="57"/><text x="21.4182%" y="383.50"></text></g><g><title>[libc.so.6] (51 samples, 0.57%)</title><rect x="21.2351%" y="357" width="0.5685%" height="15" fill="rgb(195,195,57)" fg:x="1905" fg:w="51"/><text x="21.4851%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="21.7701%" y="341" width="0.0334%" height="15" fill="rgb(175,175,50)" fg:x="1953" fg:w="3"/><text x="22.0201%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="21.8036%" y="453" width="0.0111%" height="15" fill="rgb(233,133,0)" fg:x="1956" fg:w="1"/><text x="22.0536%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="21.8036%" y="437" width="0.0111%" height="15" fill="rgb(198,98,0)" fg:x="1956" fg:w="1"/><text x="22.0536%" y="447.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="21.8147%" y="453" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="1957" fg:w="1"/><text x="22.0647%" y="463.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="21.8147%" y="437" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="1957" fg:w="1"/><text x="22.0647%" y="447.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="21.8147%" y="421" width="0.0111%" height="15" fill="rgb(190,90,0)" fg:x="1957" fg:w="1"/><text x="22.0647%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (87 samples, 0.97%)</title><rect x="20.8672%" y="517" width="0.9698%" height="15" fill="rgb(248,148,0)" fg:x="1872" fg:w="87"/><text x="21.1172%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (87 samples, 0.97%)</title><rect x="20.8672%" y="501" width="0.9698%" height="15" fill="rgb(249,149,0)" fg:x="1872" fg:w="87"/><text x="21.1172%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (85 samples, 0.95%)</title><rect x="20.8895%" y="485" width="0.9475%" height="15" fill="rgb(213,113,0)" fg:x="1874" fg:w="85"/><text x="21.1395%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (85 samples, 0.95%)</title><rect x="20.8895%" y="469" width="0.9475%" height="15" fill="rgb(236,136,0)" fg:x="1874" fg:w="85"/><text x="21.1395%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="21.8259%" y="453" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="1958" fg:w="1"/><text x="22.0759%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="21.8259%" y="437" width="0.0111%" height="15" fill="rgb(207,107,0)" fg:x="1958" fg:w="1"/><text x="22.0759%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="21.8370%" y="517" width="0.0111%" height="15" fill="rgb(211,111,0)" fg:x="1959" fg:w="1"/><text x="22.0870%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="21.8370%" y="501" width="0.0111%" height="15" fill="rgb(200,200,59)" fg:x="1959" fg:w="1"/><text x="22.0870%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (91 samples, 1.01%)</title><rect x="20.8449%" y="533" width="1.0144%" height="15" fill="rgb(245,145,0)" fg:x="1870" fg:w="91"/><text x="21.0949%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="21.8482%" y="517" width="0.0111%" height="15" fill="rgb(233,133,0)" fg:x="1960" fg:w="1"/><text x="22.0982%" y="527.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (92 samples, 1.03%)</title><rect x="20.8449%" y="565" width="1.0255%" height="15" fill="rgb(79,192,192)" fg:x="1870" fg:w="92"/><text x="21.0949%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (92 samples, 1.03%)</title><rect x="20.8449%" y="549" width="1.0255%" height="15" fill="rgb(230,130,0)" fg:x="1870" fg:w="92"/><text x="21.0949%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.01%)</title><rect x="21.8593%" y="533" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="1961" fg:w="1"/><text x="22.1093%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="21.8593%" y="517" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="1961" fg:w="1"/><text x="22.1093%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="21.8593%" y="501" width="0.0111%" height="15" fill="rgb(240,140,0)" fg:x="1961" fg:w="1"/><text x="22.1093%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="21.8593%" y="485" width="0.0111%" height="15" fill="rgb(211,111,0)" fg:x="1961" fg:w="1"/><text x="22.1093%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="21.8816%" y="405" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="1963" fg:w="1"/><text x="22.1316%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="21.8705%" y="501" width="0.0334%" height="15" fill="rgb(74,187,187)" fg:x="1962" fg:w="3"/><text x="22.1205%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="21.8816%" y="485" width="0.0223%" height="15" fill="rgb(232,132,0)" fg:x="1963" fg:w="2"/><text x="22.1316%" y="495.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.8816%" y="469" width="0.0223%" height="15" fill="rgb(205,105,0)" fg:x="1963" fg:w="2"/><text x="22.1316%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.8816%" y="453" width="0.0223%" height="15" fill="rgb(240,140,0)" fg:x="1963" fg:w="2"/><text x="22.1316%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.8816%" y="437" width="0.0223%" height="15" fill="rgb(237,137,0)" fg:x="1963" fg:w="2"/><text x="22.1316%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="21.8816%" y="421" width="0.0223%" height="15" fill="rgb(210,110,0)" fg:x="1963" fg:w="2"/><text x="22.1316%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="21.8928%" y="405" width="0.0111%" height="15" fill="rgb(247,147,0)" fg:x="1964" fg:w="1"/><text x="22.1428%" y="415.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (6 samples, 0.07%)</title><rect x="21.8705%" y="565" width="0.0669%" height="15" fill="rgb(101,212,212)" fg:x="1962" fg:w="6"/><text x="22.1205%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="21.8705%" y="549" width="0.0669%" height="15" fill="rgb(218,118,0)" fg:x="1962" fg:w="6"/><text x="22.1205%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.07%)</title><rect x="21.8705%" y="533" width="0.0669%" height="15" fill="rgb(82,194,194)" fg:x="1962" fg:w="6"/><text x="22.1205%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.07%)</title><rect x="21.8705%" y="517" width="0.0669%" height="15" fill="rgb(98,209,209)" fg:x="1962" fg:w="6"/><text x="22.1205%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="21.9039%" y="501" width="0.0334%" height="15" fill="rgb(85,197,197)" fg:x="1965" fg:w="3"/><text x="22.1539%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="21.9039%" y="485" width="0.0334%" height="15" fill="rgb(105,216,216)" fg:x="1965" fg:w="3"/><text x="22.1539%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.03%)</title><rect x="21.9039%" y="469" width="0.0334%" height="15" fill="rgb(80,192,192)" fg:x="1965" fg:w="3"/><text x="22.1539%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.03%)</title><rect x="21.9039%" y="453" width="0.0334%" height="15" fill="rgb(108,219,219)" fg:x="1965" fg:w="3"/><text x="22.1539%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (3 samples, 0.03%)</title><rect x="21.9039%" y="437" width="0.0334%" height="15" fill="rgb(82,195,195)" fg:x="1965" fg:w="3"/><text x="22.1539%" y="447.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.03%)</title><rect x="21.9039%" y="421" width="0.0334%" height="15" fill="rgb(67,180,180)" fg:x="1965" fg:w="3"/><text x="22.1539%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="21.9039%" y="405" width="0.0334%" height="15" fill="rgb(217,117,0)" fg:x="1965" fg:w="3"/><text x="22.1539%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="21.9039%" y="389" width="0.0334%" height="15" fill="rgb(105,216,216)" fg:x="1965" fg:w="3"/><text x="22.1539%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="21.9374%" y="373" width="0.0223%" height="15" fill="rgb(238,138,0)" fg:x="1968" fg:w="2"/><text x="22.1874%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="21.9374%" y="357" width="0.0223%" height="15" fill="rgb(199,99,0)" fg:x="1968" fg:w="2"/><text x="22.1874%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="21.9374%" y="341" width="0.0223%" height="15" fill="rgb(238,138,0)" fg:x="1968" fg:w="2"/><text x="22.1874%" y="351.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="21.9374%" y="325" width="0.0223%" height="15" fill="rgb(183,183,53)" fg:x="1968" fg:w="2"/><text x="22.1874%" y="335.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="21.9374%" y="501" width="0.0334%" height="15" fill="rgb(52,167,167)" fg:x="1968" fg:w="3"/><text x="22.1874%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="21.9374%" y="485" width="0.0334%" height="15" fill="rgb(251,151,0)" fg:x="1968" fg:w="3"/><text x="22.1874%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="21.9374%" y="469" width="0.0334%" height="15" fill="rgb(223,123,0)" fg:x="1968" fg:w="3"/><text x="22.1874%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="21.9374%" y="453" width="0.0334%" height="15" fill="rgb(217,117,0)" fg:x="1968" fg:w="3"/><text x="22.1874%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="21.9374%" y="437" width="0.0334%" height="15" fill="rgb(65,179,179)" fg:x="1968" fg:w="3"/><text x="22.1874%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="21.9374%" y="421" width="0.0334%" height="15" fill="rgb(216,116,0)" fg:x="1968" fg:w="3"/><text x="22.1874%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="21.9374%" y="405" width="0.0334%" height="15" fill="rgb(213,113,0)" fg:x="1968" fg:w="3"/><text x="22.1874%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="21.9374%" y="389" width="0.0334%" height="15" fill="rgb(224,124,0)" fg:x="1968" fg:w="3"/><text x="22.1874%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="21.9596%" y="373" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="1970" fg:w="1"/><text x="22.2096%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="21.9596%" y="357" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="1970" fg:w="1"/><text x="22.2096%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.06%)</title><rect x="21.9374%" y="565" width="0.0557%" height="15" fill="rgb(197,97,0)" fg:x="1968" fg:w="5"/><text x="22.1874%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="21.9374%" y="549" width="0.0557%" height="15" fill="rgb(204,104,0)" fg:x="1968" fg:w="5"/><text x="22.1874%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="21.9374%" y="533" width="0.0557%" height="15" fill="rgb(235,135,0)" fg:x="1968" fg:w="5"/><text x="22.1874%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="21.9374%" y="517" width="0.0557%" height="15" fill="rgb(67,181,181)" fg:x="1968" fg:w="5"/><text x="22.1874%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="21.9708%" y="501" width="0.0223%" height="15" fill="rgb(241,141,0)" fg:x="1971" fg:w="2"/><text x="22.2208%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="21.9708%" y="485" width="0.0223%" height="15" fill="rgb(225,125,0)" fg:x="1971" fg:w="2"/><text x="22.2208%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="21.9708%" y="469" width="0.0223%" height="15" fill="rgb(247,147,0)" fg:x="1971" fg:w="2"/><text x="22.2208%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="21.9708%" y="453" width="0.0223%" height="15" fill="rgb(229,129,0)" fg:x="1971" fg:w="2"/><text x="22.2208%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="21.9708%" y="437" width="0.0223%" height="15" fill="rgb(234,134,0)" fg:x="1971" fg:w="2"/><text x="22.2208%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="21.9708%" y="421" width="0.0223%" height="15" fill="rgb(249,149,0)" fg:x="1971" fg:w="2"/><text x="22.2208%" y="431.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="21.9708%" y="405" width="0.0223%" height="15" fill="rgb(202,202,60)" fg:x="1971" fg:w="2"/><text x="22.2208%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="22.0042%" y="517" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="1974" fg:w="1"/><text x="22.2542%" y="527.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="22.0154%" y="453" width="0.0111%" height="15" fill="rgb(192,192,56)" fg:x="1975" fg:w="1"/><text x="22.2654%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="22.0154%" y="437" width="0.0111%" height="15" fill="rgb(235,135,0)" fg:x="1975" fg:w="1"/><text x="22.2654%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.17%)</title><rect x="22.0154%" y="501" width="0.1672%" height="15" fill="rgb(201,101,0)" fg:x="1975" fg:w="15"/><text x="22.2654%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.17%)</title><rect x="22.0154%" y="485" width="0.1672%" height="15" fill="rgb(244,144,0)" fg:x="1975" fg:w="15"/><text x="22.2654%" y="495.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.17%)</title><rect x="22.0154%" y="469" width="0.1672%" height="15" fill="rgb(195,95,0)" fg:x="1975" fg:w="15"/><text x="22.2654%" y="479.50"></text></g><g><title>realloc (14 samples, 0.16%)</title><rect x="22.0265%" y="453" width="0.1561%" height="15" fill="rgb(195,195,57)" fg:x="1976" fg:w="14"/><text x="22.2765%" y="463.50"></text></g><g><title>[libc.so.6] (13 samples, 0.14%)</title><rect x="22.0377%" y="437" width="0.1449%" height="15" fill="rgb(190,190,55)" fg:x="1977" fg:w="13"/><text x="22.2877%" y="447.50"></text></g><g><title>[libc.so.6] (12 samples, 0.13%)</title><rect x="22.0488%" y="421" width="0.1338%" height="15" fill="rgb(188,188,54)" fg:x="1978" fg:w="12"/><text x="22.2988%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.18%)</title><rect x="22.0154%" y="517" width="0.1784%" height="15" fill="rgb(218,118,0)" fg:x="1975" fg:w="16"/><text x="22.2654%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="22.1826%" y="501" width="0.0111%" height="15" fill="rgb(201,101,0)" fg:x="1990" fg:w="1"/><text x="22.4326%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.20%)</title><rect x="22.0042%" y="549" width="0.2006%" height="15" fill="rgb(246,146,0)" fg:x="1974" fg:w="18"/><text x="22.2542%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.20%)</title><rect x="22.0042%" y="533" width="0.2006%" height="15" fill="rgb(199,99,0)" fg:x="1974" fg:w="18"/><text x="22.2542%" y="543.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="22.1937%" y="517" width="0.0111%" height="15" fill="rgb(199,99,0)" fg:x="1991" fg:w="1"/><text x="22.4437%" y="527.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="22.1937%" y="501" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="1991" fg:w="1"/><text x="22.4437%" y="511.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="22.1937%" y="485" width="0.0111%" height="15" fill="rgb(196,96,0)" fg:x="1991" fg:w="1"/><text x="22.4437%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.22%)</title><rect x="21.9931%" y="565" width="0.2229%" height="15" fill="rgb(190,90,0)" fg:x="1973" fg:w="20"/><text x="22.2431%" y="575.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="22.2049%" y="549" width="0.0111%" height="15" fill="rgb(196,96,0)" fg:x="1992" fg:w="1"/><text x="22.4549%" y="559.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="22.2160%" y="469" width="0.0111%" height="15" fill="rgb(196,196,57)" fg:x="1993" fg:w="1"/><text x="22.4660%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.13%)</title><rect x="22.2160%" y="501" width="0.1338%" height="15" fill="rgb(226,126,0)" fg:x="1993" fg:w="12"/><text x="22.4660%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.13%)</title><rect x="22.2160%" y="485" width="0.1338%" height="15" fill="rgb(231,131,0)" fg:x="1993" fg:w="12"/><text x="22.4660%" y="495.50"></text></g><g><title>cfree (11 samples, 0.12%)</title><rect x="22.2272%" y="469" width="0.1226%" height="15" fill="rgb(203,203,60)" fg:x="1994" fg:w="11"/><text x="22.4772%" y="479.50"></text></g><g><title>[libc.so.6] (9 samples, 0.10%)</title><rect x="22.2495%" y="453" width="0.1003%" height="15" fill="rgb(196,196,57)" fg:x="1996" fg:w="9"/><text x="22.4995%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (13 samples, 0.14%)</title><rect x="22.2160%" y="565" width="0.1449%" height="15" fill="rgb(236,136,0)" fg:x="1993" fg:w="13"/><text x="22.4660%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (13 samples, 0.14%)</title><rect x="22.2160%" y="549" width="0.1449%" height="15" fill="rgb(208,108,0)" fg:x="1993" fg:w="13"/><text x="22.4660%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (13 samples, 0.14%)</title><rect x="22.2160%" y="533" width="0.1449%" height="15" fill="rgb(218,118,0)" fg:x="1993" fg:w="13"/><text x="22.4660%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.14%)</title><rect x="22.2160%" y="517" width="0.1449%" height="15" fill="rgb(225,125,0)" fg:x="1993" fg:w="13"/><text x="22.4660%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="22.3498%" y="501" width="0.0111%" height="15" fill="rgb(239,139,0)" fg:x="2005" fg:w="1"/><text x="22.5998%" y="511.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="22.3609%" y="421" width="0.0111%" height="15" fill="rgb(176,176,50)" fg:x="2006" fg:w="1"/><text x="22.6109%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="22.3609%" y="405" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="2006" fg:w="1"/><text x="22.6109%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.13%)</title><rect x="22.3609%" y="549" width="0.1338%" height="15" fill="rgb(250,150,0)" fg:x="2006" fg:w="12"/><text x="22.6109%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (12 samples, 0.13%)</title><rect x="22.3609%" y="533" width="0.1338%" height="15" fill="rgb(219,119,0)" fg:x="2006" fg:w="12"/><text x="22.6109%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (12 samples, 0.13%)</title><rect x="22.3609%" y="517" width="0.1338%" height="15" fill="rgb(234,134,0)" fg:x="2006" fg:w="12"/><text x="22.6109%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (12 samples, 0.13%)</title><rect x="22.3609%" y="501" width="0.1338%" height="15" fill="rgb(248,148,0)" fg:x="2006" fg:w="12"/><text x="22.6109%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (12 samples, 0.13%)</title><rect x="22.3609%" y="485" width="0.1338%" height="15" fill="rgb(201,101,0)" fg:x="2006" fg:w="12"/><text x="22.6109%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.13%)</title><rect x="22.3609%" y="469" width="0.1338%" height="15" fill="rgb(206,106,0)" fg:x="2006" fg:w="12"/><text x="22.6109%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.13%)</title><rect x="22.3609%" y="453" width="0.1338%" height="15" fill="rgb(246,146,0)" fg:x="2006" fg:w="12"/><text x="22.6109%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.13%)</title><rect x="22.3609%" y="437" width="0.1338%" height="15" fill="rgb(218,118,0)" fg:x="2006" fg:w="12"/><text x="22.6109%" y="447.50"></text></g><g><title>cfree (11 samples, 0.12%)</title><rect x="22.3721%" y="421" width="0.1226%" height="15" fill="rgb(225,225,68)" fg:x="2007" fg:w="11"/><text x="22.6221%" y="431.50"></text></g><g><title>[libc.so.6] (8 samples, 0.09%)</title><rect x="22.4055%" y="405" width="0.0892%" height="15" fill="rgb(200,200,59)" fg:x="2010" fg:w="8"/><text x="22.6555%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="22.4613%" y="389" width="0.0334%" height="15" fill="rgb(192,192,56)" fg:x="2015" fg:w="3"/><text x="22.7113%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.4836%" y="373" width="0.0111%" height="15" fill="rgb(227,227,68)" fg:x="2017" fg:w="1"/><text x="22.7336%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (14 samples, 0.16%)</title><rect x="22.3609%" y="565" width="0.1561%" height="15" fill="rgb(237,137,0)" fg:x="2006" fg:w="14"/><text x="22.6109%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.02%)</title><rect x="22.4947%" y="549" width="0.0223%" height="15" fill="rgb(215,115,0)" fg:x="2018" fg:w="2"/><text x="22.7447%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="22.4947%" y="533" width="0.0223%" height="15" fill="rgb(226,126,0)" fg:x="2018" fg:w="2"/><text x="22.7447%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="22.4947%" y="517" width="0.0223%" height="15" fill="rgb(245,145,0)" fg:x="2018" fg:w="2"/><text x="22.7447%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="22.4947%" y="501" width="0.0223%" height="15" fill="rgb(230,130,0)" fg:x="2018" fg:w="2"/><text x="22.7447%" y="511.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="22.4947%" y="485" width="0.0223%" height="15" fill="rgb(201,201,59)" fg:x="2018" fg:w="2"/><text x="22.7447%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="22.4947%" y="469" width="0.0223%" height="15" fill="rgb(204,204,60)" fg:x="2018" fg:w="2"/><text x="22.7447%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.5059%" y="453" width="0.0111%" height="15" fill="rgb(186,186,54)" fg:x="2019" fg:w="1"/><text x="22.7559%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.5059%" y="437" width="0.0111%" height="15" fill="rgb(219,219,66)" fg:x="2019" fg:w="1"/><text x="22.7559%" y="447.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="22.5170%" y="437" width="0.0223%" height="15" fill="rgb(175,175,50)" fg:x="2020" fg:w="2"/><text x="22.7670%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (6 samples, 0.07%)</title><rect x="22.5170%" y="565" width="0.0669%" height="15" fill="rgb(223,123,0)" fg:x="2020" fg:w="6"/><text x="22.7670%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="22.5170%" y="549" width="0.0669%" height="15" fill="rgb(216,116,0)" fg:x="2020" fg:w="6"/><text x="22.7670%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (6 samples, 0.07%)</title><rect x="22.5170%" y="533" width="0.0669%" height="15" fill="rgb(203,103,0)" fg:x="2020" fg:w="6"/><text x="22.7670%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="22.5170%" y="517" width="0.0669%" height="15" fill="rgb(79,192,192)" fg:x="2020" fg:w="6"/><text x="22.7670%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (6 samples, 0.07%)</title><rect x="22.5170%" y="501" width="0.0669%" height="15" fill="rgb(226,126,0)" fg:x="2020" fg:w="6"/><text x="22.7670%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="22.5170%" y="485" width="0.0669%" height="15" fill="rgb(235,135,0)" fg:x="2020" fg:w="6"/><text x="22.7670%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="22.5170%" y="469" width="0.0669%" height="15" fill="rgb(193,93,0)" fg:x="2020" fg:w="6"/><text x="22.7670%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="22.5170%" y="453" width="0.0669%" height="15" fill="rgb(252,152,0)" fg:x="2020" fg:w="6"/><text x="22.7670%" y="463.50"></text></g><g><title>cfree (4 samples, 0.04%)</title><rect x="22.5393%" y="437" width="0.0446%" height="15" fill="rgb(224,224,68)" fg:x="2022" fg:w="4"/><text x="22.7893%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="22.5393%" y="421" width="0.0446%" height="15" fill="rgb(217,217,65)" fg:x="2022" fg:w="4"/><text x="22.7893%" y="431.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (200 samples, 2.23%)</title><rect x="20.3656%" y="581" width="2.2294%" height="15" fill="rgb(63,177,177)" fg:x="1827" fg:w="200"/><text x="20.6156%" y="591.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.01%)</title><rect x="22.5839%" y="565" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.5839%" y="549" width="0.0111%" height="15" fill="rgb(196,96,0)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="22.5839%" y="533" width="0.0111%" height="15" fill="rgb(207,107,0)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.5839%" y="517" width="0.0111%" height="15" fill="rgb(109,219,219)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.01%)</title><rect x="22.5839%" y="501" width="0.0111%" height="15" fill="rgb(252,152,0)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.5839%" y="485" width="0.0111%" height="15" fill="rgb(239,139,0)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="22.5839%" y="469" width="0.0111%" height="15" fill="rgb(213,113,0)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="22.5839%" y="453" width="0.0111%" height="15" fill="rgb(245,145,0)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="463.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="22.5839%" y="437" width="0.0111%" height="15" fill="rgb(220,220,66)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.5839%" y="421" width="0.0111%" height="15" fill="rgb(204,204,60)" fg:x="2026" fg:w="1"/><text x="22.8339%" y="431.50"></text></g><g><title>alc::optimizer::arg_min (2 samples, 0.02%)</title><rect x="22.5950%" y="581" width="0.0223%" height="15" fill="rgb(58,172,172)" fg:x="2027" fg:w="2"/><text x="22.8450%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2 samples, 0.02%)</title><rect x="22.5950%" y="565" width="0.0223%" height="15" fill="rgb(249,149,0)" fg:x="2027" fg:w="2"/><text x="22.8450%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2 samples, 0.02%)</title><rect x="22.5950%" y="549" width="0.0223%" height="15" fill="rgb(193,93,0)" fg:x="2027" fg:w="2"/><text x="22.8450%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="22.5950%" y="533" width="0.0223%" height="15" fill="rgb(218,118,0)" fg:x="2027" fg:w="2"/><text x="22.8450%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="22.5950%" y="517" width="0.0223%" height="15" fill="rgb(217,117,0)" fg:x="2027" fg:w="2"/><text x="22.8450%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.01%)</title><rect x="22.6062%" y="501" width="0.0111%" height="15" fill="rgb(220,120,0)" fg:x="2028" fg:w="1"/><text x="22.8562%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (1 samples, 0.01%)</title><rect x="22.6062%" y="485" width="0.0111%" height="15" fill="rgb(243,143,0)" fg:x="2028" fg:w="1"/><text x="22.8562%" y="495.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="22.6062%" y="469" width="0.0111%" height="15" fill="rgb(238,138,0)" fg:x="2028" fg:w="1"/><text x="22.8562%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="22.6062%" y="453" width="0.0111%" height="15" fill="rgb(207,107,0)" fg:x="2028" fg:w="1"/><text x="22.8562%" y="463.50"></text></g><g><title>alc::optimizer::arg_min::_{{closure}} (1 samples, 0.01%)</title><rect x="22.6062%" y="437" width="0.0111%" height="15" fill="rgb(79,192,192)" fg:x="2028" fg:w="1"/><text x="22.8562%" y="447.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::total_cmp (1 samples, 0.01%)</title><rect x="22.6062%" y="421" width="0.0111%" height="15" fill="rgb(223,123,0)" fg:x="2028" fg:w="1"/><text x="22.8562%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.11%)</title><rect x="22.6396%" y="517" width="0.1115%" height="15" fill="rgb(223,123,0)" fg:x="2031" fg:w="10"/><text x="22.8896%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.11%)</title><rect x="22.6396%" y="501" width="0.1115%" height="15" fill="rgb(240,140,0)" fg:x="2031" fg:w="10"/><text x="22.8896%" y="511.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.11%)</title><rect x="22.6396%" y="485" width="0.1115%" height="15" fill="rgb(249,149,0)" fg:x="2031" fg:w="10"/><text x="22.8896%" y="495.50"></text></g><g><title>realloc (10 samples, 0.11%)</title><rect x="22.6396%" y="469" width="0.1115%" height="15" fill="rgb(190,190,55)" fg:x="2031" fg:w="10"/><text x="22.8896%" y="479.50"></text></g><g><title>[libc.so.6] (8 samples, 0.09%)</title><rect x="22.6619%" y="453" width="0.0892%" height="15" fill="rgb(228,228,69)" fg:x="2033" fg:w="8"/><text x="22.9119%" y="463.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="22.6842%" y="437" width="0.0669%" height="15" fill="rgb(207,207,61)" fg:x="2035" fg:w="6"/><text x="22.9342%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.7399%" y="421" width="0.0111%" height="15" fill="rgb(199,199,58)" fg:x="2040" fg:w="1"/><text x="22.9899%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.14%)</title><rect x="22.6173%" y="581" width="0.1449%" height="15" fill="rgb(220,120,0)" fg:x="2029" fg:w="13"/><text x="22.8673%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.12%)</title><rect x="22.6396%" y="565" width="0.1226%" height="15" fill="rgb(218,118,0)" fg:x="2031" fg:w="11"/><text x="22.8896%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.12%)</title><rect x="22.6396%" y="549" width="0.1226%" height="15" fill="rgb(231,131,0)" fg:x="2031" fg:w="11"/><text x="22.8896%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.12%)</title><rect x="22.6396%" y="533" width="0.1226%" height="15" fill="rgb(192,92,0)" fg:x="2031" fg:w="11"/><text x="22.8896%" y="543.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="22.7511%" y="517" width="0.0111%" height="15" fill="rgb(207,207,61)" fg:x="2041" fg:w="1"/><text x="23.0011%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (1 samples, 0.01%)</title><rect x="22.7622%" y="581" width="0.0111%" height="15" fill="rgb(244,144,0)" fg:x="2042" fg:w="1"/><text x="23.0122%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7622%" y="565" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="2042" fg:w="1"/><text x="23.0122%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7622%" y="549" width="0.0111%" height="15" fill="rgb(218,118,0)" fg:x="2042" fg:w="1"/><text x="23.0122%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.7622%" y="533" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="2042" fg:w="1"/><text x="23.0122%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="22.7622%" y="517" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="2042" fg:w="1"/><text x="23.0122%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="22.7622%" y="501" width="0.0111%" height="15" fill="rgb(250,150,0)" fg:x="2042" fg:w="1"/><text x="23.0122%" y="511.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="22.7622%" y="485" width="0.0111%" height="15" fill="rgb(197,197,58)" fg:x="2042" fg:w="1"/><text x="23.0122%" y="495.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (269 samples, 3.00%)</title><rect x="19.7860%" y="613" width="2.9986%" height="15" fill="rgb(97,208,208)" fg:x="1775" fg:w="269"/><text x="20.0360%" y="623.50">alc..</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (260 samples, 2.90%)</title><rect x="19.8863%" y="597" width="2.8982%" height="15" fill="rgb(98,209,209)" fg:x="1784" fg:w="260"/><text x="20.1363%" y="607.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7734%" y="581" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.7734%" y="565" width="0.0111%" height="15" fill="rgb(240,140,0)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7734%" y="549" width="0.0111%" height="15" fill="rgb(193,93,0)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="559.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.7734%" y="533" width="0.0111%" height="15" fill="rgb(63,177,177)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7734%" y="517" width="0.0111%" height="15" fill="rgb(225,125,0)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.7734%" y="501" width="0.0111%" height="15" fill="rgb(247,147,0)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="22.7734%" y="485" width="0.0111%" height="15" fill="rgb(245,145,0)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="22.7734%" y="469" width="0.0111%" height="15" fill="rgb(224,124,0)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="479.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="22.7734%" y="453" width="0.0111%" height="15" fill="rgb(222,222,67)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.7734%" y="437" width="0.0111%" height="15" fill="rgb(189,189,55)" fg:x="2043" fg:w="1"/><text x="23.0234%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7845%" y="597" width="0.0111%" height="15" fill="rgb(200,100,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.7845%" y="581" width="0.0111%" height="15" fill="rgb(208,108,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (1 samples, 0.01%)</title><rect x="22.7845%" y="565" width="0.0111%" height="15" fill="rgb(234,134,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7845%" y="549" width="0.0111%" height="15" fill="rgb(190,90,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7845%" y="533" width="0.0111%" height="15" fill="rgb(230,130,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7845%" y="517" width="0.0111%" height="15" fill="rgb(197,97,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7845%" y="501" width="0.0111%" height="15" fill="rgb(233,133,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.7845%" y="485" width="0.0111%" height="15" fill="rgb(211,111,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="22.7845%" y="469" width="0.0111%" height="15" fill="rgb(191,91,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="22.7845%" y="453" width="0.0111%" height="15" fill="rgb(254,154,0)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="463.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="22.7845%" y="437" width="0.0111%" height="15" fill="rgb(224,224,68)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.7845%" y="421" width="0.0111%" height="15" fill="rgb(202,202,60)" fg:x="2044" fg:w="1"/><text x="23.0345%" y="431.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="22.7957%" y="309" width="0.0111%" height="15" fill="rgb(220,220,66)" fg:x="2045" fg:w="1"/><text x="23.0457%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="22.7957%" y="293" width="0.0111%" height="15" fill="rgb(254,154,0)" fg:x="2045" fg:w="1"/><text x="23.0457%" y="303.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_and_score_initial_population (288 samples, 3.21%)</title><rect x="19.6076%" y="629" width="3.2103%" height="15" fill="rgb(71,184,184)" fg:x="1759" fg:w="288"/><text x="19.8576%" y="639.50">alc..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (3 samples, 0.03%)</title><rect x="22.7845%" y="613" width="0.0334%" height="15" fill="rgb(254,154,0)" fg:x="2044" fg:w="3"/><text x="23.0345%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="597" width="0.0223%" height="15" fill="rgb(245,145,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="581" width="0.0223%" height="15" fill="rgb(247,147,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="565" width="0.0223%" height="15" fill="rgb(226,126,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="22.7957%" y="549" width="0.0223%" height="15" fill="rgb(102,213,213)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.02%)</title><rect x="22.7957%" y="533" width="0.0223%" height="15" fill="rgb(77,190,190)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.02%)</title><rect x="22.7957%" y="517" width="0.0223%" height="15" fill="rgb(52,167,167)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.02%)</title><rect x="22.7957%" y="501" width="0.0223%" height="15" fill="rgb(106,216,216)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.02%)</title><rect x="22.7957%" y="485" width="0.0223%" height="15" fill="rgb(246,146,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="469" width="0.0223%" height="15" fill="rgb(214,114,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="453" width="0.0223%" height="15" fill="rgb(220,120,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="22.7957%" y="437" width="0.0223%" height="15" fill="rgb(249,149,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="421" width="0.0223%" height="15" fill="rgb(193,93,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="405" width="0.0223%" height="15" fill="rgb(207,107,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="389" width="0.0223%" height="15" fill="rgb(238,138,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.02%)</title><rect x="22.7957%" y="373" width="0.0223%" height="15" fill="rgb(247,147,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="22.7957%" y="357" width="0.0223%" height="15" fill="rgb(248,148,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="22.7957%" y="341" width="0.0223%" height="15" fill="rgb(198,98,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="22.7957%" y="325" width="0.0223%" height="15" fill="rgb(194,94,0)" fg:x="2045" fg:w="2"/><text x="23.0457%" y="335.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="22.8068%" y="309" width="0.0111%" height="15" fill="rgb(226,226,68)" fg:x="2046" fg:w="1"/><text x="23.0568%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.8068%" y="293" width="0.0111%" height="15" fill="rgb(227,227,69)" fg:x="2046" fg:w="1"/><text x="23.0568%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (56 samples, 0.62%)</title><rect x="22.8291%" y="437" width="0.6242%" height="15" fill="rgb(236,136,0)" fg:x="2048" fg:w="56"/><text x="23.0791%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (56 samples, 0.62%)</title><rect x="22.8291%" y="421" width="0.6242%" height="15" fill="rgb(227,127,0)" fg:x="2048" fg:w="56"/><text x="23.0791%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.62%)</title><rect x="22.8291%" y="405" width="0.6242%" height="15" fill="rgb(205,105,0)" fg:x="2048" fg:w="56"/><text x="23.0791%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.62%)</title><rect x="22.8291%" y="389" width="0.6242%" height="15" fill="rgb(239,139,0)" fg:x="2048" fg:w="56"/><text x="23.0791%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.62%)</title><rect x="22.8291%" y="373" width="0.6242%" height="15" fill="rgb(243,143,0)" fg:x="2048" fg:w="56"/><text x="23.0791%" y="383.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.62%)</title><rect x="22.8291%" y="357" width="0.6242%" height="15" fill="rgb(218,118,0)" fg:x="2048" fg:w="56"/><text x="23.0791%" y="367.50"></text></g><g><title>malloc (56 samples, 0.62%)</title><rect x="22.8291%" y="341" width="0.6242%" height="15" fill="rgb(220,220,66)" fg:x="2048" fg:w="56"/><text x="23.0791%" y="351.50"></text></g><g><title>[libc.so.6] (56 samples, 0.62%)</title><rect x="22.8291%" y="325" width="0.6242%" height="15" fill="rgb(229,229,69)" fg:x="2048" fg:w="56"/><text x="23.0791%" y="335.50"></text></g><g><title>[libc.so.6] (27 samples, 0.30%)</title><rect x="23.1524%" y="309" width="0.3010%" height="15" fill="rgb(183,183,53)" fg:x="2077" fg:w="27"/><text x="23.4024%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="23.4422%" y="293" width="0.0111%" height="15" fill="rgb(200,200,59)" fg:x="2103" fg:w="1"/><text x="23.6922%" y="303.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (60 samples, 0.67%)</title><rect x="22.8180%" y="533" width="0.6688%" height="15" fill="rgb(73,186,186)" fg:x="2047" fg:w="60"/><text x="23.0680%" y="543.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (60 samples, 0.67%)</title><rect x="22.8180%" y="517" width="0.6688%" height="15" fill="rgb(52,167,167)" fg:x="2047" fg:w="60"/><text x="23.0680%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.66%)</title><rect x="22.8291%" y="501" width="0.6577%" height="15" fill="rgb(228,128,0)" fg:x="2048" fg:w="59"/><text x="23.0791%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.66%)</title><rect x="22.8291%" y="485" width="0.6577%" height="15" fill="rgb(252,152,0)" fg:x="2048" fg:w="59"/><text x="23.0791%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (59 samples, 0.66%)</title><rect x="22.8291%" y="469" width="0.6577%" height="15" fill="rgb(217,117,0)" fg:x="2048" fg:w="59"/><text x="23.0791%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.66%)</title><rect x="22.8291%" y="453" width="0.6577%" height="15" fill="rgb(109,219,219)" fg:x="2048" fg:w="59"/><text x="23.0791%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.03%)</title><rect x="23.4533%" y="437" width="0.0334%" height="15" fill="rgb(208,108,0)" fg:x="2104" fg:w="3"/><text x="23.7033%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="23.4533%" y="421" width="0.0334%" height="15" fill="rgb(228,128,0)" fg:x="2104" fg:w="3"/><text x="23.7033%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="23.4533%" y="405" width="0.0334%" height="15" fill="rgb(217,217,65)" fg:x="2104" fg:w="3"/><text x="23.7033%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (61 samples, 0.68%)</title><rect x="22.8180%" y="597" width="0.6800%" height="15" fill="rgb(235,135,0)" fg:x="2047" fg:w="61"/><text x="23.0680%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.68%)</title><rect x="22.8180%" y="581" width="0.6800%" height="15" fill="rgb(214,114,0)" fg:x="2047" fg:w="61"/><text x="23.0680%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.68%)</title><rect x="22.8180%" y="565" width="0.6800%" height="15" fill="rgb(225,125,0)" fg:x="2047" fg:w="61"/><text x="23.0680%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.68%)</title><rect x="22.8180%" y="549" width="0.6800%" height="15" fill="rgb(64,178,178)" fg:x="2047" fg:w="61"/><text x="23.0680%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="23.4868%" y="533" width="0.0111%" height="15" fill="rgb(247,147,0)" fg:x="2107" fg:w="1"/><text x="23.7368%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="23.4868%" y="517" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="2107" fg:w="1"/><text x="23.7368%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="23.4868%" y="501" width="0.0111%" height="15" fill="rgb(244,144,0)" fg:x="2107" fg:w="1"/><text x="23.7368%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="23.4868%" y="485" width="0.0111%" height="15" fill="rgb(194,94,0)" fg:x="2107" fg:w="1"/><text x="23.7368%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="23.4868%" y="469" width="0.0111%" height="15" fill="rgb(190,90,0)" fg:x="2107" fg:w="1"/><text x="23.7368%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="23.4868%" y="453" width="0.0111%" height="15" fill="rgb(226,126,0)" fg:x="2107" fg:w="1"/><text x="23.7368%" y="463.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="23.4868%" y="437" width="0.0111%" height="15" fill="rgb(226,226,68)" fg:x="2107" fg:w="1"/><text x="23.7368%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="23.4868%" y="421" width="0.0111%" height="15" fill="rgb(186,186,54)" fg:x="2107" fg:w="1"/><text x="23.7368%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="23.4979%" y="517" width="0.0111%" height="15" fill="rgb(97,208,208)" fg:x="2108" fg:w="1"/><text x="23.7479%" y="527.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="23.5537%" y="261" width="0.0223%" height="15" fill="rgb(227,227,68)" fg:x="2113" fg:w="2"/><text x="23.8037%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="23.5537%" y="245" width="0.0223%" height="15" fill="rgb(207,107,0)" fg:x="2113" fg:w="2"/><text x="23.8037%" y="255.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="23.5760%" y="261" width="0.0223%" height="15" fill="rgb(225,225,68)" fg:x="2115" fg:w="2"/><text x="23.8260%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (41 samples, 0.46%)</title><rect x="23.5537%" y="309" width="0.4570%" height="15" fill="rgb(212,112,0)" fg:x="2113" fg:w="41"/><text x="23.8037%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (41 samples, 0.46%)</title><rect x="23.5537%" y="293" width="0.4570%" height="15" fill="rgb(218,118,0)" fg:x="2113" fg:w="41"/><text x="23.8037%" y="303.50"></text></g><g><title>alloc::alloc::alloc (41 samples, 0.46%)</title><rect x="23.5537%" y="277" width="0.4570%" height="15" fill="rgb(246,146,0)" fg:x="2113" fg:w="41"/><text x="23.8037%" y="287.50"></text></g><g><title>malloc (37 samples, 0.41%)</title><rect x="23.5983%" y="261" width="0.4124%" height="15" fill="rgb(198,198,58)" fg:x="2117" fg:w="37"/><text x="23.8483%" y="271.50"></text></g><g><title>[libc.so.6] (28 samples, 0.31%)</title><rect x="23.6986%" y="245" width="0.3121%" height="15" fill="rgb(196,196,57)" fg:x="2126" fg:w="28"/><text x="23.9486%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.47%)</title><rect x="23.5537%" y="357" width="0.4682%" height="15" fill="rgb(239,139,0)" fg:x="2113" fg:w="42"/><text x="23.8037%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.47%)</title><rect x="23.5537%" y="341" width="0.4682%" height="15" fill="rgb(210,110,0)" fg:x="2113" fg:w="42"/><text x="23.8037%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 0.47%)</title><rect x="23.5537%" y="325" width="0.4682%" height="15" fill="rgb(208,108,0)" fg:x="2113" fg:w="42"/><text x="23.8037%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="24.0107%" y="309" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="2154" fg:w="1"/><text x="24.2607%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="24.0107%" y="293" width="0.0111%" height="15" fill="rgb(220,120,0)" fg:x="2154" fg:w="1"/><text x="24.2607%" y="303.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (58 samples, 0.65%)</title><rect x="23.5537%" y="437" width="0.6465%" height="15" fill="rgb(50,165,165)" fg:x="2113" fg:w="58"/><text x="23.8037%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (58 samples, 0.65%)</title><rect x="23.5537%" y="421" width="0.6465%" height="15" fill="rgb(218,118,0)" fg:x="2113" fg:w="58"/><text x="23.8037%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.65%)</title><rect x="23.5537%" y="405" width="0.6465%" height="15" fill="rgb(221,121,0)" fg:x="2113" fg:w="58"/><text x="23.8037%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.65%)</title><rect x="23.5537%" y="389" width="0.6465%" height="15" fill="rgb(205,105,0)" fg:x="2113" fg:w="58"/><text x="23.8037%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.65%)</title><rect x="23.5537%" y="373" width="0.6465%" height="15" fill="rgb(62,176,176)" fg:x="2113" fg:w="58"/><text x="23.8037%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.18%)</title><rect x="24.0218%" y="357" width="0.1784%" height="15" fill="rgb(195,95,0)" fg:x="2155" fg:w="16"/><text x="24.2718%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.18%)</title><rect x="24.0218%" y="341" width="0.1784%" height="15" fill="rgb(247,147,0)" fg:x="2155" fg:w="16"/><text x="24.2718%" y="351.50"></text></g><g><title>[libc.so.6] (14 samples, 0.16%)</title><rect x="24.0441%" y="325" width="0.1561%" height="15" fill="rgb(209,209,62)" fg:x="2157" fg:w="14"/><text x="24.2941%" y="335.50"></text></g><g><title>core::clone::Clone::clone (66 samples, 0.74%)</title><rect x="23.5091%" y="517" width="0.7357%" height="15" fill="rgb(220,120,0)" fg:x="2109" fg:w="66"/><text x="23.7591%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66 samples, 0.74%)</title><rect x="23.5091%" y="501" width="0.7357%" height="15" fill="rgb(213,113,0)" fg:x="2109" fg:w="66"/><text x="23.7591%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66 samples, 0.74%)</title><rect x="23.5091%" y="485" width="0.7357%" height="15" fill="rgb(215,115,0)" fg:x="2109" fg:w="66"/><text x="23.7591%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (66 samples, 0.74%)</title><rect x="23.5091%" y="469" width="0.7357%" height="15" fill="rgb(191,91,0)" fg:x="2109" fg:w="66"/><text x="23.7591%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66 samples, 0.74%)</title><rect x="23.5091%" y="453" width="0.7357%" height="15" fill="rgb(108,218,218)" fg:x="2109" fg:w="66"/><text x="23.7591%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="24.2002%" y="437" width="0.0446%" height="15" fill="rgb(225,125,0)" fg:x="2171" fg:w="4"/><text x="24.4502%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="24.2002%" y="421" width="0.0446%" height="15" fill="rgb(238,138,0)" fg:x="2171" fg:w="4"/><text x="24.4502%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="24.2002%" y="405" width="0.0446%" height="15" fill="rgb(203,103,0)" fg:x="2171" fg:w="4"/><text x="24.4502%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="24.2002%" y="389" width="0.0446%" height="15" fill="rgb(250,150,0)" fg:x="2171" fg:w="4"/><text x="24.4502%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="24.2002%" y="373" width="0.0446%" height="15" fill="rgb(230,130,0)" fg:x="2171" fg:w="4"/><text x="24.4502%" y="383.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="24.2002%" y="357" width="0.0446%" height="15" fill="rgb(214,114,0)" fg:x="2171" fg:w="4"/><text x="24.4502%" y="367.50"></text></g><g><title>malloc (4 samples, 0.04%)</title><rect x="24.2002%" y="341" width="0.0446%" height="15" fill="rgb(179,179,51)" fg:x="2171" fg:w="4"/><text x="24.4502%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="24.2113%" y="325" width="0.0334%" height="15" fill="rgb(196,196,57)" fg:x="2172" fg:w="3"/><text x="24.4613%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (71 samples, 0.79%)</title><rect x="23.4979%" y="549" width="0.7914%" height="15" fill="rgb(53,168,168)" fg:x="2108" fg:w="71"/><text x="23.7479%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (71 samples, 0.79%)</title><rect x="23.4979%" y="533" width="0.7914%" height="15" fill="rgb(67,181,181)" fg:x="2108" fg:w="71"/><text x="23.7479%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (4 samples, 0.04%)</title><rect x="24.2448%" y="517" width="0.0446%" height="15" fill="rgb(60,174,174)" fg:x="2175" fg:w="4"/><text x="24.4948%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.04%)</title><rect x="24.2448%" y="501" width="0.0446%" height="15" fill="rgb(234,134,0)" fg:x="2175" fg:w="4"/><text x="24.4948%" y="511.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="24.2448%" y="485" width="0.0446%" height="15" fill="rgb(216,116,0)" fg:x="2175" fg:w="4"/><text x="24.4948%" y="495.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (133 samples, 1.48%)</title><rect x="22.8180%" y="613" width="1.4826%" height="15" fill="rgb(79,192,192)" fg:x="2047" fg:w="133"/><text x="23.0680%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (72 samples, 0.80%)</title><rect x="23.4979%" y="597" width="0.8026%" height="15" fill="rgb(228,128,0)" fg:x="2108" fg:w="72"/><text x="23.7479%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (72 samples, 0.80%)</title><rect x="23.4979%" y="581" width="0.8026%" height="15" fill="rgb(76,189,189)" fg:x="2108" fg:w="72"/><text x="23.7479%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (72 samples, 0.80%)</title><rect x="23.4979%" y="565" width="0.8026%" height="15" fill="rgb(57,172,172)" fg:x="2108" fg:w="72"/><text x="23.7479%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="24.2894%" y="549" width="0.0111%" height="15" fill="rgb(67,181,181)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="24.2894%" y="533" width="0.0111%" height="15" fill="rgb(52,167,167)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="543.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="24.2894%" y="517" width="0.0111%" height="15" fill="rgb(103,213,213)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="24.2894%" y="501" width="0.0111%" height="15" fill="rgb(233,133,0)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="24.2894%" y="485" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="24.2894%" y="469" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="479.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="24.2894%" y="453" width="0.0111%" height="15" fill="rgb(229,229,69)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="24.2894%" y="437" width="0.0111%" height="15" fill="rgb(197,197,58)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="24.2894%" y="421" width="0.0111%" height="15" fill="rgb(177,177,50)" fg:x="2179" fg:w="1"/><text x="24.5394%" y="431.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_valid_swap (1 samples, 0.01%)</title><rect x="24.3005%" y="613" width="0.0111%" height="15" fill="rgb(105,215,215)" fg:x="2180" fg:w="1"/><text x="24.5505%" y="623.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_moveable_position (1 samples, 0.01%)</title><rect x="24.3005%" y="597" width="0.0111%" height="15" fill="rgb(89,201,201)" fg:x="2180" fg:w="1"/><text x="24.5505%" y="607.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_position (1 samples, 0.01%)</title><rect x="24.3005%" y="581" width="0.0111%" height="15" fill="rgb(93,205,205)" fg:x="2180" fg:w="1"/><text x="24.5505%" y="591.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_valid_replace_position (1 samples, 0.01%)</title><rect x="24.3117%" y="613" width="0.0111%" height="15" fill="rgb(83,195,195)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="24.3117%" y="597" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="24.3117%" y="581" width="0.0111%" height="15" fill="rgb(98,209,209)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="24.3117%" y="565" width="0.0111%" height="15" fill="rgb(81,193,193)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="24.3117%" y="549" width="0.0111%" height="15" fill="rgb(100,211,211)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="24.3117%" y="533" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="543.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="24.3117%" y="517" width="0.0111%" height="15" fill="rgb(211,111,0)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="24.3117%" y="501" width="0.0111%" height="15" fill="rgb(196,96,0)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="24.3117%" y="485" width="0.0111%" height="15" fill="rgb(253,153,0)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="24.3117%" y="469" width="0.0111%" height="15" fill="rgb(202,102,0)" fg:x="2181" fg:w="1"/><text x="24.5617%" y="479.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="24.3228%" y="581" width="0.0111%" height="15" fill="rgb(58,173,173)" fg:x="2182" fg:w="1"/><text x="24.5728%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="24.3228%" y="565" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="2182" fg:w="1"/><text x="24.5728%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="24.3228%" y="549" width="0.0111%" height="15" fill="rgb(197,97,0)" fg:x="2182" fg:w="1"/><text x="24.5728%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="24.3228%" y="533" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="2182" fg:w="1"/><text x="24.5728%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="24.3228%" y="517" width="0.0111%" height="15" fill="rgb(95,206,206)" fg:x="2182" fg:w="1"/><text x="24.5728%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="24.3228%" y="501" width="0.0111%" height="15" fill="rgb(244,144,0)" fg:x="2182" fg:w="1"/><text x="24.5728%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="24.3228%" y="485" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="2182" fg:w="1"/><text x="24.5728%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="24.3228%" y="469" width="0.0111%" height="15" fill="rgb(229,229,69)" fg:x="2182" fg:w="1"/><text x="24.5728%" y="479.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="24.3340%" y="501" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="24.3340%" y="485" width="0.0111%" height="15" fill="rgb(201,101,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="24.3340%" y="469" width="0.0111%" height="15" fill="rgb(220,120,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="24.3340%" y="453" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="24.3340%" y="437" width="0.0111%" height="15" fill="rgb(105,215,215)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="447.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="24.3340%" y="421" width="0.0111%" height="15" fill="rgb(52,167,167)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="24.3340%" y="405" width="0.0111%" height="15" fill="rgb(239,139,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="24.3340%" y="389" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="24.3340%" y="373" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="24.3340%" y="357" width="0.0111%" height="15" fill="rgb(51,166,166)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="24.3340%" y="341" width="0.0111%" height="15" fill="rgb(253,153,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="24.3340%" y="325" width="0.0111%" height="15" fill="rgb(225,125,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="24.3340%" y="309" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="24.3340%" y="293" width="0.0111%" height="15" fill="rgb(190,90,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="24.3340%" y="277" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="24.3340%" y="261" width="0.0111%" height="15" fill="rgb(250,150,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="24.3340%" y="245" width="0.0111%" height="15" fill="rgb(179,179,51)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="24.3340%" y="229" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="2183" fg:w="1"/><text x="24.5840%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.3340%" y="581" width="0.0446%" height="15" fill="rgb(221,121,0)" fg:x="2183" fg:w="4"/><text x="24.5840%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.3340%" y="565" width="0.0446%" height="15" fill="rgb(56,170,170)" fg:x="2183" fg:w="4"/><text x="24.5840%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.3340%" y="549" width="0.0446%" height="15" fill="rgb(62,176,176)" fg:x="2183" fg:w="4"/><text x="24.5840%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4 samples, 0.04%)</title><rect x="24.3340%" y="533" width="0.0446%" height="15" fill="rgb(59,173,173)" fg:x="2183" fg:w="4"/><text x="24.5840%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4 samples, 0.04%)</title><rect x="24.3340%" y="517" width="0.0446%" height="15" fill="rgb(82,194,194)" fg:x="2183" fg:w="4"/><text x="24.5840%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="24.3451%" y="501" width="0.0334%" height="15" fill="rgb(106,217,217)" fg:x="2184" fg:w="3"/><text x="24.5951%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.03%)</title><rect x="24.3451%" y="485" width="0.0334%" height="15" fill="rgb(191,91,0)" fg:x="2184" fg:w="3"/><text x="24.5951%" y="495.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="24.3451%" y="469" width="0.0334%" height="15" fill="rgb(213,113,0)" fg:x="2184" fg:w="3"/><text x="24.5951%" y="479.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="24.3786%" y="485" width="0.0111%" height="15" fill="rgb(233,133,0)" fg:x="2187" fg:w="1"/><text x="24.6286%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="24.3897%" y="453" width="0.0111%" height="15" fill="rgb(235,135,0)" fg:x="2188" fg:w="1"/><text x="24.6397%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="24.3897%" y="437" width="0.0111%" height="15" fill="rgb(199,99,0)" fg:x="2188" fg:w="1"/><text x="24.6397%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="24.3897%" y="421" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="2188" fg:w="1"/><text x="24.6397%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="24.3786%" y="517" width="0.0334%" height="15" fill="rgb(68,181,181)" fg:x="2187" fg:w="3"/><text x="24.6286%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="24.3786%" y="501" width="0.0334%" height="15" fill="rgb(234,134,0)" fg:x="2187" fg:w="3"/><text x="24.6286%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="24.3897%" y="485" width="0.0223%" height="15" fill="rgb(242,142,0)" fg:x="2188" fg:w="2"/><text x="24.6397%" y="495.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="24.3897%" y="469" width="0.0223%" height="15" fill="rgb(96,207,207)" fg:x="2188" fg:w="2"/><text x="24.6397%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="24.4008%" y="453" width="0.0111%" height="15" fill="rgb(240,140,0)" fg:x="2189" fg:w="1"/><text x="24.6508%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="24.4008%" y="437" width="0.0111%" height="15" fill="rgb(202,102,0)" fg:x="2189" fg:w="1"/><text x="24.6508%" y="447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.4008%" y="421" width="0.0111%" height="15" fill="rgb(240,140,0)" fg:x="2189" fg:w="1"/><text x="24.6508%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.4008%" y="405" width="0.0111%" height="15" fill="rgb(220,120,0)" fg:x="2189" fg:w="1"/><text x="24.6508%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.4008%" y="389" width="0.0111%" height="15" fill="rgb(241,141,0)" fg:x="2189" fg:w="1"/><text x="24.6508%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (4 samples, 0.04%)</title><rect x="24.3786%" y="581" width="0.0446%" height="15" fill="rgb(211,111,0)" fg:x="2187" fg:w="4"/><text x="24.6286%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="24.3786%" y="565" width="0.0446%" height="15" fill="rgb(209,109,0)" fg:x="2187" fg:w="4"/><text x="24.6286%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.04%)</title><rect x="24.3786%" y="549" width="0.0446%" height="15" fill="rgb(109,219,219)" fg:x="2187" fg:w="4"/><text x="24.6286%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="24.3786%" y="533" width="0.0446%" height="15" fill="rgb(86,198,198)" fg:x="2187" fg:w="4"/><text x="24.6286%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="24.4120%" y="517" width="0.0111%" height="15" fill="rgb(75,188,188)" fg:x="2190" fg:w="1"/><text x="24.6620%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="24.4120%" y="501" width="0.0111%" height="15" fill="rgb(71,184,184)" fg:x="2190" fg:w="1"/><text x="24.6620%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="24.4120%" y="485" width="0.0111%" height="15" fill="rgb(96,207,207)" fg:x="2190" fg:w="1"/><text x="24.6620%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="24.4120%" y="469" width="0.0111%" height="15" fill="rgb(99,210,210)" fg:x="2190" fg:w="1"/><text x="24.6620%" y="479.50"></text></g><g><title>__rust_realloc (1 samples, 0.01%)</title><rect x="24.4343%" y="453" width="0.0111%" height="15" fill="rgb(200,200,59)" fg:x="2192" fg:w="1"/><text x="24.6843%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="24.4343%" y="517" width="0.0446%" height="15" fill="rgb(225,125,0)" fg:x="2192" fg:w="4"/><text x="24.6843%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.04%)</title><rect x="24.4343%" y="501" width="0.0446%" height="15" fill="rgb(222,122,0)" fg:x="2192" fg:w="4"/><text x="24.6843%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.04%)</title><rect x="24.4343%" y="485" width="0.0446%" height="15" fill="rgb(225,125,0)" fg:x="2192" fg:w="4"/><text x="24.6843%" y="495.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.04%)</title><rect x="24.4343%" y="469" width="0.0446%" height="15" fill="rgb(240,140,0)" fg:x="2192" fg:w="4"/><text x="24.6843%" y="479.50"></text></g><g><title>realloc (3 samples, 0.03%)</title><rect x="24.4454%" y="453" width="0.0334%" height="15" fill="rgb(197,197,58)" fg:x="2193" fg:w="3"/><text x="24.6954%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="24.4566%" y="437" width="0.0223%" height="15" fill="rgb(177,177,50)" fg:x="2194" fg:w="2"/><text x="24.7066%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="24.4566%" y="421" width="0.0223%" height="15" fill="rgb(200,200,59)" fg:x="2194" fg:w="2"/><text x="24.7066%" y="431.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (6 samples, 0.07%)</title><rect x="24.4231%" y="581" width="0.0669%" height="15" fill="rgb(99,210,210)" fg:x="2191" fg:w="6"/><text x="24.6731%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.07%)</title><rect x="24.4231%" y="565" width="0.0669%" height="15" fill="rgb(227,127,0)" fg:x="2191" fg:w="6"/><text x="24.6731%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.06%)</title><rect x="24.4343%" y="549" width="0.0557%" height="15" fill="rgb(233,133,0)" fg:x="2192" fg:w="5"/><text x="24.6843%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.06%)</title><rect x="24.4343%" y="533" width="0.0557%" height="15" fill="rgb(240,140,0)" fg:x="2192" fg:w="5"/><text x="24.6843%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="24.4789%" y="517" width="0.0111%" height="15" fill="rgb(208,108,0)" fg:x="2196" fg:w="1"/><text x="24.7289%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="24.4789%" y="501" width="0.0111%" height="15" fill="rgb(223,123,0)" fg:x="2196" fg:w="1"/><text x="24.7289%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="24.4900%" y="517" width="0.0111%" height="15" fill="rgb(203,203,60)" fg:x="2197" fg:w="1"/><text x="24.7400%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="24.4900%" y="501" width="0.0111%" height="15" fill="rgb(218,118,0)" fg:x="2197" fg:w="1"/><text x="24.7400%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="24.4900%" y="581" width="0.0223%" height="15" fill="rgb(236,136,0)" fg:x="2197" fg:w="2"/><text x="24.7400%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="24.4900%" y="565" width="0.0223%" height="15" fill="rgb(244,144,0)" fg:x="2197" fg:w="2"/><text x="24.7400%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="24.4900%" y="549" width="0.0223%" height="15" fill="rgb(201,101,0)" fg:x="2197" fg:w="2"/><text x="24.7400%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="24.4900%" y="533" width="0.0223%" height="15" fill="rgb(198,98,0)" fg:x="2197" fg:w="2"/><text x="24.7400%" y="543.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="24.5012%" y="517" width="0.0111%" height="15" fill="rgb(179,179,51)" fg:x="2198" fg:w="1"/><text x="24.7512%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="24.5123%" y="581" width="0.0111%" height="15" fill="rgb(211,111,0)" fg:x="2199" fg:w="1"/><text x="24.7623%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="24.5123%" y="565" width="0.0111%" height="15" fill="rgb(193,93,0)" fg:x="2199" fg:w="1"/><text x="24.7623%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="24.5123%" y="549" width="0.0111%" height="15" fill="rgb(243,143,0)" fg:x="2199" fg:w="1"/><text x="24.7623%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="24.5123%" y="533" width="0.0111%" height="15" fill="rgb(238,138,0)" fg:x="2199" fg:w="1"/><text x="24.7623%" y="543.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="24.5123%" y="517" width="0.0111%" height="15" fill="rgb(181,181,52)" fg:x="2199" fg:w="1"/><text x="24.7623%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="24.5123%" y="501" width="0.0111%" height="15" fill="rgb(222,222,67)" fg:x="2199" fg:w="1"/><text x="24.7623%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.01%)</title><rect x="24.5235%" y="581" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="2200" fg:w="1"/><text x="24.7735%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="24.5235%" y="565" width="0.0111%" height="15" fill="rgb(214,114,0)" fg:x="2200" fg:w="1"/><text x="24.7735%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="24.5235%" y="549" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="2200" fg:w="1"/><text x="24.7735%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="24.5235%" y="533" width="0.0111%" height="15" fill="rgb(197,97,0)" fg:x="2200" fg:w="1"/><text x="24.7735%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="24.5235%" y="517" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="2200" fg:w="1"/><text x="24.7735%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="24.5235%" y="501" width="0.0111%" height="15" fill="rgb(228,128,0)" fg:x="2200" fg:w="1"/><text x="24.7735%" y="511.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="24.5235%" y="485" width="0.0111%" height="15" fill="rgb(181,181,52)" fg:x="2200" fg:w="1"/><text x="24.7735%" y="495.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="24.5458%" y="293" width="0.0111%" height="15" fill="rgb(221,221,67)" fg:x="2202" fg:w="1"/><text x="24.7958%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="24.5346%" y="421" width="0.0557%" height="15" fill="rgb(191,91,0)" fg:x="2201" fg:w="5"/><text x="24.7846%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (5 samples, 0.06%)</title><rect x="24.5346%" y="405" width="0.0557%" height="15" fill="rgb(253,153,0)" fg:x="2201" fg:w="5"/><text x="24.7846%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (4 samples, 0.04%)</title><rect x="24.5458%" y="389" width="0.0446%" height="15" fill="rgb(191,91,0)" fg:x="2202" fg:w="4"/><text x="24.7958%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.04%)</title><rect x="24.5458%" y="373" width="0.0446%" height="15" fill="rgb(232,132,0)" fg:x="2202" fg:w="4"/><text x="24.7958%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.04%)</title><rect x="24.5458%" y="357" width="0.0446%" height="15" fill="rgb(203,103,0)" fg:x="2202" fg:w="4"/><text x="24.7958%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="24.5458%" y="341" width="0.0446%" height="15" fill="rgb(247,147,0)" fg:x="2202" fg:w="4"/><text x="24.7958%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="24.5458%" y="325" width="0.0446%" height="15" fill="rgb(214,114,0)" fg:x="2202" fg:w="4"/><text x="24.7958%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="24.5458%" y="309" width="0.0446%" height="15" fill="rgb(195,95,0)" fg:x="2202" fg:w="4"/><text x="24.7958%" y="319.50"></text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="24.5569%" y="293" width="0.0334%" height="15" fill="rgb(192,192,56)" fg:x="2203" fg:w="3"/><text x="24.8069%" y="303.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="24.5569%" y="277" width="0.0334%" height="15" fill="rgb(186,186,54)" fg:x="2203" fg:w="3"/><text x="24.8069%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (12 samples, 0.13%)</title><rect x="24.5346%" y="501" width="0.1338%" height="15" fill="rgb(63,177,177)" fg:x="2201" fg:w="12"/><text x="24.7846%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (12 samples, 0.13%)</title><rect x="24.5346%" y="485" width="0.1338%" height="15" fill="rgb(101,212,212)" fg:x="2201" fg:w="12"/><text x="24.7846%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (12 samples, 0.13%)</title><rect x="24.5346%" y="469" width="0.1338%" height="15" fill="rgb(195,95,0)" fg:x="2201" fg:w="12"/><text x="24.7846%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (12 samples, 0.13%)</title><rect x="24.5346%" y="453" width="0.1338%" height="15" fill="rgb(202,102,0)" fg:x="2201" fg:w="12"/><text x="24.7846%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (12 samples, 0.13%)</title><rect x="24.5346%" y="437" width="0.1338%" height="15" fill="rgb(194,94,0)" fg:x="2201" fg:w="12"/><text x="24.7846%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (7 samples, 0.08%)</title><rect x="24.5903%" y="421" width="0.0780%" height="15" fill="rgb(252,152,0)" fg:x="2206" fg:w="7"/><text x="24.8403%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.08%)</title><rect x="24.5903%" y="405" width="0.0780%" height="15" fill="rgb(234,134,0)" fg:x="2206" fg:w="7"/><text x="24.8403%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.08%)</title><rect x="24.5903%" y="389" width="0.0780%" height="15" fill="rgb(204,104,0)" fg:x="2206" fg:w="7"/><text x="24.8403%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.08%)</title><rect x="24.5903%" y="373" width="0.0780%" height="15" fill="rgb(215,115,0)" fg:x="2206" fg:w="7"/><text x="24.8403%" y="383.50"></text></g><g><title>cfree (6 samples, 0.07%)</title><rect x="24.6015%" y="357" width="0.0669%" height="15" fill="rgb(212,212,63)" fg:x="2207" fg:w="6"/><text x="24.8515%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="24.6015%" y="341" width="0.0669%" height="15" fill="rgb(200,200,59)" fg:x="2207" fg:w="6"/><text x="24.8515%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (14 samples, 0.16%)</title><rect x="24.5346%" y="581" width="0.1561%" height="15" fill="rgb(242,142,0)" fg:x="2201" fg:w="14"/><text x="24.7846%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (14 samples, 0.16%)</title><rect x="24.5346%" y="565" width="0.1561%" height="15" fill="rgb(228,128,0)" fg:x="2201" fg:w="14"/><text x="24.7846%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (14 samples, 0.16%)</title><rect x="24.5346%" y="549" width="0.1561%" height="15" fill="rgb(230,130,0)" fg:x="2201" fg:w="14"/><text x="24.7846%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.16%)</title><rect x="24.5346%" y="533" width="0.1561%" height="15" fill="rgb(69,183,183)" fg:x="2201" fg:w="14"/><text x="24.7846%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (14 samples, 0.16%)</title><rect x="24.5346%" y="517" width="0.1561%" height="15" fill="rgb(95,206,206)" fg:x="2201" fg:w="14"/><text x="24.7846%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2 samples, 0.02%)</title><rect x="24.6684%" y="501" width="0.0223%" height="15" fill="rgb(78,190,190)" fg:x="2213" fg:w="2"/><text x="24.9184%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="24.6684%" y="485" width="0.0223%" height="15" fill="rgb(224,124,0)" fg:x="2213" fg:w="2"/><text x="24.9184%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="24.6684%" y="469" width="0.0223%" height="15" fill="rgb(203,103,0)" fg:x="2213" fg:w="2"/><text x="24.9184%" y="479.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="24.6684%" y="453" width="0.0223%" height="15" fill="rgb(217,217,65)" fg:x="2213" fg:w="2"/><text x="24.9184%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="24.6795%" y="437" width="0.0111%" height="15" fill="rgb(204,204,60)" fg:x="2214" fg:w="1"/><text x="24.9295%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="24.6907%" y="469" width="0.0111%" height="15" fill="rgb(223,123,0)" fg:x="2215" fg:w="1"/><text x="24.9407%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="24.7018%" y="357" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="2216" fg:w="1"/><text x="24.9518%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="24.7018%" y="341" width="0.0111%" height="15" fill="rgb(250,150,0)" fg:x="2216" fg:w="1"/><text x="24.9518%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="24.7018%" y="405" width="0.0223%" height="15" fill="rgb(214,114,0)" fg:x="2216" fg:w="2"/><text x="24.9518%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="24.7018%" y="389" width="0.0223%" height="15" fill="rgb(203,103,0)" fg:x="2216" fg:w="2"/><text x="24.9518%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="24.7018%" y="373" width="0.0223%" height="15" fill="rgb(197,97,0)" fg:x="2216" fg:w="2"/><text x="24.9518%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="24.7130%" y="357" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="2217" fg:w="1"/><text x="24.9630%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3 samples, 0.03%)</title><rect x="24.7018%" y="469" width="0.0334%" height="15" fill="rgb(100,211,211)" fg:x="2216" fg:w="3"/><text x="24.9518%" y="479.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (3 samples, 0.03%)</title><rect x="24.7018%" y="453" width="0.0334%" height="15" fill="rgb(79,191,191)" fg:x="2216" fg:w="3"/><text x="24.9518%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="24.7018%" y="437" width="0.0334%" height="15" fill="rgb(108,218,218)" fg:x="2216" fg:w="3"/><text x="24.9518%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="24.7018%" y="421" width="0.0334%" height="15" fill="rgb(240,140,0)" fg:x="2216" fg:w="3"/><text x="24.9518%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="24.7241%" y="405" width="0.0111%" height="15" fill="rgb(234,134,0)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="24.7241%" y="389" width="0.0111%" height="15" fill="rgb(81,194,194)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="24.7241%" y="373" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="24.7241%" y="357" width="0.0111%" height="15" fill="rgb(225,125,0)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="24.7241%" y="341" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.7241%" y="325" width="0.0111%" height="15" fill="rgb(233,133,0)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.7241%" y="309" width="0.0111%" height="15" fill="rgb(245,145,0)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.7241%" y="293" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="24.7241%" y="277" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="2218" fg:w="1"/><text x="24.9741%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (6 samples, 0.07%)</title><rect x="24.6907%" y="549" width="0.0669%" height="15" fill="rgb(100,210,210)" fg:x="2215" fg:w="6"/><text x="24.9407%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.07%)</title><rect x="24.6907%" y="533" width="0.0669%" height="15" fill="rgb(79,191,191)" fg:x="2215" fg:w="6"/><text x="24.9407%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.07%)</title><rect x="24.6907%" y="517" width="0.0669%" height="15" fill="rgb(103,213,213)" fg:x="2215" fg:w="6"/><text x="24.9407%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (6 samples, 0.07%)</title><rect x="24.6907%" y="501" width="0.0669%" height="15" fill="rgb(82,194,194)" fg:x="2215" fg:w="6"/><text x="24.9407%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (6 samples, 0.07%)</title><rect x="24.6907%" y="485" width="0.0669%" height="15" fill="rgb(104,214,214)" fg:x="2215" fg:w="6"/><text x="24.9407%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (2 samples, 0.02%)</title><rect x="24.7353%" y="469" width="0.0223%" height="15" fill="rgb(96,207,207)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (2 samples, 0.02%)</title><rect x="24.7353%" y="453" width="0.0223%" height="15" fill="rgb(84,196,196)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="24.7353%" y="437" width="0.0223%" height="15" fill="rgb(85,197,197)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="447.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="24.7353%" y="421" width="0.0223%" height="15" fill="rgb(59,173,173)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="24.7353%" y="405" width="0.0223%" height="15" fill="rgb(203,103,0)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="24.7353%" y="389" width="0.0223%" height="15" fill="rgb(192,92,0)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="24.7353%" y="373" width="0.0223%" height="15" fill="rgb(248,148,0)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="383.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="24.7353%" y="357" width="0.0223%" height="15" fill="rgb(198,198,58)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="24.7353%" y="341" width="0.0223%" height="15" fill="rgb(200,200,59)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="24.7353%" y="325" width="0.0223%" height="15" fill="rgb(198,198,58)" fg:x="2219" fg:w="2"/><text x="24.9853%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="24.7576%" y="549" width="0.0223%" height="15" fill="rgb(100,210,210)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="24.7576%" y="533" width="0.0223%" height="15" fill="rgb(253,153,0)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="24.7576%" y="517" width="0.0223%" height="15" fill="rgb(217,117,0)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="527.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="24.7576%" y="501" width="0.0223%" height="15" fill="rgb(93,204,204)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="24.7576%" y="485" width="0.0223%" height="15" fill="rgb(237,137,0)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="495.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="24.7576%" y="469" width="0.0223%" height="15" fill="rgb(224,124,0)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="24.7576%" y="453" width="0.0223%" height="15" fill="rgb(201,101,0)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="24.7576%" y="437" width="0.0223%" height="15" fill="rgb(214,114,0)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="24.7576%" y="421" width="0.0223%" height="15" fill="rgb(225,125,0)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="24.7576%" y="405" width="0.0223%" height="15" fill="rgb(252,152,0)" fg:x="2221" fg:w="2"/><text x="25.0076%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="24.7687%" y="389" width="0.0111%" height="15" fill="rgb(201,101,0)" fg:x="2222" fg:w="1"/><text x="25.0187%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.02%)</title><rect x="24.7798%" y="517" width="0.0223%" height="15" fill="rgb(72,185,185)" fg:x="2223" fg:w="2"/><text x="25.0298%" y="527.50"></text></g><g><title>hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::_{{closure}} (2 samples, 0.02%)</title><rect x="24.7798%" y="501" width="0.0223%" height="15" fill="rgb(64,178,178)" fg:x="2223" fg:w="2"/><text x="25.0298%" y="511.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="24.7798%" y="485" width="0.0223%" height="15" fill="rgb(98,209,209)" fg:x="2223" fg:w="2"/><text x="25.0298%" y="495.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::replace (44 samples, 0.49%)</title><rect x="24.3228%" y="613" width="0.4905%" height="15" fill="rgb(91,202,202)" fg:x="2182" fg:w="44"/><text x="24.5728%" y="623.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (44 samples, 0.49%)</title><rect x="24.3228%" y="597" width="0.4905%" height="15" fill="rgb(91,203,203)" fg:x="2182" fg:w="44"/><text x="24.5728%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11 samples, 0.12%)</title><rect x="24.6907%" y="581" width="0.1226%" height="15" fill="rgb(247,147,0)" fg:x="2215" fg:w="11"/><text x="24.9407%" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.12%)</title><rect x="24.6907%" y="565" width="0.1226%" height="15" fill="rgb(54,169,169)" fg:x="2215" fg:w="11"/><text x="24.9407%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="24.7798%" y="549" width="0.0334%" height="15" fill="rgb(78,191,191)" fg:x="2223" fg:w="3"/><text x="25.0298%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.03%)</title><rect x="24.7798%" y="533" width="0.0334%" height="15" fill="rgb(91,202,202)" fg:x="2223" fg:w="3"/><text x="25.0298%" y="543.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="24.8021%" y="517" width="0.0111%" height="15" fill="rgb(54,168,168)" fg:x="2225" fg:w="1"/><text x="25.0521%" y="527.50"></text></g><g><title>&lt;alc::keyboard::LayoutPosition as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="24.8133%" y="597" width="0.0111%" height="15" fill="rgb(66,179,179)" fg:x="2226" fg:w="1"/><text x="25.0633%" y="607.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="24.8244%" y="517" width="0.0892%" height="15" fill="rgb(72,185,185)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="527.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="24.8244%" y="501" width="0.0892%" height="15" fill="rgb(69,182,182)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="24.8244%" y="485" width="0.0892%" height="15" fill="rgb(239,139,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.09%)</title><rect x="24.8244%" y="469" width="0.0892%" height="15" fill="rgb(226,126,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.09%)</title><rect x="24.8244%" y="453" width="0.0892%" height="15" fill="rgb(223,123,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.09%)</title><rect x="24.8244%" y="437" width="0.0892%" height="15" fill="rgb(78,191,191)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="24.8244%" y="421" width="0.0892%" height="15" fill="rgb(191,91,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="24.8244%" y="405" width="0.0892%" height="15" fill="rgb(199,99,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.09%)</title><rect x="24.8244%" y="389" width="0.0892%" height="15" fill="rgb(230,130,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.09%)</title><rect x="24.8244%" y="373" width="0.0892%" height="15" fill="rgb(246,146,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.09%)</title><rect x="24.8244%" y="357" width="0.0892%" height="15" fill="rgb(233,133,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="367.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.09%)</title><rect x="24.8244%" y="341" width="0.0892%" height="15" fill="rgb(220,120,0)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="351.50"></text></g><g><title>malloc (8 samples, 0.09%)</title><rect x="24.8244%" y="325" width="0.0892%" height="15" fill="rgb(190,190,55)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="335.50"></text></g><g><title>[libc.so.6] (8 samples, 0.09%)</title><rect x="24.8244%" y="309" width="0.0892%" height="15" fill="rgb(188,188,54)" fg:x="2227" fg:w="8"/><text x="25.0744%" y="319.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="24.8467%" y="293" width="0.0669%" height="15" fill="rgb(213,213,64)" fg:x="2229" fg:w="6"/><text x="25.0967%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="24.9025%" y="277" width="0.0111%" height="15" fill="rgb(226,226,68)" fg:x="2234" fg:w="1"/><text x="25.1525%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="24.8244%" y="581" width="0.1003%" height="15" fill="rgb(200,100,0)" fg:x="2227" fg:w="9"/><text x="25.0744%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.10%)</title><rect x="24.8244%" y="565" width="0.1003%" height="15" fill="rgb(234,134,0)" fg:x="2227" fg:w="9"/><text x="25.0744%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.10%)</title><rect x="24.8244%" y="549" width="0.1003%" height="15" fill="rgb(232,132,0)" fg:x="2227" fg:w="9"/><text x="25.0744%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.10%)</title><rect x="24.8244%" y="533" width="0.1003%" height="15" fill="rgb(72,185,185)" fg:x="2227" fg:w="9"/><text x="25.0744%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="24.9136%" y="517" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="2235" fg:w="1"/><text x="25.1636%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.9248%" y="501" width="0.0111%" height="15" fill="rgb(77,190,190)" fg:x="2236" fg:w="1"/><text x="25.1748%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="24.9248%" y="485" width="0.0111%" height="15" fill="rgb(61,175,175)" fg:x="2236" fg:w="1"/><text x="25.1748%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.9248%" y="469" width="0.0111%" height="15" fill="rgb(51,166,166)" fg:x="2236" fg:w="1"/><text x="25.1748%" y="479.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="24.9582%" y="245" width="0.0223%" height="15" fill="rgb(180,180,51)" fg:x="2239" fg:w="2"/><text x="25.2082%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="24.9582%" y="229" width="0.0223%" height="15" fill="rgb(252,152,0)" fg:x="2239" fg:w="2"/><text x="25.2082%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.22%)</title><rect x="24.9582%" y="341" width="0.2229%" height="15" fill="rgb(207,107,0)" fg:x="2239" fg:w="20"/><text x="25.2082%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.22%)</title><rect x="24.9582%" y="325" width="0.2229%" height="15" fill="rgb(219,119,0)" fg:x="2239" fg:w="20"/><text x="25.2082%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.22%)</title><rect x="24.9582%" y="309" width="0.2229%" height="15" fill="rgb(193,93,0)" fg:x="2239" fg:w="20"/><text x="25.2082%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.22%)</title><rect x="24.9582%" y="293" width="0.2229%" height="15" fill="rgb(204,104,0)" fg:x="2239" fg:w="20"/><text x="25.2082%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.22%)</title><rect x="24.9582%" y="277" width="0.2229%" height="15" fill="rgb(217,117,0)" fg:x="2239" fg:w="20"/><text x="25.2082%" y="287.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.22%)</title><rect x="24.9582%" y="261" width="0.2229%" height="15" fill="rgb(211,111,0)" fg:x="2239" fg:w="20"/><text x="25.2082%" y="271.50"></text></g><g><title>malloc (18 samples, 0.20%)</title><rect x="24.9805%" y="245" width="0.2006%" height="15" fill="rgb(202,202,60)" fg:x="2241" fg:w="18"/><text x="25.2305%" y="255.50"></text></g><g><title>[libc.so.6] (14 samples, 0.16%)</title><rect x="25.0251%" y="229" width="0.1561%" height="15" fill="rgb(211,211,63)" fg:x="2245" fg:w="14"/><text x="25.2751%" y="239.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="24.9582%" y="421" width="0.2341%" height="15" fill="rgb(61,175,175)" fg:x="2239" fg:w="21"/><text x="25.2082%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="24.9582%" y="405" width="0.2341%" height="15" fill="rgb(254,154,0)" fg:x="2239" fg:w="21"/><text x="25.2082%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.23%)</title><rect x="24.9582%" y="389" width="0.2341%" height="15" fill="rgb(212,112,0)" fg:x="2239" fg:w="21"/><text x="25.2082%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.23%)</title><rect x="24.9582%" y="373" width="0.2341%" height="15" fill="rgb(216,116,0)" fg:x="2239" fg:w="21"/><text x="25.2082%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.23%)</title><rect x="24.9582%" y="357" width="0.2341%" height="15" fill="rgb(107,217,217)" fg:x="2239" fg:w="21"/><text x="25.2082%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="25.1811%" y="341" width="0.0111%" height="15" fill="rgb(199,99,0)" fg:x="2259" fg:w="1"/><text x="25.4311%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.1811%" y="325" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="2259" fg:w="1"/><text x="25.4311%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="25.1811%" y="309" width="0.0111%" height="15" fill="rgb(205,205,60)" fg:x="2259" fg:w="1"/><text x="25.4311%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1923%" y="421" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="2260" fg:w="1"/><text x="25.4423%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1923%" y="405" width="0.0111%" height="15" fill="rgb(252,152,0)" fg:x="2260" fg:w="1"/><text x="25.4423%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1923%" y="389" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="2260" fg:w="1"/><text x="25.4423%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="25.1923%" y="373" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="2260" fg:w="1"/><text x="25.4423%" y="383.50"></text></g><g><title>core::clone::Clone::clone (31 samples, 0.35%)</title><rect x="24.9359%" y="501" width="0.3456%" height="15" fill="rgb(236,136,0)" fg:x="2237" fg:w="31"/><text x="25.1859%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.35%)</title><rect x="24.9359%" y="485" width="0.3456%" height="15" fill="rgb(221,121,0)" fg:x="2237" fg:w="31"/><text x="25.1859%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.35%)</title><rect x="24.9359%" y="469" width="0.3456%" height="15" fill="rgb(238,138,0)" fg:x="2237" fg:w="31"/><text x="25.1859%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.35%)</title><rect x="24.9359%" y="453" width="0.3456%" height="15" fill="rgb(222,122,0)" fg:x="2237" fg:w="31"/><text x="25.1859%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.35%)</title><rect x="24.9359%" y="437" width="0.3456%" height="15" fill="rgb(102,212,212)" fg:x="2237" fg:w="31"/><text x="25.1859%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="25.2034%" y="421" width="0.0780%" height="15" fill="rgb(246,146,0)" fg:x="2261" fg:w="7"/><text x="25.4534%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="25.2034%" y="405" width="0.0780%" height="15" fill="rgb(223,123,0)" fg:x="2261" fg:w="7"/><text x="25.4534%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="25.2034%" y="389" width="0.0780%" height="15" fill="rgb(225,125,0)" fg:x="2261" fg:w="7"/><text x="25.4534%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="25.2034%" y="373" width="0.0780%" height="15" fill="rgb(217,117,0)" fg:x="2261" fg:w="7"/><text x="25.4534%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="25.2034%" y="357" width="0.0780%" height="15" fill="rgb(202,102,0)" fg:x="2261" fg:w="7"/><text x="25.4534%" y="367.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="25.2034%" y="341" width="0.0780%" height="15" fill="rgb(252,152,0)" fg:x="2261" fg:w="7"/><text x="25.4534%" y="351.50"></text></g><g><title>malloc (7 samples, 0.08%)</title><rect x="25.2034%" y="325" width="0.0780%" height="15" fill="rgb(181,181,52)" fg:x="2261" fg:w="7"/><text x="25.4534%" y="335.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="25.2034%" y="309" width="0.0780%" height="15" fill="rgb(227,227,69)" fg:x="2261" fg:w="7"/><text x="25.4534%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (34 samples, 0.38%)</title><rect x="24.9248%" y="533" width="0.3790%" height="15" fill="rgb(94,206,206)" fg:x="2236" fg:w="34"/><text x="25.1748%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (34 samples, 0.38%)</title><rect x="24.9248%" y="517" width="0.3790%" height="15" fill="rgb(102,213,213)" fg:x="2236" fg:w="34"/><text x="25.1748%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="25.2815%" y="501" width="0.0223%" height="15" fill="rgb(71,184,184)" fg:x="2268" fg:w="2"/><text x="25.5315%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="25.2815%" y="485" width="0.0223%" height="15" fill="rgb(232,132,0)" fg:x="2268" fg:w="2"/><text x="25.5315%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="25.2815%" y="469" width="0.0223%" height="15" fill="rgb(220,120,0)" fg:x="2268" fg:w="2"/><text x="25.5315%" y="479.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (45 samples, 0.50%)</title><rect x="24.8244%" y="597" width="0.5016%" height="15" fill="rgb(54,169,169)" fg:x="2227" fg:w="45"/><text x="25.0744%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (36 samples, 0.40%)</title><rect x="24.9248%" y="581" width="0.4013%" height="15" fill="rgb(197,97,0)" fg:x="2236" fg:w="36"/><text x="25.1748%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.40%)</title><rect x="24.9248%" y="565" width="0.4013%" height="15" fill="rgb(50,165,165)" fg:x="2236" fg:w="36"/><text x="25.1748%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.40%)</title><rect x="24.9248%" y="549" width="0.4013%" height="15" fill="rgb(52,167,167)" fg:x="2236" fg:w="36"/><text x="25.1748%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="25.3038%" y="533" width="0.0223%" height="15" fill="rgb(91,203,203)" fg:x="2270" fg:w="2"/><text x="25.5538%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="25.3038%" y="517" width="0.0223%" height="15" fill="rgb(95,206,206)" fg:x="2270" fg:w="2"/><text x="25.5538%" y="527.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="25.3038%" y="501" width="0.0223%" height="15" fill="rgb(52,167,167)" fg:x="2270" fg:w="2"/><text x="25.5538%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="25.3038%" y="485" width="0.0223%" height="15" fill="rgb(249,149,0)" fg:x="2270" fg:w="2"/><text x="25.5538%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="25.3038%" y="469" width="0.0223%" height="15" fill="rgb(191,91,0)" fg:x="2270" fg:w="2"/><text x="25.5538%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="25.3038%" y="453" width="0.0223%" height="15" fill="rgb(192,92,0)" fg:x="2270" fg:w="2"/><text x="25.5538%" y="463.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="25.3038%" y="437" width="0.0223%" height="15" fill="rgb(206,206,61)" fg:x="2270" fg:w="2"/><text x="25.5538%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="25.3038%" y="421" width="0.0223%" height="15" fill="rgb(223,223,67)" fg:x="2270" fg:w="2"/><text x="25.5538%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="25.3149%" y="405" width="0.0111%" height="15" fill="rgb(222,222,67)" fg:x="2271" fg:w="1"/><text x="25.5649%" y="415.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.02%)</title><rect x="25.3706%" y="405" width="0.0223%" height="15" fill="rgb(193,93,0)" fg:x="2276" fg:w="2"/><text x="25.6206%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="25.3706%" y="501" width="0.0334%" height="15" fill="rgb(249,149,0)" fg:x="2276" fg:w="3"/><text x="25.6206%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="25.3706%" y="485" width="0.0334%" height="15" fill="rgb(251,151,0)" fg:x="2276" fg:w="3"/><text x="25.6206%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="25.3706%" y="469" width="0.0334%" height="15" fill="rgb(234,134,0)" fg:x="2276" fg:w="3"/><text x="25.6206%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="25.3706%" y="453" width="0.0334%" height="15" fill="rgb(193,93,0)" fg:x="2276" fg:w="3"/><text x="25.6206%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="25.3706%" y="437" width="0.0334%" height="15" fill="rgb(217,117,0)" fg:x="2276" fg:w="3"/><text x="25.6206%" y="447.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="25.3706%" y="421" width="0.0334%" height="15" fill="rgb(246,146,0)" fg:x="2276" fg:w="3"/><text x="25.6206%" y="431.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="25.3929%" y="405" width="0.0111%" height="15" fill="rgb(199,199,59)" fg:x="2278" fg:w="1"/><text x="25.6429%" y="415.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="25.3706%" y="581" width="0.0446%" height="15" fill="rgb(59,173,173)" fg:x="2276" fg:w="4"/><text x="25.6206%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="25.3706%" y="565" width="0.0446%" height="15" fill="rgb(193,93,0)" fg:x="2276" fg:w="4"/><text x="25.6206%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.04%)</title><rect x="25.3706%" y="549" width="0.0446%" height="15" fill="rgb(220,120,0)" fg:x="2276" fg:w="4"/><text x="25.6206%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.04%)</title><rect x="25.3706%" y="533" width="0.0446%" height="15" fill="rgb(237,137,0)" fg:x="2276" fg:w="4"/><text x="25.6206%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.04%)</title><rect x="25.3706%" y="517" width="0.0446%" height="15" fill="rgb(78,191,191)" fg:x="2276" fg:w="4"/><text x="25.6206%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="25.4041%" y="501" width="0.0111%" height="15" fill="rgb(208,108,0)" fg:x="2279" fg:w="1"/><text x="25.6541%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.4041%" y="485" width="0.0111%" height="15" fill="rgb(241,141,0)" fg:x="2279" fg:w="1"/><text x="25.6541%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="25.4041%" y="469" width="0.0111%" height="15" fill="rgb(229,229,69)" fg:x="2279" fg:w="1"/><text x="25.6541%" y="479.50"></text></g><g><title>&lt;alc::keyboard::key::KeycodeKey as alc::keyboard::key::KeyValue&gt;::value (1 samples, 0.01%)</title><rect x="25.4152%" y="581" width="0.0111%" height="15" fill="rgb(56,171,171)" fg:x="2280" fg:w="1"/><text x="25.6652%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="25.4487%" y="501" width="0.0223%" height="15" fill="rgb(101,212,212)" fg:x="2283" fg:w="2"/><text x="25.6987%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="25.4598%" y="485" width="0.0111%" height="15" fill="rgb(97,208,208)" fg:x="2284" fg:w="1"/><text x="25.7098%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.4598%" y="469" width="0.0111%" height="15" fill="rgb(73,186,186)" fg:x="2284" fg:w="1"/><text x="25.7098%" y="479.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.4710%" y="485" width="0.0111%" height="15" fill="rgb(94,206,206)" fg:x="2285" fg:w="1"/><text x="25.7210%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="25.5267%" y="245" width="0.0111%" height="15" fill="rgb(228,228,69)" fg:x="2290" fg:w="1"/><text x="25.7767%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="25.5267%" y="229" width="0.0111%" height="15" fill="rgb(190,90,0)" fg:x="2290" fg:w="1"/><text x="25.7767%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="25.5267%" y="341" width="0.0446%" height="15" fill="rgb(245,145,0)" fg:x="2290" fg:w="4"/><text x="25.7767%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="25.5267%" y="325" width="0.0446%" height="15" fill="rgb(221,121,0)" fg:x="2290" fg:w="4"/><text x="25.7767%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="25.5267%" y="309" width="0.0446%" height="15" fill="rgb(215,115,0)" fg:x="2290" fg:w="4"/><text x="25.7767%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="25.5267%" y="293" width="0.0446%" height="15" fill="rgb(197,97,0)" fg:x="2290" fg:w="4"/><text x="25.7767%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="25.5267%" y="277" width="0.0446%" height="15" fill="rgb(213,113,0)" fg:x="2290" fg:w="4"/><text x="25.7767%" y="287.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="25.5267%" y="261" width="0.0446%" height="15" fill="rgb(229,129,0)" fg:x="2290" fg:w="4"/><text x="25.7767%" y="271.50"></text></g><g><title>malloc (3 samples, 0.03%)</title><rect x="25.5378%" y="245" width="0.0334%" height="15" fill="rgb(200,200,59)" fg:x="2291" fg:w="3"/><text x="25.7878%" y="255.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="25.5267%" y="421" width="0.0669%" height="15" fill="rgb(56,170,170)" fg:x="2290" fg:w="6"/><text x="25.7767%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="25.5267%" y="405" width="0.0669%" height="15" fill="rgb(216,116,0)" fg:x="2290" fg:w="6"/><text x="25.7767%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="25.5267%" y="389" width="0.0669%" height="15" fill="rgb(203,103,0)" fg:x="2290" fg:w="6"/><text x="25.7767%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="25.5267%" y="373" width="0.0669%" height="15" fill="rgb(248,148,0)" fg:x="2290" fg:w="6"/><text x="25.7767%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="25.5267%" y="357" width="0.0669%" height="15" fill="rgb(64,178,178)" fg:x="2290" fg:w="6"/><text x="25.7767%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="25.5713%" y="341" width="0.0223%" height="15" fill="rgb(191,91,0)" fg:x="2294" fg:w="2"/><text x="25.8213%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="25.5713%" y="325" width="0.0223%" height="15" fill="rgb(204,104,0)" fg:x="2294" fg:w="2"/><text x="25.8213%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="25.5713%" y="309" width="0.0223%" height="15" fill="rgb(207,207,61)" fg:x="2294" fg:w="2"/><text x="25.8213%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.5936%" y="421" width="0.0111%" height="15" fill="rgb(220,120,0)" fg:x="2296" fg:w="1"/><text x="25.8436%" y="431.50"></text></g><g><title>__rdl_alloc (3 samples, 0.03%)</title><rect x="25.6047%" y="325" width="0.0334%" height="15" fill="rgb(188,188,54)" fg:x="2297" fg:w="3"/><text x="25.8547%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.03%)</title><rect x="25.6047%" y="309" width="0.0334%" height="15" fill="rgb(190,90,0)" fg:x="2297" fg:w="3"/><text x="25.8547%" y="319.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="25.6382%" y="325" width="0.0111%" height="15" fill="rgb(225,225,68)" fg:x="2300" fg:w="1"/><text x="25.8882%" y="335.50"></text></g><g><title>core::clone::Clone::clone (17 samples, 0.19%)</title><rect x="25.4710%" y="501" width="0.1895%" height="15" fill="rgb(191,91,0)" fg:x="2285" fg:w="17"/><text x="25.7210%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.18%)</title><rect x="25.4821%" y="485" width="0.1784%" height="15" fill="rgb(237,137,0)" fg:x="2286" fg:w="16"/><text x="25.7321%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.16%)</title><rect x="25.5044%" y="469" width="0.1561%" height="15" fill="rgb(203,103,0)" fg:x="2288" fg:w="14"/><text x="25.7544%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.16%)</title><rect x="25.5044%" y="453" width="0.1561%" height="15" fill="rgb(218,118,0)" fg:x="2288" fg:w="14"/><text x="25.7544%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.16%)</title><rect x="25.5044%" y="437" width="0.1561%" height="15" fill="rgb(104,214,214)" fg:x="2288" fg:w="14"/><text x="25.7544%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="25.6047%" y="421" width="0.0557%" height="15" fill="rgb(217,117,0)" fg:x="2297" fg:w="5"/><text x="25.8547%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="25.6047%" y="405" width="0.0557%" height="15" fill="rgb(199,99,0)" fg:x="2297" fg:w="5"/><text x="25.8547%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="25.6047%" y="389" width="0.0557%" height="15" fill="rgb(239,139,0)" fg:x="2297" fg:w="5"/><text x="25.8547%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="25.6047%" y="373" width="0.0557%" height="15" fill="rgb(229,129,0)" fg:x="2297" fg:w="5"/><text x="25.8547%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="25.6047%" y="357" width="0.0557%" height="15" fill="rgb(240,140,0)" fg:x="2297" fg:w="5"/><text x="25.8547%" y="367.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="25.6047%" y="341" width="0.0557%" height="15" fill="rgb(192,92,0)" fg:x="2297" fg:w="5"/><text x="25.8547%" y="351.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="25.6493%" y="325" width="0.0111%" height="15" fill="rgb(207,207,61)" fg:x="2301" fg:w="1"/><text x="25.8993%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="25.6605%" y="501" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="2302" fg:w="1"/><text x="25.9105%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.6605%" y="485" width="0.0111%" height="15" fill="rgb(202,102,0)" fg:x="2302" fg:w="1"/><text x="25.9105%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="25.6605%" y="469" width="0.0111%" height="15" fill="rgb(177,177,50)" fg:x="2302" fg:w="1"/><text x="25.9105%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (29 samples, 0.32%)</title><rect x="25.4487%" y="533" width="0.3233%" height="15" fill="rgb(71,184,184)" fg:x="2283" fg:w="29"/><text x="25.6987%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (29 samples, 0.32%)</title><rect x="25.4487%" y="517" width="0.3233%" height="15" fill="rgb(80,192,192)" fg:x="2283" fg:w="29"/><text x="25.6987%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (9 samples, 0.10%)</title><rect x="25.6716%" y="501" width="0.1003%" height="15" fill="rgb(71,184,184)" fg:x="2303" fg:w="9"/><text x="25.9216%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.10%)</title><rect x="25.6716%" y="485" width="0.1003%" height="15" fill="rgb(254,154,0)" fg:x="2303" fg:w="9"/><text x="25.9216%" y="495.50"></text></g><g><title>core::ptr::write (9 samples, 0.10%)</title><rect x="25.6716%" y="469" width="0.1003%" height="15" fill="rgb(230,130,0)" fg:x="2303" fg:w="9"/><text x="25.9216%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="25.7719%" y="533" width="0.0111%" height="15" fill="rgb(98,209,209)" fg:x="2312" fg:w="1"/><text x="26.0219%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="25.7719%" y="517" width="0.0111%" height="15" fill="rgb(100,211,211)" fg:x="2312" fg:w="1"/><text x="26.0219%" y="527.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="25.7719%" y="501" width="0.0111%" height="15" fill="rgb(67,180,180)" fg:x="2312" fg:w="1"/><text x="26.0219%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="25.7719%" y="485" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="2312" fg:w="1"/><text x="26.0219%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="25.7719%" y="469" width="0.0111%" height="15" fill="rgb(215,115,0)" fg:x="2312" fg:w="1"/><text x="26.0219%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="25.7719%" y="453" width="0.0111%" height="15" fill="rgb(218,118,0)" fg:x="2312" fg:w="1"/><text x="26.0219%" y="463.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="25.7719%" y="437" width="0.0111%" height="15" fill="rgb(194,194,57)" fg:x="2312" fg:w="1"/><text x="26.0219%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (33 samples, 0.37%)</title><rect x="25.4264%" y="581" width="0.3679%" height="15" fill="rgb(237,137,0)" fg:x="2281" fg:w="33"/><text x="25.6764%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.37%)</title><rect x="25.4264%" y="565" width="0.3679%" height="15" fill="rgb(77,189,189)" fg:x="2281" fg:w="33"/><text x="25.6764%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.35%)</title><rect x="25.4487%" y="549" width="0.3456%" height="15" fill="rgb(55,170,170)" fg:x="2283" fg:w="31"/><text x="25.6987%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1 samples, 0.01%)</title><rect x="25.7831%" y="533" width="0.0111%" height="15" fill="rgb(71,184,184)" fg:x="2313" fg:w="1"/><text x="26.0331%" y="543.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="25.8054%" y="485" width="0.0111%" height="15" fill="rgb(230,130,0)" fg:x="2315" fg:w="1"/><text x="26.0554%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="25.8054%" y="469" width="0.0111%" height="15" fill="rgb(197,97,0)" fg:x="2315" fg:w="1"/><text x="26.0554%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="25.8054%" y="453" width="0.0111%" height="15" fill="rgb(204,104,0)" fg:x="2315" fg:w="1"/><text x="26.0554%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="25.8054%" y="437" width="0.0111%" height="15" fill="rgb(251,151,0)" fg:x="2315" fg:w="1"/><text x="26.0554%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="25.8611%" y="357" width="0.0111%" height="15" fill="rgb(239,139,0)" fg:x="2320" fg:w="1"/><text x="26.1111%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (6 samples, 0.07%)</title><rect x="25.8277%" y="453" width="0.0669%" height="15" fill="rgb(241,141,0)" fg:x="2317" fg:w="6"/><text x="26.0777%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (6 samples, 0.07%)</title><rect x="25.8277%" y="437" width="0.0669%" height="15" fill="rgb(196,96,0)" fg:x="2317" fg:w="6"/><text x="26.0777%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.07%)</title><rect x="25.8277%" y="421" width="0.0669%" height="15" fill="rgb(218,118,0)" fg:x="2317" fg:w="6"/><text x="26.0777%" y="431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="25.8388%" y="405" width="0.0557%" height="15" fill="rgb(230,130,0)" fg:x="2318" fg:w="5"/><text x="26.0888%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="25.8388%" y="389" width="0.0557%" height="15" fill="rgb(210,110,0)" fg:x="2318" fg:w="5"/><text x="26.0888%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="25.8388%" y="373" width="0.0557%" height="15" fill="rgb(222,122,0)" fg:x="2318" fg:w="5"/><text x="26.0888%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="25.8723%" y="357" width="0.0223%" height="15" fill="rgb(226,126,0)" fg:x="2321" fg:w="2"/><text x="26.1223%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (11 samples, 0.12%)</title><rect x="25.7942%" y="581" width="0.1226%" height="15" fill="rgb(197,97,0)" fg:x="2314" fg:w="11"/><text x="26.0442%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.12%)</title><rect x="25.7942%" y="565" width="0.1226%" height="15" fill="rgb(242,142,0)" fg:x="2314" fg:w="11"/><text x="26.0442%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.12%)</title><rect x="25.7942%" y="549" width="0.1226%" height="15" fill="rgb(91,203,203)" fg:x="2314" fg:w="11"/><text x="26.0442%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.12%)</title><rect x="25.7942%" y="533" width="0.1226%" height="15" fill="rgb(72,185,185)" fg:x="2314" fg:w="11"/><text x="26.0442%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.12%)</title><rect x="25.7942%" y="517" width="0.1226%" height="15" fill="rgb(101,212,212)" fg:x="2314" fg:w="11"/><text x="26.0442%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.12%)</title><rect x="25.7942%" y="501" width="0.1226%" height="15" fill="rgb(208,108,0)" fg:x="2314" fg:w="11"/><text x="26.0442%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.10%)</title><rect x="25.8165%" y="485" width="0.1003%" height="15" fill="rgb(231,131,0)" fg:x="2316" fg:w="9"/><text x="26.0665%" y="495.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (9 samples, 0.10%)</title><rect x="25.8165%" y="469" width="0.1003%" height="15" fill="rgb(87,199,199)" fg:x="2316" fg:w="9"/><text x="26.0665%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.02%)</title><rect x="25.8945%" y="453" width="0.0223%" height="15" fill="rgb(195,95,0)" fg:x="2323" fg:w="2"/><text x="26.1445%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="25.8945%" y="437" width="0.0223%" height="15" fill="rgb(252,152,0)" fg:x="2323" fg:w="2"/><text x="26.1445%" y="447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="25.8945%" y="421" width="0.0223%" height="15" fill="rgb(245,145,0)" fg:x="2323" fg:w="2"/><text x="26.1445%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="25.8945%" y="405" width="0.0223%" height="15" fill="rgb(192,92,0)" fg:x="2323" fg:w="2"/><text x="26.1445%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="25.8945%" y="389" width="0.0223%" height="15" fill="rgb(191,91,0)" fg:x="2323" fg:w="2"/><text x="26.1445%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="25.9057%" y="373" width="0.0111%" height="15" fill="rgb(204,104,0)" fg:x="2324" fg:w="1"/><text x="26.1557%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="25.9057%" y="357" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="2324" fg:w="1"/><text x="26.1557%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.25%)</title><rect x="25.9614%" y="501" width="0.2452%" height="15" fill="rgb(241,141,0)" fg:x="2329" fg:w="22"/><text x="26.2114%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.25%)</title><rect x="25.9614%" y="485" width="0.2452%" height="15" fill="rgb(192,92,0)" fg:x="2329" fg:w="22"/><text x="26.2114%" y="495.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.25%)</title><rect x="25.9614%" y="469" width="0.2452%" height="15" fill="rgb(224,124,0)" fg:x="2329" fg:w="22"/><text x="26.2114%" y="479.50"></text></g><g><title>realloc (22 samples, 0.25%)</title><rect x="25.9614%" y="453" width="0.2452%" height="15" fill="rgb(209,209,62)" fg:x="2329" fg:w="22"/><text x="26.2114%" y="463.50"></text></g><g><title>[libc.so.6] (18 samples, 0.20%)</title><rect x="26.0060%" y="437" width="0.2006%" height="15" fill="rgb(188,188,54)" fg:x="2333" fg:w="18"/><text x="26.2560%" y="447.50"></text></g><g><title>[libc.so.6] (15 samples, 0.17%)</title><rect x="26.0395%" y="421" width="0.1672%" height="15" fill="rgb(201,201,59)" fg:x="2336" fg:w="15"/><text x="26.2895%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="26.1844%" y="405" width="0.0223%" height="15" fill="rgb(221,221,66)" fg:x="2349" fg:w="2"/><text x="26.4344%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.30%)</title><rect x="25.9168%" y="517" width="0.3010%" height="15" fill="rgb(247,147,0)" fg:x="2325" fg:w="27"/><text x="26.1668%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="26.2067%" y="501" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="2351" fg:w="1"/><text x="26.4567%" y="511.50"></text></g><g><title>core::cmp::max (2 samples, 0.02%)</title><rect x="26.2178%" y="517" width="0.0223%" height="15" fill="rgb(190,90,0)" fg:x="2352" fg:w="2"/><text x="26.4678%" y="527.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.02%)</title><rect x="26.2178%" y="501" width="0.0223%" height="15" fill="rgb(213,113,0)" fg:x="2352" fg:w="2"/><text x="26.4678%" y="511.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.02%)</title><rect x="26.2178%" y="485" width="0.0223%" height="15" fill="rgb(237,137,0)" fg:x="2352" fg:w="2"/><text x="26.4678%" y="495.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (30 samples, 0.33%)</title><rect x="25.9168%" y="581" width="0.3344%" height="15" fill="rgb(98,209,209)" fg:x="2325" fg:w="30"/><text x="26.1668%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (30 samples, 0.33%)</title><rect x="25.9168%" y="565" width="0.3344%" height="15" fill="rgb(252,152,0)" fg:x="2325" fg:w="30"/><text x="26.1668%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (30 samples, 0.33%)</title><rect x="25.9168%" y="549" width="0.3344%" height="15" fill="rgb(245,145,0)" fg:x="2325" fg:w="30"/><text x="26.1668%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.33%)</title><rect x="25.9168%" y="533" width="0.3344%" height="15" fill="rgb(245,145,0)" fg:x="2325" fg:w="30"/><text x="26.1668%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="26.2401%" y="517" width="0.0111%" height="15" fill="rgb(207,107,0)" fg:x="2354" fg:w="1"/><text x="26.4901%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="26.2401%" y="501" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="2354" fg:w="1"/><text x="26.4901%" y="511.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="26.2513%" y="517" width="0.0111%" height="15" fill="rgb(200,200,59)" fg:x="2355" fg:w="1"/><text x="26.5013%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.08%)</title><rect x="26.2513%" y="581" width="0.0780%" height="15" fill="rgb(196,96,0)" fg:x="2355" fg:w="7"/><text x="26.5013%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="26.2513%" y="565" width="0.0780%" height="15" fill="rgb(220,120,0)" fg:x="2355" fg:w="7"/><text x="26.5013%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="26.2513%" y="549" width="0.0780%" height="15" fill="rgb(250,150,0)" fg:x="2355" fg:w="7"/><text x="26.5013%" y="559.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="26.2513%" y="533" width="0.0780%" height="15" fill="rgb(204,104,0)" fg:x="2355" fg:w="7"/><text x="26.5013%" y="543.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="26.2624%" y="517" width="0.0669%" height="15" fill="rgb(205,205,61)" fg:x="2356" fg:w="6"/><text x="26.5124%" y="527.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="26.3070%" y="501" width="0.0223%" height="15" fill="rgb(218,218,65)" fg:x="2360" fg:w="2"/><text x="26.5570%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.3181%" y="485" width="0.0111%" height="15" fill="rgb(175,175,50)" fg:x="2361" fg:w="1"/><text x="26.5681%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="26.3404%" y="533" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="2363" fg:w="1"/><text x="26.5904%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="26.3850%" y="517" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="2367" fg:w="1"/><text x="26.6350%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="26.3850%" y="501" width="0.0111%" height="15" fill="rgb(224,124,0)" fg:x="2367" fg:w="1"/><text x="26.6350%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="26.3850%" y="485" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="2367" fg:w="1"/><text x="26.6350%" y="495.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="26.3850%" y="469" width="0.0111%" height="15" fill="rgb(225,225,68)" fg:x="2367" fg:w="1"/><text x="26.6350%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.3850%" y="453" width="0.0111%" height="15" fill="rgb(178,178,51)" fg:x="2367" fg:w="1"/><text x="26.6350%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.3850%" y="437" width="0.0111%" height="15" fill="rgb(226,226,68)" fg:x="2367" fg:w="1"/><text x="26.6350%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.3850%" y="421" width="0.0111%" height="15" fill="rgb(188,188,55)" fg:x="2367" fg:w="1"/><text x="26.6350%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.16%)</title><rect x="26.3516%" y="533" width="0.1561%" height="15" fill="rgb(221,121,0)" fg:x="2364" fg:w="14"/><text x="26.6016%" y="543.50"></text></g><g><title>malloc (10 samples, 0.11%)</title><rect x="26.3962%" y="517" width="0.1115%" height="15" fill="rgb(184,184,53)" fg:x="2368" fg:w="10"/><text x="26.6462%" y="527.50"></text></g><g><title>[libc.so.6] (9 samples, 0.10%)</title><rect x="26.4073%" y="501" width="0.1003%" height="15" fill="rgb(221,221,66)" fg:x="2369" fg:w="9"/><text x="26.6573%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.4965%" y="485" width="0.0111%" height="15" fill="rgb(188,188,54)" fg:x="2377" fg:w="1"/><text x="26.7465%" y="495.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="26.5076%" y="533" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="2378" fg:w="1"/><text x="26.7576%" y="543.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="26.5076%" y="517" width="0.0111%" height="15" fill="rgb(204,104,0)" fg:x="2378" fg:w="1"/><text x="26.7576%" y="527.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="26.5076%" y="501" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="2378" fg:w="1"/><text x="26.7576%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.20%)</title><rect x="26.3293%" y="581" width="0.2006%" height="15" fill="rgb(238,138,0)" fg:x="2362" fg:w="18"/><text x="26.5793%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.19%)</title><rect x="26.3404%" y="565" width="0.1895%" height="15" fill="rgb(198,98,0)" fg:x="2363" fg:w="17"/><text x="26.5904%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.19%)</title><rect x="26.3404%" y="549" width="0.1895%" height="15" fill="rgb(238,138,0)" fg:x="2363" fg:w="17"/><text x="26.5904%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="26.5188%" y="533" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="2379" fg:w="1"/><text x="26.7688%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="26.5188%" y="517" width="0.0111%" height="15" fill="rgb(240,140,0)" fg:x="2379" fg:w="1"/><text x="26.7688%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="26.5299%" y="581" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="2380" fg:w="1"/><text x="26.7799%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="26.5299%" y="565" width="0.0111%" height="15" fill="rgb(200,100,0)" fg:x="2380" fg:w="1"/><text x="26.7799%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="26.5299%" y="549" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="2380" fg:w="1"/><text x="26.7799%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.01%)</title><rect x="26.5411%" y="581" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="2381" fg:w="1"/><text x="26.7911%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="26.5411%" y="565" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="2381" fg:w="1"/><text x="26.7911%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.01%)</title><rect x="26.5411%" y="549" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="2381" fg:w="1"/><text x="26.7911%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.5411%" y="533" width="0.0111%" height="15" fill="rgb(196,96,0)" fg:x="2381" fg:w="1"/><text x="26.7911%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="26.5411%" y="517" width="0.0111%" height="15" fill="rgb(211,111,0)" fg:x="2381" fg:w="1"/><text x="26.7911%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="26.5411%" y="501" width="0.0111%" height="15" fill="rgb(201,101,0)" fg:x="2381" fg:w="1"/><text x="26.7911%" y="511.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="26.5411%" y="485" width="0.0111%" height="15" fill="rgb(193,193,56)" fg:x="2381" fg:w="1"/><text x="26.7911%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.5411%" y="469" width="0.0111%" height="15" fill="rgb(189,189,55)" fg:x="2381" fg:w="1"/><text x="26.7911%" y="479.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="26.6191%" y="293" width="0.0111%" height="15" fill="rgb(190,190,55)" fg:x="2388" fg:w="1"/><text x="26.8691%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.14%)</title><rect x="26.5857%" y="325" width="0.1449%" height="15" fill="rgb(222,122,0)" fg:x="2385" fg:w="13"/><text x="26.8357%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.14%)</title><rect x="26.5857%" y="309" width="0.1449%" height="15" fill="rgb(232,132,0)" fg:x="2385" fg:w="13"/><text x="26.8357%" y="319.50"></text></g><g><title>cfree (9 samples, 0.10%)</title><rect x="26.6303%" y="293" width="0.1003%" height="15" fill="rgb(187,187,54)" fg:x="2389" fg:w="9"/><text x="26.8803%" y="303.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="26.6748%" y="277" width="0.0557%" height="15" fill="rgb(181,181,52)" fg:x="2393" fg:w="5"/><text x="26.9248%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.21%)</title><rect x="26.5634%" y="421" width="0.2118%" height="15" fill="rgb(227,127,0)" fg:x="2383" fg:w="19"/><text x="26.8134%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (19 samples, 0.21%)</title><rect x="26.5634%" y="405" width="0.2118%" height="15" fill="rgb(237,137,0)" fg:x="2383" fg:w="19"/><text x="26.8134%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (19 samples, 0.21%)</title><rect x="26.5634%" y="389" width="0.2118%" height="15" fill="rgb(230,130,0)" fg:x="2383" fg:w="19"/><text x="26.8134%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (19 samples, 0.21%)</title><rect x="26.5634%" y="373" width="0.2118%" height="15" fill="rgb(241,141,0)" fg:x="2383" fg:w="19"/><text x="26.8134%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (19 samples, 0.21%)</title><rect x="26.5634%" y="357" width="0.2118%" height="15" fill="rgb(222,122,0)" fg:x="2383" fg:w="19"/><text x="26.8134%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.21%)</title><rect x="26.5634%" y="341" width="0.2118%" height="15" fill="rgb(254,154,0)" fg:x="2383" fg:w="19"/><text x="26.8134%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.04%)</title><rect x="26.7306%" y="325" width="0.0446%" height="15" fill="rgb(242,142,0)" fg:x="2398" fg:w="4"/><text x="26.9806%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="26.7640%" y="309" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="2401" fg:w="1"/><text x="27.0140%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (27 samples, 0.30%)</title><rect x="26.5522%" y="501" width="0.3010%" height="15" fill="rgb(72,186,186)" fg:x="2382" fg:w="27"/><text x="26.8022%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (26 samples, 0.29%)</title><rect x="26.5634%" y="485" width="0.2898%" height="15" fill="rgb(69,182,182)" fg:x="2383" fg:w="26"/><text x="26.8134%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (26 samples, 0.29%)</title><rect x="26.5634%" y="469" width="0.2898%" height="15" fill="rgb(227,127,0)" fg:x="2383" fg:w="26"/><text x="26.8134%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (26 samples, 0.29%)</title><rect x="26.5634%" y="453" width="0.2898%" height="15" fill="rgb(218,118,0)" fg:x="2383" fg:w="26"/><text x="26.8134%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (26 samples, 0.29%)</title><rect x="26.5634%" y="437" width="0.2898%" height="15" fill="rgb(230,130,0)" fg:x="2383" fg:w="26"/><text x="26.8134%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (7 samples, 0.08%)</title><rect x="26.7752%" y="421" width="0.0780%" height="15" fill="rgb(254,154,0)" fg:x="2402" fg:w="7"/><text x="27.0252%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.08%)</title><rect x="26.7752%" y="405" width="0.0780%" height="15" fill="rgb(210,110,0)" fg:x="2402" fg:w="7"/><text x="27.0252%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.08%)</title><rect x="26.7752%" y="389" width="0.0780%" height="15" fill="rgb(235,135,0)" fg:x="2402" fg:w="7"/><text x="27.0252%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.08%)</title><rect x="26.7752%" y="373" width="0.0780%" height="15" fill="rgb(209,109,0)" fg:x="2402" fg:w="7"/><text x="27.0252%" y="383.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="26.7975%" y="357" width="0.0557%" height="15" fill="rgb(201,201,59)" fg:x="2404" fg:w="5"/><text x="27.0475%" y="367.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="26.7975%" y="341" width="0.0557%" height="15" fill="rgb(183,183,52)" fg:x="2404" fg:w="5"/><text x="27.0475%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.35%)</title><rect x="26.5522%" y="533" width="0.3456%" height="15" fill="rgb(80,193,193)" fg:x="2382" fg:w="31"/><text x="26.8022%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (31 samples, 0.35%)</title><rect x="26.5522%" y="517" width="0.3456%" height="15" fill="rgb(83,195,195)" fg:x="2382" fg:w="31"/><text x="26.8022%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (4 samples, 0.04%)</title><rect x="26.8532%" y="501" width="0.0446%" height="15" fill="rgb(55,170,170)" fg:x="2409" fg:w="4"/><text x="27.1032%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="26.8532%" y="485" width="0.0446%" height="15" fill="rgb(239,139,0)" fg:x="2409" fg:w="4"/><text x="27.1032%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="26.8532%" y="469" width="0.0446%" height="15" fill="rgb(233,133,0)" fg:x="2409" fg:w="4"/><text x="27.1032%" y="479.50"></text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="26.8643%" y="453" width="0.0334%" height="15" fill="rgb(198,198,58)" fg:x="2410" fg:w="3"/><text x="27.1143%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="26.8755%" y="437" width="0.0223%" height="15" fill="rgb(216,216,65)" fg:x="2411" fg:w="2"/><text x="27.1255%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (32 samples, 0.36%)</title><rect x="26.5522%" y="581" width="0.3567%" height="15" fill="rgb(222,122,0)" fg:x="2382" fg:w="32"/><text x="26.8022%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (32 samples, 0.36%)</title><rect x="26.5522%" y="565" width="0.3567%" height="15" fill="rgb(210,110,0)" fg:x="2382" fg:w="32"/><text x="26.8022%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (32 samples, 0.36%)</title><rect x="26.5522%" y="549" width="0.3567%" height="15" fill="rgb(225,125,0)" fg:x="2382" fg:w="32"/><text x="26.8022%" y="559.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="26.8978%" y="533" width="0.0111%" height="15" fill="rgb(220,220,66)" fg:x="2413" fg:w="1"/><text x="27.1478%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.8978%" y="517" width="0.0111%" height="15" fill="rgb(218,218,65)" fg:x="2413" fg:w="1"/><text x="27.1478%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.8978%" y="501" width="0.0111%" height="15" fill="rgb(222,222,67)" fg:x="2413" fg:w="1"/><text x="27.1478%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.8978%" y="485" width="0.0111%" height="15" fill="rgb(221,221,66)" fg:x="2413" fg:w="1"/><text x="27.1478%" y="495.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="26.9201%" y="469" width="0.0223%" height="15" fill="rgb(200,100,0)" fg:x="2415" fg:w="2"/><text x="27.1701%" y="479.50"></text></g><g><title>core::mem::swap_simple (2 samples, 0.02%)</title><rect x="26.9201%" y="453" width="0.0223%" height="15" fill="rgb(226,126,0)" fg:x="2415" fg:w="2"/><text x="27.1701%" y="463.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="26.9201%" y="437" width="0.0223%" height="15" fill="rgb(228,128,0)" fg:x="2415" fg:w="2"/><text x="27.1701%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="26.9424%" y="341" width="0.0111%" height="15" fill="rgb(254,154,0)" fg:x="2417" fg:w="1"/><text x="27.1924%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="26.9424%" y="357" width="0.0223%" height="15" fill="rgb(191,91,0)" fg:x="2417" fg:w="2"/><text x="27.1924%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="26.9535%" y="341" width="0.0111%" height="15" fill="rgb(211,111,0)" fg:x="2418" fg:w="1"/><text x="27.2035%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="26.9424%" y="405" width="0.0334%" height="15" fill="rgb(195,95,0)" fg:x="2417" fg:w="3"/><text x="27.1924%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="26.9424%" y="389" width="0.0334%" height="15" fill="rgb(198,98,0)" fg:x="2417" fg:w="3"/><text x="27.1924%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="26.9424%" y="373" width="0.0334%" height="15" fill="rgb(201,101,0)" fg:x="2417" fg:w="3"/><text x="27.1924%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="26.9647%" y="357" width="0.0111%" height="15" fill="rgb(245,145,0)" fg:x="2419" fg:w="1"/><text x="27.2147%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="26.9647%" y="341" width="0.0111%" height="15" fill="rgb(205,105,0)" fg:x="2419" fg:w="1"/><text x="27.2147%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (6 samples, 0.07%)</title><rect x="26.9424%" y="469" width="0.0669%" height="15" fill="rgb(88,200,200)" fg:x="2417" fg:w="6"/><text x="27.1924%" y="479.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (6 samples, 0.07%)</title><rect x="26.9424%" y="453" width="0.0669%" height="15" fill="rgb(85,197,197)" fg:x="2417" fg:w="6"/><text x="27.1924%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.07%)</title><rect x="26.9424%" y="437" width="0.0669%" height="15" fill="rgb(56,170,170)" fg:x="2417" fg:w="6"/><text x="27.1924%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.07%)</title><rect x="26.9424%" y="421" width="0.0669%" height="15" fill="rgb(246,146,0)" fg:x="2417" fg:w="6"/><text x="27.1924%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.03%)</title><rect x="26.9758%" y="405" width="0.0334%" height="15" fill="rgb(237,137,0)" fg:x="2420" fg:w="3"/><text x="27.2258%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="26.9758%" y="389" width="0.0334%" height="15" fill="rgb(50,165,165)" fg:x="2420" fg:w="3"/><text x="27.2258%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="26.9870%" y="373" width="0.0223%" height="15" fill="rgb(212,112,0)" fg:x="2421" fg:w="2"/><text x="27.2370%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="26.9870%" y="357" width="0.0223%" height="15" fill="rgb(227,127,0)" fg:x="2421" fg:w="2"/><text x="27.2370%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="26.9870%" y="341" width="0.0223%" height="15" fill="rgb(197,97,0)" fg:x="2421" fg:w="2"/><text x="27.2370%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="26.9870%" y="325" width="0.0223%" height="15" fill="rgb(218,118,0)" fg:x="2421" fg:w="2"/><text x="27.2370%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="26.9870%" y="309" width="0.0223%" height="15" fill="rgb(195,95,0)" fg:x="2421" fg:w="2"/><text x="27.2370%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="26.9870%" y="293" width="0.0223%" height="15" fill="rgb(214,114,0)" fg:x="2421" fg:w="2"/><text x="27.2370%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="26.9870%" y="277" width="0.0223%" height="15" fill="rgb(215,115,0)" fg:x="2421" fg:w="2"/><text x="27.2370%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="26.9981%" y="261" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="2422" fg:w="1"/><text x="27.2481%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (13 samples, 0.14%)</title><rect x="26.9201%" y="549" width="0.1449%" height="15" fill="rgb(53,167,167)" fg:x="2415" fg:w="13"/><text x="27.1701%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.14%)</title><rect x="26.9201%" y="533" width="0.1449%" height="15" fill="rgb(83,195,195)" fg:x="2415" fg:w="13"/><text x="27.1701%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.14%)</title><rect x="26.9201%" y="517" width="0.1449%" height="15" fill="rgb(58,173,173)" fg:x="2415" fg:w="13"/><text x="27.1701%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (13 samples, 0.14%)</title><rect x="26.9201%" y="501" width="0.1449%" height="15" fill="rgb(106,216,216)" fg:x="2415" fg:w="13"/><text x="27.1701%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (13 samples, 0.14%)</title><rect x="26.9201%" y="485" width="0.1449%" height="15" fill="rgb(99,210,210)" fg:x="2415" fg:w="13"/><text x="27.1701%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (5 samples, 0.06%)</title><rect x="27.0093%" y="469" width="0.0557%" height="15" fill="rgb(53,168,168)" fg:x="2423" fg:w="5"/><text x="27.2593%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (5 samples, 0.06%)</title><rect x="27.0093%" y="453" width="0.0557%" height="15" fill="rgb(75,188,188)" fg:x="2423" fg:w="5"/><text x="27.2593%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (5 samples, 0.06%)</title><rect x="27.0093%" y="437" width="0.0557%" height="15" fill="rgb(107,217,217)" fg:x="2423" fg:w="5"/><text x="27.2593%" y="447.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (5 samples, 0.06%)</title><rect x="27.0093%" y="421" width="0.0557%" height="15" fill="rgb(65,179,179)" fg:x="2423" fg:w="5"/><text x="27.2593%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="27.0093%" y="405" width="0.0557%" height="15" fill="rgb(194,94,0)" fg:x="2423" fg:w="5"/><text x="27.2593%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="27.0093%" y="389" width="0.0557%" height="15" fill="rgb(227,127,0)" fg:x="2423" fg:w="5"/><text x="27.2593%" y="399.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="27.0093%" y="373" width="0.0557%" height="15" fill="rgb(240,140,0)" fg:x="2423" fg:w="5"/><text x="27.2593%" y="383.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="27.0093%" y="357" width="0.0557%" height="15" fill="rgb(180,180,52)" fg:x="2423" fg:w="5"/><text x="27.2593%" y="367.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="27.0204%" y="341" width="0.0446%" height="15" fill="rgb(219,219,66)" fg:x="2424" fg:w="4"/><text x="27.2704%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.0538%" y="325" width="0.0111%" height="15" fill="rgb(216,216,65)" fg:x="2427" fg:w="1"/><text x="27.3038%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="27.0650%" y="469" width="0.0223%" height="15" fill="rgb(248,148,0)" fg:x="2428" fg:w="2"/><text x="27.3150%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="27.0761%" y="453" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="2429" fg:w="1"/><text x="27.3261%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="27.0984%" y="453" width="0.0334%" height="15" fill="rgb(240,140,0)" fg:x="2431" fg:w="3"/><text x="27.3484%" y="463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.10%)</title><rect x="27.0650%" y="517" width="0.1003%" height="15" fill="rgb(251,151,0)" fg:x="2428" fg:w="9"/><text x="27.3150%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.10%)</title><rect x="27.0650%" y="501" width="0.1003%" height="15" fill="rgb(200,100,0)" fg:x="2428" fg:w="9"/><text x="27.3150%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.10%)</title><rect x="27.0650%" y="485" width="0.1003%" height="15" fill="rgb(243,143,0)" fg:x="2428" fg:w="9"/><text x="27.3150%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.08%)</title><rect x="27.0873%" y="469" width="0.0780%" height="15" fill="rgb(247,147,0)" fg:x="2430" fg:w="7"/><text x="27.3373%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="27.1319%" y="453" width="0.0334%" height="15" fill="rgb(210,110,0)" fg:x="2434" fg:w="3"/><text x="27.3819%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.16%)</title><rect x="27.0650%" y="549" width="0.1561%" height="15" fill="rgb(63,177,177)" fg:x="2428" fg:w="14"/><text x="27.3150%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.16%)</title><rect x="27.0650%" y="533" width="0.1561%" height="15" fill="rgb(237,137,0)" fg:x="2428" fg:w="14"/><text x="27.3150%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.06%)</title><rect x="27.1653%" y="517" width="0.0557%" height="15" fill="rgb(217,117,0)" fg:x="2437" fg:w="5"/><text x="27.4153%" y="527.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="27.1653%" y="501" width="0.0557%" height="15" fill="rgb(82,194,194)" fg:x="2437" fg:w="5"/><text x="27.4153%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (5 samples, 0.06%)</title><rect x="27.1653%" y="485" width="0.0557%" height="15" fill="rgb(212,112,0)" fg:x="2437" fg:w="5"/><text x="27.4153%" y="495.50"></text></g><g><title>core::hash::Hasher::write_isize (5 samples, 0.06%)</title><rect x="27.1653%" y="469" width="0.0557%" height="15" fill="rgb(223,123,0)" fg:x="2437" fg:w="5"/><text x="27.4153%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (5 samples, 0.06%)</title><rect x="27.1653%" y="453" width="0.0557%" height="15" fill="rgb(240,140,0)" fg:x="2437" fg:w="5"/><text x="27.4153%" y="463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="27.1765%" y="437" width="0.0446%" height="15" fill="rgb(229,129,0)" fg:x="2438" fg:w="4"/><text x="27.4265%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="27.1765%" y="421" width="0.0446%" height="15" fill="rgb(196,96,0)" fg:x="2438" fg:w="4"/><text x="27.4265%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="27.1765%" y="405" width="0.0446%" height="15" fill="rgb(228,128,0)" fg:x="2438" fg:w="4"/><text x="27.4265%" y="415.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="27.2099%" y="389" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="2441" fg:w="1"/><text x="27.4599%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="27.2322%" y="501" width="0.0111%" height="15" fill="rgb(54,169,169)" fg:x="2443" fg:w="1"/><text x="27.4822%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="27.2210%" y="517" width="0.0334%" height="15" fill="rgb(104,215,215)" fg:x="2442" fg:w="3"/><text x="27.4710%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="27.2433%" y="501" width="0.0111%" height="15" fill="rgb(109,219,219)" fg:x="2444" fg:w="1"/><text x="27.4933%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.01%)</title><rect x="27.2545%" y="517" width="0.0111%" height="15" fill="rgb(72,185,185)" fg:x="2445" fg:w="1"/><text x="27.5045%" y="527.50"></text></g><g><title>hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::_{{closure}} (1 samples, 0.01%)</title><rect x="27.2545%" y="501" width="0.0111%" height="15" fill="rgb(103,213,213)" fg:x="2445" fg:w="1"/><text x="27.5045%" y="511.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="27.2545%" y="485" width="0.0111%" height="15" fill="rgb(78,191,191)" fg:x="2445" fg:w="1"/><text x="27.5045%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="27.2656%" y="517" width="0.0111%" height="15" fill="rgb(103,214,214)" fg:x="2446" fg:w="1"/><text x="27.5156%" y="527.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (176 samples, 1.96%)</title><rect x="25.3261%" y="597" width="1.9619%" height="15" fill="rgb(93,205,205)" fg:x="2272" fg:w="176"/><text x="25.5761%" y="607.50">a..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (34 samples, 0.38%)</title><rect x="26.9089%" y="581" width="0.3790%" height="15" fill="rgb(219,119,0)" fg:x="2414" fg:w="34"/><text x="27.1589%" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (34 samples, 0.38%)</title><rect x="26.9089%" y="565" width="0.3790%" height="15" fill="rgb(109,219,219)" fg:x="2414" fg:w="34"/><text x="27.1589%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.07%)</title><rect x="27.2210%" y="549" width="0.0669%" height="15" fill="rgb(84,196,196)" fg:x="2442" fg:w="6"/><text x="27.4710%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.07%)</title><rect x="27.2210%" y="533" width="0.0669%" height="15" fill="rgb(88,199,199)" fg:x="2442" fg:w="6"/><text x="27.4710%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.01%)</title><rect x="27.2768%" y="517" width="0.0111%" height="15" fill="rgb(66,179,179)" fg:x="2447" fg:w="1"/><text x="27.5268%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="27.2768%" y="501" width="0.0111%" height="15" fill="rgb(82,195,195)" fg:x="2447" fg:w="1"/><text x="27.5268%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="27.2768%" y="485" width="0.0111%" height="15" fill="rgb(245,145,0)" fg:x="2447" fg:w="1"/><text x="27.5268%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2879%" y="581" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.2879%" y="565" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (1 samples, 0.01%)</title><rect x="27.2879%" y="549" width="0.0111%" height="15" fill="rgb(233,133,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2879%" y="533" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2879%" y="517" width="0.0111%" height="15" fill="rgb(247,147,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2879%" y="501" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2879%" y="485" width="0.0111%" height="15" fill="rgb(201,101,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.2879%" y="469" width="0.0111%" height="15" fill="rgb(197,97,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="27.2879%" y="453" width="0.0111%" height="15" fill="rgb(207,107,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="27.2879%" y="437" width="0.0111%" height="15" fill="rgb(239,139,0)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="447.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="27.2879%" y="421" width="0.0111%" height="15" fill="rgb(187,187,54)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.2879%" y="405" width="0.0111%" height="15" fill="rgb(196,196,57)" fg:x="2448" fg:w="1"/><text x="27.5379%" y="415.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="27.3102%" y="293" width="0.0111%" height="15" fill="rgb(188,188,54)" fg:x="2450" fg:w="1"/><text x="27.5602%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="27.2991%" y="421" width="0.0669%" height="15" fill="rgb(226,126,0)" fg:x="2449" fg:w="6"/><text x="27.5491%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (6 samples, 0.07%)</title><rect x="27.2991%" y="405" width="0.0669%" height="15" fill="rgb(217,117,0)" fg:x="2449" fg:w="6"/><text x="27.5491%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (6 samples, 0.07%)</title><rect x="27.2991%" y="389" width="0.0669%" height="15" fill="rgb(237,137,0)" fg:x="2449" fg:w="6"/><text x="27.5491%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.07%)</title><rect x="27.2991%" y="373" width="0.0669%" height="15" fill="rgb(242,142,0)" fg:x="2449" fg:w="6"/><text x="27.5491%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.07%)</title><rect x="27.2991%" y="357" width="0.0669%" height="15" fill="rgb(202,102,0)" fg:x="2449" fg:w="6"/><text x="27.5491%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="27.2991%" y="341" width="0.0669%" height="15" fill="rgb(190,90,0)" fg:x="2449" fg:w="6"/><text x="27.5491%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="27.2991%" y="325" width="0.0669%" height="15" fill="rgb(195,95,0)" fg:x="2449" fg:w="6"/><text x="27.5491%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="27.2991%" y="309" width="0.0669%" height="15" fill="rgb(241,141,0)" fg:x="2449" fg:w="6"/><text x="27.5491%" y="319.50"></text></g><g><title>cfree (4 samples, 0.04%)</title><rect x="27.3214%" y="293" width="0.0446%" height="15" fill="rgb(203,203,60)" fg:x="2451" fg:w="4"/><text x="27.5714%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="27.3214%" y="277" width="0.0446%" height="15" fill="rgb(228,228,69)" fg:x="2451" fg:w="4"/><text x="27.5714%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.11%)</title><rect x="27.2991%" y="533" width="0.1115%" height="15" fill="rgb(57,172,172)" fg:x="2449" fg:w="10"/><text x="27.5491%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (10 samples, 0.11%)</title><rect x="27.2991%" y="517" width="0.1115%" height="15" fill="rgb(69,183,183)" fg:x="2449" fg:w="10"/><text x="27.5491%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (10 samples, 0.11%)</title><rect x="27.2991%" y="501" width="0.1115%" height="15" fill="rgb(68,182,182)" fg:x="2449" fg:w="10"/><text x="27.5491%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (10 samples, 0.11%)</title><rect x="27.2991%" y="485" width="0.1115%" height="15" fill="rgb(76,189,189)" fg:x="2449" fg:w="10"/><text x="27.5491%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (10 samples, 0.11%)</title><rect x="27.2991%" y="469" width="0.1115%" height="15" fill="rgb(191,91,0)" fg:x="2449" fg:w="10"/><text x="27.5491%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (10 samples, 0.11%)</title><rect x="27.2991%" y="453" width="0.1115%" height="15" fill="rgb(241,141,0)" fg:x="2449" fg:w="10"/><text x="27.5491%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (10 samples, 0.11%)</title><rect x="27.2991%" y="437" width="0.1115%" height="15" fill="rgb(253,153,0)" fg:x="2449" fg:w="10"/><text x="27.5491%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.04%)</title><rect x="27.3660%" y="421" width="0.0446%" height="15" fill="rgb(246,146,0)" fg:x="2455" fg:w="4"/><text x="27.6160%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="27.3660%" y="405" width="0.0446%" height="15" fill="rgb(203,103,0)" fg:x="2455" fg:w="4"/><text x="27.6160%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="27.3660%" y="389" width="0.0446%" height="15" fill="rgb(208,108,0)" fg:x="2455" fg:w="4"/><text x="27.6160%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="27.3660%" y="373" width="0.0446%" height="15" fill="rgb(224,124,0)" fg:x="2455" fg:w="4"/><text x="27.6160%" y="383.50"></text></g><g><title>cfree (4 samples, 0.04%)</title><rect x="27.3660%" y="357" width="0.0446%" height="15" fill="rgb(191,191,56)" fg:x="2455" fg:w="4"/><text x="27.6160%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="27.3771%" y="341" width="0.0334%" height="15" fill="rgb(195,195,57)" fg:x="2456" fg:w="3"/><text x="27.6271%" y="351.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_new_layouts (413 samples, 4.60%)</title><rect x="22.8180%" y="629" width="4.6037%" height="15" fill="rgb(63,177,177)" fg:x="2047" fg:w="413"/><text x="23.0680%" y="639.50">alc::..</text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::swap (234 samples, 2.61%)</title><rect x="24.8133%" y="613" width="2.6084%" height="15" fill="rgb(54,169,169)" fg:x="2226" fg:w="234"/><text x="25.0633%" y="623.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (12 samples, 0.13%)</title><rect x="27.2879%" y="597" width="0.1338%" height="15" fill="rgb(220,120,0)" fg:x="2448" fg:w="12"/><text x="27.5379%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (11 samples, 0.12%)</title><rect x="27.2991%" y="581" width="0.1226%" height="15" fill="rgb(240,140,0)" fg:x="2449" fg:w="11"/><text x="27.5491%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (11 samples, 0.12%)</title><rect x="27.2991%" y="565" width="0.1226%" height="15" fill="rgb(244,144,0)" fg:x="2449" fg:w="11"/><text x="27.5491%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (11 samples, 0.12%)</title><rect x="27.2991%" y="549" width="0.1226%" height="15" fill="rgb(236,136,0)" fg:x="2449" fg:w="11"/><text x="27.5491%" y="559.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="27.4105%" y="533" width="0.0111%" height="15" fill="rgb(181,181,52)" fg:x="2459" fg:w="1"/><text x="27.6605%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.4105%" y="517" width="0.0111%" height="15" fill="rgb(211,211,63)" fg:x="2459" fg:w="1"/><text x="27.6605%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.4105%" y="501" width="0.0111%" height="15" fill="rgb(223,223,67)" fg:x="2459" fg:w="1"/><text x="27.6605%" y="511.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (1 samples, 0.01%)</title><rect x="27.4217%" y="629" width="0.0111%" height="15" fill="rgb(92,204,204)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="639.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (1 samples, 0.01%)</title><rect x="27.4217%" y="613" width="0.0111%" height="15" fill="rgb(103,213,213)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="623.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (1 samples, 0.01%)</title><rect x="27.4217%" y="597" width="0.0111%" height="15" fill="rgb(91,203,203)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="607.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="27.4217%" y="581" width="0.0111%" height="15" fill="rgb(97,208,208)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="27.4217%" y="565" width="0.0111%" height="15" fill="rgb(245,145,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="27.4217%" y="549" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="27.4217%" y="533" width="0.0111%" height="15" fill="rgb(207,107,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="27.4217%" y="517" width="0.0111%" height="15" fill="rgb(97,208,208)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="27.4217%" y="501" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="27.4217%" y="485" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="27.4217%" y="469" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="27.4217%" y="453" width="0.0111%" height="15" fill="rgb(215,115,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="27.4217%" y="437" width="0.0111%" height="15" fill="rgb(223,123,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="27.4217%" y="421" width="0.0111%" height="15" fill="rgb(230,130,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="27.4217%" y="405" width="0.0111%" height="15" fill="rgb(180,180,52)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="27.4217%" y="389" width="0.0111%" height="15" fill="rgb(211,111,0)" fg:x="2460" fg:w="1"/><text x="27.6717%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="27.4328%" y="437" width="0.0446%" height="15" fill="rgb(235,135,0)" fg:x="2461" fg:w="4"/><text x="27.6828%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="27.4328%" y="421" width="0.0446%" height="15" fill="rgb(223,123,0)" fg:x="2461" fg:w="4"/><text x="27.6828%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="27.4328%" y="405" width="0.0446%" height="15" fill="rgb(241,141,0)" fg:x="2461" fg:w="4"/><text x="27.6828%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="27.4328%" y="389" width="0.0446%" height="15" fill="rgb(197,97,0)" fg:x="2461" fg:w="4"/><text x="27.6828%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="27.4328%" y="373" width="0.0446%" height="15" fill="rgb(198,98,0)" fg:x="2461" fg:w="4"/><text x="27.6828%" y="383.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="27.4328%" y="357" width="0.0446%" height="15" fill="rgb(206,106,0)" fg:x="2461" fg:w="4"/><text x="27.6828%" y="367.50"></text></g><g><title>malloc (4 samples, 0.04%)</title><rect x="27.4328%" y="341" width="0.0446%" height="15" fill="rgb(223,223,67)" fg:x="2461" fg:w="4"/><text x="27.6828%" y="351.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="27.4328%" y="325" width="0.0446%" height="15" fill="rgb(224,224,67)" fg:x="2461" fg:w="4"/><text x="27.6828%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.4663%" y="309" width="0.0111%" height="15" fill="rgb(191,191,55)" fg:x="2464" fg:w="1"/><text x="27.7163%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="27.4328%" y="597" width="0.1115%" height="15" fill="rgb(217,117,0)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.11%)</title><rect x="27.4328%" y="581" width="0.1115%" height="15" fill="rgb(222,122,0)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.11%)</title><rect x="27.4328%" y="565" width="0.1115%" height="15" fill="rgb(206,106,0)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.11%)</title><rect x="27.4328%" y="549" width="0.1115%" height="15" fill="rgb(68,181,181)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="559.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="27.4328%" y="533" width="0.1115%" height="15" fill="rgb(72,185,185)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="543.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="27.4328%" y="517" width="0.1115%" height="15" fill="rgb(60,174,174)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="27.4328%" y="501" width="0.1115%" height="15" fill="rgb(246,146,0)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.11%)</title><rect x="27.4328%" y="485" width="0.1115%" height="15" fill="rgb(238,138,0)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.11%)</title><rect x="27.4328%" y="469" width="0.1115%" height="15" fill="rgb(246,146,0)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.11%)</title><rect x="27.4328%" y="453" width="0.1115%" height="15" fill="rgb(61,175,175)" fg:x="2461" fg:w="10"/><text x="27.6828%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.07%)</title><rect x="27.4774%" y="437" width="0.0669%" height="15" fill="rgb(241,141,0)" fg:x="2465" fg:w="6"/><text x="27.7274%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.07%)</title><rect x="27.4774%" y="421" width="0.0669%" height="15" fill="rgb(239,139,0)" fg:x="2465" fg:w="6"/><text x="27.7274%" y="431.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="27.4774%" y="405" width="0.0669%" height="15" fill="rgb(184,184,53)" fg:x="2465" fg:w="6"/><text x="27.7274%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="27.5443%" y="517" width="0.0223%" height="15" fill="rgb(60,174,174)" fg:x="2471" fg:w="2"/><text x="27.7943%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="27.5555%" y="501" width="0.0111%" height="15" fill="rgb(76,189,189)" fg:x="2472" fg:w="1"/><text x="27.8055%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="27.5555%" y="485" width="0.0111%" height="15" fill="rgb(86,198,198)" fg:x="2472" fg:w="1"/><text x="27.8055%" y="495.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="27.5666%" y="501" width="0.0111%" height="15" fill="rgb(102,213,213)" fg:x="2473" fg:w="1"/><text x="27.8166%" y="511.50"></text></g><g><title>__rdl_alloc (4 samples, 0.04%)</title><rect x="27.6446%" y="261" width="0.0446%" height="15" fill="rgb(204,204,60)" fg:x="2480" fg:w="4"/><text x="27.8946%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.04%)</title><rect x="27.6446%" y="245" width="0.0446%" height="15" fill="rgb(252,152,0)" fg:x="2480" fg:w="4"/><text x="27.8946%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.36%)</title><rect x="27.6335%" y="309" width="0.3567%" height="15" fill="rgb(228,128,0)" fg:x="2479" fg:w="32"/><text x="27.8835%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.36%)</title><rect x="27.6335%" y="293" width="0.3567%" height="15" fill="rgb(200,100,0)" fg:x="2479" fg:w="32"/><text x="27.8835%" y="303.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.36%)</title><rect x="27.6335%" y="277" width="0.3567%" height="15" fill="rgb(205,105,0)" fg:x="2479" fg:w="32"/><text x="27.8835%" y="287.50"></text></g><g><title>malloc (27 samples, 0.30%)</title><rect x="27.6892%" y="261" width="0.3010%" height="15" fill="rgb(183,183,53)" fg:x="2484" fg:w="27"/><text x="27.9392%" y="271.50"></text></g><g><title>[libc.so.6] (23 samples, 0.26%)</title><rect x="27.7338%" y="245" width="0.2564%" height="15" fill="rgb(185,185,53)" fg:x="2488" fg:w="23"/><text x="27.9838%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.9790%" y="229" width="0.0111%" height="15" fill="rgb(185,185,53)" fg:x="2510" fg:w="1"/><text x="28.2290%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (34 samples, 0.38%)</title><rect x="27.6223%" y="357" width="0.3790%" height="15" fill="rgb(248,148,0)" fg:x="2478" fg:w="34"/><text x="27.8723%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (34 samples, 0.38%)</title><rect x="27.6223%" y="341" width="0.3790%" height="15" fill="rgb(237,137,0)" fg:x="2478" fg:w="34"/><text x="27.8723%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (34 samples, 0.38%)</title><rect x="27.6223%" y="325" width="0.3790%" height="15" fill="rgb(208,108,0)" fg:x="2478" fg:w="34"/><text x="27.8723%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="27.9902%" y="309" width="0.0111%" height="15" fill="rgb(224,124,0)" fg:x="2511" fg:w="1"/><text x="28.2402%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="27.9902%" y="293" width="0.0111%" height="15" fill="rgb(207,107,0)" fg:x="2511" fg:w="1"/><text x="28.2402%" y="303.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (40 samples, 0.45%)</title><rect x="27.6223%" y="437" width="0.4459%" height="15" fill="rgb(51,166,166)" fg:x="2478" fg:w="40"/><text x="27.8723%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.45%)</title><rect x="27.6223%" y="421" width="0.4459%" height="15" fill="rgb(215,115,0)" fg:x="2478" fg:w="40"/><text x="27.8723%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40 samples, 0.45%)</title><rect x="27.6223%" y="405" width="0.4459%" height="15" fill="rgb(233,133,0)" fg:x="2478" fg:w="40"/><text x="27.8723%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (40 samples, 0.45%)</title><rect x="27.6223%" y="389" width="0.4459%" height="15" fill="rgb(206,106,0)" fg:x="2478" fg:w="40"/><text x="27.8723%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40 samples, 0.45%)</title><rect x="27.6223%" y="373" width="0.4459%" height="15" fill="rgb(93,204,204)" fg:x="2478" fg:w="40"/><text x="27.8723%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.07%)</title><rect x="28.0013%" y="357" width="0.0669%" height="15" fill="rgb(241,141,0)" fg:x="2512" fg:w="6"/><text x="28.2513%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.07%)</title><rect x="28.0013%" y="341" width="0.0669%" height="15" fill="rgb(192,92,0)" fg:x="2512" fg:w="6"/><text x="28.2513%" y="351.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="28.0125%" y="325" width="0.0557%" height="15" fill="rgb(177,177,50)" fg:x="2513" fg:w="5"/><text x="28.2625%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="28.0682%" y="437" width="0.0334%" height="15" fill="rgb(195,95,0)" fg:x="2518" fg:w="3"/><text x="28.3182%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="28.0682%" y="421" width="0.0334%" height="15" fill="rgb(191,91,0)" fg:x="2518" fg:w="3"/><text x="28.3182%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="28.0682%" y="405" width="0.0334%" height="15" fill="rgb(194,94,0)" fg:x="2518" fg:w="3"/><text x="28.3182%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="28.0682%" y="389" width="0.0334%" height="15" fill="rgb(238,138,0)" fg:x="2518" fg:w="3"/><text x="28.3182%" y="399.50"></text></g><g><title>core::clone::Clone::clone (62 samples, 0.69%)</title><rect x="27.5666%" y="517" width="0.6911%" height="15" fill="rgb(218,118,0)" fg:x="2473" fg:w="62"/><text x="27.8166%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (61 samples, 0.68%)</title><rect x="27.5778%" y="501" width="0.6800%" height="15" fill="rgb(212,112,0)" fg:x="2474" fg:w="61"/><text x="27.8278%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.68%)</title><rect x="27.5778%" y="485" width="0.6800%" height="15" fill="rgb(195,95,0)" fg:x="2474" fg:w="61"/><text x="27.8278%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.68%)</title><rect x="27.5778%" y="469" width="0.6800%" height="15" fill="rgb(206,106,0)" fg:x="2474" fg:w="61"/><text x="27.8278%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.68%)</title><rect x="27.5778%" y="453" width="0.6800%" height="15" fill="rgb(74,187,187)" fg:x="2474" fg:w="61"/><text x="27.8278%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.16%)</title><rect x="28.1017%" y="437" width="0.1561%" height="15" fill="rgb(239,139,0)" fg:x="2521" fg:w="14"/><text x="28.3517%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.16%)</title><rect x="28.1017%" y="421" width="0.1561%" height="15" fill="rgb(210,110,0)" fg:x="2521" fg:w="14"/><text x="28.3517%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.16%)</title><rect x="28.1017%" y="405" width="0.1561%" height="15" fill="rgb(225,125,0)" fg:x="2521" fg:w="14"/><text x="28.3517%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.16%)</title><rect x="28.1017%" y="389" width="0.1561%" height="15" fill="rgb(238,138,0)" fg:x="2521" fg:w="14"/><text x="28.3517%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.16%)</title><rect x="28.1017%" y="373" width="0.1561%" height="15" fill="rgb(222,122,0)" fg:x="2521" fg:w="14"/><text x="28.3517%" y="383.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.16%)</title><rect x="28.1017%" y="357" width="0.1561%" height="15" fill="rgb(202,102,0)" fg:x="2521" fg:w="14"/><text x="28.3517%" y="367.50"></text></g><g><title>malloc (14 samples, 0.16%)</title><rect x="28.1017%" y="341" width="0.1561%" height="15" fill="rgb(182,182,52)" fg:x="2521" fg:w="14"/><text x="28.3517%" y="351.50"></text></g><g><title>[libc.so.6] (12 samples, 0.13%)</title><rect x="28.1240%" y="325" width="0.1338%" height="15" fill="rgb(192,192,56)" fg:x="2523" fg:w="12"/><text x="28.3740%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (67 samples, 0.75%)</title><rect x="27.5443%" y="549" width="0.7469%" height="15" fill="rgb(109,219,219)" fg:x="2471" fg:w="67"/><text x="27.7943%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (67 samples, 0.75%)</title><rect x="27.5443%" y="533" width="0.7469%" height="15" fill="rgb(102,213,213)" fg:x="2471" fg:w="67"/><text x="27.7943%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="28.2577%" y="517" width="0.0334%" height="15" fill="rgb(108,218,218)" fg:x="2535" fg:w="3"/><text x="28.5077%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.03%)</title><rect x="28.2577%" y="501" width="0.0334%" height="15" fill="rgb(194,94,0)" fg:x="2535" fg:w="3"/><text x="28.5077%" y="511.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="28.2577%" y="485" width="0.0334%" height="15" fill="rgb(219,119,0)" fg:x="2535" fg:w="3"/><text x="28.5077%" y="495.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.01%)</title><rect x="28.2912%" y="517" width="0.0111%" height="15" fill="rgb(77,189,189)" fg:x="2538" fg:w="1"/><text x="28.5412%" y="527.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (79 samples, 0.88%)</title><rect x="27.4328%" y="613" width="0.8806%" height="15" fill="rgb(107,217,217)" fg:x="2461" fg:w="79"/><text x="27.6828%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (69 samples, 0.77%)</title><rect x="27.5443%" y="597" width="0.7691%" height="15" fill="rgb(234,134,0)" fg:x="2471" fg:w="69"/><text x="27.7943%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.77%)</title><rect x="27.5443%" y="581" width="0.7691%" height="15" fill="rgb(52,167,167)" fg:x="2471" fg:w="69"/><text x="27.7943%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.77%)</title><rect x="27.5443%" y="565" width="0.7691%" height="15" fill="rgb(69,182,182)" fg:x="2471" fg:w="69"/><text x="27.7943%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="28.2912%" y="549" width="0.0223%" height="15" fill="rgb(70,184,184)" fg:x="2538" fg:w="2"/><text x="28.5412%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="28.2912%" y="533" width="0.0223%" height="15" fill="rgb(52,167,167)" fg:x="2538" fg:w="2"/><text x="28.5412%" y="543.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="28.3023%" y="517" width="0.0111%" height="15" fill="rgb(85,197,197)" fg:x="2539" fg:w="1"/><text x="28.5523%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="28.3023%" y="501" width="0.0111%" height="15" fill="rgb(225,125,0)" fg:x="2539" fg:w="1"/><text x="28.5523%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="28.3023%" y="485" width="0.0111%" height="15" fill="rgb(202,102,0)" fg:x="2539" fg:w="1"/><text x="28.5523%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="28.3023%" y="469" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="2539" fg:w="1"/><text x="28.5523%" y="479.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="28.3023%" y="453" width="0.0111%" height="15" fill="rgb(184,184,53)" fg:x="2539" fg:w="1"/><text x="28.5523%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="28.3023%" y="437" width="0.0111%" height="15" fill="rgb(193,193,56)" fg:x="2539" fg:w="1"/><text x="28.5523%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="28.3580%" y="501" width="0.0111%" height="15" fill="rgb(77,190,190)" fg:x="2544" fg:w="1"/><text x="28.6080%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="28.3580%" y="485" width="0.0111%" height="15" fill="rgb(84,196,196)" fg:x="2544" fg:w="1"/><text x="28.6080%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="28.3580%" y="469" width="0.0111%" height="15" fill="rgb(70,183,183)" fg:x="2544" fg:w="1"/><text x="28.6080%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="28.3580%" y="453" width="0.0111%" height="15" fill="rgb(228,128,0)" fg:x="2544" fg:w="1"/><text x="28.6080%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="28.3580%" y="437" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="2544" fg:w="1"/><text x="28.6080%" y="447.50"></text></g><g><title>__rdl_alloc (5 samples, 0.06%)</title><rect x="28.3803%" y="309" width="0.0557%" height="15" fill="rgb(210,210,62)" fg:x="2546" fg:w="5"/><text x="28.6303%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.06%)</title><rect x="28.3803%" y="293" width="0.0557%" height="15" fill="rgb(205,105,0)" fg:x="2546" fg:w="5"/><text x="28.6303%" y="303.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="28.4361%" y="309" width="0.0111%" height="15" fill="rgb(246,146,0)" fg:x="2551" fg:w="1"/><text x="28.6861%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.75%)</title><rect x="28.3803%" y="357" width="0.7469%" height="15" fill="rgb(235,135,0)" fg:x="2546" fg:w="67"/><text x="28.6303%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.75%)</title><rect x="28.3803%" y="341" width="0.7469%" height="15" fill="rgb(231,131,0)" fg:x="2546" fg:w="67"/><text x="28.6303%" y="351.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.75%)</title><rect x="28.3803%" y="325" width="0.7469%" height="15" fill="rgb(203,103,0)" fg:x="2546" fg:w="67"/><text x="28.6303%" y="335.50"></text></g><g><title>malloc (61 samples, 0.68%)</title><rect x="28.4472%" y="309" width="0.6800%" height="15" fill="rgb(207,207,61)" fg:x="2552" fg:w="61"/><text x="28.6972%" y="319.50"></text></g><g><title>[libc.so.6] (52 samples, 0.58%)</title><rect x="28.5475%" y="293" width="0.5796%" height="15" fill="rgb(229,229,69)" fg:x="2561" fg:w="52"/><text x="28.7975%" y="303.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="29.0937%" y="277" width="0.0334%" height="15" fill="rgb(211,211,63)" fg:x="2610" fg:w="3"/><text x="29.3437%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (70 samples, 0.78%)</title><rect x="28.3692%" y="405" width="0.7803%" height="15" fill="rgb(210,110,0)" fg:x="2545" fg:w="70"/><text x="28.6192%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (70 samples, 0.78%)</title><rect x="28.3692%" y="389" width="0.7803%" height="15" fill="rgb(229,129,0)" fg:x="2545" fg:w="70"/><text x="28.6192%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (70 samples, 0.78%)</title><rect x="28.3692%" y="373" width="0.7803%" height="15" fill="rgb(205,105,0)" fg:x="2545" fg:w="70"/><text x="28.6192%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="29.1272%" y="357" width="0.0223%" height="15" fill="rgb(227,127,0)" fg:x="2613" fg:w="2"/><text x="29.3772%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.02%)</title><rect x="29.1272%" y="341" width="0.0223%" height="15" fill="rgb(220,120,0)" fg:x="2613" fg:w="2"/><text x="29.3772%" y="351.50"></text></g><g><title>core::clone::Clone::clone (80 samples, 0.89%)</title><rect x="28.3692%" y="501" width="0.8918%" height="15" fill="rgb(196,96,0)" fg:x="2545" fg:w="80"/><text x="28.6192%" y="511.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (80 samples, 0.89%)</title><rect x="28.3692%" y="485" width="0.8918%" height="15" fill="rgb(86,198,198)" fg:x="2545" fg:w="80"/><text x="28.6192%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (80 samples, 0.89%)</title><rect x="28.3692%" y="469" width="0.8918%" height="15" fill="rgb(213,113,0)" fg:x="2545" fg:w="80"/><text x="28.6192%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80 samples, 0.89%)</title><rect x="28.3692%" y="453" width="0.8918%" height="15" fill="rgb(219,119,0)" fg:x="2545" fg:w="80"/><text x="28.6192%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (80 samples, 0.89%)</title><rect x="28.3692%" y="437" width="0.8918%" height="15" fill="rgb(243,143,0)" fg:x="2545" fg:w="80"/><text x="28.6192%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (80 samples, 0.89%)</title><rect x="28.3692%" y="421" width="0.8918%" height="15" fill="rgb(86,198,198)" fg:x="2545" fg:w="80"/><text x="28.6192%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (10 samples, 0.11%)</title><rect x="29.1495%" y="405" width="0.1115%" height="15" fill="rgb(234,134,0)" fg:x="2615" fg:w="10"/><text x="29.3995%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.11%)</title><rect x="29.1495%" y="389" width="0.1115%" height="15" fill="rgb(253,153,0)" fg:x="2615" fg:w="10"/><text x="29.3995%" y="399.50"></text></g><g><title>[libc.so.6] (10 samples, 0.11%)</title><rect x="29.1495%" y="373" width="0.1115%" height="15" fill="rgb(188,188,54)" fg:x="2615" fg:w="10"/><text x="29.3995%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="29.2610%" y="501" width="0.0223%" height="15" fill="rgb(204,104,0)" fg:x="2625" fg:w="2"/><text x="29.5110%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="29.2610%" y="485" width="0.0223%" height="15" fill="rgb(221,121,0)" fg:x="2625" fg:w="2"/><text x="29.5110%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="29.2610%" y="469" width="0.0223%" height="15" fill="rgb(212,212,63)" fg:x="2625" fg:w="2"/><text x="29.5110%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="29.2832%" y="501" width="0.0111%" height="15" fill="rgb(68,181,181)" fg:x="2627" fg:w="1"/><text x="29.5332%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="29.2832%" y="485" width="0.0111%" height="15" fill="rgb(220,120,0)" fg:x="2627" fg:w="1"/><text x="29.5332%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="29.2832%" y="469" width="0.0111%" height="15" fill="rgb(226,126,0)" fg:x="2627" fg:w="1"/><text x="29.5332%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (87 samples, 0.97%)</title><rect x="28.3357%" y="533" width="0.9698%" height="15" fill="rgb(69,182,182)" fg:x="2542" fg:w="87"/><text x="28.5857%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (87 samples, 0.97%)</title><rect x="28.3357%" y="517" width="0.9698%" height="15" fill="rgb(65,178,178)" fg:x="2542" fg:w="87"/><text x="28.5857%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (1 samples, 0.01%)</title><rect x="29.2944%" y="501" width="0.0111%" height="15" fill="rgb(108,218,218)" fg:x="2628" fg:w="1"/><text x="29.5444%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (1 samples, 0.01%)</title><rect x="29.2944%" y="485" width="0.0111%" height="15" fill="rgb(60,174,174)" fg:x="2628" fg:w="1"/><text x="29.5444%" y="495.50"></text></g><g><title>hashbrown::raw::offset_from (1 samples, 0.01%)</title><rect x="29.2944%" y="469" width="0.0111%" height="15" fill="rgb(68,182,182)" fg:x="2628" fg:w="1"/><text x="29.5444%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (1 samples, 0.01%)</title><rect x="29.2944%" y="453" width="0.0111%" height="15" fill="rgb(244,144,0)" fg:x="2628" fg:w="1"/><text x="29.5444%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (33 samples, 0.37%)</title><rect x="29.3055%" y="533" width="0.3679%" height="15" fill="rgb(60,174,174)" fg:x="2629" fg:w="33"/><text x="29.5555%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (33 samples, 0.37%)</title><rect x="29.3055%" y="517" width="0.3679%" height="15" fill="rgb(72,185,185)" fg:x="2629" fg:w="33"/><text x="29.5555%" y="527.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (33 samples, 0.37%)</title><rect x="29.3055%" y="501" width="0.3679%" height="15" fill="rgb(68,181,181)" fg:x="2629" fg:w="33"/><text x="29.5555%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.37%)</title><rect x="29.3055%" y="485" width="0.3679%" height="15" fill="rgb(245,145,0)" fg:x="2629" fg:w="33"/><text x="29.5555%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.37%)</title><rect x="29.3055%" y="469" width="0.3679%" height="15" fill="rgb(202,102,0)" fg:x="2629" fg:w="33"/><text x="29.5555%" y="479.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.37%)</title><rect x="29.3055%" y="453" width="0.3679%" height="15" fill="rgb(208,108,0)" fg:x="2629" fg:w="33"/><text x="29.5555%" y="463.50"></text></g><g><title>malloc (33 samples, 0.37%)</title><rect x="29.3055%" y="437" width="0.3679%" height="15" fill="rgb(206,206,61)" fg:x="2629" fg:w="33"/><text x="29.5555%" y="447.50"></text></g><g><title>[libc.so.6] (33 samples, 0.37%)</title><rect x="29.3055%" y="421" width="0.3679%" height="15" fill="rgb(223,223,67)" fg:x="2629" fg:w="33"/><text x="29.5555%" y="431.50"></text></g><g><title>[libc.so.6] (24 samples, 0.27%)</title><rect x="29.4059%" y="405" width="0.2675%" height="15" fill="rgb(198,198,58)" fg:x="2638" fg:w="24"/><text x="29.6559%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="29.6400%" y="389" width="0.0334%" height="15" fill="rgb(211,211,63)" fg:x="2659" fg:w="3"/><text x="29.8900%" y="399.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::clone::Clone&gt;::clone (123 samples, 1.37%)</title><rect x="28.3135%" y="597" width="1.3711%" height="15" fill="rgb(75,188,188)" fg:x="2540" fg:w="123"/><text x="28.5635%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (123 samples, 1.37%)</title><rect x="28.3135%" y="581" width="1.3711%" height="15" fill="rgb(205,105,0)" fg:x="2540" fg:w="123"/><text x="28.5635%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (123 samples, 1.37%)</title><rect x="28.3135%" y="565" width="1.3711%" height="15" fill="rgb(65,179,179)" fg:x="2540" fg:w="123"/><text x="28.5635%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (122 samples, 1.36%)</title><rect x="28.3246%" y="549" width="1.3599%" height="15" fill="rgb(63,177,177)" fg:x="2541" fg:w="122"/><text x="28.5746%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1 samples, 0.01%)</title><rect x="29.6734%" y="533" width="0.0111%" height="15" fill="rgb(93,204,204)" fg:x="2662" fg:w="1"/><text x="29.9234%" y="543.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.22%)</title><rect x="32.0700%" y="565" width="0.2229%" height="15" fill="rgb(83,195,195)" fg:x="2877" fg:w="20"/><text x="32.3200%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.14%)</title><rect x="32.1480%" y="549" width="0.1449%" height="15" fill="rgb(219,119,0)" fg:x="2884" fg:w="13"/><text x="32.3980%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="32.2818%" y="533" width="0.0111%" height="15" fill="rgb(249,149,0)" fg:x="2896" fg:w="1"/><text x="32.5318%" y="543.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (59 samples, 0.66%)</title><rect x="32.9395%" y="517" width="0.6577%" height="15" fill="rgb(64,178,178)" fg:x="2955" fg:w="59"/><text x="33.1895%" y="527.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (122 samples, 1.36%)</title><rect x="32.2929%" y="565" width="1.3599%" height="15" fill="rgb(89,201,201)" fg:x="2897" fg:w="122"/><text x="32.5429%" y="575.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (122 samples, 1.36%)</title><rect x="32.2929%" y="549" width="1.3599%" height="15" fill="rgb(62,176,176)" fg:x="2897" fg:w="122"/><text x="32.5429%" y="559.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (64 samples, 0.71%)</title><rect x="32.9395%" y="533" width="0.7134%" height="15" fill="rgb(54,169,169)" fg:x="2955" fg:w="64"/><text x="33.1895%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.06%)</title><rect x="33.5971%" y="517" width="0.0557%" height="15" fill="rgb(240,140,0)" fg:x="3014" fg:w="5"/><text x="33.8471%" y="527.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get::_{{closure}} (5 samples, 0.06%)</title><rect x="33.5971%" y="501" width="0.0557%" height="15" fill="rgb(70,183,183)" fg:x="3014" fg:w="5"/><text x="33.8471%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.06%)</title><rect x="33.5971%" y="485" width="0.0557%" height="15" fill="rgb(216,116,0)" fg:x="3014" fg:w="5"/><text x="33.8471%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.06%)</title><rect x="33.5971%" y="469" width="0.0557%" height="15" fill="rgb(233,133,0)" fg:x="3014" fg:w="5"/><text x="33.8471%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.06%)</title><rect x="33.5971%" y="453" width="0.0557%" height="15" fill="rgb(53,167,167)" fg:x="3014" fg:w="5"/><text x="33.8471%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.97%)</title><rect x="33.6529%" y="565" width="0.9698%" height="15" fill="rgb(237,137,0)" fg:x="3019" fg:w="87"/><text x="33.9029%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.97%)</title><rect x="33.6529%" y="549" width="0.9698%" height="15" fill="rgb(245,145,0)" fg:x="3019" fg:w="87"/><text x="33.9029%" y="559.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="34.5892%" y="533" width="0.0334%" height="15" fill="rgb(209,109,0)" fg:x="3103" fg:w="3"/><text x="34.8392%" y="543.50"></text></g><g><title>__rdl_dealloc (10 samples, 0.11%)</title><rect x="34.7676%" y="421" width="0.1115%" height="15" fill="rgb(182,182,52)" fg:x="3119" fg:w="10"/><text x="35.0176%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (10 samples, 0.11%)</title><rect x="34.7676%" y="405" width="0.1115%" height="15" fill="rgb(252,152,0)" fg:x="3119" fg:w="10"/><text x="35.0176%" y="415.50"></text></g><g><title>__rust_dealloc (7 samples, 0.08%)</title><rect x="34.8791%" y="421" width="0.0780%" height="15" fill="rgb(190,190,55)" fg:x="3129" fg:w="7"/><text x="35.1291%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (346 samples, 3.86%)</title><rect x="34.6450%" y="453" width="3.8569%" height="15" fill="rgb(224,124,0)" fg:x="3108" fg:w="346"/><text x="34.8950%" y="463.50">&lt;all..</text></g><g><title>alloc::alloc::dealloc (346 samples, 3.86%)</title><rect x="34.6450%" y="437" width="3.8569%" height="15" fill="rgb(234,134,0)" fg:x="3108" fg:w="346"/><text x="34.8950%" y="447.50">allo..</text></g><g><title>cfree (318 samples, 3.54%)</title><rect x="34.9571%" y="421" width="3.5448%" height="15" fill="rgb(181,181,52)" fg:x="3136" fg:w="318"/><text x="35.2071%" y="431.50">cfree</text></g><g><title>[libc.so.6] (280 samples, 3.12%)</title><rect x="35.3807%" y="405" width="3.1212%" height="15" fill="rgb(184,184,53)" fg:x="3174" fg:w="280"/><text x="35.6307%" y="415.50">[li..</text></g><g><title>[libc.so.6] (109 samples, 1.22%)</title><rect x="37.2868%" y="389" width="1.2150%" height="15" fill="rgb(197,197,58)" fg:x="3345" fg:w="109"/><text x="37.5368%" y="399.50"></text></g><g><title>[libc.so.6] (20 samples, 0.22%)</title><rect x="38.2789%" y="373" width="0.2229%" height="15" fill="rgb(213,213,63)" fg:x="3434" fg:w="20"/><text x="38.5289%" y="383.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (747 samples, 8.33%)</title><rect x="30.2642%" y="581" width="8.3268%" height="15" fill="rgb(92,204,204)" fg:x="2715" fg:w="747"/><text x="30.5142%" y="591.50">&lt;alc::object..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt;&gt; (356 samples, 3.97%)</title><rect x="34.6227%" y="565" width="3.9683%" height="15" fill="rgb(215,115,0)" fg:x="3106" fg:w="356"/><text x="34.8727%" y="575.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (356 samples, 3.97%)</title><rect x="34.6227%" y="549" width="3.9683%" height="15" fill="rgb(237,137,0)" fg:x="3106" fg:w="356"/><text x="34.8727%" y="559.50">core..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (356 samples, 3.97%)</title><rect x="34.6227%" y="533" width="3.9683%" height="15" fill="rgb(212,112,0)" fg:x="3106" fg:w="356"/><text x="34.8727%" y="543.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (356 samples, 3.97%)</title><rect x="34.6227%" y="517" width="3.9683%" height="15" fill="rgb(222,122,0)" fg:x="3106" fg:w="356"/><text x="34.8727%" y="527.50">core..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (356 samples, 3.97%)</title><rect x="34.6227%" y="501" width="3.9683%" height="15" fill="rgb(63,177,177)" fg:x="3106" fg:w="356"/><text x="34.8727%" y="511.50">&lt;&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (354 samples, 3.95%)</title><rect x="34.6450%" y="485" width="3.9460%" height="15" fill="rgb(209,109,0)" fg:x="3108" fg:w="354"/><text x="34.8950%" y="495.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (354 samples, 3.95%)</title><rect x="34.6450%" y="469" width="3.9460%" height="15" fill="rgb(240,140,0)" fg:x="3108" fg:w="354"/><text x="34.8950%" y="479.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.09%)</title><rect x="38.5018%" y="453" width="0.0892%" height="15" fill="rgb(226,126,0)" fg:x="3454" fg:w="8"/><text x="38.7518%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.10%)</title><rect x="38.5910%" y="581" width="0.1003%" height="15" fill="rgb(220,120,0)" fg:x="3462" fg:w="9"/><text x="38.8410%" y="591.50"></text></g><g><title>core::ptr::read (4 samples, 0.04%)</title><rect x="38.6468%" y="565" width="0.0446%" height="15" fill="rgb(204,104,0)" fg:x="3467" fg:w="4"/><text x="38.8968%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="38.6913%" y="581" width="0.0334%" height="15" fill="rgb(206,106,0)" fg:x="3471" fg:w="3"/><text x="38.9413%" y="591.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="38.6913%" y="565" width="0.0334%" height="15" fill="rgb(101,211,211)" fg:x="3471" fg:w="3"/><text x="38.9413%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="38.6913%" y="549" width="0.0334%" height="15" fill="rgb(86,198,198)" fg:x="3471" fg:w="3"/><text x="38.9413%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.7136%" y="533" width="0.0111%" height="15" fill="rgb(79,191,191)" fg:x="3473" fg:w="1"/><text x="38.9636%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="38.7136%" y="517" width="0.0111%" height="15" fill="rgb(100,211,211)" fg:x="3473" fg:w="1"/><text x="38.9636%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="38.7136%" y="501" width="0.0111%" height="15" fill="rgb(68,181,181)" fg:x="3473" fg:w="1"/><text x="38.9636%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="38.7136%" y="485" width="0.0111%" height="15" fill="rgb(83,195,195)" fg:x="3473" fg:w="1"/><text x="38.9636%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="38.7136%" y="469" width="0.0111%" height="15" fill="rgb(240,140,0)" fg:x="3473" fg:w="1"/><text x="38.9636%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="40.0290%" y="533" width="0.0334%" height="15" fill="rgb(210,110,0)" fg:x="3591" fg:w="3"/><text x="40.2790%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.03%)</title><rect x="40.0290%" y="517" width="0.0334%" height="15" fill="rgb(249,149,0)" fg:x="3591" fg:w="3"/><text x="40.2790%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.03%)</title><rect x="40.0290%" y="501" width="0.0334%" height="15" fill="rgb(232,132,0)" fg:x="3591" fg:w="3"/><text x="40.2790%" y="511.50"></text></g><g><title>__rdl_alloc (36 samples, 0.40%)</title><rect x="40.4972%" y="389" width="0.4013%" height="15" fill="rgb(205,205,61)" fg:x="3633" fg:w="36"/><text x="40.7472%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (35 samples, 0.39%)</title><rect x="40.5083%" y="373" width="0.3901%" height="15" fill="rgb(219,119,0)" fg:x="3634" fg:w="35"/><text x="40.7583%" y="383.50"></text></g><g><title>__rust_alloc (15 samples, 0.17%)</title><rect x="40.8985%" y="389" width="0.1672%" height="15" fill="rgb(182,182,52)" fg:x="3669" fg:w="15"/><text x="41.1485%" y="399.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="41.0657%" y="389" width="0.0111%" height="15" fill="rgb(190,90,0)" fg:x="3684" fg:w="1"/><text x="41.3157%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (204 samples, 2.27%)</title><rect x="40.3522%" y="437" width="2.2740%" height="15" fill="rgb(230,130,0)" fg:x="3620" fg:w="204"/><text x="40.6022%" y="447.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 2.27%)</title><rect x="40.3522%" y="421" width="2.2740%" height="15" fill="rgb(236,136,0)" fg:x="3620" fg:w="204"/><text x="40.6022%" y="431.50">a..</text></g><g><title>alloc::alloc::alloc (204 samples, 2.27%)</title><rect x="40.3522%" y="405" width="2.2740%" height="15" fill="rgb(194,94,0)" fg:x="3620" fg:w="204"/><text x="40.6022%" y="415.50">a..</text></g><g><title>malloc (139 samples, 1.55%)</title><rect x="41.0768%" y="389" width="1.5494%" height="15" fill="rgb(190,190,55)" fg:x="3685" fg:w="139"/><text x="41.3268%" y="399.50"></text></g><g><title>[libc.so.6] (10 samples, 0.11%)</title><rect x="42.5148%" y="373" width="0.1115%" height="15" fill="rgb(201,201,59)" fg:x="3814" fg:w="10"/><text x="42.7648%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (232 samples, 2.59%)</title><rect x="40.2185%" y="485" width="2.5861%" height="15" fill="rgb(215,115,0)" fg:x="3608" fg:w="232"/><text x="40.4685%" y="495.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (232 samples, 2.59%)</title><rect x="40.2185%" y="469" width="2.5861%" height="15" fill="rgb(207,107,0)" fg:x="3608" fg:w="232"/><text x="40.4685%" y="479.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (232 samples, 2.59%)</title><rect x="40.2185%" y="453" width="2.5861%" height="15" fill="rgb(206,106,0)" fg:x="3608" fg:w="232"/><text x="40.4685%" y="463.50">al..</text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.18%)</title><rect x="42.6262%" y="437" width="0.1784%" height="15" fill="rgb(237,137,0)" fg:x="3824" fg:w="16"/><text x="42.8762%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (16 samples, 0.18%)</title><rect x="42.6262%" y="421" width="0.1784%" height="15" fill="rgb(251,151,0)" fg:x="3824" fg:w="16"/><text x="42.8762%" y="431.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (297 samples, 3.31%)</title><rect x="40.0290%" y="565" width="3.3107%" height="15" fill="rgb(88,200,200)" fg:x="3591" fg:w="297"/><text x="40.2790%" y="575.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (297 samples, 3.31%)</title><rect x="40.0290%" y="549" width="3.3107%" height="15" fill="rgb(239,139,0)" fg:x="3591" fg:w="297"/><text x="40.2790%" y="559.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (294 samples, 3.28%)</title><rect x="40.0624%" y="533" width="3.2772%" height="15" fill="rgb(217,117,0)" fg:x="3594" fg:w="294"/><text x="40.3124%" y="543.50">all..</text></g><g><title>alloc::slice::hack::to_vec (294 samples, 3.28%)</title><rect x="40.0624%" y="517" width="3.2772%" height="15" fill="rgb(193,93,0)" fg:x="3594" fg:w="294"/><text x="40.3124%" y="527.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (294 samples, 3.28%)</title><rect x="40.0624%" y="501" width="3.2772%" height="15" fill="rgb(52,166,166)" fg:x="3594" fg:w="294"/><text x="40.3124%" y="511.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (48 samples, 0.54%)</title><rect x="42.8046%" y="485" width="0.5351%" height="15" fill="rgb(213,113,0)" fg:x="3840" fg:w="48"/><text x="43.0546%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.54%)</title><rect x="42.8046%" y="469" width="0.5351%" height="15" fill="rgb(204,104,0)" fg:x="3840" fg:w="48"/><text x="43.0546%" y="479.50"></text></g><g><title>[libc.so.6] (48 samples, 0.54%)</title><rect x="42.8046%" y="453" width="0.5351%" height="15" fill="rgb(199,199,58)" fg:x="3840" fg:w="48"/><text x="43.0546%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="43.3508%" y="389" width="0.0111%" height="15" fill="rgb(210,210,62)" fg:x="3889" fg:w="1"/><text x="43.6008%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="43.3508%" y="373" width="0.0111%" height="15" fill="rgb(230,130,0)" fg:x="3889" fg:w="1"/><text x="43.6008%" y="383.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="43.3619%" y="389" width="0.0223%" height="15" fill="rgb(181,181,52)" fg:x="3890" fg:w="2"/><text x="43.6119%" y="399.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="43.3842%" y="389" width="0.0111%" height="15" fill="rgb(236,136,0)" fg:x="3892" fg:w="1"/><text x="43.6342%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.18%)</title><rect x="43.3396%" y="485" width="0.1784%" height="15" fill="rgb(221,121,0)" fg:x="3888" fg:w="16"/><text x="43.5896%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.18%)</title><rect x="43.3396%" y="469" width="0.1784%" height="15" fill="rgb(245,145,0)" fg:x="3888" fg:w="16"/><text x="43.5896%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.18%)</title><rect x="43.3396%" y="453" width="0.1784%" height="15" fill="rgb(214,114,0)" fg:x="3888" fg:w="16"/><text x="43.5896%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.17%)</title><rect x="43.3508%" y="437" width="0.1672%" height="15" fill="rgb(195,95,0)" fg:x="3889" fg:w="15"/><text x="43.6008%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.17%)</title><rect x="43.3508%" y="421" width="0.1672%" height="15" fill="rgb(214,114,0)" fg:x="3889" fg:w="15"/><text x="43.6008%" y="431.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.17%)</title><rect x="43.3508%" y="405" width="0.1672%" height="15" fill="rgb(242,142,0)" fg:x="3889" fg:w="15"/><text x="43.6008%" y="415.50"></text></g><g><title>malloc (11 samples, 0.12%)</title><rect x="43.3954%" y="389" width="0.1226%" height="15" fill="rgb(202,202,60)" fg:x="3893" fg:w="11"/><text x="43.6454%" y="399.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="43.4846%" y="373" width="0.0334%" height="15" fill="rgb(216,216,65)" fg:x="3901" fg:w="3"/><text x="43.7346%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="43.5069%" y="357" width="0.0111%" height="15" fill="rgb(180,180,52)" fg:x="3903" fg:w="1"/><text x="43.7569%" y="367.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (17 samples, 0.19%)</title><rect x="43.3396%" y="565" width="0.1895%" height="15" fill="rgb(105,215,215)" fg:x="3888" fg:w="17"/><text x="43.5896%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.19%)</title><rect x="43.3396%" y="549" width="0.1895%" height="15" fill="rgb(203,103,0)" fg:x="3888" fg:w="17"/><text x="43.5896%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.19%)</title><rect x="43.3396%" y="533" width="0.1895%" height="15" fill="rgb(217,117,0)" fg:x="3888" fg:w="17"/><text x="43.5896%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.19%)</title><rect x="43.3396%" y="517" width="0.1895%" height="15" fill="rgb(204,104,0)" fg:x="3888" fg:w="17"/><text x="43.5896%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.19%)</title><rect x="43.3396%" y="501" width="0.1895%" height="15" fill="rgb(83,195,195)" fg:x="3888" fg:w="17"/><text x="43.5896%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="43.5180%" y="485" width="0.0111%" height="15" fill="rgb(228,128,0)" fg:x="3904" fg:w="1"/><text x="43.7680%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="43.5180%" y="469" width="0.0111%" height="15" fill="rgb(194,94,0)" fg:x="3904" fg:w="1"/><text x="43.7680%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="43.5180%" y="453" width="0.0111%" height="15" fill="rgb(219,219,66)" fg:x="3904" fg:w="1"/><text x="43.7680%" y="463.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.04%)</title><rect x="43.5291%" y="565" width="0.0446%" height="15" fill="rgb(50,165,165)" fg:x="3905" fg:w="4"/><text x="43.7791%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="43.5626%" y="549" width="0.0111%" height="15" fill="rgb(210,110,0)" fg:x="3908" fg:w="1"/><text x="43.8126%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.04%)</title><rect x="43.6295%" y="549" width="0.0446%" height="15" fill="rgb(193,93,0)" fg:x="3914" fg:w="4"/><text x="43.8795%" y="559.50"></text></g><g><title>__rdl_alloc (30 samples, 0.33%)</title><rect x="44.2537%" y="325" width="0.3344%" height="15" fill="rgb(211,211,63)" fg:x="3970" fg:w="30"/><text x="44.5037%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (30 samples, 0.33%)</title><rect x="44.2537%" y="309" width="0.3344%" height="15" fill="rgb(235,135,0)" fg:x="3970" fg:w="30"/><text x="44.5037%" y="319.50"></text></g><g><title>__rust_alloc (13 samples, 0.14%)</title><rect x="44.5881%" y="325" width="0.1449%" height="15" fill="rgb(178,178,51)" fg:x="4000" fg:w="13"/><text x="44.8381%" y="335.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.02%)</title><rect x="44.7330%" y="325" width="0.0223%" height="15" fill="rgb(246,146,0)" fg:x="4013" fg:w="2"/><text x="44.9830%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (255 samples, 2.84%)</title><rect x="44.1645%" y="373" width="2.8425%" height="15" fill="rgb(251,151,0)" fg:x="3962" fg:w="255"/><text x="44.4145%" y="383.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (255 samples, 2.84%)</title><rect x="44.1645%" y="357" width="2.8425%" height="15" fill="rgb(231,131,0)" fg:x="3962" fg:w="255"/><text x="44.4145%" y="367.50">al..</text></g><g><title>alloc::alloc::alloc (255 samples, 2.84%)</title><rect x="44.1645%" y="341" width="2.8425%" height="15" fill="rgb(197,97,0)" fg:x="3962" fg:w="255"/><text x="44.4145%" y="351.50">al..</text></g><g><title>malloc (202 samples, 2.25%)</title><rect x="44.7553%" y="325" width="2.2517%" height="15" fill="rgb(227,227,68)" fg:x="4015" fg:w="202"/><text x="45.0053%" y="335.50">m..</text></g><g><title>[libc.so.6] (68 samples, 0.76%)</title><rect x="46.2490%" y="309" width="0.7580%" height="15" fill="rgb(176,176,50)" fg:x="4149" fg:w="68"/><text x="46.4990%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="46.9959%" y="293" width="0.0111%" height="15" fill="rgb(203,203,60)" fg:x="4216" fg:w="1"/><text x="47.2459%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (277 samples, 3.09%)</title><rect x="44.0865%" y="421" width="3.0877%" height="15" fill="rgb(196,96,0)" fg:x="3955" fg:w="277"/><text x="44.3365%" y="431.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (277 samples, 3.09%)</title><rect x="44.0865%" y="405" width="3.0877%" height="15" fill="rgb(192,92,0)" fg:x="3955" fg:w="277"/><text x="44.3365%" y="415.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (277 samples, 3.09%)</title><rect x="44.0865%" y="389" width="3.0877%" height="15" fill="rgb(218,118,0)" fg:x="3955" fg:w="277"/><text x="44.3365%" y="399.50">all..</text></g><g><title>core::alloc::layout::Layout::array (15 samples, 0.17%)</title><rect x="47.0070%" y="373" width="0.1672%" height="15" fill="rgb(227,127,0)" fg:x="4217" fg:w="15"/><text x="47.2570%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (15 samples, 0.17%)</title><rect x="47.0070%" y="357" width="0.1672%" height="15" fill="rgb(226,126,0)" fg:x="4217" fg:w="15"/><text x="47.2570%" y="367.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (389 samples, 4.34%)</title><rect x="44.0865%" y="501" width="4.3362%" height="15" fill="rgb(67,180,180)" fg:x="3955" fg:w="389"/><text x="44.3365%" y="511.50">&lt;alc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (389 samples, 4.34%)</title><rect x="44.0865%" y="485" width="4.3362%" height="15" fill="rgb(243,143,0)" fg:x="3955" fg:w="389"/><text x="44.3365%" y="495.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (389 samples, 4.34%)</title><rect x="44.0865%" y="469" width="4.3362%" height="15" fill="rgb(220,120,0)" fg:x="3955" fg:w="389"/><text x="44.3365%" y="479.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (389 samples, 4.34%)</title><rect x="44.0865%" y="453" width="4.3362%" height="15" fill="rgb(215,115,0)" fg:x="3955" fg:w="389"/><text x="44.3365%" y="463.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (389 samples, 4.34%)</title><rect x="44.0865%" y="437" width="4.3362%" height="15" fill="rgb(88,200,200)" fg:x="3955" fg:w="389"/><text x="44.3365%" y="447.50">&lt;T as..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (112 samples, 1.25%)</title><rect x="47.1742%" y="421" width="1.2485%" height="15" fill="rgb(235,135,0)" fg:x="4232" fg:w="112"/><text x="47.4242%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (112 samples, 1.25%)</title><rect x="47.1742%" y="405" width="1.2485%" height="15" fill="rgb(233,133,0)" fg:x="4232" fg:w="112"/><text x="47.4242%" y="415.50"></text></g><g><title>[libc.so.6] (103 samples, 1.15%)</title><rect x="47.2746%" y="389" width="1.1481%" height="15" fill="rgb(220,220,66)" fg:x="4241" fg:w="103"/><text x="47.5246%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.20%)</title><rect x="48.4227%" y="501" width="0.2006%" height="15" fill="rgb(238,138,0)" fg:x="4344" fg:w="18"/><text x="48.6727%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.16%)</title><rect x="48.4673%" y="485" width="0.1561%" height="15" fill="rgb(219,119,0)" fg:x="4348" fg:w="14"/><text x="48.7173%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.16%)</title><rect x="48.4673%" y="469" width="0.1561%" height="15" fill="rgb(196,96,0)" fg:x="4348" fg:w="14"/><text x="48.7173%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.16%)</title><rect x="48.4673%" y="453" width="0.1561%" height="15" fill="rgb(227,127,0)" fg:x="4348" fg:w="14"/><text x="48.7173%" y="463.50"></text></g><g><title>__rdl_alloc (6 samples, 0.07%)</title><rect x="48.6233%" y="405" width="0.0669%" height="15" fill="rgb(197,197,58)" fg:x="4362" fg:w="6"/><text x="48.8733%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.07%)</title><rect x="48.6233%" y="389" width="0.0669%" height="15" fill="rgb(252,152,0)" fg:x="4362" fg:w="6"/><text x="48.8733%" y="399.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="48.6902%" y="405" width="0.0223%" height="15" fill="rgb(197,197,58)" fg:x="4368" fg:w="2"/><text x="48.9402%" y="415.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.02%)</title><rect x="48.7125%" y="405" width="0.0223%" height="15" fill="rgb(253,153,0)" fg:x="4370" fg:w="2"/><text x="48.9625%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (49 samples, 0.55%)</title><rect x="48.6233%" y="501" width="0.5462%" height="15" fill="rgb(239,139,0)" fg:x="4362" fg:w="49"/><text x="48.8733%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (49 samples, 0.55%)</title><rect x="48.6233%" y="485" width="0.5462%" height="15" fill="rgb(232,132,0)" fg:x="4362" fg:w="49"/><text x="48.8733%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (49 samples, 0.55%)</title><rect x="48.6233%" y="469" width="0.5462%" height="15" fill="rgb(249,149,0)" fg:x="4362" fg:w="49"/><text x="48.8733%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.55%)</title><rect x="48.6233%" y="453" width="0.5462%" height="15" fill="rgb(254,154,0)" fg:x="4362" fg:w="49"/><text x="48.8733%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.55%)</title><rect x="48.6233%" y="437" width="0.5462%" height="15" fill="rgb(244,144,0)" fg:x="4362" fg:w="49"/><text x="48.8733%" y="447.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.55%)</title><rect x="48.6233%" y="421" width="0.5462%" height="15" fill="rgb(197,97,0)" fg:x="4362" fg:w="49"/><text x="48.8733%" y="431.50"></text></g><g><title>malloc (39 samples, 0.43%)</title><rect x="48.7348%" y="405" width="0.4347%" height="15" fill="rgb(215,215,64)" fg:x="4372" fg:w="39"/><text x="48.9848%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="49.1473%" y="389" width="0.0223%" height="15" fill="rgb(229,229,69)" fg:x="4409" fg:w="2"/><text x="49.3973%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="49.1584%" y="373" width="0.0111%" height="15" fill="rgb(184,184,53)" fg:x="4410" fg:w="1"/><text x="49.4084%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (517 samples, 5.76%)</title><rect x="43.5737%" y="565" width="5.7630%" height="15" fill="rgb(203,103,0)" fg:x="3909" fg:w="517"/><text x="43.8237%" y="575.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (508 samples, 5.66%)</title><rect x="43.6741%" y="549" width="5.6627%" height="15" fill="rgb(225,125,0)" fg:x="3918" fg:w="508"/><text x="43.9241%" y="559.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (508 samples, 5.66%)</title><rect x="43.6741%" y="533" width="5.6627%" height="15" fill="rgb(209,109,0)" fg:x="3918" fg:w="508"/><text x="43.9241%" y="543.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (508 samples, 5.66%)</title><rect x="43.6741%" y="517" width="5.6627%" height="15" fill="rgb(61,175,175)" fg:x="3918" fg:w="508"/><text x="43.9241%" y="527.50">&lt;T as a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.17%)</title><rect x="49.1695%" y="501" width="0.1672%" height="15" fill="rgb(205,105,0)" fg:x="4411" fg:w="15"/><text x="49.4195%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.03%)</title><rect x="49.3368%" y="565" width="0.0334%" height="15" fill="rgb(227,127,0)" fg:x="4426" fg:w="3"/><text x="49.5868%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.03%)</title><rect x="49.3368%" y="549" width="0.0334%" height="15" fill="rgb(254,154,0)" fg:x="4426" fg:w="3"/><text x="49.5868%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.27%)</title><rect x="49.3702%" y="565" width="0.2675%" height="15" fill="rgb(217,117,0)" fg:x="4429" fg:w="24"/><text x="49.6202%" y="575.50"></text></g><g><title>core::ptr::read (7 samples, 0.08%)</title><rect x="49.5597%" y="549" width="0.0780%" height="15" fill="rgb(212,112,0)" fg:x="4446" fg:w="7"/><text x="49.8097%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="49.6377%" y="565" width="0.0446%" height="15" fill="rgb(227,127,0)" fg:x="4453" fg:w="4"/><text x="49.8877%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (11 samples, 0.12%)</title><rect x="49.6823%" y="517" width="0.1226%" height="15" fill="rgb(204,104,0)" fg:x="4457" fg:w="11"/><text x="49.9323%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (19 samples, 0.21%)</title><rect x="49.9833%" y="485" width="0.2118%" height="15" fill="rgb(214,114,0)" fg:x="4484" fg:w="19"/><text x="50.2333%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (19 samples, 0.21%)</title><rect x="49.9833%" y="469" width="0.2118%" height="15" fill="rgb(208,108,0)" fg:x="4484" fg:w="19"/><text x="50.2333%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.02%)</title><rect x="50.3957%" y="453" width="0.0223%" height="15" fill="rgb(232,132,0)" fg:x="4521" fg:w="2"/><text x="50.6457%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (35 samples, 0.39%)</title><rect x="50.4180%" y="453" width="0.3901%" height="15" fill="rgb(232,132,0)" fg:x="4523" fg:w="35"/><text x="50.6680%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (14 samples, 0.16%)</title><rect x="50.6521%" y="437" width="0.1561%" height="15" fill="rgb(241,141,0)" fg:x="4544" fg:w="14"/><text x="50.9021%" y="447.50"></text></g><g><title>__rdl_realloc (49 samples, 0.55%)</title><rect x="51.3432%" y="389" width="0.5462%" height="15" fill="rgb(188,188,54)" fg:x="4606" fg:w="49"/><text x="51.5932%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (35 samples, 0.39%)</title><rect x="51.4993%" y="373" width="0.3901%" height="15" fill="rgb(201,101,0)" fg:x="4620" fg:w="35"/><text x="51.7493%" y="383.50"></text></g><g><title>__rust_realloc (18 samples, 0.20%)</title><rect x="51.8894%" y="389" width="0.2006%" height="15" fill="rgb(215,215,64)" fg:x="4655" fg:w="18"/><text x="52.1394%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,860 samples, 20.73%)</title><rect x="51.3432%" y="437" width="20.7335%" height="15" fill="rgb(212,112,0)" fg:x="4606" fg:w="1860"/><text x="51.5932%" y="447.50">&lt;alloc::alloc::Global as core::al..</text></g><g><title>alloc::alloc::Global::grow_impl (1,860 samples, 20.73%)</title><rect x="51.3432%" y="421" width="20.7335%" height="15" fill="rgb(240,140,0)" fg:x="4606" fg:w="1860"/><text x="51.5932%" y="431.50">alloc::alloc::Global::grow_impl</text></g><g><title>alloc::alloc::realloc (1,860 samples, 20.73%)</title><rect x="51.3432%" y="405" width="20.7335%" height="15" fill="rgb(195,95,0)" fg:x="4606" fg:w="1860"/><text x="51.5932%" y="415.50">alloc::alloc::realloc</text></g><g><title>realloc (1,793 samples, 19.99%)</title><rect x="52.0901%" y="389" width="19.9866%" height="15" fill="rgb(179,179,51)" fg:x="4673" fg:w="1793"/><text x="52.3401%" y="399.50">realloc</text></g><g><title>[libc.so.6] (1,554 samples, 17.32%)</title><rect x="54.7542%" y="373" width="17.3225%" height="15" fill="rgb(215,215,64)" fg:x="4912" fg:w="1554"/><text x="55.0042%" y="383.50">[libc.so.6]</text></g><g><title>[libc.so.6] (1,388 samples, 15.47%)</title><rect x="56.6046%" y="357" width="15.4721%" height="15" fill="rgb(196,196,57)" fg:x="5078" fg:w="1388"/><text x="56.8546%" y="367.50">[libc.so.6]</text></g><g><title>[libc.so.6] (62 samples, 0.69%)</title><rect x="71.3856%" y="341" width="0.6911%" height="15" fill="rgb(198,198,58)" fg:x="6404" fg:w="62"/><text x="71.6356%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.0655%" y="325" width="0.0111%" height="15" fill="rgb(196,196,57)" fg:x="6465" fg:w="1"/><text x="72.3155%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,944 samples, 21.67%)</title><rect x="50.8082%" y="453" width="21.6698%" height="15" fill="rgb(244,144,0)" fg:x="4558" fg:w="1944"/><text x="51.0582%" y="463.50">alloc::raw_vec::finish_grow</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (36 samples, 0.40%)</title><rect x="72.0767%" y="437" width="0.4013%" height="15" fill="rgb(225,125,0)" fg:x="6466" fg:w="36"/><text x="72.3267%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (15 samples, 0.17%)</title><rect x="72.4780%" y="453" width="0.1672%" height="15" fill="rgb(237,137,0)" fg:x="6502" fg:w="15"/><text x="72.7280%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (15 samples, 0.17%)</title><rect x="72.4780%" y="437" width="0.1672%" height="15" fill="rgb(196,96,0)" fg:x="6502" fg:w="15"/><text x="72.7280%" y="447.50"></text></g><g><title>core::cmp::max (62 samples, 0.69%)</title><rect x="72.6452%" y="453" width="0.6911%" height="15" fill="rgb(204,104,0)" fg:x="6517" fg:w="62"/><text x="72.8952%" y="463.50"></text></g><g><title>core::cmp::Ord::max (62 samples, 0.69%)</title><rect x="72.6452%" y="437" width="0.6911%" height="15" fill="rgb(236,136,0)" fg:x="6517" fg:w="62"/><text x="72.8952%" y="447.50"></text></g><g><title>core::cmp::max_by (62 samples, 0.69%)</title><rect x="72.6452%" y="421" width="0.6911%" height="15" fill="rgb(224,124,0)" fg:x="6517" fg:w="62"/><text x="72.8952%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,129 samples, 23.73%)</title><rect x="49.8049%" y="517" width="23.7320%" height="15" fill="rgb(224,124,0)" fg:x="4468" fg:w="2129"/><text x="50.0549%" y="527.50">alloc::vec::Vec&lt;T,A&gt;::reserve</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,129 samples, 23.73%)</title><rect x="49.8049%" y="501" width="23.7320%" height="15" fill="rgb(209,109,0)" fg:x="4468" fg:w="2129"/><text x="50.0549%" y="511.50">alloc::raw_vec::RawVec&lt;T,A&gt;::reserve</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,094 samples, 23.34%)</title><rect x="50.1951%" y="485" width="23.3419%" height="15" fill="rgb(244,144,0)" fg:x="4503" fg:w="2094"/><text x="50.4451%" y="495.50">alloc::raw_vec::RawVec&lt;T,A&gt;::reserve:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,094 samples, 23.34%)</title><rect x="50.1951%" y="469" width="23.3419%" height="15" fill="rgb(213,113,0)" fg:x="4503" fg:w="2094"/><text x="50.4451%" y="479.50">alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amo..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (18 samples, 0.20%)</title><rect x="73.3363%" y="453" width="0.2006%" height="15" fill="rgb(193,93,0)" fg:x="6579" fg:w="18"/><text x="73.5863%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (18 samples, 0.20%)</title><rect x="73.3363%" y="437" width="0.2006%" height="15" fill="rgb(205,105,0)" fg:x="6579" fg:w="18"/><text x="73.5863%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.69%)</title><rect x="73.5370%" y="517" width="0.6911%" height="15" fill="rgb(219,119,0)" fg:x="6597" fg:w="62"/><text x="73.7870%" y="527.50"></text></g><g><title>[libc.so.6] (62 samples, 0.69%)</title><rect x="73.5370%" y="501" width="0.6911%" height="15" fill="rgb(213,213,63)" fg:x="6597" fg:w="62"/><text x="73.7870%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,216 samples, 24.70%)</title><rect x="49.6823%" y="533" width="24.7018%" height="15" fill="rgb(222,122,0)" fg:x="4457" fg:w="2216"/><text x="49.9323%" y="543.50">alloc::vec::Vec&lt;T,A&gt;::append_elements</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.16%)</title><rect x="74.2281%" y="517" width="0.1561%" height="15" fill="rgb(237,137,0)" fg:x="6659" fg:w="14"/><text x="74.4781%" y="527.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (2,232 samples, 24.88%)</title><rect x="49.6823%" y="565" width="24.8802%" height="15" fill="rgb(57,171,171)" fg:x="4457" fg:w="2232"/><text x="49.9323%" y="575.50">alc::keyboard::LayoutPositionSequence::a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (2,232 samples, 24.88%)</title><rect x="49.6823%" y="549" width="24.8802%" height="15" fill="rgb(205,105,0)" fg:x="4457" fg:w="2232"/><text x="49.9323%" y="559.50">alloc::vec::Vec&lt;T,A&gt;::append</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (16 samples, 0.18%)</title><rect x="74.3841%" y="533" width="0.1784%" height="15" fill="rgb(207,107,0)" fg:x="6673" fg:w="16"/><text x="74.6341%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.18%)</title><rect x="74.3841%" y="517" width="0.1784%" height="15" fill="rgb(197,97,0)" fg:x="6673" fg:w="16"/><text x="74.6341%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (16 samples, 0.18%)</title><rect x="74.3841%" y="501" width="0.1784%" height="15" fill="rgb(249,149,0)" fg:x="6673" fg:w="16"/><text x="74.6341%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (16 samples, 0.18%)</title><rect x="74.3841%" y="485" width="0.1784%" height="15" fill="rgb(249,149,0)" fg:x="6673" fg:w="16"/><text x="74.6341%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.10%)</title><rect x="74.7185%" y="405" width="0.1003%" height="15" fill="rgb(238,138,0)" fg:x="6703" fg:w="9"/><text x="74.9685%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.18%)</title><rect x="74.6628%" y="421" width="0.1784%" height="15" fill="rgb(240,140,0)" fg:x="6698" fg:w="16"/><text x="74.9128%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="74.8189%" y="405" width="0.0223%" height="15" fill="rgb(245,145,0)" fg:x="6712" fg:w="2"/><text x="75.0689%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.10%)</title><rect x="74.9192%" y="405" width="0.1003%" height="15" fill="rgb(209,109,0)" fg:x="6721" fg:w="9"/><text x="75.1692%" y="415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (43 samples, 0.48%)</title><rect x="74.6294%" y="469" width="0.4793%" height="15" fill="rgb(250,150,0)" fg:x="6695" fg:w="43"/><text x="74.8794%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (43 samples, 0.48%)</title><rect x="74.6294%" y="453" width="0.4793%" height="15" fill="rgb(218,118,0)" fg:x="6695" fg:w="43"/><text x="74.8794%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (43 samples, 0.48%)</title><rect x="74.6294%" y="437" width="0.4793%" height="15" fill="rgb(213,113,0)" fg:x="6695" fg:w="43"/><text x="74.8794%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.27%)</title><rect x="74.8412%" y="421" width="0.2675%" height="15" fill="rgb(253,153,0)" fg:x="6714" fg:w="24"/><text x="75.0912%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.09%)</title><rect x="75.0195%" y="405" width="0.0892%" height="15" fill="rgb(218,118,0)" fg:x="6730" fg:w="8"/><text x="75.2695%" y="415.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.07%)</title><rect x="75.1087%" y="469" width="0.0669%" height="15" fill="rgb(215,115,0)" fg:x="6738" fg:w="6"/><text x="75.3587%" y="479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.03%)</title><rect x="75.1421%" y="453" width="0.0334%" height="15" fill="rgb(248,148,0)" fg:x="6741" fg:w="3"/><text x="75.3921%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.03%)</title><rect x="75.1421%" y="437" width="0.0334%" height="15" fill="rgb(198,98,0)" fg:x="6741" fg:w="3"/><text x="75.3921%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.03%)</title><rect x="75.1421%" y="421" width="0.0334%" height="15" fill="rgb(233,133,0)" fg:x="6741" fg:w="3"/><text x="75.3921%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="75.4765%" y="325" width="0.0223%" height="15" fill="rgb(236,136,0)" fg:x="6771" fg:w="2"/><text x="75.7265%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.08%)</title><rect x="75.4542%" y="341" width="0.0780%" height="15" fill="rgb(246,146,0)" fg:x="6769" fg:w="7"/><text x="75.7042%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="75.4988%" y="325" width="0.0334%" height="15" fill="rgb(192,92,0)" fg:x="6773" fg:w="3"/><text x="75.7488%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (95 samples, 1.06%)</title><rect x="74.5625%" y="501" width="1.0590%" height="15" fill="rgb(64,178,178)" fg:x="6689" fg:w="95"/><text x="74.8125%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (92 samples, 1.03%)</title><rect x="74.5959%" y="485" width="1.0255%" height="15" fill="rgb(244,144,0)" fg:x="6692" fg:w="92"/><text x="74.8459%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.45%)</title><rect x="75.1756%" y="469" width="0.4459%" height="15" fill="rgb(202,102,0)" fg:x="6744" fg:w="40"/><text x="75.4256%" y="479.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (40 samples, 0.45%)</title><rect x="75.1756%" y="453" width="0.4459%" height="15" fill="rgb(61,175,175)" fg:x="6744" fg:w="40"/><text x="75.4256%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (33 samples, 0.37%)</title><rect x="75.2536%" y="437" width="0.3679%" height="15" fill="rgb(221,121,0)" fg:x="6751" fg:w="33"/><text x="75.5036%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (33 samples, 0.37%)</title><rect x="75.2536%" y="421" width="0.3679%" height="15" fill="rgb(208,108,0)" fg:x="6751" fg:w="33"/><text x="75.5036%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (33 samples, 0.37%)</title><rect x="75.2536%" y="405" width="0.3679%" height="15" fill="rgb(221,121,0)" fg:x="6751" fg:w="33"/><text x="75.5036%" y="415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.33%)</title><rect x="75.2870%" y="389" width="0.3344%" height="15" fill="rgb(223,123,0)" fg:x="6754" fg:w="30"/><text x="75.5370%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.33%)</title><rect x="75.2870%" y="373" width="0.3344%" height="15" fill="rgb(213,113,0)" fg:x="6754" fg:w="30"/><text x="75.5370%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.33%)</title><rect x="75.2870%" y="357" width="0.3344%" height="15" fill="rgb(238,138,0)" fg:x="6754" fg:w="30"/><text x="75.5370%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.09%)</title><rect x="75.5323%" y="341" width="0.0892%" height="15" fill="rgb(232,132,0)" fg:x="6776" fg:w="8"/><text x="75.7823%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="75.6772%" y="437" width="0.0111%" height="15" fill="rgb(101,212,212)" fg:x="6789" fg:w="1"/><text x="75.9272%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="75.6772%" y="453" width="0.0223%" height="15" fill="rgb(54,169,169)" fg:x="6789" fg:w="2"/><text x="75.9272%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="75.6883%" y="437" width="0.0111%" height="15" fill="rgb(93,204,204)" fg:x="6790" fg:w="1"/><text x="75.9383%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (40 samples, 0.45%)</title><rect x="75.6995%" y="437" width="0.4459%" height="15" fill="rgb(76,189,189)" fg:x="6791" fg:w="40"/><text x="75.9495%" y="447.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (40 samples, 0.45%)</title><rect x="75.6995%" y="421" width="0.4459%" height="15" fill="rgb(77,189,189)" fg:x="6791" fg:w="40"/><text x="75.9495%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (40 samples, 0.45%)</title><rect x="75.6995%" y="405" width="0.4459%" height="15" fill="rgb(243,143,0)" fg:x="6791" fg:w="40"/><text x="75.9495%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (40 samples, 0.45%)</title><rect x="75.6995%" y="389" width="0.4459%" height="15" fill="rgb(102,213,213)" fg:x="6791" fg:w="40"/><text x="75.9495%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (10 samples, 0.11%)</title><rect x="76.1454%" y="437" width="0.1115%" height="15" fill="rgb(79,191,191)" fg:x="6831" fg:w="10"/><text x="76.3954%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.11%)</title><rect x="76.1454%" y="421" width="0.1115%" height="15" fill="rgb(95,206,206)" fg:x="6831" fg:w="10"/><text x="76.3954%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.11%)</title><rect x="76.1454%" y="405" width="0.1115%" height="15" fill="rgb(253,153,0)" fg:x="6831" fg:w="10"/><text x="76.3954%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.11%)</title><rect x="76.1454%" y="389" width="0.1115%" height="15" fill="rgb(230,130,0)" fg:x="6831" fg:w="10"/><text x="76.3954%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (52 samples, 0.58%)</title><rect x="75.6995%" y="453" width="0.5796%" height="15" fill="rgb(104,214,214)" fg:x="6791" fg:w="52"/><text x="75.9495%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.02%)</title><rect x="76.2568%" y="437" width="0.0223%" height="15" fill="rgb(97,208,208)" fg:x="6841" fg:w="2"/><text x="76.5068%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.02%)</title><rect x="76.2568%" y="421" width="0.0223%" height="15" fill="rgb(83,196,196)" fg:x="6841" fg:w="2"/><text x="76.5068%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="76.2568%" y="405" width="0.0223%" height="15" fill="rgb(223,123,0)" fg:x="6841" fg:w="2"/><text x="76.5068%" y="415.50"></text></g><g><title>hashbrown::raw::h2 (15 samples, 0.17%)</title><rect x="76.2791%" y="453" width="0.1672%" height="15" fill="rgb(98,209,209)" fg:x="6843" fg:w="15"/><text x="76.5291%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.06%)</title><rect x="76.4463%" y="453" width="0.0557%" height="15" fill="rgb(89,200,200)" fg:x="6858" fg:w="5"/><text x="76.6963%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.06%)</title><rect x="76.4463%" y="437" width="0.0557%" height="15" fill="rgb(254,154,0)" fg:x="6858" fg:w="5"/><text x="76.6963%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="76.4463%" y="421" width="0.0557%" height="15" fill="rgb(211,111,0)" fg:x="6858" fg:w="5"/><text x="76.6963%" y="431.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (185 samples, 2.06%)</title><rect x="74.5625%" y="565" width="2.0622%" height="15" fill="rgb(106,216,216)" fg:x="6689" fg:w="185"/><text x="74.8125%" y="575.50">a..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (185 samples, 2.06%)</title><rect x="74.5625%" y="549" width="2.0622%" height="15" fill="rgb(211,111,0)" fg:x="6689" fg:w="185"/><text x="74.8125%" y="559.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (185 samples, 2.06%)</title><rect x="74.5625%" y="533" width="2.0622%" height="15" fill="rgb(81,193,193)" fg:x="6689" fg:w="185"/><text x="74.8125%" y="543.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (185 samples, 2.06%)</title><rect x="74.5625%" y="517" width="2.0622%" height="15" fill="rgb(84,196,196)" fg:x="6689" fg:w="185"/><text x="74.8125%" y="527.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (90 samples, 1.00%)</title><rect x="75.6214%" y="501" width="1.0032%" height="15" fill="rgb(94,205,205)" fg:x="6784" fg:w="90"/><text x="75.8714%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (90 samples, 1.00%)</title><rect x="75.6214%" y="485" width="1.0032%" height="15" fill="rgb(75,187,187)" fg:x="6784" fg:w="90"/><text x="75.8714%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (90 samples, 1.00%)</title><rect x="75.6214%" y="469" width="1.0032%" height="15" fill="rgb(104,215,215)" fg:x="6784" fg:w="90"/><text x="75.8714%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.12%)</title><rect x="76.5021%" y="453" width="0.1226%" height="15" fill="rgb(73,186,186)" fg:x="6863" fg:w="11"/><text x="76.7521%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.12%)</title><rect x="76.5021%" y="437" width="0.1226%" height="15" fill="rgb(254,154,0)" fg:x="6863" fg:w="11"/><text x="76.7521%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.13%)</title><rect x="76.6693%" y="469" width="0.1338%" height="15" fill="rgb(209,109,0)" fg:x="6878" fg:w="12"/><text x="76.9193%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.13%)</title><rect x="76.6693%" y="453" width="0.1338%" height="15" fill="rgb(240,140,0)" fg:x="6878" fg:w="12"/><text x="76.9193%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (12 samples, 0.13%)</title><rect x="76.6693%" y="437" width="0.1338%" height="15" fill="rgb(205,105,0)" fg:x="6878" fg:w="12"/><text x="76.9193%" y="447.50"></text></g><g><title>__rdl_alloc (4 samples, 0.04%)</title><rect x="76.8699%" y="325" width="0.0446%" height="15" fill="rgb(226,226,68)" fg:x="6896" fg:w="4"/><text x="77.1199%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.04%)</title><rect x="76.8699%" y="309" width="0.0446%" height="15" fill="rgb(211,111,0)" fg:x="6896" fg:w="4"/><text x="77.1199%" y="319.50"></text></g><g><title>__rust_alloc (6 samples, 0.07%)</title><rect x="76.9145%" y="325" width="0.0669%" height="15" fill="rgb(218,218,65)" fg:x="6900" fg:w="6"/><text x="77.1645%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.37%)</title><rect x="76.8476%" y="373" width="0.3679%" height="15" fill="rgb(223,123,0)" fg:x="6894" fg:w="33"/><text x="77.0976%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.37%)</title><rect x="76.8476%" y="357" width="0.3679%" height="15" fill="rgb(238,138,0)" fg:x="6894" fg:w="33"/><text x="77.0976%" y="367.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.37%)</title><rect x="76.8476%" y="341" width="0.3679%" height="15" fill="rgb(240,140,0)" fg:x="6894" fg:w="33"/><text x="77.0976%" y="351.50"></text></g><g><title>malloc (21 samples, 0.23%)</title><rect x="76.9814%" y="325" width="0.2341%" height="15" fill="rgb(199,199,58)" fg:x="6906" fg:w="21"/><text x="77.2314%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.42%)</title><rect x="76.8030%" y="421" width="0.4236%" height="15" fill="rgb(226,126,0)" fg:x="6890" fg:w="38"/><text x="77.0530%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.42%)</title><rect x="76.8030%" y="405" width="0.4236%" height="15" fill="rgb(198,98,0)" fg:x="6890" fg:w="38"/><text x="77.0530%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (38 samples, 0.42%)</title><rect x="76.8030%" y="389" width="0.4236%" height="15" fill="rgb(202,102,0)" fg:x="6890" fg:w="38"/><text x="77.0530%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="77.2155%" y="373" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="6927" fg:w="1"/><text x="77.4655%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="77.2155%" y="357" width="0.0111%" height="15" fill="rgb(232,132,0)" fg:x="6927" fg:w="1"/><text x="77.4655%" y="367.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (71 samples, 0.79%)</title><rect x="76.6693%" y="501" width="0.7914%" height="15" fill="rgb(94,205,205)" fg:x="6878" fg:w="71"/><text x="76.9193%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (71 samples, 0.79%)</title><rect x="76.6693%" y="485" width="0.7914%" height="15" fill="rgb(205,105,0)" fg:x="6878" fg:w="71"/><text x="76.9193%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.66%)</title><rect x="76.8030%" y="469" width="0.6577%" height="15" fill="rgb(245,145,0)" fg:x="6890" fg:w="59"/><text x="77.0530%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (59 samples, 0.66%)</title><rect x="76.8030%" y="453" width="0.6577%" height="15" fill="rgb(202,102,0)" fg:x="6890" fg:w="59"/><text x="77.0530%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.66%)</title><rect x="76.8030%" y="437" width="0.6577%" height="15" fill="rgb(105,215,215)" fg:x="6890" fg:w="59"/><text x="77.0530%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.23%)</title><rect x="77.2266%" y="421" width="0.2341%" height="15" fill="rgb(193,93,0)" fg:x="6928" fg:w="21"/><text x="77.4766%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.23%)</title><rect x="77.2266%" y="405" width="0.2341%" height="15" fill="rgb(222,122,0)" fg:x="6928" fg:w="21"/><text x="77.4766%" y="415.50"></text></g><g><title>[libc.so.6] (21 samples, 0.23%)</title><rect x="77.2266%" y="389" width="0.2341%" height="15" fill="rgb(184,184,53)" fg:x="6928" fg:w="21"/><text x="77.4766%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="77.4607%" y="501" width="0.0223%" height="15" fill="rgb(227,127,0)" fg:x="6949" fg:w="2"/><text x="77.7107%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="77.4607%" y="485" width="0.0223%" height="15" fill="rgb(243,143,0)" fg:x="6949" fg:w="2"/><text x="77.7107%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="77.4607%" y="469" width="0.0223%" height="15" fill="rgb(200,100,0)" fg:x="6949" fg:w="2"/><text x="77.7107%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="77.4607%" y="453" width="0.0223%" height="15" fill="rgb(253,153,0)" fg:x="6949" fg:w="2"/><text x="77.7107%" y="463.50"></text></g><g><title>__rdl_alloc (3 samples, 0.03%)</title><rect x="77.5053%" y="405" width="0.0334%" height="15" fill="rgb(214,214,64)" fg:x="6953" fg:w="3"/><text x="77.7553%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="77.5164%" y="389" width="0.0223%" height="15" fill="rgb(231,131,0)" fg:x="6954" fg:w="2"/><text x="77.7664%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.10%)</title><rect x="77.5053%" y="453" width="0.1003%" height="15" fill="rgb(253,153,0)" fg:x="6953" fg:w="9"/><text x="77.7553%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.10%)</title><rect x="77.5053%" y="437" width="0.1003%" height="15" fill="rgb(243,143,0)" fg:x="6953" fg:w="9"/><text x="77.7553%" y="447.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.10%)</title><rect x="77.5053%" y="421" width="0.1003%" height="15" fill="rgb(192,92,0)" fg:x="6953" fg:w="9"/><text x="77.7553%" y="431.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="77.5387%" y="405" width="0.0669%" height="15" fill="rgb(186,186,54)" fg:x="6956" fg:w="6"/><text x="77.7887%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.5945%" y="389" width="0.0111%" height="15" fill="rgb(202,202,59)" fg:x="6961" fg:w="1"/><text x="77.8445%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.13%)</title><rect x="77.4830%" y="501" width="0.1338%" height="15" fill="rgb(194,94,0)" fg:x="6951" fg:w="12"/><text x="77.7330%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.12%)</title><rect x="77.4941%" y="485" width="0.1226%" height="15" fill="rgb(233,133,0)" fg:x="6952" fg:w="11"/><text x="77.7441%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.12%)</title><rect x="77.4941%" y="469" width="0.1226%" height="15" fill="rgb(194,94,0)" fg:x="6952" fg:w="11"/><text x="77.7441%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="77.6056%" y="453" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="6962" fg:w="1"/><text x="77.8556%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="77.6056%" y="437" width="0.0111%" height="15" fill="rgb(210,110,0)" fg:x="6962" fg:w="1"/><text x="77.8556%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (92 samples, 1.03%)</title><rect x="76.6247%" y="565" width="1.0255%" height="15" fill="rgb(242,142,0)" fg:x="6874" fg:w="92"/><text x="76.8747%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (92 samples, 1.03%)</title><rect x="76.6247%" y="549" width="1.0255%" height="15" fill="rgb(250,150,0)" fg:x="6874" fg:w="92"/><text x="76.8747%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (92 samples, 1.03%)</title><rect x="76.6247%" y="533" width="1.0255%" height="15" fill="rgb(231,131,0)" fg:x="6874" fg:w="92"/><text x="76.8747%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (92 samples, 1.03%)</title><rect x="76.6247%" y="517" width="1.0255%" height="15" fill="rgb(97,208,208)" fg:x="6874" fg:w="92"/><text x="76.8747%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="77.6168%" y="501" width="0.0334%" height="15" fill="rgb(253,153,0)" fg:x="6963" fg:w="3"/><text x="77.8668%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4 samples, 0.04%)</title><rect x="77.6502%" y="565" width="0.0446%" height="15" fill="rgb(249,149,0)" fg:x="6966" fg:w="4"/><text x="77.9002%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="78.2967%" y="517" width="0.0111%" height="15" fill="rgb(195,95,0)" fg:x="7024" fg:w="1"/><text x="78.5467%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.07%)</title><rect x="78.3079%" y="517" width="0.0669%" height="15" fill="rgb(247,147,0)" fg:x="7025" fg:w="6"/><text x="78.5579%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.01%)</title><rect x="78.3748%" y="517" width="0.0111%" height="15" fill="rgb(224,124,0)" fg:x="7031" fg:w="1"/><text x="78.6248%" y="527.50"></text></g><g><title>__rdl_realloc (5 samples, 0.06%)</title><rect x="78.5420%" y="453" width="0.0557%" height="15" fill="rgb(198,198,58)" fg:x="7046" fg:w="5"/><text x="78.7920%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.04%)</title><rect x="78.5531%" y="437" width="0.0446%" height="15" fill="rgb(208,108,0)" fg:x="7047" fg:w="4"/><text x="78.8031%" y="447.50"></text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="78.5977%" y="453" width="0.0223%" height="15" fill="rgb(194,194,56)" fg:x="7051" fg:w="2"/><text x="78.8477%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (349 samples, 3.89%)</title><rect x="78.5420%" y="501" width="3.8903%" height="15" fill="rgb(239,139,0)" fg:x="7046" fg:w="349"/><text x="78.7920%" y="511.50">&lt;all..</text></g><g><title>alloc::alloc::Global::grow_impl (349 samples, 3.89%)</title><rect x="78.5420%" y="485" width="3.8903%" height="15" fill="rgb(242,142,0)" fg:x="7046" fg:w="349"/><text x="78.7920%" y="495.50">allo..</text></g><g><title>alloc::alloc::realloc (349 samples, 3.89%)</title><rect x="78.5420%" y="469" width="3.8903%" height="15" fill="rgb(196,96,0)" fg:x="7046" fg:w="349"/><text x="78.7920%" y="479.50">allo..</text></g><g><title>realloc (342 samples, 3.81%)</title><rect x="78.6200%" y="453" width="3.8123%" height="15" fill="rgb(215,215,64)" fg:x="7053" fg:w="342"/><text x="78.8700%" y="463.50">real..</text></g><g><title>[libc.so.6] (303 samples, 3.38%)</title><rect x="79.0547%" y="437" width="3.3775%" height="15" fill="rgb(190,190,55)" fg:x="7092" fg:w="303"/><text x="79.3047%" y="447.50">[li..</text></g><g><title>[libc.so.6] (278 samples, 3.10%)</title><rect x="79.3334%" y="421" width="3.0989%" height="15" fill="rgb(184,184,53)" fg:x="7117" fg:w="278"/><text x="79.5834%" y="431.50">[li..</text></g><g><title>[libc.so.6] (66 samples, 0.74%)</title><rect x="81.6966%" y="405" width="0.7357%" height="15" fill="rgb(182,182,52)" fg:x="7329" fg:w="66"/><text x="81.9466%" y="415.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="82.3877%" y="389" width="0.0446%" height="15" fill="rgb(221,221,66)" fg:x="7391" fg:w="4"/><text x="82.6377%" y="399.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="82.4323%" y="501" width="0.0223%" height="15" fill="rgb(216,216,65)" fg:x="7395" fg:w="2"/><text x="82.6823%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="82.4323%" y="485" width="0.0223%" height="15" fill="rgb(245,145,0)" fg:x="7395" fg:w="2"/><text x="82.6823%" y="495.50"></text></g><g><title>__rust_alloc (3 samples, 0.03%)</title><rect x="82.4546%" y="501" width="0.0334%" height="15" fill="rgb(200,200,59)" fg:x="7397" fg:w="3"/><text x="82.7046%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (7 samples, 0.08%)</title><rect x="82.4880%" y="501" width="0.0780%" height="15" fill="rgb(239,139,0)" fg:x="7400" fg:w="7"/><text x="82.7380%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (392 samples, 4.37%)</title><rect x="78.3859%" y="517" width="4.3696%" height="15" fill="rgb(200,100,0)" fg:x="7032" fg:w="392"/><text x="78.6359%" y="527.50">alloc..</text></g><g><title>malloc (17 samples, 0.19%)</title><rect x="82.5660%" y="501" width="0.1895%" height="15" fill="rgb(183,183,53)" fg:x="7407" fg:w="17"/><text x="82.8160%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.04%)</title><rect x="82.7555%" y="517" width="0.0446%" height="15" fill="rgb(242,142,0)" fg:x="7424" fg:w="4"/><text x="83.0055%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.04%)</title><rect x="82.7555%" y="501" width="0.0446%" height="15" fill="rgb(201,101,0)" fg:x="7424" fg:w="4"/><text x="83.0055%" y="511.50"></text></g><g><title>core::cmp::max (14 samples, 0.16%)</title><rect x="82.8001%" y="517" width="0.1561%" height="15" fill="rgb(203,103,0)" fg:x="7428" fg:w="14"/><text x="83.0501%" y="527.50"></text></g><g><title>core::cmp::Ord::max (14 samples, 0.16%)</title><rect x="82.8001%" y="501" width="0.1561%" height="15" fill="rgb(199,99,0)" fg:x="7428" fg:w="14"/><text x="83.0501%" y="511.50"></text></g><g><title>core::cmp::max_by (14 samples, 0.16%)</title><rect x="82.8001%" y="485" width="0.1561%" height="15" fill="rgb(220,120,0)" fg:x="7428" fg:w="14"/><text x="83.0501%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (428 samples, 4.77%)</title><rect x="78.2187%" y="549" width="4.7709%" height="15" fill="rgb(217,117,0)" fg:x="7017" fg:w="428"/><text x="78.4687%" y="559.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (428 samples, 4.77%)</title><rect x="78.2187%" y="533" width="4.7709%" height="15" fill="rgb(226,126,0)" fg:x="7017" fg:w="428"/><text x="78.4687%" y="543.50">alloc:..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.03%)</title><rect x="82.9562%" y="517" width="0.0334%" height="15" fill="rgb(216,116,0)" fg:x="7442" fg:w="3"/><text x="83.2062%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.03%)</title><rect x="82.9562%" y="501" width="0.0334%" height="15" fill="rgb(193,93,0)" fg:x="7442" fg:w="3"/><text x="83.2062%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.06%)</title><rect x="82.9896%" y="549" width="0.0557%" height="15" fill="rgb(193,93,0)" fg:x="7445" fg:w="5"/><text x="83.2396%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.06%)</title><rect x="82.9896%" y="533" width="0.0557%" height="15" fill="rgb(206,106,0)" fg:x="7445" fg:w="5"/><text x="83.2396%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (502 samples, 5.60%)</title><rect x="77.6948%" y="565" width="5.5958%" height="15" fill="rgb(248,148,0)" fg:x="6970" fg:w="502"/><text x="77.9448%" y="575.50">alloc::..</text></g><g><title>core::ptr::write (22 samples, 0.25%)</title><rect x="83.0454%" y="549" width="0.2452%" height="15" fill="rgb(253,153,0)" fg:x="7450" fg:w="22"/><text x="83.2954%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (4 samples, 0.04%)</title><rect x="83.2906%" y="565" width="0.0446%" height="15" fill="rgb(194,94,0)" fg:x="7472" fg:w="4"/><text x="83.5406%" y="575.50"></text></g><g><title>__rdl_dealloc (17 samples, 0.19%)</title><rect x="83.4467%" y="469" width="0.1895%" height="15" fill="rgb(185,185,53)" fg:x="7486" fg:w="17"/><text x="83.6967%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (17 samples, 0.19%)</title><rect x="83.4467%" y="453" width="0.1895%" height="15" fill="rgb(244,144,0)" fg:x="7486" fg:w="17"/><text x="83.6967%" y="463.50"></text></g><g><title>__rust_dealloc (17 samples, 0.19%)</title><rect x="83.6362%" y="469" width="0.1895%" height="15" fill="rgb(191,191,55)" fg:x="7503" fg:w="17"/><text x="83.8862%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (265 samples, 2.95%)</title><rect x="83.3352%" y="501" width="2.9540%" height="15" fill="rgb(243,143,0)" fg:x="7476" fg:w="265"/><text x="83.5852%" y="511.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (265 samples, 2.95%)</title><rect x="83.3352%" y="485" width="2.9540%" height="15" fill="rgb(250,150,0)" fg:x="7476" fg:w="265"/><text x="83.5852%" y="495.50">all..</text></g><g><title>cfree (221 samples, 2.46%)</title><rect x="83.8257%" y="469" width="2.4635%" height="15" fill="rgb(217,217,65)" fg:x="7520" fg:w="221"/><text x="84.0757%" y="479.50">cf..</text></g><g><title>[libc.so.6] (145 samples, 1.62%)</title><rect x="84.6728%" y="453" width="1.6163%" height="15" fill="rgb(186,186,54)" fg:x="7596" fg:w="145"/><text x="84.9228%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (284 samples, 3.17%)</title><rect x="83.3352%" y="565" width="3.1658%" height="15" fill="rgb(213,113,0)" fg:x="7476" fg:w="284"/><text x="83.5852%" y="575.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (284 samples, 3.17%)</title><rect x="83.3352%" y="549" width="3.1658%" height="15" fill="rgb(217,117,0)" fg:x="7476" fg:w="284"/><text x="83.5852%" y="559.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (284 samples, 3.17%)</title><rect x="83.3352%" y="533" width="3.1658%" height="15" fill="rgb(214,114,0)" fg:x="7476" fg:w="284"/><text x="83.5852%" y="543.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (284 samples, 3.17%)</title><rect x="83.3352%" y="517" width="3.1658%" height="15" fill="rgb(203,103,0)" fg:x="7476" fg:w="284"/><text x="83.5852%" y="527.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (19 samples, 0.21%)</title><rect x="86.2892%" y="501" width="0.2118%" height="15" fill="rgb(193,93,0)" fg:x="7741" fg:w="19"/><text x="86.5392%" y="511.50"></text></g><g><title>__rdl_dealloc (9 samples, 0.10%)</title><rect x="86.8019%" y="421" width="0.1003%" height="15" fill="rgb(193,193,56)" fg:x="7787" fg:w="9"/><text x="87.0519%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.10%)</title><rect x="86.8019%" y="405" width="0.1003%" height="15" fill="rgb(237,137,0)" fg:x="7787" fg:w="9"/><text x="87.0519%" y="415.50"></text></g><g><title>__rust_dealloc (8 samples, 0.09%)</title><rect x="86.9022%" y="421" width="0.0892%" height="15" fill="rgb(226,226,68)" fg:x="7796" fg:w="8"/><text x="87.1522%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (261 samples, 2.91%)</title><rect x="86.6904%" y="453" width="2.9094%" height="15" fill="rgb(254,154,0)" fg:x="7777" fg:w="261"/><text x="86.9404%" y="463.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (261 samples, 2.91%)</title><rect x="86.6904%" y="437" width="2.9094%" height="15" fill="rgb(236,136,0)" fg:x="7777" fg:w="261"/><text x="86.9404%" y="447.50">al..</text></g><g><title>cfree (234 samples, 2.61%)</title><rect x="86.9914%" y="421" width="2.6084%" height="15" fill="rgb(228,228,69)" fg:x="7804" fg:w="234"/><text x="87.2414%" y="431.50">cf..</text></g><g><title>[libc.so.6] (190 samples, 2.12%)</title><rect x="87.4819%" y="405" width="2.1179%" height="15" fill="rgb(206,206,61)" fg:x="7848" fg:w="190"/><text x="87.7319%" y="415.50">[..</text></g><g><title>[libc.so.6] (49 samples, 0.55%)</title><rect x="89.0536%" y="389" width="0.5462%" height="15" fill="rgb(215,215,64)" fg:x="7989" fg:w="49"/><text x="89.3036%" y="399.50"></text></g><g><title>[libc.so.6] (12 samples, 0.13%)</title><rect x="89.4661%" y="373" width="0.1338%" height="15" fill="rgb(195,195,57)" fg:x="8026" fg:w="12"/><text x="89.7161%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (287 samples, 3.20%)</title><rect x="86.5009%" y="549" width="3.1992%" height="15" fill="rgb(191,91,0)" fg:x="7760" fg:w="287"/><text x="86.7509%" y="559.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (287 samples, 3.20%)</title><rect x="86.5009%" y="533" width="3.1992%" height="15" fill="rgb(254,154,0)" fg:x="7760" fg:w="287"/><text x="86.7509%" y="543.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (275 samples, 3.07%)</title><rect x="86.6347%" y="517" width="3.0654%" height="15" fill="rgb(251,151,0)" fg:x="7772" fg:w="275"/><text x="86.8847%" y="527.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (275 samples, 3.07%)</title><rect x="86.6347%" y="501" width="3.0654%" height="15" fill="rgb(245,145,0)" fg:x="7772" fg:w="275"/><text x="86.8847%" y="511.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (275 samples, 3.07%)</title><rect x="86.6347%" y="485" width="3.0654%" height="15" fill="rgb(220,120,0)" fg:x="7772" fg:w="275"/><text x="86.8847%" y="495.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (275 samples, 3.07%)</title><rect x="86.6347%" y="469" width="3.0654%" height="15" fill="rgb(254,154,0)" fg:x="7772" fg:w="275"/><text x="86.8847%" y="479.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.10%)</title><rect x="89.5998%" y="453" width="0.1003%" height="15" fill="rgb(198,98,0)" fg:x="8038" fg:w="9"/><text x="89.8498%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3 samples, 0.03%)</title><rect x="89.6667%" y="437" width="0.0334%" height="15" fill="rgb(209,109,0)" fg:x="8044" fg:w="3"/><text x="89.9167%" y="447.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="89.7224%" y="485" width="0.0111%" height="15" fill="rgb(200,200,59)" fg:x="8049" fg:w="1"/><text x="89.9724%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (58 samples, 0.65%)</title><rect x="89.7113%" y="517" width="0.6465%" height="15" fill="rgb(223,123,0)" fg:x="8048" fg:w="58"/><text x="89.9613%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 0.65%)</title><rect x="89.7113%" y="501" width="0.6465%" height="15" fill="rgb(233,133,0)" fg:x="8048" fg:w="58"/><text x="89.9613%" y="511.50"></text></g><g><title>cfree (56 samples, 0.62%)</title><rect x="89.7336%" y="485" width="0.6242%" height="15" fill="rgb(176,176,50)" fg:x="8050" fg:w="56"/><text x="89.9836%" y="495.50"></text></g><g><title>[libc.so.6] (43 samples, 0.48%)</title><rect x="89.8785%" y="469" width="0.4793%" height="15" fill="rgb(210,210,63)" fg:x="8063" fg:w="43"/><text x="90.1285%" y="479.50"></text></g><g><title>[libc.so.6] (14 samples, 0.16%)</title><rect x="90.2018%" y="453" width="0.1561%" height="15" fill="rgb(219,219,66)" fg:x="8092" fg:w="14"/><text x="90.4518%" y="463.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="90.3132%" y="437" width="0.0446%" height="15" fill="rgb(184,184,53)" fg:x="8102" fg:w="4"/><text x="90.5632%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (351 samples, 3.91%)</title><rect x="86.5009%" y="565" width="3.9126%" height="15" fill="rgb(237,137,0)" fg:x="7760" fg:w="351"/><text x="86.7509%" y="575.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (64 samples, 0.71%)</title><rect x="89.7001%" y="549" width="0.7134%" height="15" fill="rgb(220,120,0)" fg:x="8047" fg:w="64"/><text x="89.9501%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.71%)</title><rect x="89.7001%" y="533" width="0.7134%" height="15" fill="rgb(251,151,0)" fg:x="8047" fg:w="64"/><text x="89.9501%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.06%)</title><rect x="90.3578%" y="517" width="0.0557%" height="15" fill="rgb(238,138,0)" fg:x="8106" fg:w="5"/><text x="90.6078%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.02%)</title><rect x="90.3913%" y="501" width="0.0223%" height="15" fill="rgb(215,115,0)" fg:x="8109" fg:w="2"/><text x="90.6413%" y="511.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (6 samples, 0.07%)</title><rect x="90.4136%" y="533" width="0.0669%" height="15" fill="rgb(245,145,0)" fg:x="8111" fg:w="6"/><text x="90.6636%" y="543.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (6 samples, 0.07%)</title><rect x="90.4136%" y="517" width="0.0669%" height="15" fill="rgb(68,182,182)" fg:x="8111" fg:w="6"/><text x="90.6636%" y="527.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (6 samples, 0.07%)</title><rect x="90.4136%" y="501" width="0.0669%" height="15" fill="rgb(220,120,0)" fg:x="8111" fg:w="6"/><text x="90.6636%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.07%)</title><rect x="90.4136%" y="485" width="0.0669%" height="15" fill="rgb(252,152,0)" fg:x="8111" fg:w="6"/><text x="90.6636%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (6 samples, 0.07%)</title><rect x="90.4136%" y="469" width="0.0669%" height="15" fill="rgb(221,121,0)" fg:x="8111" fg:w="6"/><text x="90.6636%" y="479.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.04%)</title><rect x="90.5473%" y="437" width="0.0446%" height="15" fill="rgb(217,217,65)" fg:x="8123" fg:w="4"/><text x="90.7973%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.04%)</title><rect x="90.5473%" y="421" width="0.0446%" height="15" fill="rgb(222,122,0)" fg:x="8123" fg:w="4"/><text x="90.7973%" y="431.50"></text></g><g><title>__rust_dealloc (6 samples, 0.07%)</title><rect x="90.5919%" y="437" width="0.0669%" height="15" fill="rgb(191,191,56)" fg:x="8127" fg:w="6"/><text x="90.8419%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (88 samples, 0.98%)</title><rect x="90.4804%" y="469" width="0.9809%" height="15" fill="rgb(235,135,0)" fg:x="8117" fg:w="88"/><text x="90.7304%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (88 samples, 0.98%)</title><rect x="90.4804%" y="453" width="0.9809%" height="15" fill="rgb(191,91,0)" fg:x="8117" fg:w="88"/><text x="90.7304%" y="463.50"></text></g><g><title>cfree (72 samples, 0.80%)</title><rect x="90.6588%" y="437" width="0.8026%" height="15" fill="rgb(229,229,69)" fg:x="8133" fg:w="72"/><text x="90.9088%" y="447.50"></text></g><g><title>[libc.so.6] (50 samples, 0.56%)</title><rect x="90.9040%" y="421" width="0.5574%" height="15" fill="rgb(180,180,51)" fg:x="8155" fg:w="50"/><text x="91.1540%" y="431.50"></text></g><g><title>[libc.so.6] (8 samples, 0.09%)</title><rect x="91.3722%" y="405" width="0.0892%" height="15" fill="rgb(182,182,52)" fg:x="8197" fg:w="8"/><text x="91.6222%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.4502%" y="389" width="0.0111%" height="15" fill="rgb(217,217,65)" fg:x="8204" fg:w="1"/><text x="91.7002%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (91 samples, 1.01%)</title><rect x="90.4804%" y="533" width="1.0144%" height="15" fill="rgb(235,135,0)" fg:x="8117" fg:w="91"/><text x="90.7304%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 1.01%)</title><rect x="90.4804%" y="517" width="1.0144%" height="15" fill="rgb(58,172,172)" fg:x="8117" fg:w="91"/><text x="90.7304%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (91 samples, 1.01%)</title><rect x="90.4804%" y="501" width="1.0144%" height="15" fill="rgb(222,122,0)" fg:x="8117" fg:w="91"/><text x="90.7304%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 1.01%)</title><rect x="90.4804%" y="485" width="1.0144%" height="15" fill="rgb(216,116,0)" fg:x="8117" fg:w="91"/><text x="90.7304%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.03%)</title><rect x="91.4614%" y="469" width="0.0334%" height="15" fill="rgb(243,143,0)" fg:x="8205" fg:w="3"/><text x="91.7114%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3 samples, 0.03%)</title><rect x="91.4614%" y="453" width="0.0334%" height="15" fill="rgb(192,92,0)" fg:x="8205" fg:w="3"/><text x="91.7114%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (100 samples, 1.11%)</title><rect x="90.4136%" y="565" width="1.1147%" height="15" fill="rgb(192,92,0)" fg:x="8111" fg:w="100"/><text x="90.6636%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 1.11%)</title><rect x="90.4136%" y="549" width="1.1147%" height="15" fill="rgb(214,114,0)" fg:x="8111" fg:w="100"/><text x="90.6636%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (3 samples, 0.03%)</title><rect x="91.4948%" y="533" width="0.0334%" height="15" fill="rgb(239,139,0)" fg:x="8208" fg:w="3"/><text x="91.7448%" y="543.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="91.5283%" y="437" width="0.0111%" height="15" fill="rgb(206,206,61)" fg:x="8211" fg:w="1"/><text x="91.7783%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.30%)</title><rect x="91.5283%" y="469" width="0.3010%" height="15" fill="rgb(195,95,0)" fg:x="8211" fg:w="27"/><text x="91.7783%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.30%)</title><rect x="91.5283%" y="453" width="0.3010%" height="15" fill="rgb(217,117,0)" fg:x="8211" fg:w="27"/><text x="91.7783%" y="463.50"></text></g><g><title>cfree (26 samples, 0.29%)</title><rect x="91.5394%" y="437" width="0.2898%" height="15" fill="rgb(200,200,59)" fg:x="8212" fg:w="26"/><text x="91.7894%" y="447.50"></text></g><g><title>[libc.so.6] (17 samples, 0.19%)</title><rect x="91.6397%" y="421" width="0.1895%" height="15" fill="rgb(212,212,63)" fg:x="8221" fg:w="17"/><text x="91.8897%" y="431.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (4,767 samples, 53.14%)</title><rect x="38.7248%" y="581" width="53.1379%" height="15" fill="rgb(93,205,205)" fg:x="3474" fg:w="4767"/><text x="38.9748%" y="591.50">alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (30 samples, 0.33%)</title><rect x="91.5283%" y="565" width="0.3344%" height="15" fill="rgb(196,96,0)" fg:x="8211" fg:w="30"/><text x="91.7783%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.33%)</title><rect x="91.5283%" y="549" width="0.3344%" height="15" fill="rgb(252,152,0)" fg:x="8211" fg:w="30"/><text x="91.7783%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (30 samples, 0.33%)</title><rect x="91.5283%" y="533" width="0.3344%" height="15" fill="rgb(234,134,0)" fg:x="8211" fg:w="30"/><text x="91.7783%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.33%)</title><rect x="91.5283%" y="517" width="0.3344%" height="15" fill="rgb(75,188,188)" fg:x="8211" fg:w="30"/><text x="91.7783%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (30 samples, 0.33%)</title><rect x="91.5283%" y="501" width="0.3344%" height="15" fill="rgb(209,109,0)" fg:x="8211" fg:w="30"/><text x="91.7783%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.33%)</title><rect x="91.5283%" y="485" width="0.3344%" height="15" fill="rgb(245,145,0)" fg:x="8211" fg:w="30"/><text x="91.7783%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.03%)</title><rect x="91.8292%" y="469" width="0.0334%" height="15" fill="rgb(247,147,0)" fg:x="8238" fg:w="3"/><text x="92.0792%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.02%)</title><rect x="91.8404%" y="453" width="0.0223%" height="15" fill="rgb(225,125,0)" fg:x="8239" fg:w="2"/><text x="92.0904%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (38 samples, 0.42%)</title><rect x="92.0856%" y="501" width="0.4236%" height="15" fill="rgb(241,141,0)" fg:x="8261" fg:w="38"/><text x="92.3356%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (38 samples, 0.42%)</title><rect x="92.0856%" y="485" width="0.4236%" height="15" fill="rgb(235,135,0)" fg:x="8261" fg:w="38"/><text x="92.3356%" y="495.50"></text></g><g><title>core::cmp::min_by (38 samples, 0.42%)</title><rect x="92.0856%" y="469" width="0.4236%" height="15" fill="rgb(200,100,0)" fg:x="8261" fg:w="38"/><text x="92.3356%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (34 samples, 0.38%)</title><rect x="92.1302%" y="453" width="0.3790%" height="15" fill="rgb(251,151,0)" fg:x="8265" fg:w="34"/><text x="92.3802%" y="463.50"></text></g><g><title>alc::optimizer::arg_min::_{{closure}} (34 samples, 0.38%)</title><rect x="92.1302%" y="437" width="0.3790%" height="15" fill="rgb(81,193,193)" fg:x="8265" fg:w="34"/><text x="92.3802%" y="447.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::total_cmp (33 samples, 0.37%)</title><rect x="92.1413%" y="421" width="0.3679%" height="15" fill="rgb(205,105,0)" fg:x="8266" fg:w="33"/><text x="92.3913%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="92.5092%" y="501" width="0.0111%" height="15" fill="rgb(199,99,0)" fg:x="8299" fg:w="1"/><text x="92.7592%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (55 samples, 0.61%)</title><rect x="91.9184%" y="565" width="0.6131%" height="15" fill="rgb(249,149,0)" fg:x="8246" fg:w="55"/><text x="92.1684%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (55 samples, 0.61%)</title><rect x="91.9184%" y="549" width="0.6131%" height="15" fill="rgb(210,110,0)" fg:x="8246" fg:w="55"/><text x="92.1684%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 0.61%)</title><rect x="91.9184%" y="533" width="0.6131%" height="15" fill="rgb(231,131,0)" fg:x="8246" fg:w="55"/><text x="92.1684%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 0.61%)</title><rect x="91.9184%" y="517" width="0.6131%" height="15" fill="rgb(224,124,0)" fg:x="8246" fg:w="55"/><text x="92.1684%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="92.5203%" y="501" width="0.0111%" height="15" fill="rgb(204,104,0)" fg:x="8300" fg:w="1"/><text x="92.7703%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="92.5203%" y="485" width="0.0111%" height="15" fill="rgb(254,154,0)" fg:x="8300" fg:w="1"/><text x="92.7703%" y="495.50"></text></g><g><title>alc::optimizer::arg_min (61 samples, 0.68%)</title><rect x="91.8627%" y="581" width="0.6800%" height="15" fill="rgb(54,169,169)" fg:x="8241" fg:w="61"/><text x="92.1127%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="92.5315%" y="565" width="0.0111%" height="15" fill="rgb(247,147,0)" fg:x="8301" fg:w="1"/><text x="92.7815%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="92.8436%" y="533" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="8329" fg:w="1"/><text x="93.0936%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.10%)</title><rect x="92.8548%" y="533" width="0.1003%" height="15" fill="rgb(197,97,0)" fg:x="8330" fg:w="9"/><text x="93.1048%" y="543.50"></text></g><g><title>__rdl_realloc (3 samples, 0.03%)</title><rect x="93.0108%" y="469" width="0.0334%" height="15" fill="rgb(223,223,67)" fg:x="8344" fg:w="3"/><text x="93.2608%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="93.0220%" y="453" width="0.0223%" height="15" fill="rgb(212,112,0)" fg:x="8345" fg:w="2"/><text x="93.2720%" y="463.50"></text></g><g><title>__rust_realloc (1 samples, 0.01%)</title><rect x="93.0443%" y="469" width="0.0111%" height="15" fill="rgb(223,223,67)" fg:x="8347" fg:w="1"/><text x="93.2943%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (225 samples, 2.51%)</title><rect x="92.9997%" y="517" width="2.5081%" height="15" fill="rgb(207,107,0)" fg:x="8343" fg:w="225"/><text x="93.2497%" y="527.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (225 samples, 2.51%)</title><rect x="92.9997%" y="501" width="2.5081%" height="15" fill="rgb(205,105,0)" fg:x="8343" fg:w="225"/><text x="93.2497%" y="511.50">al..</text></g><g><title>alloc::alloc::realloc (225 samples, 2.51%)</title><rect x="92.9997%" y="485" width="2.5081%" height="15" fill="rgb(223,123,0)" fg:x="8343" fg:w="225"/><text x="93.2497%" y="495.50">al..</text></g><g><title>realloc (220 samples, 2.45%)</title><rect x="93.0554%" y="469" width="2.4523%" height="15" fill="rgb(207,207,61)" fg:x="8348" fg:w="220"/><text x="93.3054%" y="479.50">re..</text></g><g><title>[libc.so.6] (195 samples, 2.17%)</title><rect x="93.3341%" y="453" width="2.1737%" height="15" fill="rgb(215,215,64)" fg:x="8373" fg:w="195"/><text x="93.5841%" y="463.50">[..</text></g><g><title>[libc.so.6] (180 samples, 2.01%)</title><rect x="93.5013%" y="437" width="2.0065%" height="15" fill="rgb(199,199,58)" fg:x="8388" fg:w="180"/><text x="93.7513%" y="447.50">[..</text></g><g><title>[libc.so.6] (10 samples, 0.11%)</title><rect x="95.3963%" y="421" width="0.1115%" height="15" fill="rgb(217,217,65)" fg:x="8558" fg:w="10"/><text x="95.6463%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="95.4743%" y="405" width="0.0334%" height="15" fill="rgb(176,176,50)" fg:x="8565" fg:w="3"/><text x="95.7243%" y="415.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="95.5077%" y="517" width="0.0223%" height="15" fill="rgb(203,203,60)" fg:x="8568" fg:w="2"/><text x="95.7577%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.04%)</title><rect x="95.5300%" y="517" width="0.0446%" height="15" fill="rgb(210,110,0)" fg:x="8570" fg:w="4"/><text x="95.7800%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (247 samples, 2.75%)</title><rect x="92.9551%" y="533" width="2.7533%" height="15" fill="rgb(200,100,0)" fg:x="8339" fg:w="247"/><text x="93.2051%" y="543.50">al..</text></g><g><title>malloc (12 samples, 0.13%)</title><rect x="95.5746%" y="517" width="0.1338%" height="15" fill="rgb(203,203,60)" fg:x="8574" fg:w="12"/><text x="95.8246%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="95.7084%" y="533" width="0.0223%" height="15" fill="rgb(219,119,0)" fg:x="8586" fg:w="2"/><text x="95.9584%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.02%)</title><rect x="95.7084%" y="517" width="0.0223%" height="15" fill="rgb(247,147,0)" fg:x="8586" fg:w="2"/><text x="95.9584%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (266 samples, 2.97%)</title><rect x="92.8325%" y="565" width="2.9651%" height="15" fill="rgb(242,142,0)" fg:x="8328" fg:w="266"/><text x="93.0825%" y="575.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (266 samples, 2.97%)</title><rect x="92.8325%" y="549" width="2.9651%" height="15" fill="rgb(220,120,0)" fg:x="8328" fg:w="266"/><text x="93.0825%" y="559.50">all..</text></g><g><title>core::cmp::max (6 samples, 0.07%)</title><rect x="95.7307%" y="533" width="0.0669%" height="15" fill="rgb(240,140,0)" fg:x="8588" fg:w="6"/><text x="95.9807%" y="543.50"></text></g><g><title>core::cmp::Ord::max (6 samples, 0.07%)</title><rect x="95.7307%" y="517" width="0.0669%" height="15" fill="rgb(209,109,0)" fg:x="8588" fg:w="6"/><text x="95.9807%" y="527.50"></text></g><g><title>core::cmp::max_by (6 samples, 0.07%)</title><rect x="95.7307%" y="501" width="0.0669%" height="15" fill="rgb(249,149,0)" fg:x="8588" fg:w="6"/><text x="95.9807%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="95.7976%" y="565" width="0.0223%" height="15" fill="rgb(191,91,0)" fg:x="8594" fg:w="2"/><text x="96.0476%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="95.7976%" y="549" width="0.0223%" height="15" fill="rgb(202,102,0)" fg:x="8594" fg:w="2"/><text x="96.0476%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (299 samples, 3.33%)</title><rect x="92.5426%" y="581" width="3.3330%" height="15" fill="rgb(228,128,0)" fg:x="8302" fg:w="299"/><text x="92.7926%" y="591.50">all..</text></g><g><title>core::ptr::write (5 samples, 0.06%)</title><rect x="95.8199%" y="565" width="0.0557%" height="15" fill="rgb(215,115,0)" fg:x="8596" fg:w="5"/><text x="96.0699%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="95.8756%" y="581" width="0.0111%" height="15" fill="rgb(215,115,0)" fg:x="8601" fg:w="1"/><text x="96.1256%" y="591.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="95.8979%" y="485" width="0.0111%" height="15" fill="rgb(196,196,57)" fg:x="8603" fg:w="1"/><text x="96.1479%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (20 samples, 0.22%)</title><rect x="95.8867%" y="581" width="0.2229%" height="15" fill="rgb(242,142,0)" fg:x="8602" fg:w="20"/><text x="96.1367%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (20 samples, 0.22%)</title><rect x="95.8867%" y="565" width="0.2229%" height="15" fill="rgb(191,91,0)" fg:x="8602" fg:w="20"/><text x="96.1367%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (20 samples, 0.22%)</title><rect x="95.8867%" y="549" width="0.2229%" height="15" fill="rgb(232,132,0)" fg:x="8602" fg:w="20"/><text x="96.1367%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.22%)</title><rect x="95.8867%" y="533" width="0.2229%" height="15" fill="rgb(230,130,0)" fg:x="8602" fg:w="20"/><text x="96.1367%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.22%)</title><rect x="95.8867%" y="517" width="0.2229%" height="15" fill="rgb(215,115,0)" fg:x="8602" fg:w="20"/><text x="96.1367%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.22%)</title><rect x="95.8867%" y="501" width="0.2229%" height="15" fill="rgb(199,99,0)" fg:x="8602" fg:w="20"/><text x="96.1367%" y="511.50"></text></g><g><title>cfree (18 samples, 0.20%)</title><rect x="95.9090%" y="485" width="0.2006%" height="15" fill="rgb(226,226,68)" fg:x="8604" fg:w="18"/><text x="96.1590%" y="495.50"></text></g><g><title>[libc.so.6] (14 samples, 0.16%)</title><rect x="95.9536%" y="469" width="0.1561%" height="15" fill="rgb(202,202,60)" fg:x="8608" fg:w="14"/><text x="96.2036%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="96.0985%" y="453" width="0.0111%" height="15" fill="rgb(190,190,55)" fg:x="8621" fg:w="1"/><text x="96.3485%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.01%)</title><rect x="96.1097%" y="581" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="8622" fg:w="1"/><text x="96.3597%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="96.1097%" y="565" width="0.0111%" height="15" fill="rgb(235,135,0)" fg:x="8622" fg:w="1"/><text x="96.3597%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.01%)</title><rect x="96.1097%" y="549" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="8622" fg:w="1"/><text x="96.3597%" y="559.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="96.1208%" y="501" width="0.0223%" height="15" fill="rgb(194,194,57)" fg:x="8623" fg:w="2"/><text x="96.3708%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (33 samples, 0.37%)</title><rect x="96.1208%" y="581" width="0.3679%" height="15" fill="rgb(216,116,0)" fg:x="8623" fg:w="33"/><text x="96.3708%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (33 samples, 0.37%)</title><rect x="96.1208%" y="565" width="0.3679%" height="15" fill="rgb(196,96,0)" fg:x="8623" fg:w="33"/><text x="96.3708%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.37%)</title><rect x="96.1208%" y="549" width="0.3679%" height="15" fill="rgb(226,126,0)" fg:x="8623" fg:w="33"/><text x="96.3708%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.37%)</title><rect x="96.1208%" y="533" width="0.3679%" height="15" fill="rgb(226,126,0)" fg:x="8623" fg:w="33"/><text x="96.3708%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.37%)</title><rect x="96.1208%" y="517" width="0.3679%" height="15" fill="rgb(237,137,0)" fg:x="8623" fg:w="33"/><text x="96.3708%" y="527.50"></text></g><g><title>cfree (31 samples, 0.35%)</title><rect x="96.1431%" y="501" width="0.3456%" height="15" fill="rgb(184,184,53)" fg:x="8625" fg:w="31"/><text x="96.3931%" y="511.50"></text></g><g><title>[libc.so.6] (29 samples, 0.32%)</title><rect x="96.1654%" y="485" width="0.3233%" height="15" fill="rgb(211,211,63)" fg:x="8627" fg:w="29"/><text x="96.4154%" y="495.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="96.4107%" y="469" width="0.0780%" height="15" fill="rgb(179,179,51)" fg:x="8649" fg:w="7"/><text x="96.6607%" y="479.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="96.4664%" y="453" width="0.0223%" height="15" fill="rgb(202,202,59)" fg:x="8654" fg:w="2"/><text x="96.7164%" y="463.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (2 samples, 0.02%)</title><rect x="96.4887%" y="549" width="0.0223%" height="15" fill="rgb(191,91,0)" fg:x="8656" fg:w="2"/><text x="96.7387%" y="559.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.02%)</title><rect x="96.4887%" y="533" width="0.0223%" height="15" fill="rgb(96,207,207)" fg:x="8656" fg:w="2"/><text x="96.7387%" y="543.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="96.4887%" y="517" width="0.0223%" height="15" fill="rgb(252,152,0)" fg:x="8656" fg:w="2"/><text x="96.7387%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="96.4887%" y="501" width="0.0223%" height="15" fill="rgb(237,137,0)" fg:x="8656" fg:w="2"/><text x="96.7387%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.02%)</title><rect x="96.4887%" y="485" width="0.0223%" height="15" fill="rgb(248,148,0)" fg:x="8656" fg:w="2"/><text x="96.7387%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (40 samples, 0.45%)</title><rect x="96.5110%" y="485" width="0.4459%" height="15" fill="rgb(214,114,0)" fg:x="8658" fg:w="40"/><text x="96.7610%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (40 samples, 0.45%)</title><rect x="96.5110%" y="469" width="0.4459%" height="15" fill="rgb(197,97,0)" fg:x="8658" fg:w="40"/><text x="96.7610%" y="479.50"></text></g><g><title>cfree (40 samples, 0.45%)</title><rect x="96.5110%" y="453" width="0.4459%" height="15" fill="rgb(177,177,51)" fg:x="8658" fg:w="40"/><text x="96.7610%" y="463.50"></text></g><g><title>[libc.so.6] (36 samples, 0.40%)</title><rect x="96.5556%" y="437" width="0.4013%" height="15" fill="rgb(209,209,62)" fg:x="8662" fg:w="36"/><text x="96.8056%" y="447.50"></text></g><g><title>[libc.so.6] (21 samples, 0.23%)</title><rect x="96.7228%" y="421" width="0.2341%" height="15" fill="rgb(201,201,59)" fg:x="8677" fg:w="21"/><text x="96.9728%" y="431.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="96.8788%" y="405" width="0.0780%" height="15" fill="rgb(212,212,63)" fg:x="8691" fg:w="7"/><text x="97.1288%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (41 samples, 0.46%)</title><rect x="96.5110%" y="549" width="0.4570%" height="15" fill="rgb(253,153,0)" fg:x="8658" fg:w="41"/><text x="96.7610%" y="559.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.46%)</title><rect x="96.5110%" y="533" width="0.4570%" height="15" fill="rgb(54,168,168)" fg:x="8658" fg:w="41"/><text x="96.7610%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (41 samples, 0.46%)</title><rect x="96.5110%" y="517" width="0.4570%" height="15" fill="rgb(238,138,0)" fg:x="8658" fg:w="41"/><text x="96.7610%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.46%)</title><rect x="96.5110%" y="501" width="0.4570%" height="15" fill="rgb(196,96,0)" fg:x="8658" fg:w="41"/><text x="96.7610%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="96.9569%" y="485" width="0.0111%" height="15" fill="rgb(202,102,0)" fg:x="8698" fg:w="1"/><text x="97.2069%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="96.9569%" y="469" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="8698" fg:w="1"/><text x="97.2069%" y="479.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population (6,240 samples, 69.56%)</title><rect x="27.4328%" y="629" width="69.5575%" height="15" fill="rgb(97,208,208)" fg:x="2461" fg:w="6240"/><text x="27.6828%" y="639.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (6,161 samples, 68.68%)</title><rect x="28.3135%" y="613" width="68.6768%" height="15" fill="rgb(51,166,166)" fg:x="2540" fg:w="6161"/><text x="28.5635%" y="623.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (6,038 samples, 67.31%)</title><rect x="29.6845%" y="597" width="67.3058%" height="15" fill="rgb(73,186,186)" fg:x="2663" fg:w="6038"/><text x="29.9345%" y="607.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (45 samples, 0.50%)</title><rect x="96.4887%" y="581" width="0.5016%" height="15" fill="rgb(211,111,0)" fg:x="8656" fg:w="45"/><text x="96.7387%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.50%)</title><rect x="96.4887%" y="565" width="0.5016%" height="15" fill="rgb(229,129,0)" fg:x="8656" fg:w="45"/><text x="96.7387%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.02%)</title><rect x="96.9680%" y="549" width="0.0223%" height="15" fill="rgb(240,140,0)" fg:x="8699" fg:w="2"/><text x="97.2180%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.01%)</title><rect x="96.9903%" y="613" width="0.0111%" height="15" fill="rgb(225,125,0)" fg:x="8701" fg:w="1"/><text x="97.2403%" y="623.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="96.9903%" y="597" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="8701" fg:w="1"/><text x="97.2403%" y="607.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.01%)</title><rect x="96.9903%" y="581" width="0.0111%" height="15" fill="rgb(199,99,0)" fg:x="8701" fg:w="1"/><text x="97.2403%" y="591.50"></text></g><g><title>core::slice::sort::provide_sorted_batch (1 samples, 0.01%)</title><rect x="96.9903%" y="565" width="0.0111%" height="15" fill="rgb(202,102,0)" fg:x="8701" fg:w="1"/><text x="97.2403%" y="575.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.01%)</title><rect x="96.9903%" y="549" width="0.0111%" height="15" fill="rgb(196,96,0)" fg:x="8701" fg:w="1"/><text x="97.2403%" y="559.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="96.9903%" y="533" width="0.0111%" height="15" fill="rgb(217,117,0)" fg:x="8701" fg:w="1"/><text x="97.2403%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="96.9903%" y="517" width="0.0111%" height="15" fill="rgb(228,128,0)" fg:x="8701" fg:w="1"/><text x="97.2403%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::split_off (1 samples, 0.01%)</title><rect x="97.0014%" y="613" width="0.0111%" height="15" fill="rgb(225,125,0)" fg:x="8702" fg:w="1"/><text x="97.2514%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="97.0014%" y="597" width="0.0111%" height="15" fill="rgb(240,140,0)" fg:x="8702" fg:w="1"/><text x="97.2514%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="97.0014%" y="581" width="0.0111%" height="15" fill="rgb(226,226,68)" fg:x="8702" fg:w="1"/><text x="97.2514%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (2 samples, 0.02%)</title><rect x="97.0126%" y="613" width="0.0223%" height="15" fill="rgb(202,102,0)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="623.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="97.0126%" y="597" width="0.0223%" height="15" fill="rgb(83,195,195)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_reserve (2 samples, 0.02%)</title><rect x="97.0126%" y="581" width="0.0223%" height="15" fill="rgb(223,123,0)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="97.0126%" y="565" width="0.0223%" height="15" fill="rgb(231,131,0)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="97.0126%" y="549" width="0.0223%" height="15" fill="rgb(246,146,0)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="97.0126%" y="533" width="0.0223%" height="15" fill="rgb(241,141,0)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="97.0126%" y="517" width="0.0223%" height="15" fill="rgb(191,91,0)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="97.0126%" y="501" width="0.0223%" height="15" fill="rgb(242,142,0)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="511.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="97.0126%" y="485" width="0.0223%" height="15" fill="rgb(183,183,53)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="97.0126%" y="469" width="0.0223%" height="15" fill="rgb(223,223,67)" fg:x="8703" fg:w="2"/><text x="97.2626%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="97.0349%" y="533" width="0.0446%" height="15" fill="rgb(238,138,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="97.0349%" y="517" width="0.0446%" height="15" fill="rgb(221,121,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (4 samples, 0.04%)</title><rect x="97.0349%" y="501" width="0.0446%" height="15" fill="rgb(205,105,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (4 samples, 0.04%)</title><rect x="97.0349%" y="485" width="0.0446%" height="15" fill="rgb(209,109,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (4 samples, 0.04%)</title><rect x="97.0349%" y="469" width="0.0446%" height="15" fill="rgb(199,99,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (4 samples, 0.04%)</title><rect x="97.0349%" y="453" width="0.0446%" height="15" fill="rgb(193,93,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (4 samples, 0.04%)</title><rect x="97.0349%" y="437" width="0.0446%" height="15" fill="rgb(221,121,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="97.0349%" y="421" width="0.0446%" height="15" fill="rgb(214,114,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="97.0349%" y="405" width="0.0446%" height="15" fill="rgb(242,142,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="97.0349%" y="389" width="0.0446%" height="15" fill="rgb(233,133,0)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="399.50"></text></g><g><title>cfree (4 samples, 0.04%)</title><rect x="97.0349%" y="373" width="0.0446%" height="15" fill="rgb(178,178,51)" fg:x="8705" fg:w="4"/><text x="97.2849%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="97.0572%" y="357" width="0.0223%" height="15" fill="rgb(207,207,61)" fg:x="8707" fg:w="2"/><text x="97.3072%" y="367.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="97.1352%" y="245" width="0.0111%" height="15" fill="rgb(187,187,54)" fg:x="8714" fg:w="1"/><text x="97.3852%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="97.1352%" y="229" width="0.0111%" height="15" fill="rgb(228,128,0)" fg:x="8714" fg:w="1"/><text x="97.3852%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.32%)</title><rect x="97.0795%" y="373" width="0.3233%" height="15" fill="rgb(205,105,0)" fg:x="8709" fg:w="29"/><text x="97.3295%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (29 samples, 0.32%)</title><rect x="97.0795%" y="357" width="0.3233%" height="15" fill="rgb(212,112,0)" fg:x="8709" fg:w="29"/><text x="97.3295%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (28 samples, 0.31%)</title><rect x="97.0906%" y="341" width="0.3121%" height="15" fill="rgb(206,106,0)" fg:x="8710" fg:w="28"/><text x="97.3406%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (28 samples, 0.31%)</title><rect x="97.0906%" y="325" width="0.3121%" height="15" fill="rgb(244,144,0)" fg:x="8710" fg:w="28"/><text x="97.3406%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (28 samples, 0.31%)</title><rect x="97.0906%" y="309" width="0.3121%" height="15" fill="rgb(237,137,0)" fg:x="8710" fg:w="28"/><text x="97.3406%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.31%)</title><rect x="97.0906%" y="293" width="0.3121%" height="15" fill="rgb(250,150,0)" fg:x="8710" fg:w="28"/><text x="97.3406%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.28%)</title><rect x="97.1241%" y="277" width="0.2787%" height="15" fill="rgb(222,122,0)" fg:x="8713" fg:w="25"/><text x="97.3741%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.28%)</title><rect x="97.1241%" y="261" width="0.2787%" height="15" fill="rgb(249,149,0)" fg:x="8713" fg:w="25"/><text x="97.3741%" y="271.50"></text></g><g><title>cfree (23 samples, 0.26%)</title><rect x="97.1464%" y="245" width="0.2564%" height="15" fill="rgb(197,197,58)" fg:x="8715" fg:w="23"/><text x="97.3964%" y="255.50"></text></g><g><title>[libc.so.6] (11 samples, 0.12%)</title><rect x="97.2801%" y="229" width="0.1226%" height="15" fill="rgb(227,227,68)" fg:x="8727" fg:w="11"/><text x="97.5301%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.41%)</title><rect x="97.0349%" y="597" width="0.4124%" height="15" fill="rgb(222,122,0)" fg:x="8705" fg:w="37"/><text x="97.2849%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)]&gt; (37 samples, 0.41%)</title><rect x="97.0349%" y="581" width="0.4124%" height="15" fill="rgb(231,131,0)" fg:x="8705" fg:w="37"/><text x="97.2849%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)&gt; (37 samples, 0.41%)</title><rect x="97.0349%" y="565" width="0.4124%" height="15" fill="rgb(221,121,0)" fg:x="8705" fg:w="37"/><text x="97.2849%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (37 samples, 0.41%)</title><rect x="97.0349%" y="549" width="0.4124%" height="15" fill="rgb(214,114,0)" fg:x="8705" fg:w="37"/><text x="97.2849%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (33 samples, 0.37%)</title><rect x="97.0795%" y="533" width="0.3679%" height="15" fill="rgb(249,149,0)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (33 samples, 0.37%)</title><rect x="97.0795%" y="517" width="0.3679%" height="15" fill="rgb(252,152,0)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (33 samples, 0.37%)</title><rect x="97.0795%" y="501" width="0.3679%" height="15" fill="rgb(247,147,0)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.37%)</title><rect x="97.0795%" y="485" width="0.3679%" height="15" fill="rgb(103,213,213)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (33 samples, 0.37%)</title><rect x="97.0795%" y="469" width="0.3679%" height="15" fill="rgb(74,187,187)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (33 samples, 0.37%)</title><rect x="97.0795%" y="453" width="0.3679%" height="15" fill="rgb(81,193,193)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (33 samples, 0.37%)</title><rect x="97.0795%" y="437" width="0.3679%" height="15" fill="rgb(71,184,184)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (33 samples, 0.37%)</title><rect x="97.0795%" y="421" width="0.3679%" height="15" fill="rgb(213,113,0)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (33 samples, 0.37%)</title><rect x="97.0795%" y="405" width="0.3679%" height="15" fill="rgb(209,109,0)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (33 samples, 0.37%)</title><rect x="97.0795%" y="389" width="0.3679%" height="15" fill="rgb(214,114,0)" fg:x="8709" fg:w="33"/><text x="97.3295%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.04%)</title><rect x="97.4027%" y="373" width="0.0446%" height="15" fill="rgb(230,130,0)" fg:x="8738" fg:w="4"/><text x="97.6527%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="97.4027%" y="357" width="0.0446%" height="15" fill="rgb(235,135,0)" fg:x="8738" fg:w="4"/><text x="97.6527%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="97.4027%" y="341" width="0.0446%" height="15" fill="rgb(199,99,0)" fg:x="8738" fg:w="4"/><text x="97.6527%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="97.4027%" y="325" width="0.0446%" height="15" fill="rgb(227,127,0)" fg:x="8738" fg:w="4"/><text x="97.6527%" y="335.50"></text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="97.4139%" y="309" width="0.0334%" height="15" fill="rgb(213,213,63)" fg:x="8739" fg:w="3"/><text x="97.6639%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="97.4139%" y="293" width="0.0334%" height="15" fill="rgb(226,226,68)" fg:x="8739" fg:w="3"/><text x="97.6639%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="97.4362%" y="277" width="0.0111%" height="15" fill="rgb(195,195,57)" fg:x="8741" fg:w="1"/><text x="97.6862%" y="287.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::take_best_layouts (96 samples, 1.07%)</title><rect x="96.9903%" y="629" width="1.0701%" height="15" fill="rgb(78,191,191)" fg:x="8701" fg:w="96"/><text x="97.2403%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)&gt;&gt; (92 samples, 1.03%)</title><rect x="97.0349%" y="613" width="1.0255%" height="15" fill="rgb(250,150,0)" fg:x="8705" fg:w="92"/><text x="97.2849%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)&gt;&gt; (55 samples, 0.61%)</title><rect x="97.4473%" y="597" width="0.6131%" height="15" fill="rgb(248,148,0)" fg:x="8742" fg:w="55"/><text x="97.6973%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.61%)</title><rect x="97.4473%" y="581" width="0.6131%" height="15" fill="rgb(242,142,0)" fg:x="8742" fg:w="55"/><text x="97.6973%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 0.61%)</title><rect x="97.4473%" y="565" width="0.6131%" height="15" fill="rgb(227,127,0)" fg:x="8742" fg:w="55"/><text x="97.6973%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (55 samples, 0.61%)</title><rect x="97.4473%" y="549" width="0.6131%" height="15" fill="rgb(227,127,0)" fg:x="8742" fg:w="55"/><text x="97.6973%" y="559.50"></text></g><g><title>cfree (55 samples, 0.61%)</title><rect x="97.4473%" y="533" width="0.6131%" height="15" fill="rgb(208,208,62)" fg:x="8742" fg:w="55"/><text x="97.6973%" y="543.50"></text></g><g><title>[libc.so.6] (55 samples, 0.61%)</title><rect x="97.4473%" y="517" width="0.6131%" height="15" fill="rgb(189,189,55)" fg:x="8742" fg:w="55"/><text x="97.6973%" y="527.50"></text></g><g><title>[libc.so.6] (55 samples, 0.61%)</title><rect x="97.4473%" y="501" width="0.6131%" height="15" fill="rgb(211,211,63)" fg:x="8742" fg:w="55"/><text x="97.6973%" y="511.50"></text></g><g><title>[libc.so.6] (12 samples, 0.13%)</title><rect x="97.9267%" y="485" width="0.1338%" height="15" fill="rgb(229,229,69)" fg:x="8785" fg:w="12"/><text x="98.1767%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="98.0604%" y="565" width="0.0334%" height="15" fill="rgb(217,117,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="98.0604%" y="549" width="0.0334%" height="15" fill="rgb(246,146,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (3 samples, 0.03%)</title><rect x="98.0604%" y="533" width="0.0334%" height="15" fill="rgb(220,120,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (3 samples, 0.03%)</title><rect x="98.0604%" y="517" width="0.0334%" height="15" fill="rgb(236,136,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (3 samples, 0.03%)</title><rect x="98.0604%" y="501" width="0.0334%" height="15" fill="rgb(244,144,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (3 samples, 0.03%)</title><rect x="98.0604%" y="485" width="0.0334%" height="15" fill="rgb(230,130,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (3 samples, 0.03%)</title><rect x="98.0604%" y="469" width="0.0334%" height="15" fill="rgb(228,128,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="98.0604%" y="453" width="0.0334%" height="15" fill="rgb(238,138,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="98.0604%" y="437" width="0.0334%" height="15" fill="rgb(229,129,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="98.0604%" y="421" width="0.0334%" height="15" fill="rgb(237,137,0)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="431.50"></text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="98.0604%" y="405" width="0.0334%" height="15" fill="rgb(225,225,68)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.03%)</title><rect x="98.0604%" y="389" width="0.0334%" height="15" fill="rgb(203,203,60)" fg:x="8797" fg:w="3"/><text x="98.3104%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="98.0827%" y="373" width="0.0111%" height="15" fill="rgb(202,202,59)" fg:x="8799" fg:w="1"/><text x="98.3327%" y="383.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="98.2053%" y="277" width="0.0111%" height="15" fill="rgb(185,185,53)" fg:x="8810" fg:w="1"/><text x="98.4553%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.37%)</title><rect x="98.1942%" y="309" width="0.3679%" height="15" fill="rgb(237,137,0)" fg:x="8809" fg:w="33"/><text x="98.4442%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.37%)</title><rect x="98.1942%" y="293" width="0.3679%" height="15" fill="rgb(254,154,0)" fg:x="8809" fg:w="33"/><text x="98.4442%" y="303.50"></text></g><g><title>cfree (31 samples, 0.35%)</title><rect x="98.2165%" y="277" width="0.3456%" height="15" fill="rgb(206,206,61)" fg:x="8811" fg:w="31"/><text x="98.4665%" y="287.50"></text></g><g><title>[libc.so.6] (14 samples, 0.16%)</title><rect x="98.4060%" y="261" width="0.1561%" height="15" fill="rgb(182,182,52)" fg:x="8828" fg:w="14"/><text x="98.6560%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.48%)</title><rect x="98.0939%" y="405" width="0.4793%" height="15" fill="rgb(206,106,0)" fg:x="8800" fg:w="43"/><text x="98.3439%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (41 samples, 0.46%)</title><rect x="98.1162%" y="389" width="0.4570%" height="15" fill="rgb(217,117,0)" fg:x="8802" fg:w="41"/><text x="98.3662%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (41 samples, 0.46%)</title><rect x="98.1162%" y="373" width="0.4570%" height="15" fill="rgb(238,138,0)" fg:x="8802" fg:w="41"/><text x="98.3662%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (41 samples, 0.46%)</title><rect x="98.1162%" y="357" width="0.4570%" height="15" fill="rgb(194,94,0)" fg:x="8802" fg:w="41"/><text x="98.3662%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (41 samples, 0.46%)</title><rect x="98.1162%" y="341" width="0.4570%" height="15" fill="rgb(216,116,0)" fg:x="8802" fg:w="41"/><text x="98.3662%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.46%)</title><rect x="98.1162%" y="325" width="0.4570%" height="15" fill="rgb(240,140,0)" fg:x="8802" fg:w="41"/><text x="98.3662%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="98.5620%" y="309" width="0.0111%" height="15" fill="rgb(215,115,0)" fg:x="8842" fg:w="1"/><text x="98.8120%" y="319.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="98.5732%" y="341" width="0.0111%" height="15" fill="rgb(188,188,55)" fg:x="8843" fg:w="1"/><text x="98.8232%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.55%)</title><rect x="98.0604%" y="613" width="0.5462%" height="15" fill="rgb(195,95,0)" fg:x="8797" fg:w="49"/><text x="98.3104%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;]&gt; (49 samples, 0.55%)</title><rect x="98.0604%" y="597" width="0.5462%" height="15" fill="rgb(202,102,0)" fg:x="8797" fg:w="49"/><text x="98.3104%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (49 samples, 0.55%)</title><rect x="98.0604%" y="581" width="0.5462%" height="15" fill="rgb(252,152,0)" fg:x="8797" fg:w="49"/><text x="98.3104%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (46 samples, 0.51%)</title><rect x="98.0939%" y="565" width="0.5128%" height="15" fill="rgb(223,123,0)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (46 samples, 0.51%)</title><rect x="98.0939%" y="549" width="0.5128%" height="15" fill="rgb(246,146,0)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (46 samples, 0.51%)</title><rect x="98.0939%" y="533" width="0.5128%" height="15" fill="rgb(218,118,0)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.51%)</title><rect x="98.0939%" y="517" width="0.5128%" height="15" fill="rgb(80,193,193)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (46 samples, 0.51%)</title><rect x="98.0939%" y="501" width="0.5128%" height="15" fill="rgb(108,218,218)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (46 samples, 0.51%)</title><rect x="98.0939%" y="485" width="0.5128%" height="15" fill="rgb(64,178,178)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (46 samples, 0.51%)</title><rect x="98.0939%" y="469" width="0.5128%" height="15" fill="rgb(95,207,207)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (46 samples, 0.51%)</title><rect x="98.0939%" y="453" width="0.5128%" height="15" fill="rgb(199,99,0)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (46 samples, 0.51%)</title><rect x="98.0939%" y="437" width="0.5128%" height="15" fill="rgb(204,104,0)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (46 samples, 0.51%)</title><rect x="98.0939%" y="421" width="0.5128%" height="15" fill="rgb(191,91,0)" fg:x="8800" fg:w="46"/><text x="98.3439%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.03%)</title><rect x="98.5732%" y="405" width="0.0334%" height="15" fill="rgb(190,90,0)" fg:x="8843" fg:w="3"/><text x="98.8232%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="98.5732%" y="389" width="0.0334%" height="15" fill="rgb(208,108,0)" fg:x="8843" fg:w="3"/><text x="98.8232%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="98.5732%" y="373" width="0.0334%" height="15" fill="rgb(210,110,0)" fg:x="8843" fg:w="3"/><text x="98.8232%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="98.5732%" y="357" width="0.0334%" height="15" fill="rgb(240,140,0)" fg:x="8843" fg:w="3"/><text x="98.8232%" y="367.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="98.5843%" y="341" width="0.0223%" height="15" fill="rgb(182,182,52)" fg:x="8844" fg:w="2"/><text x="98.8343%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (128 samples, 1.43%)</title><rect x="98.0604%" y="629" width="1.4268%" height="15" fill="rgb(192,92,0)" fg:x="8797" fg:w="128"/><text x="98.3104%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (79 samples, 0.88%)</title><rect x="98.6066%" y="613" width="0.8806%" height="15" fill="rgb(215,115,0)" fg:x="8846" fg:w="79"/><text x="98.8566%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.88%)</title><rect x="98.6066%" y="597" width="0.8806%" height="15" fill="rgb(194,94,0)" fg:x="8846" fg:w="79"/><text x="98.8566%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.88%)</title><rect x="98.6066%" y="581" width="0.8806%" height="15" fill="rgb(247,147,0)" fg:x="8846" fg:w="79"/><text x="98.8566%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.88%)</title><rect x="98.6066%" y="565" width="0.8806%" height="15" fill="rgb(211,111,0)" fg:x="8846" fg:w="79"/><text x="98.8566%" y="575.50"></text></g><g><title>cfree (79 samples, 0.88%)</title><rect x="98.6066%" y="549" width="0.8806%" height="15" fill="rgb(223,223,67)" fg:x="8846" fg:w="79"/><text x="98.8566%" y="559.50"></text></g><g><title>[libc.so.6] (79 samples, 0.88%)</title><rect x="98.6066%" y="533" width="0.8806%" height="15" fill="rgb(190,190,55)" fg:x="8846" fg:w="79"/><text x="98.8566%" y="543.50"></text></g><g><title>[libc.so.6] (79 samples, 0.88%)</title><rect x="98.6066%" y="517" width="0.8806%" height="15" fill="rgb(195,195,57)" fg:x="8846" fg:w="79"/><text x="98.8566%" y="527.50"></text></g><g><title>[libc.so.6] (17 samples, 0.19%)</title><rect x="99.2977%" y="501" width="0.1895%" height="15" fill="rgb(198,198,58)" fg:x="8908" fg:w="17"/><text x="99.5477%" y="511.50"></text></g><g><title>_start (7,178 samples, 80.01%)</title><rect x="19.4850%" y="917" width="80.0134%" height="15" fill="rgb(184,184,53)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="927.50">_start</text></g><g><title>__libc_start_main (7,178 samples, 80.01%)</title><rect x="19.4850%" y="901" width="80.0134%" height="15" fill="rgb(219,219,66)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="911.50">__libc_start_main</text></g><g><title>[libc.so.6] (7,178 samples, 80.01%)</title><rect x="19.4850%" y="885" width="80.0134%" height="15" fill="rgb(188,188,54)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="895.50">[libc.so.6]</text></g><g><title>main (7,178 samples, 80.01%)</title><rect x="19.4850%" y="869" width="80.0134%" height="15" fill="rgb(178,178,51)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (7,178 samples, 80.01%)</title><rect x="19.4850%" y="853" width="80.0134%" height="15" fill="rgb(242,142,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (7,178 samples, 80.01%)</title><rect x="19.4850%" y="837" width="80.0134%" height="15" fill="rgb(209,109,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,178 samples, 80.01%)</title><rect x="19.4850%" y="821" width="80.0134%" height="15" fill="rgb(218,118,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,178 samples, 80.01%)</title><rect x="19.4850%" y="805" width="80.0134%" height="15" fill="rgb(229,129,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (7,178 samples, 80.01%)</title><rect x="19.4850%" y="789" width="80.0134%" height="15" fill="rgb(206,106,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="799.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (7,178 samples, 80.01%)</title><rect x="19.4850%" y="773" width="80.0134%" height="15" fill="rgb(242,142,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,178 samples, 80.01%)</title><rect x="19.4850%" y="757" width="80.0134%" height="15" fill="rgb(243,143,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,178 samples, 80.01%)</title><rect x="19.4850%" y="741" width="80.0134%" height="15" fill="rgb(208,108,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7,178 samples, 80.01%)</title><rect x="19.4850%" y="725" width="80.0134%" height="15" fill="rgb(213,113,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (7,178 samples, 80.01%)</title><rect x="19.4850%" y="709" width="80.0134%" height="15" fill="rgb(248,148,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="719.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,178 samples, 80.01%)</title><rect x="19.4850%" y="693" width="80.0134%" height="15" fill="rgb(195,95,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (7,178 samples, 80.01%)</title><rect x="19.4850%" y="677" width="80.0134%" height="15" fill="rgb(236,136,0)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="687.50">core::ops::function::FnOnce::call_once</text></g><g><title>alc::main (7,178 samples, 80.01%)</title><rect x="19.4850%" y="661" width="80.0134%" height="15" fill="rgb(51,166,166)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="671.50">alc::main</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize (7,178 samples, 80.01%)</title><rect x="19.4850%" y="645" width="80.0134%" height="15" fill="rgb(70,183,183)" fg:x="1748" fg:w="7178"/><text x="19.7350%" y="655.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize</text></g><g><title>core::ptr::drop_in_place&lt;tqdm::Tqdm&lt;core::ops::range::Range&lt;u32&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.4872%" y="629" width="0.0111%" height="15" fill="rgb(215,115,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tqdm::Pbar&gt; (1 samples, 0.01%)</title><rect x="99.4872%" y="613" width="0.0111%" height="15" fill="rgb(205,105,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="623.50"></text></g><g><title>&lt;tqdm::Pbar as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.4872%" y="597" width="0.0111%" height="15" fill="rgb(80,192,192)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="607.50"></text></g><g><title>tqdm::Pbar::close (1 samples, 0.01%)</title><rect x="99.4872%" y="581" width="0.0111%" height="15" fill="rgb(82,195,195)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="591.50"></text></g><g><title>tqdm::Info::format (1 samples, 0.01%)</title><rect x="99.4872%" y="565" width="0.0111%" height="15" fill="rgb(70,183,183)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="575.50"></text></g><g><title>&lt;core::fmt::Arguments as alloc::string::ToString&gt;::to_string (1 samples, 0.01%)</title><rect x="99.4872%" y="549" width="0.0111%" height="15" fill="rgb(212,112,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="559.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.01%)</title><rect x="99.4872%" y="533" width="0.0111%" height="15" fill="rgb(224,124,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.01%)</title><rect x="99.4872%" y="517" width="0.0111%" height="15" fill="rgb(254,154,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="527.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.01%)</title><rect x="99.4872%" y="501" width="0.0111%" height="15" fill="rgb(235,135,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.01%)</title><rect x="99.4872%" y="485" width="0.0111%" height="15" fill="rgb(201,101,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="99.4872%" y="469" width="0.0111%" height="15" fill="rgb(192,92,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.01%)</title><rect x="99.4872%" y="453" width="0.0111%" height="15" fill="rgb(102,213,213)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="99.4872%" y="437" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.01%)</title><rect x="99.4872%" y="421" width="0.0111%" height="15" fill="rgb(227,127,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="99.4872%" y="405" width="0.0111%" height="15" fill="rgb(229,129,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="99.4872%" y="389" width="0.0111%" height="15" fill="rgb(205,105,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="99.4872%" y="373" width="0.0111%" height="15" fill="rgb(216,116,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="99.4872%" y="357" width="0.0111%" height="15" fill="rgb(242,142,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="99.4872%" y="341" width="0.0111%" height="15" fill="rgb(219,119,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="99.4872%" y="325" width="0.0111%" height="15" fill="rgb(209,109,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="99.4872%" y="309" width="0.0111%" height="15" fill="rgb(240,140,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="99.4872%" y="293" width="0.0111%" height="15" fill="rgb(221,121,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="99.4872%" y="277" width="0.0111%" height="15" fill="rgb(203,103,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="99.4872%" y="261" width="0.0111%" height="15" fill="rgb(252,152,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="99.4872%" y="245" width="0.0111%" height="15" fill="rgb(208,108,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="99.4872%" y="229" width="0.0111%" height="15" fill="rgb(232,132,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="99.4872%" y="213" width="0.0111%" height="15" fill="rgb(206,106,0)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="223.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="99.4872%" y="197" width="0.0111%" height="15" fill="rgb(217,217,65)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="99.4872%" y="181" width="0.0111%" height="15" fill="rgb(192,192,56)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="99.4872%" y="165" width="0.0111%" height="15" fill="rgb(205,205,61)" fg:x="8925" fg:w="1"/><text x="99.7372%" y="175.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (1 samples, 0.01%)</title><rect x="99.4984%" y="917" width="0.0111%" height="15" fill="rgb(103,214,214)" fg:x="8926" fg:w="1"/><text x="99.7484%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="99.5095%" y="917" width="0.0223%" height="15" fill="rgb(247,147,0)" fg:x="8927" fg:w="2"/><text x="99.7595%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.20%)</title><rect x="99.5318%" y="917" width="0.2006%" height="15" fill="rgb(233,133,0)" fg:x="8929" fg:w="18"/><text x="99.7818%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.20%)</title><rect x="99.5318%" y="901" width="0.2006%" height="15" fill="rgb(216,116,0)" fg:x="8929" fg:w="18"/><text x="99.7818%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.20%)</title><rect x="99.5318%" y="885" width="0.2006%" height="15" fill="rgb(198,98,0)" fg:x="8929" fg:w="18"/><text x="99.7818%" y="895.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.20%)</title><rect x="99.5318%" y="869" width="0.2006%" height="15" fill="rgb(231,131,0)" fg:x="8929" fg:w="18"/><text x="99.7818%" y="879.50"></text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="99.7325%" y="917" width="0.0334%" height="15" fill="rgb(211,211,63)" fg:x="8947" fg:w="3"/><text x="99.9825%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.04%)</title><rect x="99.7659%" y="917" width="0.0446%" height="15" fill="rgb(214,114,0)" fg:x="8950" fg:w="4"/><text x="100.0159%" y="927.50"></text></g><g><title>all (8,971 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(187,187,54)" fg:x="0" fg:w="8971"/><text x="0.2500%" y="959.50"></text></g><g><title>alc (8,971 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(207,207,61)" fg:x="0" fg:w="8971"/><text x="0.2500%" y="943.50">alc</text></g><g><title>malloc (17 samples, 0.19%)</title><rect x="99.8105%" y="917" width="0.1895%" height="15" fill="rgb(191,191,55)" fg:x="8954" fg:w="17"/><text x="100.0605%" y="927.50"></text></g></svg></svg>