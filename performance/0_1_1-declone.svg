<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="3497"><g><title>&lt;alc::text_processor::ngram::Ngram as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.06%)</title><rect x="0.0000%" y="837" width="0.0572%" height="15" fill="rgb(50,165,165)" fg:x="0" fg:w="2"/><text x="0.2500%" y="847.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="0.0858%" y="773" width="0.0572%" height="15" fill="rgb(50,165,165)" fg:x="3" fg:w="2"/><text x="0.3358%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="0.0858%" y="757" width="0.0572%" height="15" fill="rgb(244,144,0)" fg:x="3" fg:w="2"/><text x="0.3358%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.06%)</title><rect x="0.0858%" y="741" width="0.0572%" height="15" fill="rgb(250,150,0)" fg:x="3" fg:w="2"/><text x="0.3358%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.06%)</title><rect x="0.0858%" y="725" width="0.0572%" height="15" fill="rgb(209,109,0)" fg:x="3" fg:w="2"/><text x="0.3358%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.06%)</title><rect x="0.0858%" y="709" width="0.0572%" height="15" fill="rgb(83,195,195)" fg:x="3" fg:w="2"/><text x="0.3358%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.06%)</title><rect x="0.0858%" y="693" width="0.0572%" height="15" fill="rgb(235,135,0)" fg:x="3" fg:w="2"/><text x="0.3358%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.06%)</title><rect x="0.0858%" y="677" width="0.0572%" height="15" fill="rgb(196,96,0)" fg:x="3" fg:w="2"/><text x="0.3358%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="0.0572%" y="837" width="0.1144%" height="15" fill="rgb(198,98,0)" fg:x="2" fg:w="4"/><text x="0.3072%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.09%)</title><rect x="0.0858%" y="821" width="0.0858%" height="15" fill="rgb(224,124,0)" fg:x="3" fg:w="3"/><text x="0.3358%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.09%)</title><rect x="0.0858%" y="805" width="0.0858%" height="15" fill="rgb(254,154,0)" fg:x="3" fg:w="3"/><text x="0.3358%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.09%)</title><rect x="0.0858%" y="789" width="0.0858%" height="15" fill="rgb(100,211,211)" fg:x="3" fg:w="3"/><text x="0.3358%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.1430%" y="773" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="5" fg:w="1"/><text x="0.3930%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.1430%" y="757" width="0.0286%" height="15" fill="rgb(243,143,0)" fg:x="5" fg:w="1"/><text x="0.3930%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="0.1430%" y="741" width="0.0286%" height="15" fill="rgb(248,148,0)" fg:x="5" fg:w="1"/><text x="0.3930%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="0.1430%" y="725" width="0.0286%" height="15" fill="rgb(210,110,0)" fg:x="5" fg:w="1"/><text x="0.3930%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="0.1430%" y="709" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="5" fg:w="1"/><text x="0.3930%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="0.1430%" y="693" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="5" fg:w="1"/><text x="0.3930%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="0.1716%" y="837" width="0.0572%" height="15" fill="rgb(102,212,212)" fg:x="6" fg:w="2"/><text x="0.4216%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.06%)</title><rect x="0.1716%" y="821" width="0.0572%" height="15" fill="rgb(56,171,171)" fg:x="6" fg:w="2"/><text x="0.4216%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.06%)</title><rect x="0.1716%" y="805" width="0.0572%" height="15" fill="rgb(58,172,172)" fg:x="6" fg:w="2"/><text x="0.4216%" y="815.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.06%)</title><rect x="0.1716%" y="789" width="0.0572%" height="15" fill="rgb(241,141,0)" fg:x="6" fg:w="2"/><text x="0.4216%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="0.2288%" y="821" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="8" fg:w="1"/><text x="0.4788%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.2574%" y="709" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="9" fg:w="1"/><text x="0.5074%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.03%)</title><rect x="0.2574%" y="693" width="0.0286%" height="15" fill="rgb(227,127,0)" fg:x="9" fg:w="1"/><text x="0.5074%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.03%)</title><rect x="0.2574%" y="677" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="9" fg:w="1"/><text x="0.5074%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="0.2574%" y="661" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="9" fg:w="1"/><text x="0.5074%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="0.2574%" y="645" width="0.0286%" height="15" fill="rgb(235,135,0)" fg:x="9" fg:w="1"/><text x="0.5074%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.2574%" y="629" width="0.0286%" height="15" fill="rgb(231,131,0)" fg:x="9" fg:w="1"/><text x="0.5074%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="0.2574%" y="613" width="0.0286%" height="15" fill="rgb(200,100,0)" fg:x="9" fg:w="1"/><text x="0.5074%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="0.2574%" y="597" width="0.0286%" height="15" fill="rgb(219,119,0)" fg:x="9" fg:w="1"/><text x="0.5074%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.09%)</title><rect x="0.2574%" y="821" width="0.0858%" height="15" fill="rgb(73,186,186)" fg:x="9" fg:w="3"/><text x="0.5074%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.09%)</title><rect x="0.2574%" y="805" width="0.0858%" height="15" fill="rgb(97,208,208)" fg:x="9" fg:w="3"/><text x="0.5074%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.09%)</title><rect x="0.2574%" y="789" width="0.0858%" height="15" fill="rgb(100,210,210)" fg:x="9" fg:w="3"/><text x="0.5074%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.09%)</title><rect x="0.2574%" y="773" width="0.0858%" height="15" fill="rgb(71,185,185)" fg:x="9" fg:w="3"/><text x="0.5074%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.09%)</title><rect x="0.2574%" y="757" width="0.0858%" height="15" fill="rgb(200,100,0)" fg:x="9" fg:w="3"/><text x="0.5074%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (3 samples, 0.09%)</title><rect x="0.2574%" y="741" width="0.0858%" height="15" fill="rgb(191,91,0)" fg:x="9" fg:w="3"/><text x="0.5074%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.09%)</title><rect x="0.2574%" y="725" width="0.0858%" height="15" fill="rgb(244,144,0)" fg:x="9" fg:w="3"/><text x="0.5074%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.06%)</title><rect x="0.2860%" y="709" width="0.0572%" height="15" fill="rgb(237,137,0)" fg:x="10" fg:w="2"/><text x="0.5360%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="0.2860%" y="693" width="0.0572%" height="15" fill="rgb(241,141,0)" fg:x="10" fg:w="2"/><text x="0.5360%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.06%)</title><rect x="0.2860%" y="677" width="0.0572%" height="15" fill="rgb(207,107,0)" fg:x="10" fg:w="2"/><text x="0.5360%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.06%)</title><rect x="0.2860%" y="661" width="0.0572%" height="15" fill="rgb(209,109,0)" fg:x="10" fg:w="2"/><text x="0.5360%" y="671.50"></text></g><g><title>[libc.so.6] (60 samples, 1.72%)</title><rect x="0.3432%" y="821" width="1.7158%" height="15" fill="rgb(197,197,58)" fg:x="12" fg:w="60"/><text x="0.5932%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.29%)</title><rect x="2.1733%" y="773" width="0.2860%" height="15" fill="rgb(222,122,0)" fg:x="76" fg:w="10"/><text x="2.4233%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.29%)</title><rect x="2.1733%" y="757" width="0.2860%" height="15" fill="rgb(248,148,0)" fg:x="76" fg:w="10"/><text x="2.4233%" y="767.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (25 samples, 0.71%)</title><rect x="2.0589%" y="821" width="0.7149%" height="15" fill="rgb(75,188,188)" fg:x="72" fg:w="25"/><text x="2.3089%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (21 samples, 0.60%)</title><rect x="2.1733%" y="805" width="0.6005%" height="15" fill="rgb(229,129,0)" fg:x="76" fg:w="21"/><text x="2.4233%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.60%)</title><rect x="2.1733%" y="789" width="0.6005%" height="15" fill="rgb(244,144,0)" fg:x="76" fg:w="21"/><text x="2.4233%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.31%)</title><rect x="2.4593%" y="773" width="0.3146%" height="15" fill="rgb(207,107,0)" fg:x="86" fg:w="11"/><text x="2.7093%" y="783.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (1 samples, 0.03%)</title><rect x="2.7738%" y="821" width="0.0286%" height="15" fill="rgb(57,171,171)" fg:x="97" fg:w="1"/><text x="3.0238%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="2.7738%" y="805" width="0.0286%" height="15" fill="rgb(200,100,0)" fg:x="97" fg:w="1"/><text x="3.0238%" y="815.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="2.8310%" y="805" width="0.0286%" height="15" fill="rgb(105,216,216)" fg:x="99" fg:w="1"/><text x="3.0810%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="2.8310%" y="789" width="0.0286%" height="15" fill="rgb(224,124,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="2.8310%" y="773" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="2.8310%" y="757" width="0.0286%" height="15" fill="rgb(231,131,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="2.8310%" y="741" width="0.0286%" height="15" fill="rgb(80,193,193)" fg:x="99" fg:w="1"/><text x="3.0810%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.8310%" y="725" width="0.0286%" height="15" fill="rgb(231,131,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.8310%" y="709" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="2.8310%" y="693" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="2.8310%" y="677" width="0.0286%" height="15" fill="rgb(190,90,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="2.8310%" y="661" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="2.8310%" y="645" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="99" fg:w="1"/><text x="3.0810%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="2.8596%" y="805" width="0.0286%" height="15" fill="rgb(254,154,0)" fg:x="100" fg:w="1"/><text x="3.1096%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="2.8596%" y="789" width="0.0286%" height="15" fill="rgb(88,200,200)" fg:x="100" fg:w="1"/><text x="3.1096%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="2.8882%" y="645" width="0.1144%" height="15" fill="rgb(209,109,0)" fg:x="101" fg:w="4"/><text x="3.1382%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (4 samples, 0.11%)</title><rect x="2.8882%" y="629" width="0.1144%" height="15" fill="rgb(217,117,0)" fg:x="101" fg:w="4"/><text x="3.1382%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (4 samples, 0.11%)</title><rect x="2.8882%" y="613" width="0.1144%" height="15" fill="rgb(229,129,0)" fg:x="101" fg:w="4"/><text x="3.1382%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.11%)</title><rect x="2.8882%" y="597" width="0.1144%" height="15" fill="rgb(212,112,0)" fg:x="101" fg:w="4"/><text x="3.1382%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.11%)</title><rect x="2.8882%" y="581" width="0.1144%" height="15" fill="rgb(240,140,0)" fg:x="101" fg:w="4"/><text x="3.1382%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="2.8882%" y="565" width="0.1144%" height="15" fill="rgb(207,107,0)" fg:x="101" fg:w="4"/><text x="3.1382%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.11%)</title><rect x="2.8882%" y="549" width="0.1144%" height="15" fill="rgb(233,133,0)" fg:x="101" fg:w="4"/><text x="3.1382%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.11%)</title><rect x="2.8882%" y="533" width="0.1144%" height="15" fill="rgb(200,100,0)" fg:x="101" fg:w="4"/><text x="3.1382%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (5 samples, 0.14%)</title><rect x="2.8882%" y="725" width="0.1430%" height="15" fill="rgb(80,192,192)" fg:x="101" fg:w="5"/><text x="3.1382%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.14%)</title><rect x="2.8882%" y="709" width="0.1430%" height="15" fill="rgb(64,177,177)" fg:x="101" fg:w="5"/><text x="3.1382%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5 samples, 0.14%)</title><rect x="2.8882%" y="693" width="0.1430%" height="15" fill="rgb(213,113,0)" fg:x="101" fg:w="5"/><text x="3.1382%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (5 samples, 0.14%)</title><rect x="2.8882%" y="677" width="0.1430%" height="15" fill="rgb(223,123,0)" fg:x="101" fg:w="5"/><text x="3.1382%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (5 samples, 0.14%)</title><rect x="2.8882%" y="661" width="0.1430%" height="15" fill="rgb(202,102,0)" fg:x="101" fg:w="5"/><text x="3.1382%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.03%)</title><rect x="3.0026%" y="645" width="0.0286%" height="15" fill="rgb(200,100,0)" fg:x="105" fg:w="1"/><text x="3.2526%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="3.0026%" y="629" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="105" fg:w="1"/><text x="3.2526%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="3.0026%" y="613" width="0.0286%" height="15" fill="rgb(212,112,0)" fg:x="105" fg:w="1"/><text x="3.2526%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="3.0026%" y="597" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="105" fg:w="1"/><text x="3.2526%" y="607.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (10 samples, 0.29%)</title><rect x="2.8024%" y="821" width="0.2860%" height="15" fill="rgb(106,216,216)" fg:x="98" fg:w="10"/><text x="3.0524%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (7 samples, 0.20%)</title><rect x="2.8882%" y="805" width="0.2002%" height="15" fill="rgb(213,113,0)" fg:x="101" fg:w="7"/><text x="3.1382%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (7 samples, 0.20%)</title><rect x="2.8882%" y="789" width="0.2002%" height="15" fill="rgb(243,143,0)" fg:x="101" fg:w="7"/><text x="3.1382%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (7 samples, 0.20%)</title><rect x="2.8882%" y="773" width="0.2002%" height="15" fill="rgb(250,150,0)" fg:x="101" fg:w="7"/><text x="3.1382%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.20%)</title><rect x="2.8882%" y="757" width="0.2002%" height="15" fill="rgb(81,194,194)" fg:x="101" fg:w="7"/><text x="3.1382%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (7 samples, 0.20%)</title><rect x="2.8882%" y="741" width="0.2002%" height="15" fill="rgb(107,217,217)" fg:x="101" fg:w="7"/><text x="3.1382%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2 samples, 0.06%)</title><rect x="3.0312%" y="725" width="0.0572%" height="15" fill="rgb(67,181,181)" fg:x="106" fg:w="2"/><text x="3.2812%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.06%)</title><rect x="3.0312%" y="709" width="0.0572%" height="15" fill="rgb(194,94,0)" fg:x="106" fg:w="2"/><text x="3.2812%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.06%)</title><rect x="3.0312%" y="693" width="0.0572%" height="15" fill="rgb(225,125,0)" fg:x="106" fg:w="2"/><text x="3.2812%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.03%)</title><rect x="3.0884%" y="821" width="0.0286%" height="15" fill="rgb(237,137,0)" fg:x="108" fg:w="1"/><text x="3.3384%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.23%)</title><rect x="3.1170%" y="821" width="0.2288%" height="15" fill="rgb(236,136,0)" fg:x="109" fg:w="8"/><text x="3.3670%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.17%)</title><rect x="3.3457%" y="821" width="0.1716%" height="15" fill="rgb(251,151,0)" fg:x="117" fg:w="6"/><text x="3.5957%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.17%)</title><rect x="3.3457%" y="805" width="0.1716%" height="15" fill="rgb(222,122,0)" fg:x="117" fg:w="6"/><text x="3.5957%" y="815.50"></text></g><g><title>cfree (10 samples, 0.29%)</title><rect x="3.5173%" y="821" width="0.2860%" height="15" fill="rgb(198,198,58)" fg:x="123" fg:w="10"/><text x="3.7673%" y="831.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="3.8033%" y="821" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="133" fg:w="1"/><text x="4.0533%" y="831.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.03%)</title><rect x="3.8033%" y="805" width="0.0286%" height="15" fill="rgb(230,130,0)" fg:x="133" fg:w="1"/><text x="4.0533%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.09%)</title><rect x="3.8319%" y="821" width="0.0858%" height="15" fill="rgb(217,117,0)" fg:x="134" fg:w="3"/><text x="4.0819%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.09%)</title><rect x="3.8319%" y="805" width="0.0858%" height="15" fill="rgb(248,148,0)" fg:x="134" fg:w="3"/><text x="4.0819%" y="815.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (3 samples, 0.09%)</title><rect x="3.8319%" y="789" width="0.0858%" height="15" fill="rgb(93,204,204)" fg:x="134" fg:w="3"/><text x="4.0819%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.09%)</title><rect x="3.8319%" y="773" width="0.0858%" height="15" fill="rgb(226,126,0)" fg:x="134" fg:w="3"/><text x="4.0819%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.09%)</title><rect x="3.8319%" y="757" width="0.0858%" height="15" fill="rgb(195,95,0)" fg:x="134" fg:w="3"/><text x="4.0819%" y="767.50"></text></g><g><title>core::hash::Hash::hash_slice (3 samples, 0.09%)</title><rect x="3.8319%" y="741" width="0.0858%" height="15" fill="rgb(220,120,0)" fg:x="134" fg:w="3"/><text x="4.0819%" y="751.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (3 samples, 0.09%)</title><rect x="3.8319%" y="725" width="0.0858%" height="15" fill="rgb(57,171,171)" fg:x="134" fg:w="3"/><text x="4.0819%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.09%)</title><rect x="3.8319%" y="709" width="0.0858%" height="15" fill="rgb(253,153,0)" fg:x="134" fg:w="3"/><text x="4.0819%" y="719.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.09%)</title><rect x="3.8319%" y="693" width="0.0858%" height="15" fill="rgb(195,95,0)" fg:x="134" fg:w="3"/><text x="4.0819%" y="703.50"></text></g><g><title>[[heap]] (149 samples, 4.26%)</title><rect x="0.2288%" y="837" width="4.2608%" height="15" fill="rgb(180,180,52)" fg:x="8" fg:w="149"/><text x="0.4788%" y="847.50">[[hea..</text></g><g><title>malloc (20 samples, 0.57%)</title><rect x="3.9176%" y="821" width="0.5719%" height="15" fill="rgb(176,176,50)" fg:x="137" fg:w="20"/><text x="4.1676%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="4.4896%" y="821" width="0.0286%" height="15" fill="rgb(71,184,184)" fg:x="157" fg:w="1"/><text x="4.7396%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.03%)</title><rect x="4.4896%" y="805" width="0.0286%" height="15" fill="rgb(68,181,181)" fg:x="157" fg:w="1"/><text x="4.7396%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.03%)</title><rect x="4.4896%" y="789" width="0.0286%" height="15" fill="rgb(67,181,181)" fg:x="157" fg:w="1"/><text x="4.7396%" y="799.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.03%)</title><rect x="4.4896%" y="773" width="0.0286%" height="15" fill="rgb(243,143,0)" fg:x="157" fg:w="1"/><text x="4.7396%" y="783.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="4.5182%" y="821" width="0.0858%" height="15" fill="rgb(202,202,59)" fg:x="158" fg:w="3"/><text x="4.7682%" y="831.50"></text></g><g><title>__rdl_realloc (10 samples, 0.29%)</title><rect x="4.6039%" y="821" width="0.2860%" height="15" fill="rgb(221,221,66)" fg:x="161" fg:w="10"/><text x="4.8539%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (10 samples, 0.29%)</title><rect x="4.6039%" y="805" width="0.2860%" height="15" fill="rgb(220,120,0)" fg:x="161" fg:w="10"/><text x="4.8539%" y="815.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (1 samples, 0.03%)</title><rect x="4.8899%" y="821" width="0.0286%" height="15" fill="rgb(95,206,206)" fg:x="171" fg:w="1"/><text x="5.1399%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.03%)</title><rect x="4.8899%" y="805" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="171" fg:w="1"/><text x="5.1399%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="4.8899%" y="789" width="0.0286%" height="15" fill="rgb(235,135,0)" fg:x="171" fg:w="1"/><text x="5.1399%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="4.8899%" y="773" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="171" fg:w="1"/><text x="5.1399%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="4.8899%" y="757" width="0.0286%" height="15" fill="rgb(196,96,0)" fg:x="171" fg:w="1"/><text x="5.1399%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="4.8899%" y="741" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="171" fg:w="1"/><text x="5.1399%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="4.8899%" y="725" width="0.0286%" height="15" fill="rgb(210,110,0)" fg:x="171" fg:w="1"/><text x="5.1399%" y="735.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::swap (1 samples, 0.03%)</title><rect x="4.9185%" y="821" width="0.0286%" height="15" fill="rgb(68,181,181)" fg:x="172" fg:w="1"/><text x="5.1685%" y="831.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (9 samples, 0.26%)</title><rect x="4.9471%" y="789" width="0.2574%" height="15" fill="rgb(82,195,195)" fg:x="173" fg:w="9"/><text x="5.1971%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.14%)</title><rect x="5.0615%" y="773" width="0.1430%" height="15" fill="rgb(200,100,0)" fg:x="177" fg:w="5"/><text x="5.3115%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.14%)</title><rect x="5.0615%" y="757" width="0.1430%" height="15" fill="rgb(224,124,0)" fg:x="177" fg:w="5"/><text x="5.3115%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (5 samples, 0.14%)</title><rect x="5.0615%" y="741" width="0.1430%" height="15" fill="rgb(193,93,0)" fg:x="177" fg:w="5"/><text x="5.3115%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.14%)</title><rect x="5.0615%" y="725" width="0.1430%" height="15" fill="rgb(84,196,196)" fg:x="177" fg:w="5"/><text x="5.3115%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.14%)</title><rect x="5.0615%" y="709" width="0.1430%" height="15" fill="rgb(204,104,0)" fg:x="177" fg:w="5"/><text x="5.3115%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.14%)</title><rect x="5.0615%" y="693" width="0.1430%" height="15" fill="rgb(241,141,0)" fg:x="177" fg:w="5"/><text x="5.3115%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.14%)</title><rect x="5.0615%" y="677" width="0.1430%" height="15" fill="rgb(194,94,0)" fg:x="177" fg:w="5"/><text x="5.3115%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.14%)</title><rect x="5.0615%" y="661" width="0.1430%" height="15" fill="rgb(254,154,0)" fg:x="177" fg:w="5"/><text x="5.3115%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="5.2045%" y="709" width="0.0286%" height="15" fill="rgb(64,178,178)" fg:x="182" fg:w="1"/><text x="5.4545%" y="719.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::ops::index::Index&lt;alc::text_processor::ngram::Ngram&gt;&gt;::index (4 samples, 0.11%)</title><rect x="5.2045%" y="789" width="0.1144%" height="15" fill="rgb(52,167,167)" fg:x="182" fg:w="4"/><text x="5.4545%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (4 samples, 0.11%)</title><rect x="5.2045%" y="773" width="0.1144%" height="15" fill="rgb(206,106,0)" fg:x="182" fg:w="4"/><text x="5.4545%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.11%)</title><rect x="5.2045%" y="757" width="0.1144%" height="15" fill="rgb(224,124,0)" fg:x="182" fg:w="4"/><text x="5.4545%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.11%)</title><rect x="5.2045%" y="741" width="0.1144%" height="15" fill="rgb(78,191,191)" fg:x="182" fg:w="4"/><text x="5.4545%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.11%)</title><rect x="5.2045%" y="725" width="0.1144%" height="15" fill="rgb(54,169,169)" fg:x="182" fg:w="4"/><text x="5.4545%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.09%)</title><rect x="5.2331%" y="709" width="0.0858%" height="15" fill="rgb(60,174,174)" fg:x="183" fg:w="3"/><text x="5.4831%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.09%)</title><rect x="5.2331%" y="693" width="0.0858%" height="15" fill="rgb(82,194,194)" fg:x="183" fg:w="3"/><text x="5.4831%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.09%)</title><rect x="5.2331%" y="677" width="0.0858%" height="15" fill="rgb(82,194,194)" fg:x="183" fg:w="3"/><text x="5.4831%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.09%)</title><rect x="5.2331%" y="661" width="0.0858%" height="15" fill="rgb(75,188,188)" fg:x="183" fg:w="3"/><text x="5.4831%" y="671.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (3 samples, 0.09%)</title><rect x="5.2331%" y="645" width="0.0858%" height="15" fill="rgb(98,209,209)" fg:x="183" fg:w="3"/><text x="5.4831%" y="655.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.09%)</title><rect x="5.2331%" y="629" width="0.0858%" height="15" fill="rgb(104,214,214)" fg:x="183" fg:w="3"/><text x="5.4831%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.09%)</title><rect x="5.2331%" y="613" width="0.0858%" height="15" fill="rgb(246,146,0)" fg:x="183" fg:w="3"/><text x="5.4831%" y="623.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::cmp::PartialEq&gt;::eq (3 samples, 0.09%)</title><rect x="5.2331%" y="597" width="0.0858%" height="15" fill="rgb(102,213,213)" fg:x="183" fg:w="3"/><text x="5.4831%" y="607.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.09%)</title><rect x="5.2331%" y="581" width="0.0858%" height="15" fill="rgb(203,103,0)" fg:x="183" fg:w="3"/><text x="5.4831%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.09%)</title><rect x="5.2331%" y="565" width="0.0858%" height="15" fill="rgb(199,99,0)" fg:x="183" fg:w="3"/><text x="5.4831%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="5.3188%" y="709" width="0.0286%" height="15" fill="rgb(199,99,0)" fg:x="186" fg:w="1"/><text x="5.5688%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="5.3188%" y="693" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="186" fg:w="1"/><text x="5.5688%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="5.3188%" y="677" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="186" fg:w="1"/><text x="5.5688%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="5.3188%" y="661" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="186" fg:w="1"/><text x="5.5688%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="5.3188%" y="645" width="0.0286%" height="15" fill="rgb(210,110,0)" fg:x="186" fg:w="1"/><text x="5.5688%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="5.3188%" y="629" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="186" fg:w="1"/><text x="5.5688%" y="639.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (3 samples, 0.09%)</title><rect x="5.3188%" y="789" width="0.0858%" height="15" fill="rgb(55,170,170)" fg:x="186" fg:w="3"/><text x="5.5688%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.09%)</title><rect x="5.3188%" y="773" width="0.0858%" height="15" fill="rgb(236,136,0)" fg:x="186" fg:w="3"/><text x="5.5688%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.09%)</title><rect x="5.3188%" y="757" width="0.0858%" height="15" fill="rgb(197,97,0)" fg:x="186" fg:w="3"/><text x="5.5688%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.09%)</title><rect x="5.3188%" y="741" width="0.0858%" height="15" fill="rgb(219,119,0)" fg:x="186" fg:w="3"/><text x="5.5688%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.09%)</title><rect x="5.3188%" y="725" width="0.0858%" height="15" fill="rgb(60,174,174)" fg:x="186" fg:w="3"/><text x="5.5688%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.06%)</title><rect x="5.3474%" y="709" width="0.0572%" height="15" fill="rgb(209,109,0)" fg:x="187" fg:w="2"/><text x="5.5974%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.06%)</title><rect x="5.3474%" y="693" width="0.0572%" height="15" fill="rgb(192,92,0)" fg:x="187" fg:w="2"/><text x="5.5974%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.11%)</title><rect x="5.4046%" y="789" width="0.1144%" height="15" fill="rgb(195,95,0)" fg:x="189" fg:w="4"/><text x="5.6546%" y="799.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (22 samples, 0.63%)</title><rect x="4.9471%" y="821" width="0.6291%" height="15" fill="rgb(71,184,184)" fg:x="173" fg:w="22"/><text x="5.1971%" y="831.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (22 samples, 0.63%)</title><rect x="4.9471%" y="805" width="0.6291%" height="15" fill="rgb(57,171,171)" fg:x="173" fg:w="22"/><text x="5.1971%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (2 samples, 0.06%)</title><rect x="5.5190%" y="789" width="0.0572%" height="15" fill="rgb(242,142,0)" fg:x="193" fg:w="2"/><text x="5.7690%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (2 samples, 0.06%)</title><rect x="5.5190%" y="773" width="0.0572%" height="15" fill="rgb(239,139,0)" fg:x="193" fg:w="2"/><text x="5.7690%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="5.5190%" y="757" width="0.0572%" height="15" fill="rgb(246,146,0)" fg:x="193" fg:w="2"/><text x="5.7690%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.06%)</title><rect x="5.5190%" y="741" width="0.0572%" height="15" fill="rgb(212,112,0)" fg:x="193" fg:w="2"/><text x="5.7690%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.06%)</title><rect x="5.5190%" y="725" width="0.0572%" height="15" fill="rgb(226,126,0)" fg:x="193" fg:w="2"/><text x="5.7690%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.09%)</title><rect x="5.5762%" y="821" width="0.0858%" height="15" fill="rgb(204,104,0)" fg:x="195" fg:w="3"/><text x="5.8262%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.09%)</title><rect x="5.5762%" y="805" width="0.0858%" height="15" fill="rgb(208,108,0)" fg:x="195" fg:w="3"/><text x="5.8262%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="5.6620%" y="821" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="198" fg:w="1"/><text x="5.9120%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="5.6620%" y="805" width="0.0286%" height="15" fill="rgb(202,102,0)" fg:x="198" fg:w="1"/><text x="5.9120%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.06%)</title><rect x="5.6906%" y="821" width="0.0572%" height="15" fill="rgb(233,133,0)" fg:x="199" fg:w="2"/><text x="5.9406%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.03%)</title><rect x="5.7192%" y="805" width="0.0286%" height="15" fill="rgb(206,106,0)" fg:x="200" fg:w="1"/><text x="5.9692%" y="815.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="5.7192%" y="789" width="0.0286%" height="15" fill="rgb(50,165,165)" fg:x="200" fg:w="1"/><text x="5.9692%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.03%)</title><rect x="5.7192%" y="773" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="200" fg:w="1"/><text x="5.9692%" y="783.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.03%)</title><rect x="5.7192%" y="757" width="0.0286%" height="15" fill="rgb(212,112,0)" fg:x="200" fg:w="1"/><text x="5.9692%" y="767.50"></text></g><g><title>malloc (5 samples, 0.14%)</title><rect x="5.7478%" y="821" width="0.1430%" height="15" fill="rgb(209,209,62)" fg:x="201" fg:w="5"/><text x="5.9978%" y="831.50"></text></g><g><title>[[stack]] (64 samples, 1.83%)</title><rect x="4.4896%" y="837" width="1.8301%" height="15" fill="rgb(180,180,51)" fg:x="157" fg:w="64"/><text x="4.7396%" y="847.50">[..</text></g><g><title>realloc (15 samples, 0.43%)</title><rect x="5.8908%" y="821" width="0.4289%" height="15" fill="rgb(215,215,64)" fg:x="206" fg:w="15"/><text x="6.1408%" y="831.50"></text></g><g><title>[alc] (3 samples, 0.09%)</title><rect x="6.3197%" y="837" width="0.0858%" height="15" fill="rgb(212,212,63)" fg:x="221" fg:w="3"/><text x="6.5697%" y="847.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="6.3197%" y="821" width="0.0858%" height="15" fill="rgb(226,226,68)" fg:x="221" fg:w="3"/><text x="6.5697%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.06%)</title><rect x="6.4055%" y="837" width="0.0572%" height="15" fill="rgb(176,176,50)" fg:x="224" fg:w="2"/><text x="6.6555%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="6.4341%" y="821" width="0.0286%" height="15" fill="rgb(199,199,58)" fg:x="225" fg:w="1"/><text x="6.6841%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="6.4341%" y="805" width="0.0286%" height="15" fill="rgb(198,198,58)" fg:x="225" fg:w="1"/><text x="6.6841%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="6.4341%" y="789" width="0.0286%" height="15" fill="rgb(211,211,63)" fg:x="225" fg:w="1"/><text x="6.6841%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="6.4341%" y="773" width="0.0286%" height="15" fill="rgb(223,223,67)" fg:x="225" fg:w="1"/><text x="6.6841%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="6.4341%" y="757" width="0.0286%" height="15" fill="rgb(180,180,51)" fg:x="225" fg:w="1"/><text x="6.6841%" y="767.50"></text></g><g><title>[libc.so.6] (39 samples, 1.12%)</title><rect x="6.4627%" y="837" width="1.1152%" height="15" fill="rgb(187,187,54)" fg:x="226" fg:w="39"/><text x="6.7127%" y="847.50"></text></g><g><title>[libc.so.6] (16 samples, 0.46%)</title><rect x="7.1204%" y="821" width="0.4575%" height="15" fill="rgb(181,181,52)" fg:x="249" fg:w="16"/><text x="7.3704%" y="831.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="7.8639%" y="821" width="0.0286%" height="15" fill="rgb(60,174,174)" fg:x="275" fg:w="1"/><text x="8.1139%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.09%)</title><rect x="8.0927%" y="805" width="0.0858%" height="15" fill="rgb(252,152,0)" fg:x="283" fg:w="3"/><text x="8.3427%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.23%)</title><rect x="8.1784%" y="677" width="0.2288%" height="15" fill="rgb(198,98,0)" fg:x="286" fg:w="8"/><text x="8.4284%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.23%)</title><rect x="8.1784%" y="661" width="0.2288%" height="15" fill="rgb(205,105,0)" fg:x="286" fg:w="8"/><text x="8.4284%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.23%)</title><rect x="8.1784%" y="645" width="0.2288%" height="15" fill="rgb(226,126,0)" fg:x="286" fg:w="8"/><text x="8.4284%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.23%)</title><rect x="8.1784%" y="629" width="0.2288%" height="15" fill="rgb(249,149,0)" fg:x="286" fg:w="8"/><text x="8.4284%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.23%)</title><rect x="8.1784%" y="613" width="0.2288%" height="15" fill="rgb(199,99,0)" fg:x="286" fg:w="8"/><text x="8.4284%" y="623.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.23%)</title><rect x="8.1784%" y="597" width="0.2288%" height="15" fill="rgb(232,132,0)" fg:x="286" fg:w="8"/><text x="8.4284%" y="607.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (16 samples, 0.46%)</title><rect x="8.1784%" y="757" width="0.4575%" height="15" fill="rgb(90,202,202)" fg:x="286" fg:w="16"/><text x="8.4284%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.46%)</title><rect x="8.1784%" y="741" width="0.4575%" height="15" fill="rgb(244,144,0)" fg:x="286" fg:w="16"/><text x="8.4284%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.46%)</title><rect x="8.1784%" y="725" width="0.4575%" height="15" fill="rgb(228,128,0)" fg:x="286" fg:w="16"/><text x="8.4284%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.46%)</title><rect x="8.1784%" y="709" width="0.4575%" height="15" fill="rgb(203,103,0)" fg:x="286" fg:w="16"/><text x="8.4284%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.46%)</title><rect x="8.1784%" y="693" width="0.4575%" height="15" fill="rgb(61,175,175)" fg:x="286" fg:w="16"/><text x="8.4284%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.23%)</title><rect x="8.4072%" y="677" width="0.2288%" height="15" fill="rgb(193,93,0)" fg:x="294" fg:w="8"/><text x="8.6572%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.23%)</title><rect x="8.4072%" y="661" width="0.2288%" height="15" fill="rgb(241,141,0)" fg:x="294" fg:w="8"/><text x="8.6572%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.77%)</title><rect x="7.8925%" y="821" width="0.7721%" height="15" fill="rgb(238,138,0)" fg:x="276" fg:w="27"/><text x="8.1425%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.49%)</title><rect x="8.1784%" y="805" width="0.4861%" height="15" fill="rgb(190,90,0)" fg:x="286" fg:w="17"/><text x="8.4284%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.49%)</title><rect x="8.1784%" y="789" width="0.4861%" height="15" fill="rgb(225,125,0)" fg:x="286" fg:w="17"/><text x="8.4284%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.49%)</title><rect x="8.1784%" y="773" width="0.4861%" height="15" fill="rgb(55,170,170)" fg:x="286" fg:w="17"/><text x="8.4284%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="8.6360%" y="757" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="302" fg:w="1"/><text x="8.8860%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="8.6360%" y="741" width="0.0286%" height="15" fill="rgb(207,107,0)" fg:x="302" fg:w="1"/><text x="8.8860%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="8.6360%" y="725" width="0.0286%" height="15" fill="rgb(248,148,0)" fg:x="302" fg:w="1"/><text x="8.8860%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="8.6360%" y="709" width="0.0286%" height="15" fill="rgb(205,105,0)" fg:x="302" fg:w="1"/><text x="8.8860%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="8.6360%" y="693" width="0.0286%" height="15" fill="rgb(211,111,0)" fg:x="302" fg:w="1"/><text x="8.8860%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="8.6360%" y="677" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="302" fg:w="1"/><text x="8.8860%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="8.6646%" y="821" width="0.0286%" height="15" fill="rgb(245,145,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)]&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="805" width="0.0286%" height="15" fill="rgb(239,139,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="789" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="773" width="0.0286%" height="15" fill="rgb(206,106,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="757" width="0.0286%" height="15" fill="rgb(240,140,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="8.6646%" y="741" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="725" width="0.0286%" height="15" fill="rgb(226,126,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="709" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="693" width="0.0286%" height="15" fill="rgb(237,137,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="677" width="0.0286%" height="15" fill="rgb(230,130,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.03%)</title><rect x="8.6646%" y="661" width="0.0286%" height="15" fill="rgb(232,132,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="8.6646%" y="645" width="0.0286%" height="15" fill="rgb(200,100,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="8.6646%" y="629" width="0.0286%" height="15" fill="rgb(215,115,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="8.6646%" y="613" width="0.0286%" height="15" fill="rgb(250,150,0)" fg:x="303" fg:w="1"/><text x="8.9146%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="8.6932%" y="821" width="0.0286%" height="15" fill="rgb(86,198,198)" fg:x="304" fg:w="1"/><text x="8.9432%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.03%)</title><rect x="8.6932%" y="805" width="0.0286%" height="15" fill="rgb(93,205,205)" fg:x="304" fg:w="1"/><text x="8.9432%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.03%)</title><rect x="8.6932%" y="789" width="0.0286%" height="15" fill="rgb(106,216,216)" fg:x="304" fg:w="1"/><text x="8.9432%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="8.6932%" y="773" width="0.0286%" height="15" fill="rgb(214,114,0)" fg:x="304" fg:w="1"/><text x="8.9432%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="8.6932%" y="757" width="0.0286%" height="15" fill="rgb(244,144,0)" fg:x="304" fg:w="1"/><text x="8.9432%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="8.7218%" y="709" width="0.0286%" height="15" fill="rgb(215,115,0)" fg:x="305" fg:w="1"/><text x="8.9718%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.03%)</title><rect x="8.7218%" y="693" width="0.0286%" height="15" fill="rgb(220,120,0)" fg:x="305" fg:w="1"/><text x="8.9718%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.03%)</title><rect x="8.7218%" y="677" width="0.0286%" height="15" fill="rgb(210,110,0)" fg:x="305" fg:w="1"/><text x="8.9718%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="8.7218%" y="661" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="305" fg:w="1"/><text x="8.9718%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="8.7218%" y="645" width="0.0286%" height="15" fill="rgb(241,141,0)" fg:x="305" fg:w="1"/><text x="8.9718%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="8.7218%" y="629" width="0.0286%" height="15" fill="rgb(194,94,0)" fg:x="305" fg:w="1"/><text x="8.9718%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="8.7218%" y="613" width="0.0286%" height="15" fill="rgb(192,92,0)" fg:x="305" fg:w="1"/><text x="8.9718%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="8.7218%" y="597" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="305" fg:w="1"/><text x="8.9718%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="8.7218%" y="821" width="0.0572%" height="15" fill="rgb(64,178,178)" fg:x="305" fg:w="2"/><text x="8.9718%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.06%)</title><rect x="8.7218%" y="805" width="0.0572%" height="15" fill="rgb(76,188,188)" fg:x="305" fg:w="2"/><text x="8.9718%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.06%)</title><rect x="8.7218%" y="789" width="0.0572%" height="15" fill="rgb(77,190,190)" fg:x="305" fg:w="2"/><text x="8.9718%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.06%)</title><rect x="8.7218%" y="773" width="0.0572%" height="15" fill="rgb(62,176,176)" fg:x="305" fg:w="2"/><text x="8.9718%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.06%)</title><rect x="8.7218%" y="757" width="0.0572%" height="15" fill="rgb(227,127,0)" fg:x="305" fg:w="2"/><text x="8.9718%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (2 samples, 0.06%)</title><rect x="8.7218%" y="741" width="0.0572%" height="15" fill="rgb(198,98,0)" fg:x="305" fg:w="2"/><text x="8.9718%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.06%)</title><rect x="8.7218%" y="725" width="0.0572%" height="15" fill="rgb(211,111,0)" fg:x="305" fg:w="2"/><text x="8.9718%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.03%)</title><rect x="8.7504%" y="709" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="306" fg:w="1"/><text x="9.0004%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="8.7504%" y="693" width="0.0286%" height="15" fill="rgb(209,109,0)" fg:x="306" fg:w="1"/><text x="9.0004%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="8.7504%" y="677" width="0.0286%" height="15" fill="rgb(227,127,0)" fg:x="306" fg:w="1"/><text x="9.0004%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="8.7504%" y="661" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="306" fg:w="1"/><text x="9.0004%" y="671.50"></text></g><g><title>[libc.so.6] (108 samples, 3.09%)</title><rect x="8.7790%" y="821" width="3.0884%" height="15" fill="rgb(219,219,66)" fg:x="307" fg:w="108"/><text x="9.0290%" y="831.50">[li..</text></g><g><title>__rdl_realloc (5 samples, 0.14%)</title><rect x="11.8673%" y="821" width="0.1430%" height="15" fill="rgb(207,207,61)" fg:x="415" fg:w="5"/><text x="12.1173%" y="831.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (10 samples, 0.29%)</title><rect x="12.0103%" y="821" width="0.2860%" height="15" fill="rgb(86,198,198)" fg:x="420" fg:w="10"/><text x="12.2603%" y="831.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (2 samples, 0.06%)</title><rect x="12.2963%" y="821" width="0.0572%" height="15" fill="rgb(63,177,177)" fg:x="430" fg:w="2"/><text x="12.5463%" y="831.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (2 samples, 0.06%)</title><rect x="12.3534%" y="821" width="0.0572%" height="15" fill="rgb(107,218,218)" fg:x="432" fg:w="2"/><text x="12.6034%" y="831.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="12.3820%" y="805" width="0.0286%" height="15" fill="rgb(107,218,218)" fg:x="433" fg:w="1"/><text x="12.6320%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="12.3820%" y="789" width="0.0286%" height="15" fill="rgb(235,135,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="12.3820%" y="773" width="0.0286%" height="15" fill="rgb(216,116,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="12.3820%" y="757" width="0.0286%" height="15" fill="rgb(209,109,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="12.3820%" y="741" width="0.0286%" height="15" fill="rgb(72,185,185)" fg:x="433" fg:w="1"/><text x="12.6320%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="12.3820%" y="725" width="0.0286%" height="15" fill="rgb(232,132,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="12.3820%" y="709" width="0.0286%" height="15" fill="rgb(250,150,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="12.3820%" y="693" width="0.0286%" height="15" fill="rgb(252,152,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="12.3820%" y="677" width="0.0286%" height="15" fill="rgb(227,127,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="12.3820%" y="661" width="0.0286%" height="15" fill="rgb(244,144,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="12.3820%" y="645" width="0.0286%" height="15" fill="rgb(226,126,0)" fg:x="433" fg:w="1"/><text x="12.6320%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.23%)</title><rect x="12.8110%" y="725" width="0.2288%" height="15" fill="rgb(222,122,0)" fg:x="448" fg:w="8"/><text x="13.0610%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.23%)</title><rect x="12.8110%" y="709" width="0.2288%" height="15" fill="rgb(253,153,0)" fg:x="448" fg:w="8"/><text x="13.0610%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.23%)</title><rect x="12.8110%" y="693" width="0.2288%" height="15" fill="rgb(253,153,0)" fg:x="448" fg:w="8"/><text x="13.0610%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.23%)</title><rect x="12.8110%" y="677" width="0.2288%" height="15" fill="rgb(220,120,0)" fg:x="448" fg:w="8"/><text x="13.0610%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.23%)</title><rect x="12.8110%" y="661" width="0.2288%" height="15" fill="rgb(248,148,0)" fg:x="448" fg:w="8"/><text x="13.0610%" y="671.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.23%)</title><rect x="12.8110%" y="645" width="0.2288%" height="15" fill="rgb(202,102,0)" fg:x="448" fg:w="8"/><text x="13.0610%" y="655.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (24 samples, 0.69%)</title><rect x="12.8110%" y="805" width="0.6863%" height="15" fill="rgb(82,194,194)" fg:x="448" fg:w="24"/><text x="13.0610%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.69%)</title><rect x="12.8110%" y="789" width="0.6863%" height="15" fill="rgb(245,145,0)" fg:x="448" fg:w="24"/><text x="13.0610%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.69%)</title><rect x="12.8110%" y="773" width="0.6863%" height="15" fill="rgb(212,112,0)" fg:x="448" fg:w="24"/><text x="13.0610%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.69%)</title><rect x="12.8110%" y="757" width="0.6863%" height="15" fill="rgb(208,108,0)" fg:x="448" fg:w="24"/><text x="13.0610%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.69%)</title><rect x="12.8110%" y="741" width="0.6863%" height="15" fill="rgb(63,176,176)" fg:x="448" fg:w="24"/><text x="13.0610%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.46%)</title><rect x="13.0397%" y="725" width="0.4575%" height="15" fill="rgb(199,99,0)" fg:x="456" fg:w="16"/><text x="13.2897%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.46%)</title><rect x="13.0397%" y="709" width="0.4575%" height="15" fill="rgb(229,129,0)" fg:x="456" fg:w="16"/><text x="13.2897%" y="719.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (3 samples, 0.09%)</title><rect x="13.4973%" y="805" width="0.0858%" height="15" fill="rgb(91,203,203)" fg:x="472" fg:w="3"/><text x="13.7473%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.09%)</title><rect x="13.4973%" y="789" width="0.0858%" height="15" fill="rgb(252,152,0)" fg:x="472" fg:w="3"/><text x="13.7473%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.09%)</title><rect x="13.4973%" y="773" width="0.0858%" height="15" fill="rgb(106,217,217)" fg:x="472" fg:w="3"/><text x="13.7473%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.09%)</title><rect x="13.4973%" y="757" width="0.0858%" height="15" fill="rgb(96,207,207)" fg:x="472" fg:w="3"/><text x="13.7473%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.09%)</title><rect x="13.4973%" y="741" width="0.0858%" height="15" fill="rgb(85,197,197)" fg:x="472" fg:w="3"/><text x="13.7473%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.09%)</title><rect x="13.5831%" y="661" width="0.0858%" height="15" fill="rgb(246,146,0)" fg:x="475" fg:w="3"/><text x="13.8331%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.09%)</title><rect x="13.5831%" y="645" width="0.0858%" height="15" fill="rgb(252,152,0)" fg:x="475" fg:w="3"/><text x="13.8331%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.09%)</title><rect x="13.5831%" y="629" width="0.0858%" height="15" fill="rgb(242,142,0)" fg:x="475" fg:w="3"/><text x="13.8331%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.09%)</title><rect x="13.5831%" y="613" width="0.0858%" height="15" fill="rgb(247,147,0)" fg:x="475" fg:w="3"/><text x="13.8331%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.09%)</title><rect x="13.5831%" y="597" width="0.0858%" height="15" fill="rgb(254,154,0)" fg:x="475" fg:w="3"/><text x="13.8331%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.09%)</title><rect x="13.5831%" y="581" width="0.0858%" height="15" fill="rgb(239,139,0)" fg:x="475" fg:w="3"/><text x="13.8331%" y="591.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (6 samples, 0.17%)</title><rect x="13.5831%" y="741" width="0.1716%" height="15" fill="rgb(58,173,173)" fg:x="475" fg:w="6"/><text x="13.8331%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.17%)</title><rect x="13.5831%" y="725" width="0.1716%" height="15" fill="rgb(206,106,0)" fg:x="475" fg:w="6"/><text x="13.8331%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.17%)</title><rect x="13.5831%" y="709" width="0.1716%" height="15" fill="rgb(209,109,0)" fg:x="475" fg:w="6"/><text x="13.8331%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.17%)</title><rect x="13.5831%" y="693" width="0.1716%" height="15" fill="rgb(254,154,0)" fg:x="475" fg:w="6"/><text x="13.8331%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.17%)</title><rect x="13.5831%" y="677" width="0.1716%" height="15" fill="rgb(57,172,172)" fg:x="475" fg:w="6"/><text x="13.8331%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.09%)</title><rect x="13.6689%" y="661" width="0.0858%" height="15" fill="rgb(235,135,0)" fg:x="478" fg:w="3"/><text x="13.9189%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.09%)</title><rect x="13.6689%" y="645" width="0.0858%" height="15" fill="rgb(233,133,0)" fg:x="478" fg:w="3"/><text x="13.9189%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.23%)</title><rect x="13.5831%" y="805" width="0.2288%" height="15" fill="rgb(190,90,0)" fg:x="475" fg:w="8"/><text x="13.8331%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.23%)</title><rect x="13.5831%" y="789" width="0.2288%" height="15" fill="rgb(240,140,0)" fg:x="475" fg:w="8"/><text x="13.8331%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.23%)</title><rect x="13.5831%" y="773" width="0.2288%" height="15" fill="rgb(196,96,0)" fg:x="475" fg:w="8"/><text x="13.8331%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.23%)</title><rect x="13.5831%" y="757" width="0.2288%" height="15" fill="rgb(53,168,168)" fg:x="475" fg:w="8"/><text x="13.8331%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="13.7546%" y="741" width="0.0572%" height="15" fill="rgb(252,152,0)" fg:x="481" fg:w="2"/><text x="14.0046%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="13.7546%" y="725" width="0.0572%" height="15" fill="rgb(246,146,0)" fg:x="481" fg:w="2"/><text x="14.0046%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.06%)</title><rect x="13.7546%" y="709" width="0.0572%" height="15" fill="rgb(218,118,0)" fg:x="481" fg:w="2"/><text x="14.0046%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.06%)</title><rect x="13.7546%" y="693" width="0.0572%" height="15" fill="rgb(221,121,0)" fg:x="481" fg:w="2"/><text x="14.0046%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="13.7546%" y="677" width="0.0572%" height="15" fill="rgb(213,113,0)" fg:x="481" fg:w="2"/><text x="14.0046%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="13.7546%" y="661" width="0.0572%" height="15" fill="rgb(232,132,0)" fg:x="481" fg:w="2"/><text x="14.0046%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (3 samples, 0.09%)</title><rect x="13.8118%" y="805" width="0.0858%" height="15" fill="rgb(200,100,0)" fg:x="483" fg:w="3"/><text x="14.0618%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.09%)</title><rect x="13.8118%" y="789" width="0.0858%" height="15" fill="rgb(212,112,0)" fg:x="483" fg:w="3"/><text x="14.0618%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.09%)</title><rect x="13.8118%" y="773" width="0.0858%" height="15" fill="rgb(253,153,0)" fg:x="483" fg:w="3"/><text x="14.0618%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.09%)</title><rect x="13.8118%" y="757" width="0.0858%" height="15" fill="rgb(228,128,0)" fg:x="483" fg:w="3"/><text x="14.0618%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.09%)</title><rect x="13.8118%" y="741" width="0.0858%" height="15" fill="rgb(199,99,0)" fg:x="483" fg:w="3"/><text x="14.0618%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.09%)</title><rect x="13.8118%" y="725" width="0.0858%" height="15" fill="rgb(228,128,0)" fg:x="483" fg:w="3"/><text x="14.0618%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="13.8976%" y="789" width="0.1144%" height="15" fill="rgb(214,114,0)" fg:x="486" fg:w="4"/><text x="14.1476%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (4 samples, 0.11%)</title><rect x="13.8976%" y="773" width="0.1144%" height="15" fill="rgb(240,140,0)" fg:x="486" fg:w="4"/><text x="14.1476%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (4 samples, 0.11%)</title><rect x="13.8976%" y="757" width="0.1144%" height="15" fill="rgb(208,108,0)" fg:x="486" fg:w="4"/><text x="14.1476%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.11%)</title><rect x="13.8976%" y="741" width="0.1144%" height="15" fill="rgb(200,100,0)" fg:x="486" fg:w="4"/><text x="14.1476%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.11%)</title><rect x="13.8976%" y="725" width="0.1144%" height="15" fill="rgb(208,108,0)" fg:x="486" fg:w="4"/><text x="14.1476%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="13.8976%" y="709" width="0.1144%" height="15" fill="rgb(211,111,0)" fg:x="486" fg:w="4"/><text x="14.1476%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.11%)</title><rect x="13.8976%" y="693" width="0.1144%" height="15" fill="rgb(215,115,0)" fg:x="486" fg:w="4"/><text x="14.1476%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.11%)</title><rect x="13.8976%" y="677" width="0.1144%" height="15" fill="rgb(247,147,0)" fg:x="486" fg:w="4"/><text x="14.1476%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (5 samples, 0.14%)</title><rect x="13.8976%" y="805" width="0.1430%" height="15" fill="rgb(212,112,0)" fg:x="486" fg:w="5"/><text x="14.1476%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.03%)</title><rect x="14.0120%" y="789" width="0.0286%" height="15" fill="rgb(211,111,0)" fg:x="490" fg:w="1"/><text x="14.2620%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="14.0120%" y="773" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="490" fg:w="1"/><text x="14.2620%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="14.0120%" y="757" width="0.0286%" height="15" fill="rgb(228,128,0)" fg:x="490" fg:w="1"/><text x="14.2620%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="14.0120%" y="741" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="490" fg:w="1"/><text x="14.2620%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.06%)</title><rect x="14.0406%" y="805" width="0.0572%" height="15" fill="rgb(236,136,0)" fg:x="491" fg:w="2"/><text x="14.2906%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="14.0406%" y="789" width="0.0572%" height="15" fill="rgb(238,138,0)" fg:x="491" fg:w="2"/><text x="14.2906%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (2 samples, 0.06%)</title><rect x="14.0406%" y="773" width="0.0572%" height="15" fill="rgb(213,113,0)" fg:x="491" fg:w="2"/><text x="14.2906%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="14.0406%" y="757" width="0.0572%" height="15" fill="rgb(62,176,176)" fg:x="491" fg:w="2"/><text x="14.2906%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.06%)</title><rect x="14.0406%" y="741" width="0.0572%" height="15" fill="rgb(195,95,0)" fg:x="491" fg:w="2"/><text x="14.2906%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="14.0406%" y="725" width="0.0572%" height="15" fill="rgb(212,112,0)" fg:x="491" fg:w="2"/><text x="14.2906%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.06%)</title><rect x="14.0406%" y="709" width="0.0572%" height="15" fill="rgb(246,146,0)" fg:x="491" fg:w="2"/><text x="14.2906%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.06%)</title><rect x="14.0406%" y="693" width="0.0572%" height="15" fill="rgb(244,144,0)" fg:x="491" fg:w="2"/><text x="14.2906%" y="703.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (61 samples, 1.74%)</title><rect x="12.4106%" y="821" width="1.7444%" height="15" fill="rgb(105,215,215)" fg:x="434" fg:w="61"/><text x="12.6606%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (2 samples, 0.06%)</title><rect x="14.0978%" y="805" width="0.0572%" height="15" fill="rgb(235,135,0)" fg:x="493" fg:w="2"/><text x="14.3478%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="14.0978%" y="789" width="0.0572%" height="15" fill="rgb(254,154,0)" fg:x="493" fg:w="2"/><text x="14.3478%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (2 samples, 0.06%)</title><rect x="14.0978%" y="773" width="0.0572%" height="15" fill="rgb(214,114,0)" fg:x="493" fg:w="2"/><text x="14.3478%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="14.0978%" y="757" width="0.0572%" height="15" fill="rgb(61,175,175)" fg:x="493" fg:w="2"/><text x="14.3478%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (2 samples, 0.06%)</title><rect x="14.0978%" y="741" width="0.0572%" height="15" fill="rgb(240,140,0)" fg:x="493" fg:w="2"/><text x="14.3478%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="14.0978%" y="725" width="0.0572%" height="15" fill="rgb(240,140,0)" fg:x="493" fg:w="2"/><text x="14.3478%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.06%)</title><rect x="14.0978%" y="709" width="0.0572%" height="15" fill="rgb(252,152,0)" fg:x="493" fg:w="2"/><text x="14.3478%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.06%)</title><rect x="14.0978%" y="693" width="0.0572%" height="15" fill="rgb(237,137,0)" fg:x="493" fg:w="2"/><text x="14.3478%" y="703.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (1 samples, 0.03%)</title><rect x="14.1550%" y="821" width="0.0286%" height="15" fill="rgb(55,169,169)" fg:x="495" fg:w="1"/><text x="14.4050%" y="831.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_char (2 samples, 0.06%)</title><rect x="14.1836%" y="805" width="0.0572%" height="15" fill="rgb(51,166,166)" fg:x="496" fg:w="2"/><text x="14.4336%" y="815.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_lowercase (1 samples, 0.03%)</title><rect x="14.2122%" y="789" width="0.0286%" height="15" fill="rgb(231,131,0)" fg:x="497" fg:w="1"/><text x="14.4622%" y="799.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (3 samples, 0.09%)</title><rect x="14.1836%" y="821" width="0.0858%" height="15" fill="rgb(84,196,196)" fg:x="496" fg:w="3"/><text x="14.4336%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (1 samples, 0.03%)</title><rect x="14.2408%" y="805" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="498" fg:w="1"/><text x="14.4908%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="14.2408%" y="789" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="498" fg:w="1"/><text x="14.4908%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="14.2408%" y="773" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="498" fg:w="1"/><text x="14.4908%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.26%)</title><rect x="14.2694%" y="821" width="0.2574%" height="15" fill="rgb(249,149,0)" fg:x="499" fg:w="9"/><text x="14.5194%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.34%)</title><rect x="14.5267%" y="821" width="0.3432%" height="15" fill="rgb(228,128,0)" fg:x="508" fg:w="12"/><text x="14.7767%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.14%)</title><rect x="14.7269%" y="805" width="0.1430%" height="15" fill="rgb(228,128,0)" fg:x="515" fg:w="5"/><text x="14.9769%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.14%)</title><rect x="14.7269%" y="789" width="0.1430%" height="15" fill="rgb(195,95,0)" fg:x="515" fg:w="5"/><text x="14.9769%" y="799.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.14%)</title><rect x="14.7269%" y="773" width="0.1430%" height="15" fill="rgb(242,142,0)" fg:x="515" fg:w="5"/><text x="14.9769%" y="783.50"></text></g><g><title>cfree (55 samples, 1.57%)</title><rect x="14.8699%" y="821" width="1.5728%" height="15" fill="rgb(227,227,69)" fg:x="520" fg:w="55"/><text x="15.1199%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.06%)</title><rect x="16.6142%" y="773" width="0.0572%" height="15" fill="rgb(241,141,0)" fg:x="581" fg:w="2"/><text x="16.8642%" y="783.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.06%)</title><rect x="16.6142%" y="757" width="0.0572%" height="15" fill="rgb(206,106,0)" fg:x="581" fg:w="2"/><text x="16.8642%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.26%)</title><rect x="16.4427%" y="821" width="0.2574%" height="15" fill="rgb(218,118,0)" fg:x="575" fg:w="9"/><text x="16.6927%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.09%)</title><rect x="16.6142%" y="805" width="0.0858%" height="15" fill="rgb(249,149,0)" fg:x="581" fg:w="3"/><text x="16.8642%" y="815.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (3 samples, 0.09%)</title><rect x="16.6142%" y="789" width="0.0858%" height="15" fill="rgb(51,166,166)" fg:x="581" fg:w="3"/><text x="16.8642%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.03%)</title><rect x="16.6714%" y="773" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="583" fg:w="1"/><text x="16.9214%" y="783.50"></text></g><g><title>core::hash::Hasher::write_usize (9 samples, 0.26%)</title><rect x="16.7000%" y="821" width="0.2574%" height="15" fill="rgb(248,148,0)" fg:x="584" fg:w="9"/><text x="16.9500%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.03%)</title><rect x="16.9574%" y="821" width="0.0286%" height="15" fill="rgb(64,178,178)" fg:x="593" fg:w="1"/><text x="17.2074%" y="831.50"></text></g><g><title>malloc (21 samples, 0.60%)</title><rect x="16.9860%" y="821" width="0.6005%" height="15" fill="rgb(219,219,66)" fg:x="594" fg:w="21"/><text x="17.2360%" y="831.50"></text></g><g><title>[unknown] (362 samples, 10.35%)</title><rect x="7.5779%" y="837" width="10.3517%" height="15" fill="rgb(201,201,59)" fg:x="265" fg:w="362"/><text x="7.8279%" y="847.50">[unknown]</text></g><g><title>realloc (12 samples, 0.34%)</title><rect x="17.5865%" y="821" width="0.3432%" height="15" fill="rgb(210,210,62)" fg:x="615" fg:w="12"/><text x="17.8365%" y="831.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (1 samples, 0.03%)</title><rect x="17.9297%" y="261" width="0.0286%" height="15" fill="rgb(103,214,214)" fg:x="627" fg:w="1"/><text x="18.1797%" y="271.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::str::traits::FromStr&gt;::from_str (1 samples, 0.03%)</title><rect x="17.9297%" y="245" width="0.0286%" height="15" fill="rgb(89,201,201)" fg:x="627" fg:w="1"/><text x="18.1797%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.03%)</title><rect x="17.9297%" y="229" width="0.0286%" height="15" fill="rgb(233,133,0)" fg:x="627" fg:w="1"/><text x="18.1797%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="17.9297%" y="213" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="627" fg:w="1"/><text x="18.1797%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.03%)</title><rect x="17.9297%" y="197" width="0.0286%" height="15" fill="rgb(208,108,0)" fg:x="627" fg:w="1"/><text x="18.1797%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.03%)</title><rect x="17.9297%" y="181" width="0.0286%" height="15" fill="rgb(62,176,176)" fg:x="627" fg:w="1"/><text x="18.1797%" y="191.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_uppercase (1 samples, 0.03%)</title><rect x="17.9582%" y="261" width="0.0286%" height="15" fill="rgb(211,111,0)" fg:x="628" fg:w="1"/><text x="18.2082%" y="271.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_lowercase (2 samples, 0.06%)</title><rect x="17.9868%" y="261" width="0.0572%" height="15" fill="rgb(202,102,0)" fg:x="629" fg:w="2"/><text x="18.2368%" y="271.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.03%)</title><rect x="18.0154%" y="245" width="0.0286%" height="15" fill="rgb(232,132,0)" fg:x="630" fg:w="1"/><text x="18.2654%" y="255.50"></text></g><g><title>&lt;alc::optimizer::LayoutOptimizer&lt;4_usize,12_usize,alc::objective::scoring::SimpleScoreFunction&gt; as core::default::Default&gt;::default (5 samples, 0.14%)</title><rect x="17.9297%" y="565" width="0.1430%" height="15" fill="rgb(57,171,171)" fg:x="627" fg:w="5"/><text x="18.1797%" y="575.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::new (5 samples, 0.14%)</title><rect x="17.9297%" y="549" width="0.1430%" height="15" fill="rgb(83,196,196)" fg:x="627" fg:w="5"/><text x="18.1797%" y="559.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_dataset (5 samples, 0.14%)</title><rect x="17.9297%" y="533" width="0.1430%" height="15" fill="rgb(67,181,181)" fg:x="627" fg:w="5"/><text x="18.1797%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.14%)</title><rect x="17.9297%" y="517" width="0.1430%" height="15" fill="rgb(209,109,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.14%)</title><rect x="17.9297%" y="501" width="0.1430%" height="15" fill="rgb(230,130,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.14%)</title><rect x="17.9297%" y="485" width="0.1430%" height="15" fill="rgb(197,97,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.14%)</title><rect x="17.9297%" y="469" width="0.1430%" height="15" fill="rgb(223,123,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.14%)</title><rect x="17.9297%" y="453" width="0.1430%" height="15" fill="rgb(217,117,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (5 samples, 0.14%)</title><rect x="17.9297%" y="437" width="0.1430%" height="15" fill="rgb(197,97,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.14%)</title><rect x="17.9297%" y="421" width="0.1430%" height="15" fill="rgb(230,130,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.14%)</title><rect x="17.9297%" y="405" width="0.1430%" height="15" fill="rgb(214,114,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.14%)</title><rect x="17.9297%" y="389" width="0.1430%" height="15" fill="rgb(214,114,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5 samples, 0.14%)</title><rect x="17.9297%" y="373" width="0.1430%" height="15" fill="rgb(248,148,0)" fg:x="627" fg:w="5"/><text x="18.1797%" y="383.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_dataset::_{{closure}} (5 samples, 0.14%)</title><rect x="17.9297%" y="357" width="0.1430%" height="15" fill="rgb(102,213,213)" fg:x="627" fg:w="5"/><text x="18.1797%" y="367.50"></text></g><g><title>alc::text_processor::dataset::FrequencyDataset&lt;u32&gt;::try_from_dir (5 samples, 0.14%)</title><rect x="17.9297%" y="341" width="0.1430%" height="15" fill="rgb(65,179,179)" fg:x="627" fg:w="5"/><text x="18.1797%" y="351.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_file (5 samples, 0.14%)</title><rect x="17.9297%" y="325" width="0.1430%" height="15" fill="rgb(96,207,207)" fg:x="627" fg:w="5"/><text x="18.1797%" y="335.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_string (5 samples, 0.14%)</title><rect x="17.9297%" y="309" width="0.1430%" height="15" fill="rgb(53,168,168)" fg:x="627" fg:w="5"/><text x="18.1797%" y="319.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (5 samples, 0.14%)</title><rect x="17.9297%" y="293" width="0.1430%" height="15" fill="rgb(57,171,171)" fg:x="627" fg:w="5"/><text x="18.1797%" y="303.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_char (5 samples, 0.14%)</title><rect x="17.9297%" y="277" width="0.1430%" height="15" fill="rgb(59,173,173)" fg:x="627" fg:w="5"/><text x="18.1797%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.03%)</title><rect x="18.0440%" y="261" width="0.0286%" height="15" fill="rgb(209,109,0)" fg:x="631" fg:w="1"/><text x="18.2940%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.03%)</title><rect x="18.0440%" y="245" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="631" fg:w="1"/><text x="18.2940%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;alc::text_processor::keycode::Keycode,()&gt;&gt; (1 samples, 0.03%)</title><rect x="18.0440%" y="229" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="631" fg:w="1"/><text x="18.2940%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(alc::text_processor::keycode::Keycode,())&gt;&gt; (1 samples, 0.03%)</title><rect x="18.0440%" y="213" width="0.0286%" height="15" fill="rgb(192,92,0)" fg:x="631" fg:w="1"/><text x="18.2940%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="18.0440%" y="197" width="0.0286%" height="15" fill="rgb(75,188,188)" fg:x="631" fg:w="1"/><text x="18.2940%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="18.0440%" y="181" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="631" fg:w="1"/><text x="18.2940%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="18.0440%" y="165" width="0.0286%" height="15" fill="rgb(243,143,0)" fg:x="631" fg:w="1"/><text x="18.2940%" y="175.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="18.0440%" y="149" width="0.0286%" height="15" fill="rgb(195,195,57)" fg:x="631" fg:w="1"/><text x="18.2940%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.0440%" y="133" width="0.0286%" height="15" fill="rgb(199,199,58)" fg:x="631" fg:w="1"/><text x="18.2940%" y="143.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::combine_with (1 samples, 0.03%)</title><rect x="18.0726%" y="325" width="0.0286%" height="15" fill="rgb(93,205,205)" fg:x="632" fg:w="1"/><text x="18.3226%" y="335.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::add_from_key_value (1 samples, 0.03%)</title><rect x="18.0726%" y="309" width="0.0286%" height="15" fill="rgb(79,192,192)" fg:x="632" fg:w="1"/><text x="18.3226%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.03%)</title><rect x="18.0726%" y="293" width="0.0286%" height="15" fill="rgb(242,142,0)" fg:x="632" fg:w="1"/><text x="18.3226%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.03%)</title><rect x="18.0726%" y="277" width="0.0286%" height="15" fill="rgb(74,187,187)" fg:x="632" fg:w="1"/><text x="18.3226%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="18.0726%" y="261" width="0.0286%" height="15" fill="rgb(99,210,210)" fg:x="632" fg:w="1"/><text x="18.3226%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.03%)</title><rect x="18.0726%" y="245" width="0.0286%" height="15" fill="rgb(90,201,201)" fg:x="632" fg:w="1"/><text x="18.3226%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.03%)</title><rect x="18.0726%" y="229" width="0.0286%" height="15" fill="rgb(55,170,170)" fg:x="632" fg:w="1"/><text x="18.3226%" y="239.50"></text></g><g><title>hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::_{{closure}} (1 samples, 0.03%)</title><rect x="18.0726%" y="213" width="0.0286%" height="15" fill="rgb(104,215,215)" fg:x="632" fg:w="1"/><text x="18.3226%" y="223.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="18.0726%" y="197" width="0.0286%" height="15" fill="rgb(86,198,198)" fg:x="632" fg:w="1"/><text x="18.3226%" y="207.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.03%)</title><rect x="18.0726%" y="181" width="0.0286%" height="15" fill="rgb(216,116,0)" fg:x="632" fg:w="1"/><text x="18.3226%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.03%)</title><rect x="18.0726%" y="165" width="0.0286%" height="15" fill="rgb(240,140,0)" fg:x="632" fg:w="1"/><text x="18.3226%" y="175.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.03%)</title><rect x="18.0726%" y="149" width="0.0286%" height="15" fill="rgb(92,204,204)" fg:x="632" fg:w="1"/><text x="18.3226%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.03%)</title><rect x="18.0726%" y="133" width="0.0286%" height="15" fill="rgb(200,100,0)" fg:x="632" fg:w="1"/><text x="18.3226%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="18.0726%" y="117" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="632" fg:w="1"/><text x="18.3226%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.03%)</title><rect x="18.0726%" y="101" width="0.0286%" height="15" fill="rgb(248,148,0)" fg:x="632" fg:w="1"/><text x="18.3226%" y="111.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.03%)</title><rect x="18.0726%" y="85" width="0.0286%" height="15" fill="rgb(80,193,193)" fg:x="632" fg:w="1"/><text x="18.3226%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="18.0726%" y="69" width="0.0286%" height="15" fill="rgb(220,120,0)" fg:x="632" fg:w="1"/><text x="18.3226%" y="79.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="18.0726%" y="53" width="0.0286%" height="15" fill="rgb(86,198,198)" fg:x="632" fg:w="1"/><text x="18.3226%" y="63.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::combine_with (1 samples, 0.03%)</title><rect x="18.1012%" y="309" width="0.0286%" height="15" fill="rgb(71,185,185)" fg:x="633" fg:w="1"/><text x="18.3512%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="18.1012%" y="293" width="0.0286%" height="15" fill="rgb(243,143,0)" fg:x="633" fg:w="1"/><text x="18.3512%" y="303.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="18.1012%" y="277" width="0.0286%" height="15" fill="rgb(79,191,191)" fg:x="633" fg:w="1"/><text x="18.3512%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="18.1012%" y="261" width="0.0286%" height="15" fill="rgb(72,185,185)" fg:x="633" fg:w="1"/><text x="18.3512%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="18.1012%" y="245" width="0.0286%" height="15" fill="rgb(100,211,211)" fg:x="633" fg:w="1"/><text x="18.3512%" y="255.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.03%)</title><rect x="18.1012%" y="229" width="0.0286%" height="15" fill="rgb(57,171,171)" fg:x="633" fg:w="1"/><text x="18.3512%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="18.1012%" y="213" width="0.0286%" height="15" fill="rgb(64,178,178)" fg:x="633" fg:w="1"/><text x="18.3512%" y="223.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.03%)</title><rect x="18.1012%" y="197" width="0.0286%" height="15" fill="rgb(106,216,216)" fg:x="633" fg:w="1"/><text x="18.3512%" y="207.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (1 samples, 0.03%)</title><rect x="18.1298%" y="293" width="0.0286%" height="15" fill="rgb(102,213,213)" fg:x="634" fg:w="1"/><text x="18.3798%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (1 samples, 0.03%)</title><rect x="18.1298%" y="277" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="18.1298%" y="261" width="0.0286%" height="15" fill="rgb(210,110,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="18.1298%" y="245" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="18.1298%" y="229" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="18.1298%" y="213" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="18.1298%" y="197" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="18.1298%" y="181" width="0.0286%" height="15" fill="rgb(224,124,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="18.1298%" y="165" width="0.0286%" height="15" fill="rgb(215,115,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="18.1298%" y="149" width="0.0286%" height="15" fill="rgb(233,133,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="18.1298%" y="133" width="0.0286%" height="15" fill="rgb(232,132,0)" fg:x="634" fg:w="1"/><text x="18.3798%" y="143.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="18.1298%" y="117" width="0.0286%" height="15" fill="rgb(213,213,63)" fg:x="634" fg:w="1"/><text x="18.3798%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.1298%" y="101" width="0.0286%" height="15" fill="rgb(187,187,54)" fg:x="634" fg:w="1"/><text x="18.3798%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.1298%" y="85" width="0.0286%" height="15" fill="rgb(207,207,61)" fg:x="634" fg:w="1"/><text x="18.3798%" y="95.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.1298%" y="69" width="0.0286%" height="15" fill="rgb(194,194,56)" fg:x="634" fg:w="1"/><text x="18.3798%" y="79.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.03%)</title><rect x="18.1584%" y="293" width="0.0286%" height="15" fill="rgb(219,119,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="18.1584%" y="277" width="0.0286%" height="15" fill="rgb(240,140,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="18.1584%" y="261" width="0.0286%" height="15" fill="rgb(192,92,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="18.1584%" y="245" width="0.0286%" height="15" fill="rgb(77,190,190)" fg:x="635" fg:w="1"/><text x="18.4084%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="18.1584%" y="229" width="0.0286%" height="15" fill="rgb(252,152,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="18.1584%" y="213" width="0.0286%" height="15" fill="rgb(204,104,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="18.1584%" y="197" width="0.0286%" height="15" fill="rgb(234,134,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="18.1584%" y="181" width="0.0286%" height="15" fill="rgb(196,96,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="18.1584%" y="165" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="18.1584%" y="149" width="0.0286%" height="15" fill="rgb(202,102,0)" fg:x="635" fg:w="1"/><text x="18.4084%" y="159.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="18.1584%" y="133" width="0.0286%" height="15" fill="rgb(199,199,59)" fg:x="635" fg:w="1"/><text x="18.4084%" y="143.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="18.2156%" y="229" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="637" fg:w="1"/><text x="18.4656%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="18.2156%" y="213" width="0.0286%" height="15" fill="rgb(199,99,0)" fg:x="637" fg:w="1"/><text x="18.4656%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="18.2156%" y="197" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="637" fg:w="1"/><text x="18.4656%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="18.2156%" y="181" width="0.0286%" height="15" fill="rgb(233,133,0)" fg:x="637" fg:w="1"/><text x="18.4656%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="18.2156%" y="165" width="0.0286%" height="15" fill="rgb(208,108,0)" fg:x="637" fg:w="1"/><text x="18.4656%" y="175.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.03%)</title><rect x="18.2442%" y="165" width="0.0286%" height="15" fill="rgb(235,135,0)" fg:x="638" fg:w="1"/><text x="18.4942%" y="175.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="18.2442%" y="149" width="0.0286%" height="15" fill="rgb(86,198,198)" fg:x="638" fg:w="1"/><text x="18.4942%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.03%)</title><rect x="18.2442%" y="133" width="0.0286%" height="15" fill="rgb(254,154,0)" fg:x="638" fg:w="1"/><text x="18.4942%" y="143.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.03%)</title><rect x="18.2442%" y="117" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="638" fg:w="1"/><text x="18.4942%" y="127.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="18.2442%" y="101" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="638" fg:w="1"/><text x="18.4942%" y="111.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.2442%" y="85" width="0.0286%" height="15" fill="rgb(194,94,0)" fg:x="638" fg:w="1"/><text x="18.4942%" y="95.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.2442%" y="69" width="0.0286%" height="15" fill="rgb(200,100,0)" fg:x="638" fg:w="1"/><text x="18.4942%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.2442%" y="53" width="0.0286%" height="15" fill="rgb(241,141,0)" fg:x="638" fg:w="1"/><text x="18.4942%" y="63.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.03%)</title><rect x="18.2442%" y="37" width="0.0286%" height="15" fill="rgb(201,101,0)" fg:x="638" fg:w="1"/><text x="18.4942%" y="47.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.09%)</title><rect x="18.2156%" y="261" width="0.0858%" height="15" fill="rgb(78,191,191)" fg:x="637" fg:w="3"/><text x="18.4656%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.09%)</title><rect x="18.2156%" y="245" width="0.0858%" height="15" fill="rgb(245,145,0)" fg:x="637" fg:w="3"/><text x="18.4656%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.06%)</title><rect x="18.2442%" y="229" width="0.0572%" height="15" fill="rgb(219,119,0)" fg:x="638" fg:w="2"/><text x="18.4942%" y="239.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (2 samples, 0.06%)</title><rect x="18.2442%" y="213" width="0.0572%" height="15" fill="rgb(108,218,218)" fg:x="638" fg:w="2"/><text x="18.4942%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.06%)</title><rect x="18.2442%" y="197" width="0.0572%" height="15" fill="rgb(254,154,0)" fg:x="638" fg:w="2"/><text x="18.4942%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.06%)</title><rect x="18.2442%" y="181" width="0.0572%" height="15" fill="rgb(246,146,0)" fg:x="638" fg:w="2"/><text x="18.4942%" y="191.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.03%)</title><rect x="18.2728%" y="165" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="639" fg:w="1"/><text x="18.5228%" y="175.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="18.2728%" y="149" width="0.0286%" height="15" fill="rgb(245,145,0)" fg:x="639" fg:w="1"/><text x="18.5228%" y="159.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.2728%" y="133" width="0.0286%" height="15" fill="rgb(216,116,0)" fg:x="639" fg:w="1"/><text x="18.5228%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.2728%" y="117" width="0.0286%" height="15" fill="rgb(201,101,0)" fg:x="639" fg:w="1"/><text x="18.5228%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.2728%" y="101" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="639" fg:w="1"/><text x="18.5228%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="18.2728%" y="85" width="0.0286%" height="15" fill="rgb(231,131,0)" fg:x="639" fg:w="1"/><text x="18.5228%" y="95.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.14%)</title><rect x="18.1870%" y="277" width="0.1430%" height="15" fill="rgb(57,172,172)" fg:x="636" fg:w="5"/><text x="18.4370%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="18.3014%" y="261" width="0.0286%" height="15" fill="rgb(69,182,182)" fg:x="640" fg:w="1"/><text x="18.5514%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.03%)</title><rect x="18.3014%" y="245" width="0.0286%" height="15" fill="rgb(106,216,216)" fg:x="640" fg:w="1"/><text x="18.5514%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="18.3014%" y="229" width="0.0286%" height="15" fill="rgb(79,191,191)" fg:x="640" fg:w="1"/><text x="18.5514%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="18.3014%" y="213" width="0.0286%" height="15" fill="rgb(196,96,0)" fg:x="640" fg:w="1"/><text x="18.5514%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="18.3014%" y="197" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="640" fg:w="1"/><text x="18.5514%" y="207.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::activate (10 samples, 0.29%)</title><rect x="18.0726%" y="549" width="0.2860%" height="15" fill="rgb(94,205,205)" fg:x="632" fg:w="10"/><text x="18.3226%" y="559.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_dataset (10 samples, 0.29%)</title><rect x="18.0726%" y="533" width="0.2860%" height="15" fill="rgb(80,193,193)" fg:x="632" fg:w="10"/><text x="18.3226%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.29%)</title><rect x="18.0726%" y="517" width="0.2860%" height="15" fill="rgb(213,113,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.29%)</title><rect x="18.0726%" y="501" width="0.2860%" height="15" fill="rgb(201,101,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.29%)</title><rect x="18.0726%" y="485" width="0.2860%" height="15" fill="rgb(223,123,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.29%)</title><rect x="18.0726%" y="469" width="0.2860%" height="15" fill="rgb(236,136,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.29%)</title><rect x="18.0726%" y="453" width="0.2860%" height="15" fill="rgb(222,122,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (10 samples, 0.29%)</title><rect x="18.0726%" y="437" width="0.2860%" height="15" fill="rgb(192,92,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.29%)</title><rect x="18.0726%" y="421" width="0.2860%" height="15" fill="rgb(199,99,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.29%)</title><rect x="18.0726%" y="405" width="0.2860%" height="15" fill="rgb(215,115,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.29%)</title><rect x="18.0726%" y="389" width="0.2860%" height="15" fill="rgb(248,148,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10 samples, 0.29%)</title><rect x="18.0726%" y="373" width="0.2860%" height="15" fill="rgb(234,134,0)" fg:x="632" fg:w="10"/><text x="18.3226%" y="383.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_dataset::_{{closure}} (10 samples, 0.29%)</title><rect x="18.0726%" y="357" width="0.2860%" height="15" fill="rgb(100,211,211)" fg:x="632" fg:w="10"/><text x="18.3226%" y="367.50"></text></g><g><title>alc::text_processor::dataset::FrequencyDataset&lt;u32&gt;::try_from_dir (10 samples, 0.29%)</title><rect x="18.0726%" y="341" width="0.2860%" height="15" fill="rgb(79,191,191)" fg:x="632" fg:w="10"/><text x="18.3226%" y="351.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_file (9 samples, 0.26%)</title><rect x="18.1012%" y="325" width="0.2574%" height="15" fill="rgb(68,181,181)" fg:x="633" fg:w="9"/><text x="18.3512%" y="335.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_string (8 samples, 0.23%)</title><rect x="18.1298%" y="309" width="0.2288%" height="15" fill="rgb(57,171,171)" fg:x="634" fg:w="8"/><text x="18.3798%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.17%)</title><rect x="18.1870%" y="293" width="0.1716%" height="15" fill="rgb(219,119,0)" fg:x="636" fg:w="6"/><text x="18.4370%" y="303.50"></text></g><g><title>std::collections::hash::map::map_entry (1 samples, 0.03%)</title><rect x="18.3300%" y="277" width="0.0286%" height="15" fill="rgb(252,152,0)" fg:x="641" fg:w="1"/><text x="18.5800%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="18.3586%" y="517" width="0.0572%" height="15" fill="rgb(240,140,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.06%)</title><rect x="18.3586%" y="501" width="0.0572%" height="15" fill="rgb(196,96,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.06%)</title><rect x="18.3586%" y="485" width="0.0572%" height="15" fill="rgb(203,103,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.06%)</title><rect x="18.3586%" y="469" width="0.0572%" height="15" fill="rgb(101,211,211)" fg:x="642" fg:w="2"/><text x="18.6086%" y="479.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="18.3586%" y="453" width="0.0572%" height="15" fill="rgb(89,201,201)" fg:x="642" fg:w="2"/><text x="18.6086%" y="463.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="18.3586%" y="437" width="0.0572%" height="15" fill="rgb(89,200,200)" fg:x="642" fg:w="2"/><text x="18.6086%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="18.3586%" y="421" width="0.0572%" height="15" fill="rgb(247,147,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.06%)</title><rect x="18.3586%" y="405" width="0.0572%" height="15" fill="rgb(231,131,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.06%)</title><rect x="18.3586%" y="389" width="0.0572%" height="15" fill="rgb(226,126,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.06%)</title><rect x="18.3586%" y="373" width="0.0572%" height="15" fill="rgb(72,185,185)" fg:x="642" fg:w="2"/><text x="18.6086%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="18.3586%" y="357" width="0.0572%" height="15" fill="rgb(254,154,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="18.3586%" y="341" width="0.0572%" height="15" fill="rgb(239,139,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.06%)</title><rect x="18.3586%" y="325" width="0.0572%" height="15" fill="rgb(237,137,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.06%)</title><rect x="18.3586%" y="309" width="0.0572%" height="15" fill="rgb(238,138,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="18.3586%" y="293" width="0.0572%" height="15" fill="rgb(230,130,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="18.3586%" y="277" width="0.0572%" height="15" fill="rgb(242,142,0)" fg:x="642" fg:w="2"/><text x="18.6086%" y="287.50"></text></g><g><title>malloc (2 samples, 0.06%)</title><rect x="18.3586%" y="261" width="0.0572%" height="15" fill="rgb(190,190,55)" fg:x="642" fg:w="2"/><text x="18.6086%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="18.3586%" y="245" width="0.0572%" height="15" fill="rgb(226,226,68)" fg:x="642" fg:w="2"/><text x="18.6086%" y="255.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="18.3586%" y="229" width="0.0572%" height="15" fill="rgb(220,220,66)" fg:x="642" fg:w="2"/><text x="18.6086%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.3872%" y="213" width="0.0286%" height="15" fill="rgb(194,194,56)" fg:x="643" fg:w="1"/><text x="18.6372%" y="223.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="18.4158%" y="181" width="0.0286%" height="15" fill="rgb(177,177,50)" fg:x="644" fg:w="1"/><text x="18.6658%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="18.4158%" y="165" width="0.0286%" height="15" fill="rgb(244,144,0)" fg:x="644" fg:w="1"/><text x="18.6658%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.09%)</title><rect x="18.4158%" y="277" width="0.0858%" height="15" fill="rgb(200,100,0)" fg:x="644" fg:w="3"/><text x="18.6658%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.09%)</title><rect x="18.4158%" y="261" width="0.0858%" height="15" fill="rgb(192,92,0)" fg:x="644" fg:w="3"/><text x="18.6658%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.09%)</title><rect x="18.4158%" y="245" width="0.0858%" height="15" fill="rgb(220,120,0)" fg:x="644" fg:w="3"/><text x="18.6658%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.09%)</title><rect x="18.4158%" y="229" width="0.0858%" height="15" fill="rgb(230,130,0)" fg:x="644" fg:w="3"/><text x="18.6658%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.09%)</title><rect x="18.4158%" y="213" width="0.0858%" height="15" fill="rgb(193,93,0)" fg:x="644" fg:w="3"/><text x="18.6658%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.09%)</title><rect x="18.4158%" y="197" width="0.0858%" height="15" fill="rgb(220,120,0)" fg:x="644" fg:w="3"/><text x="18.6658%" y="207.50"></text></g><g><title>malloc (2 samples, 0.06%)</title><rect x="18.4444%" y="181" width="0.0572%" height="15" fill="rgb(207,207,61)" fg:x="645" fg:w="2"/><text x="18.6944%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="18.4444%" y="165" width="0.0572%" height="15" fill="rgb(224,224,67)" fg:x="645" fg:w="2"/><text x="18.6944%" y="175.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (6 samples, 0.17%)</title><rect x="18.3586%" y="533" width="0.1716%" height="15" fill="rgb(70,184,184)" fg:x="642" fg:w="6"/><text x="18.6086%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="18.4158%" y="517" width="0.1144%" height="15" fill="rgb(235,135,0)" fg:x="644" fg:w="4"/><text x="18.6658%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="18.4158%" y="501" width="0.1144%" height="15" fill="rgb(53,168,168)" fg:x="644" fg:w="4"/><text x="18.6658%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="18.4158%" y="485" width="0.1144%" height="15" fill="rgb(82,194,194)" fg:x="644" fg:w="4"/><text x="18.6658%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4 samples, 0.11%)</title><rect x="18.4158%" y="469" width="0.1144%" height="15" fill="rgb(88,200,200)" fg:x="644" fg:w="4"/><text x="18.6658%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4 samples, 0.11%)</title><rect x="18.4158%" y="453" width="0.1144%" height="15" fill="rgb(96,207,207)" fg:x="644" fg:w="4"/><text x="18.6658%" y="463.50"></text></g><g><title>core::clone::Clone::clone (4 samples, 0.11%)</title><rect x="18.4158%" y="437" width="0.1144%" height="15" fill="rgb(240,140,0)" fg:x="644" fg:w="4"/><text x="18.6658%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="18.4158%" y="421" width="0.1144%" height="15" fill="rgb(209,109,0)" fg:x="644" fg:w="4"/><text x="18.6658%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.11%)</title><rect x="18.4158%" y="405" width="0.1144%" height="15" fill="rgb(228,128,0)" fg:x="644" fg:w="4"/><text x="18.6658%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.11%)</title><rect x="18.4158%" y="389" width="0.1144%" height="15" fill="rgb(208,108,0)" fg:x="644" fg:w="4"/><text x="18.6658%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.11%)</title><rect x="18.4158%" y="373" width="0.1144%" height="15" fill="rgb(99,210,210)" fg:x="644" fg:w="4"/><text x="18.6658%" y="383.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="18.4158%" y="357" width="0.1144%" height="15" fill="rgb(88,200,200)" fg:x="644" fg:w="4"/><text x="18.6658%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="18.4158%" y="341" width="0.1144%" height="15" fill="rgb(198,98,0)" fg:x="644" fg:w="4"/><text x="18.6658%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.11%)</title><rect x="18.4158%" y="325" width="0.1144%" height="15" fill="rgb(243,143,0)" fg:x="644" fg:w="4"/><text x="18.6658%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.11%)</title><rect x="18.4158%" y="309" width="0.1144%" height="15" fill="rgb(200,100,0)" fg:x="644" fg:w="4"/><text x="18.6658%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.11%)</title><rect x="18.4158%" y="293" width="0.1144%" height="15" fill="rgb(73,186,186)" fg:x="644" fg:w="4"/><text x="18.6658%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="18.5016%" y="277" width="0.0286%" height="15" fill="rgb(208,108,0)" fg:x="647" fg:w="1"/><text x="18.7516%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="18.5016%" y="261" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="647" fg:w="1"/><text x="18.7516%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.5016%" y="245" width="0.0286%" height="15" fill="rgb(191,191,55)" fg:x="647" fg:w="1"/><text x="18.7516%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.03%)</title><rect x="18.5302%" y="405" width="0.0286%" height="15" fill="rgb(231,131,0)" fg:x="648" fg:w="1"/><text x="18.7802%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="18.5302%" y="389" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="648" fg:w="1"/><text x="18.7802%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="18.5302%" y="501" width="0.0572%" height="15" fill="rgb(248,148,0)" fg:x="648" fg:w="2"/><text x="18.7802%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="18.5302%" y="485" width="0.0572%" height="15" fill="rgb(64,178,178)" fg:x="648" fg:w="2"/><text x="18.7802%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="18.5302%" y="469" width="0.0572%" height="15" fill="rgb(69,183,183)" fg:x="648" fg:w="2"/><text x="18.7802%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.06%)</title><rect x="18.5302%" y="453" width="0.0572%" height="15" fill="rgb(55,170,170)" fg:x="648" fg:w="2"/><text x="18.7802%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.06%)</title><rect x="18.5302%" y="437" width="0.0572%" height="15" fill="rgb(52,167,167)" fg:x="648" fg:w="2"/><text x="18.7802%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.06%)</title><rect x="18.5302%" y="421" width="0.0572%" height="15" fill="rgb(76,189,189)" fg:x="648" fg:w="2"/><text x="18.7802%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="18.5588%" y="405" width="0.0286%" height="15" fill="rgb(56,171,171)" fg:x="649" fg:w="1"/><text x="18.8088%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.03%)</title><rect x="18.5588%" y="389" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="649" fg:w="1"/><text x="18.8088%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="18.5588%" y="373" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="649" fg:w="1"/><text x="18.8088%" y="383.50"></text></g><g><title>__rust_realloc (1 samples, 0.03%)</title><rect x="18.6160%" y="373" width="0.0286%" height="15" fill="rgb(226,226,68)" fg:x="651" fg:w="1"/><text x="18.8660%" y="383.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (3 samples, 0.09%)</title><rect x="18.5874%" y="501" width="0.0858%" height="15" fill="rgb(58,172,172)" fg:x="650" fg:w="3"/><text x="18.8374%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.09%)</title><rect x="18.5874%" y="485" width="0.0858%" height="15" fill="rgb(226,126,0)" fg:x="650" fg:w="3"/><text x="18.8374%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.09%)</title><rect x="18.5874%" y="469" width="0.0858%" height="15" fill="rgb(228,128,0)" fg:x="650" fg:w="3"/><text x="18.8374%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.09%)</title><rect x="18.5874%" y="453" width="0.0858%" height="15" fill="rgb(209,109,0)" fg:x="650" fg:w="3"/><text x="18.8374%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.09%)</title><rect x="18.5874%" y="437" width="0.0858%" height="15" fill="rgb(211,111,0)" fg:x="650" fg:w="3"/><text x="18.8374%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.06%)</title><rect x="18.6160%" y="421" width="0.0572%" height="15" fill="rgb(208,108,0)" fg:x="651" fg:w="2"/><text x="18.8660%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.06%)</title><rect x="18.6160%" y="405" width="0.0572%" height="15" fill="rgb(235,135,0)" fg:x="651" fg:w="2"/><text x="18.8660%" y="415.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.06%)</title><rect x="18.6160%" y="389" width="0.0572%" height="15" fill="rgb(235,135,0)" fg:x="651" fg:w="2"/><text x="18.8660%" y="399.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="18.6446%" y="373" width="0.0286%" height="15" fill="rgb(214,214,64)" fg:x="652" fg:w="1"/><text x="18.8946%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.6446%" y="357" width="0.0286%" height="15" fill="rgb(227,227,69)" fg:x="652" fg:w="1"/><text x="18.8946%" y="367.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::randomize (6 samples, 0.17%)</title><rect x="18.5302%" y="533" width="0.1716%" height="15" fill="rgb(104,215,215)" fg:x="648" fg:w="6"/><text x="18.7802%" y="543.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (6 samples, 0.17%)</title><rect x="18.5302%" y="517" width="0.1716%" height="15" fill="rgb(61,175,175)" fg:x="648" fg:w="6"/><text x="18.7802%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="501" width="0.0286%" height="15" fill="rgb(235,135,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="485" width="0.0286%" height="15" fill="rgb(211,111,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="469" width="0.0286%" height="15" fill="rgb(209,109,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="18.6731%" y="453" width="0.0286%" height="15" fill="rgb(72,185,185)" fg:x="653" fg:w="1"/><text x="18.9231%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.03%)</title><rect x="18.6731%" y="437" width="0.0286%" height="15" fill="rgb(79,192,192)" fg:x="653" fg:w="1"/><text x="18.9231%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.03%)</title><rect x="18.6731%" y="421" width="0.0286%" height="15" fill="rgb(66,179,179)" fg:x="653" fg:w="1"/><text x="18.9231%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.03%)</title><rect x="18.6731%" y="405" width="0.0286%" height="15" fill="rgb(63,177,177)" fg:x="653" fg:w="1"/><text x="18.9231%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.03%)</title><rect x="18.6731%" y="389" width="0.0286%" height="15" fill="rgb(206,106,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="373" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="357" width="0.0286%" height="15" fill="rgb(233,133,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="18.6731%" y="341" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="325" width="0.0286%" height="15" fill="rgb(219,119,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="309" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="293" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="18.6731%" y="277" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="18.6731%" y="261" width="0.0286%" height="15" fill="rgb(227,127,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="18.6731%" y="245" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="18.6731%" y="229" width="0.0286%" height="15" fill="rgb(190,90,0)" fg:x="653" fg:w="1"/><text x="18.9231%" y="239.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="18.6731%" y="213" width="0.0286%" height="15" fill="rgb(195,195,57)" fg:x="653" fg:w="1"/><text x="18.9231%" y="223.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (2 samples, 0.06%)</title><rect x="18.7017%" y="485" width="0.0572%" height="15" fill="rgb(78,191,191)" fg:x="654" fg:w="2"/><text x="18.9517%" y="495.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (2 samples, 0.06%)</title><rect x="18.7017%" y="469" width="0.0572%" height="15" fill="rgb(62,176,176)" fg:x="654" fg:w="2"/><text x="18.9517%" y="479.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="18.7303%" y="453" width="0.0286%" height="15" fill="rgb(91,203,203)" fg:x="655" fg:w="1"/><text x="18.9803%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="18.7303%" y="437" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="655" fg:w="1"/><text x="18.9803%" y="447.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get::_{{closure}} (1 samples, 0.03%)</title><rect x="18.7303%" y="421" width="0.0286%" height="15" fill="rgb(65,179,179)" fg:x="655" fg:w="1"/><text x="18.9803%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="18.7303%" y="405" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="655" fg:w="1"/><text x="18.9803%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="18.7303%" y="389" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="655" fg:w="1"/><text x="18.9803%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="18.7303%" y="373" width="0.0286%" height="15" fill="rgb(62,176,176)" fg:x="655" fg:w="1"/><text x="18.9803%" y="383.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (4 samples, 0.11%)</title><rect x="18.7017%" y="501" width="0.1144%" height="15" fill="rgb(83,195,195)" fg:x="654" fg:w="4"/><text x="18.9517%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.06%)</title><rect x="18.7589%" y="485" width="0.0572%" height="15" fill="rgb(243,143,0)" fg:x="656" fg:w="2"/><text x="19.0089%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="18.7589%" y="469" width="0.0572%" height="15" fill="rgb(229,129,0)" fg:x="656" fg:w="2"/><text x="19.0089%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (2 samples, 0.06%)</title><rect x="18.7589%" y="453" width="0.0572%" height="15" fill="rgb(196,96,0)" fg:x="656" fg:w="2"/><text x="19.0089%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="18.7589%" y="437" width="0.0572%" height="15" fill="rgb(53,167,167)" fg:x="656" fg:w="2"/><text x="19.0089%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.06%)</title><rect x="18.7589%" y="421" width="0.0572%" height="15" fill="rgb(253,153,0)" fg:x="656" fg:w="2"/><text x="19.0089%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="18.7589%" y="405" width="0.0572%" height="15" fill="rgb(224,124,0)" fg:x="656" fg:w="2"/><text x="19.0089%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.06%)</title><rect x="18.7589%" y="389" width="0.0572%" height="15" fill="rgb(209,109,0)" fg:x="656" fg:w="2"/><text x="19.0089%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.06%)</title><rect x="18.7589%" y="373" width="0.0572%" height="15" fill="rgb(225,125,0)" fg:x="656" fg:w="2"/><text x="19.0089%" y="383.50"></text></g><g><title>cfree (2 samples, 0.06%)</title><rect x="18.7589%" y="357" width="0.0572%" height="15" fill="rgb(198,198,58)" fg:x="656" fg:w="2"/><text x="19.0089%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="18.7589%" y="341" width="0.0572%" height="15" fill="rgb(199,199,58)" fg:x="656" fg:w="2"/><text x="19.0089%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.7875%" y="325" width="0.0286%" height="15" fill="rgb(199,199,59)" fg:x="657" fg:w="1"/><text x="19.0375%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.7875%" y="309" width="0.0286%" height="15" fill="rgb(221,221,66)" fg:x="657" fg:w="1"/><text x="19.0375%" y="319.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::ops::index::Index&lt;alc::text_processor::ngram::Ngram&gt;&gt;::index (2 samples, 0.06%)</title><rect x="18.8161%" y="501" width="0.0572%" height="15" fill="rgb(106,217,217)" fg:x="658" fg:w="2"/><text x="19.0661%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (2 samples, 0.06%)</title><rect x="18.8161%" y="485" width="0.0572%" height="15" fill="rgb(231,131,0)" fg:x="658" fg:w="2"/><text x="19.0661%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.06%)</title><rect x="18.8161%" y="469" width="0.0572%" height="15" fill="rgb(193,93,0)" fg:x="658" fg:w="2"/><text x="19.0661%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.06%)</title><rect x="18.8161%" y="453" width="0.0572%" height="15" fill="rgb(72,185,185)" fg:x="658" fg:w="2"/><text x="19.0661%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.06%)</title><rect x="18.8161%" y="437" width="0.0572%" height="15" fill="rgb(75,188,188)" fg:x="658" fg:w="2"/><text x="19.0661%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.06%)</title><rect x="18.8161%" y="421" width="0.0572%" height="15" fill="rgb(76,188,188)" fg:x="658" fg:w="2"/><text x="19.0661%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.06%)</title><rect x="18.8161%" y="405" width="0.0572%" height="15" fill="rgb(237,137,0)" fg:x="658" fg:w="2"/><text x="19.0661%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.06%)</title><rect x="18.8161%" y="389" width="0.0572%" height="15" fill="rgb(200,100,0)" fg:x="658" fg:w="2"/><text x="19.0661%" y="399.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="18.8447%" y="373" width="0.0286%" height="15" fill="rgb(97,208,208)" fg:x="659" fg:w="1"/><text x="19.0947%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="18.8447%" y="357" width="0.0286%" height="15" fill="rgb(240,140,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.03%)</title><rect x="18.8447%" y="341" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="351.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.03%)</title><rect x="18.8447%" y="325" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="18.8447%" y="309" width="0.0286%" height="15" fill="rgb(62,176,176)" fg:x="659" fg:w="1"/><text x="19.0947%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.03%)</title><rect x="18.8447%" y="293" width="0.0286%" height="15" fill="rgb(196,96,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="303.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.03%)</title><rect x="18.8447%" y="277" width="0.0286%" height="15" fill="rgb(192,92,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="18.8447%" y="261" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.8447%" y="245" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.8447%" y="229" width="0.0286%" height="15" fill="rgb(210,110,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="18.8447%" y="213" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="659" fg:w="1"/><text x="19.0947%" y="223.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="18.8733%" y="501" width="0.0286%" height="15" fill="rgb(73,186,186)" fg:x="660" fg:w="1"/><text x="19.1233%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="18.8733%" y="485" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="660" fg:w="1"/><text x="19.1233%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="18.8733%" y="469" width="0.0286%" height="15" fill="rgb(202,102,0)" fg:x="660" fg:w="1"/><text x="19.1233%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="18.8733%" y="453" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="660" fg:w="1"/><text x="19.1233%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="18.8733%" y="437" width="0.0286%" height="15" fill="rgb(102,212,212)" fg:x="660" fg:w="1"/><text x="19.1233%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="18.8733%" y="421" width="0.0286%" height="15" fill="rgb(215,115,0)" fg:x="660" fg:w="1"/><text x="19.1233%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="18.8733%" y="405" width="0.0286%" height="15" fill="rgb(241,141,0)" fg:x="660" fg:w="1"/><text x="19.1233%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.8733%" y="389" width="0.0286%" height="15" fill="rgb(209,209,62)" fg:x="660" fg:w="1"/><text x="19.1233%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="19.0735%" y="341" width="0.0572%" height="15" fill="rgb(207,107,0)" fg:x="667" fg:w="2"/><text x="19.3235%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="19.0735%" y="325" width="0.0572%" height="15" fill="rgb(220,120,0)" fg:x="667" fg:w="2"/><text x="19.3235%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.06%)</title><rect x="19.0735%" y="309" width="0.0572%" height="15" fill="rgb(223,123,0)" fg:x="667" fg:w="2"/><text x="19.3235%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.06%)</title><rect x="19.0735%" y="293" width="0.0572%" height="15" fill="rgb(197,97,0)" fg:x="667" fg:w="2"/><text x="19.3235%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="19.0735%" y="277" width="0.0572%" height="15" fill="rgb(216,116,0)" fg:x="667" fg:w="2"/><text x="19.3235%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="19.0735%" y="261" width="0.0572%" height="15" fill="rgb(249,149,0)" fg:x="667" fg:w="2"/><text x="19.3235%" y="271.50"></text></g><g><title>malloc (2 samples, 0.06%)</title><rect x="19.0735%" y="245" width="0.0572%" height="15" fill="rgb(191,191,56)" fg:x="667" fg:w="2"/><text x="19.3235%" y="255.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (3 samples, 0.09%)</title><rect x="19.0735%" y="421" width="0.0858%" height="15" fill="rgb(87,199,199)" fg:x="667" fg:w="3"/><text x="19.3235%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.09%)</title><rect x="19.0735%" y="405" width="0.0858%" height="15" fill="rgb(222,122,0)" fg:x="667" fg:w="3"/><text x="19.3235%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.09%)</title><rect x="19.0735%" y="389" width="0.0858%" height="15" fill="rgb(191,91,0)" fg:x="667" fg:w="3"/><text x="19.3235%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.09%)</title><rect x="19.0735%" y="373" width="0.0858%" height="15" fill="rgb(235,135,0)" fg:x="667" fg:w="3"/><text x="19.3235%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.09%)</title><rect x="19.0735%" y="357" width="0.0858%" height="15" fill="rgb(68,182,182)" fg:x="667" fg:w="3"/><text x="19.3235%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="19.1307%" y="341" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="669" fg:w="1"/><text x="19.3807%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="19.1307%" y="325" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="669" fg:w="1"/><text x="19.3807%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="19.1307%" y="309" width="0.0286%" height="15" fill="rgb(175,175,50)" fg:x="669" fg:w="1"/><text x="19.3807%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="19.1593%" y="421" width="0.0286%" height="15" fill="rgb(233,133,0)" fg:x="670" fg:w="1"/><text x="19.4093%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.17%)</title><rect x="19.0449%" y="485" width="0.1716%" height="15" fill="rgb(198,98,0)" fg:x="666" fg:w="6"/><text x="19.2949%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.17%)</title><rect x="19.0449%" y="469" width="0.1716%" height="15" fill="rgb(216,116,0)" fg:x="666" fg:w="6"/><text x="19.2949%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.17%)</title><rect x="19.0449%" y="453" width="0.1716%" height="15" fill="rgb(221,121,0)" fg:x="666" fg:w="6"/><text x="19.2949%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.17%)</title><rect x="19.0449%" y="437" width="0.1716%" height="15" fill="rgb(50,165,165)" fg:x="666" fg:w="6"/><text x="19.2949%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.03%)</title><rect x="19.1879%" y="421" width="0.0286%" height="15" fill="rgb(248,148,0)" fg:x="671" fg:w="1"/><text x="19.4379%" y="431.50"></text></g><g><title>__rdl_realloc (1 samples, 0.03%)</title><rect x="19.2451%" y="309" width="0.0286%" height="15" fill="rgb(225,225,68)" fg:x="673" fg:w="1"/><text x="19.4951%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.03%)</title><rect x="19.2451%" y="293" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="673" fg:w="1"/><text x="19.4951%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.31%)</title><rect x="19.2165%" y="437" width="0.3146%" height="15" fill="rgb(236,136,0)" fg:x="672" fg:w="11"/><text x="19.4665%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.31%)</title><rect x="19.2165%" y="421" width="0.3146%" height="15" fill="rgb(242,142,0)" fg:x="672" fg:w="11"/><text x="19.4665%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.31%)</title><rect x="19.2165%" y="405" width="0.3146%" height="15" fill="rgb(207,107,0)" fg:x="672" fg:w="11"/><text x="19.4665%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.31%)</title><rect x="19.2165%" y="389" width="0.3146%" height="15" fill="rgb(211,111,0)" fg:x="672" fg:w="11"/><text x="19.4665%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.31%)</title><rect x="19.2165%" y="373" width="0.3146%" height="15" fill="rgb(219,119,0)" fg:x="672" fg:w="11"/><text x="19.4665%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.29%)</title><rect x="19.2451%" y="357" width="0.2860%" height="15" fill="rgb(245,145,0)" fg:x="673" fg:w="10"/><text x="19.4951%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.29%)</title><rect x="19.2451%" y="341" width="0.2860%" height="15" fill="rgb(233,133,0)" fg:x="673" fg:w="10"/><text x="19.4951%" y="351.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.29%)</title><rect x="19.2451%" y="325" width="0.2860%" height="15" fill="rgb(222,122,0)" fg:x="673" fg:w="10"/><text x="19.4951%" y="335.50"></text></g><g><title>realloc (9 samples, 0.26%)</title><rect x="19.2737%" y="309" width="0.2574%" height="15" fill="rgb(209,209,62)" fg:x="674" fg:w="9"/><text x="19.5237%" y="319.50"></text></g><g><title>[libc.so.6] (9 samples, 0.26%)</title><rect x="19.2737%" y="293" width="0.2574%" height="15" fill="rgb(201,201,59)" fg:x="674" fg:w="9"/><text x="19.5237%" y="303.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="19.3023%" y="277" width="0.2288%" height="15" fill="rgb(198,198,58)" fg:x="675" fg:w="8"/><text x="19.5523%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="19.5024%" y="261" width="0.0286%" height="15" fill="rgb(217,217,65)" fg:x="682" fg:w="1"/><text x="19.7524%" y="271.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (12 samples, 0.34%)</title><rect x="19.2165%" y="485" width="0.3432%" height="15" fill="rgb(69,182,182)" fg:x="672" fg:w="12"/><text x="19.4665%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (12 samples, 0.34%)</title><rect x="19.2165%" y="469" width="0.3432%" height="15" fill="rgb(209,109,0)" fg:x="672" fg:w="12"/><text x="19.4665%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.34%)</title><rect x="19.2165%" y="453" width="0.3432%" height="15" fill="rgb(216,116,0)" fg:x="672" fg:w="12"/><text x="19.4665%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="19.5310%" y="437" width="0.0286%" height="15" fill="rgb(232,132,0)" fg:x="683" fg:w="1"/><text x="19.7810%" y="447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.09%)</title><rect x="19.5596%" y="389" width="0.0858%" height="15" fill="rgb(205,105,0)" fg:x="684" fg:w="3"/><text x="19.8096%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.09%)</title><rect x="19.5596%" y="373" width="0.0858%" height="15" fill="rgb(240,140,0)" fg:x="684" fg:w="3"/><text x="19.8096%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.09%)</title><rect x="19.5596%" y="357" width="0.0858%" height="15" fill="rgb(237,137,0)" fg:x="684" fg:w="3"/><text x="19.8096%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.06%)</title><rect x="19.5882%" y="341" width="0.0572%" height="15" fill="rgb(210,110,0)" fg:x="685" fg:w="2"/><text x="19.8382%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="19.5882%" y="325" width="0.0572%" height="15" fill="rgb(247,147,0)" fg:x="685" fg:w="2"/><text x="19.8382%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.11%)</title><rect x="19.5596%" y="421" width="0.1144%" height="15" fill="rgb(101,212,212)" fg:x="684" fg:w="4"/><text x="19.8096%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.11%)</title><rect x="19.5596%" y="405" width="0.1144%" height="15" fill="rgb(218,118,0)" fg:x="684" fg:w="4"/><text x="19.8096%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.03%)</title><rect x="19.6454%" y="389" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="687" fg:w="1"/><text x="19.8954%" y="399.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="19.6454%" y="373" width="0.0286%" height="15" fill="rgb(98,209,209)" fg:x="687" fg:w="1"/><text x="19.8954%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.03%)</title><rect x="19.6454%" y="357" width="0.0286%" height="15" fill="rgb(228,128,0)" fg:x="687" fg:w="1"/><text x="19.8954%" y="367.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.03%)</title><rect x="19.6454%" y="341" width="0.0286%" height="15" fill="rgb(250,150,0)" fg:x="687" fg:w="1"/><text x="19.8954%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="19.6454%" y="325" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="687" fg:w="1"/><text x="19.8954%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="19.6454%" y="309" width="0.0286%" height="15" fill="rgb(253,153,0)" fg:x="687" fg:w="1"/><text x="19.8954%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="19.6454%" y="293" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="687" fg:w="1"/><text x="19.8954%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="19.6454%" y="277" width="0.0286%" height="15" fill="rgb(208,108,0)" fg:x="687" fg:w="1"/><text x="19.8954%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="19.6454%" y="261" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="687" fg:w="1"/><text x="19.8954%" y="271.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (7 samples, 0.20%)</title><rect x="19.5596%" y="485" width="0.2002%" height="15" fill="rgb(105,216,216)" fg:x="684" fg:w="7"/><text x="19.8096%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.20%)</title><rect x="19.5596%" y="469" width="0.2002%" height="15" fill="rgb(238,138,0)" fg:x="684" fg:w="7"/><text x="19.8096%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.20%)</title><rect x="19.5596%" y="453" width="0.2002%" height="15" fill="rgb(58,172,172)" fg:x="684" fg:w="7"/><text x="19.8096%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.20%)</title><rect x="19.5596%" y="437" width="0.2002%" height="15" fill="rgb(95,206,206)" fg:x="684" fg:w="7"/><text x="19.8096%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.09%)</title><rect x="19.6740%" y="421" width="0.0858%" height="15" fill="rgb(59,173,173)" fg:x="688" fg:w="3"/><text x="19.9240%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.09%)</title><rect x="19.6740%" y="405" width="0.0858%" height="15" fill="rgb(52,167,167)" fg:x="688" fg:w="3"/><text x="19.9240%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.09%)</title><rect x="19.6740%" y="389" width="0.0858%" height="15" fill="rgb(107,217,217)" fg:x="688" fg:w="3"/><text x="19.9240%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.09%)</title><rect x="19.6740%" y="373" width="0.0858%" height="15" fill="rgb(81,193,193)" fg:x="688" fg:w="3"/><text x="19.9240%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (3 samples, 0.09%)</title><rect x="19.6740%" y="357" width="0.0858%" height="15" fill="rgb(75,188,188)" fg:x="688" fg:w="3"/><text x="19.9240%" y="367.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.09%)</title><rect x="19.6740%" y="341" width="0.0858%" height="15" fill="rgb(65,179,179)" fg:x="688" fg:w="3"/><text x="19.9240%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.09%)</title><rect x="19.6740%" y="325" width="0.0858%" height="15" fill="rgb(216,116,0)" fg:x="688" fg:w="3"/><text x="19.9240%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (3 samples, 0.09%)</title><rect x="19.6740%" y="309" width="0.0858%" height="15" fill="rgb(71,184,184)" fg:x="688" fg:w="3"/><text x="19.9240%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.03%)</title><rect x="19.7598%" y="485" width="0.0286%" height="15" fill="rgb(224,124,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="19.7598%" y="469" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="19.7598%" y="453" width="0.0286%" height="15" fill="rgb(251,151,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="19.7598%" y="437" width="0.0286%" height="15" fill="rgb(56,171,171)" fg:x="691" fg:w="1"/><text x="20.0098%" y="447.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="19.7598%" y="421" width="0.0286%" height="15" fill="rgb(62,176,176)" fg:x="691" fg:w="1"/><text x="20.0098%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="19.7598%" y="405" width="0.0286%" height="15" fill="rgb(235,135,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="19.7598%" y="389" width="0.0286%" height="15" fill="rgb(209,109,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="19.7598%" y="373" width="0.0286%" height="15" fill="rgb(241,141,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="19.7598%" y="357" width="0.0286%" height="15" fill="rgb(82,194,194)" fg:x="691" fg:w="1"/><text x="20.0098%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="19.7598%" y="341" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="19.7598%" y="325" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="19.7598%" y="309" width="0.0286%" height="15" fill="rgb(234,134,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="19.7598%" y="293" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="19.7598%" y="277" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="19.7598%" y="261" width="0.0286%" height="15" fill="rgb(192,92,0)" fg:x="691" fg:w="1"/><text x="20.0098%" y="271.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="19.7598%" y="245" width="0.0286%" height="15" fill="rgb(192,192,56)" fg:x="691" fg:w="1"/><text x="20.0098%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="19.7884%" y="469" width="0.0286%" height="15" fill="rgb(235,135,0)" fg:x="692" fg:w="1"/><text x="20.0384%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="19.7884%" y="453" width="0.0286%" height="15" fill="rgb(201,101,0)" fg:x="692" fg:w="1"/><text x="20.0384%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="19.7884%" y="437" width="0.0286%" height="15" fill="rgb(244,144,0)" fg:x="692" fg:w="1"/><text x="20.0384%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.06%)</title><rect x="19.7884%" y="485" width="0.0572%" height="15" fill="rgb(195,95,0)" fg:x="692" fg:w="2"/><text x="20.0384%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="19.8170%" y="469" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="693" fg:w="1"/><text x="20.0670%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="19.8170%" y="453" width="0.0286%" height="15" fill="rgb(207,107,0)" fg:x="693" fg:w="1"/><text x="20.0670%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="19.8456%" y="485" width="0.0286%" height="15" fill="rgb(206,106,0)" fg:x="694" fg:w="1"/><text x="20.0956%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.03%)</title><rect x="19.8742%" y="485" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="695" fg:w="1"/><text x="20.1242%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="19.8742%" y="469" width="0.0286%" height="15" fill="rgb(201,101,0)" fg:x="695" fg:w="1"/><text x="20.1242%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="19.8742%" y="453" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="695" fg:w="1"/><text x="20.1242%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="19.8742%" y="437" width="0.0286%" height="15" fill="rgb(199,99,0)" fg:x="695" fg:w="1"/><text x="20.1242%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="19.8742%" y="421" width="0.0286%" height="15" fill="rgb(199,99,0)" fg:x="695" fg:w="1"/><text x="20.1242%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="19.8742%" y="405" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="695" fg:w="1"/><text x="20.1242%" y="415.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="19.8742%" y="389" width="0.0286%" height="15" fill="rgb(180,180,51)" fg:x="695" fg:w="1"/><text x="20.1242%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.14%)</title><rect x="19.9028%" y="469" width="0.1430%" height="15" fill="rgb(190,90,0)" fg:x="696" fg:w="5"/><text x="20.1528%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (5 samples, 0.14%)</title><rect x="19.9028%" y="453" width="0.1430%" height="15" fill="rgb(196,96,0)" fg:x="696" fg:w="5"/><text x="20.1528%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (5 samples, 0.14%)</title><rect x="19.9028%" y="437" width="0.1430%" height="15" fill="rgb(214,114,0)" fg:x="696" fg:w="5"/><text x="20.1528%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.14%)</title><rect x="19.9028%" y="421" width="0.1430%" height="15" fill="rgb(226,126,0)" fg:x="696" fg:w="5"/><text x="20.1528%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.14%)</title><rect x="19.9028%" y="405" width="0.1430%" height="15" fill="rgb(231,131,0)" fg:x="696" fg:w="5"/><text x="20.1528%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.14%)</title><rect x="19.9028%" y="389" width="0.1430%" height="15" fill="rgb(223,123,0)" fg:x="696" fg:w="5"/><text x="20.1528%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.14%)</title><rect x="19.9028%" y="373" width="0.1430%" height="15" fill="rgb(215,115,0)" fg:x="696" fg:w="5"/><text x="20.1528%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.14%)</title><rect x="19.9028%" y="357" width="0.1430%" height="15" fill="rgb(236,136,0)" fg:x="696" fg:w="5"/><text x="20.1528%" y="367.50"></text></g><g><title>cfree (4 samples, 0.11%)</title><rect x="19.9314%" y="341" width="0.1144%" height="15" fill="rgb(190,190,55)" fg:x="697" fg:w="4"/><text x="20.1814%" y="351.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="19.9314%" y="325" width="0.1144%" height="15" fill="rgb(198,198,58)" fg:x="697" fg:w="4"/><text x="20.1814%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (6 samples, 0.17%)</title><rect x="19.9028%" y="485" width="0.1716%" height="15" fill="rgb(225,125,0)" fg:x="696" fg:w="6"/><text x="20.1528%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.03%)</title><rect x="20.0458%" y="469" width="0.0286%" height="15" fill="rgb(239,139,0)" fg:x="701" fg:w="1"/><text x="20.2958%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="20.0458%" y="453" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="701" fg:w="1"/><text x="20.2958%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="20.0458%" y="437" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="701" fg:w="1"/><text x="20.2958%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="20.0458%" y="421" width="0.0286%" height="15" fill="rgb(250,150,0)" fg:x="701" fg:w="1"/><text x="20.2958%" y="431.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="20.0458%" y="405" width="0.0286%" height="15" fill="rgb(200,200,59)" fg:x="701" fg:w="1"/><text x="20.2958%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (2 samples, 0.06%)</title><rect x="20.0743%" y="453" width="0.0572%" height="15" fill="rgb(234,134,0)" fg:x="702" fg:w="2"/><text x="20.3243%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="20.0743%" y="437" width="0.0572%" height="15" fill="rgb(104,214,214)" fg:x="702" fg:w="2"/><text x="20.3243%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.06%)</title><rect x="20.0743%" y="421" width="0.0572%" height="15" fill="rgb(201,101,0)" fg:x="702" fg:w="2"/><text x="20.3243%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="20.0743%" y="405" width="0.0572%" height="15" fill="rgb(206,106,0)" fg:x="702" fg:w="2"/><text x="20.3243%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.06%)</title><rect x="20.0743%" y="389" width="0.0572%" height="15" fill="rgb(246,146,0)" fg:x="702" fg:w="2"/><text x="20.3243%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.06%)</title><rect x="20.0743%" y="373" width="0.0572%" height="15" fill="rgb(218,118,0)" fg:x="702" fg:w="2"/><text x="20.3243%" y="383.50"></text></g><g><title>cfree (2 samples, 0.06%)</title><rect x="20.0743%" y="357" width="0.0572%" height="15" fill="rgb(225,225,68)" fg:x="702" fg:w="2"/><text x="20.3243%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="20.0743%" y="341" width="0.0572%" height="15" fill="rgb(200,200,59)" fg:x="702" fg:w="2"/><text x="20.3243%" y="351.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (44 samples, 1.26%)</title><rect x="18.9019%" y="501" width="1.2582%" height="15" fill="rgb(69,182,182)" fg:x="661" fg:w="44"/><text x="19.1519%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.09%)</title><rect x="20.0743%" y="485" width="0.0858%" height="15" fill="rgb(251,151,0)" fg:x="702" fg:w="3"/><text x="20.3243%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.09%)</title><rect x="20.0743%" y="469" width="0.0858%" height="15" fill="rgb(237,137,0)" fg:x="702" fg:w="3"/><text x="20.3243%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.03%)</title><rect x="20.1315%" y="453" width="0.0286%" height="15" fill="rgb(215,115,0)" fg:x="704" fg:w="1"/><text x="20.3815%" y="463.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_and_score_initial_population (64 samples, 1.83%)</title><rect x="18.3586%" y="549" width="1.8301%" height="15" fill="rgb(83,196,196)" fg:x="642" fg:w="64"/><text x="18.6086%" y="559.50">a..</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (52 samples, 1.49%)</title><rect x="18.7017%" y="533" width="1.4870%" height="15" fill="rgb(101,212,212)" fg:x="654" fg:w="52"/><text x="18.9517%" y="543.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (52 samples, 1.49%)</title><rect x="18.7017%" y="517" width="1.4870%" height="15" fill="rgb(87,199,199)" fg:x="654" fg:w="52"/><text x="18.9517%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="20.1601%" y="501" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="705" fg:w="1"/><text x="20.4101%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="20.1601%" y="485" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="705" fg:w="1"/><text x="20.4101%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="20.1601%" y="469" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="705" fg:w="1"/><text x="20.4101%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="20.1601%" y="453" width="0.0286%" height="15" fill="rgb(242,142,0)" fg:x="705" fg:w="1"/><text x="20.4101%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="20.1601%" y="437" width="0.0286%" height="15" fill="rgb(175,175,50)" fg:x="705" fg:w="1"/><text x="20.4101%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="20.1601%" y="421" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="705" fg:w="1"/><text x="20.4101%" y="431.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::choose (1 samples, 0.03%)</title><rect x="20.1887%" y="533" width="0.0286%" height="15" fill="rgb(74,187,187)" fg:x="706" fg:w="1"/><text x="20.4387%" y="543.50"></text></g><g><title>rand::seq::gen_index (1 samples, 0.03%)</title><rect x="20.1887%" y="517" width="0.0286%" height="15" fill="rgb(62,176,176)" fg:x="706" fg:w="1"/><text x="20.4387%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="20.2173%" y="501" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="707" fg:w="1"/><text x="20.4673%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (52 samples, 1.49%)</title><rect x="20.2745%" y="357" width="1.4870%" height="15" fill="rgb(226,126,0)" fg:x="709" fg:w="52"/><text x="20.5245%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (52 samples, 1.49%)</title><rect x="20.2745%" y="341" width="1.4870%" height="15" fill="rgb(235,135,0)" fg:x="709" fg:w="52"/><text x="20.5245%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (52 samples, 1.49%)</title><rect x="20.2745%" y="325" width="1.4870%" height="15" fill="rgb(193,93,0)" fg:x="709" fg:w="52"/><text x="20.5245%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (52 samples, 1.49%)</title><rect x="20.2745%" y="309" width="1.4870%" height="15" fill="rgb(252,152,0)" fg:x="709" fg:w="52"/><text x="20.5245%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (52 samples, 1.49%)</title><rect x="20.2745%" y="293" width="1.4870%" height="15" fill="rgb(248,148,0)" fg:x="709" fg:w="52"/><text x="20.5245%" y="303.50"></text></g><g><title>alloc::alloc::alloc (52 samples, 1.49%)</title><rect x="20.2745%" y="277" width="1.4870%" height="15" fill="rgb(239,139,0)" fg:x="709" fg:w="52"/><text x="20.5245%" y="287.50"></text></g><g><title>malloc (52 samples, 1.49%)</title><rect x="20.2745%" y="261" width="1.4870%" height="15" fill="rgb(187,187,54)" fg:x="709" fg:w="52"/><text x="20.5245%" y="271.50"></text></g><g><title>[libc.so.6] (52 samples, 1.49%)</title><rect x="20.2745%" y="245" width="1.4870%" height="15" fill="rgb(208,208,62)" fg:x="709" fg:w="52"/><text x="20.5245%" y="255.50"></text></g><g><title>[libc.so.6] (30 samples, 0.86%)</title><rect x="20.9036%" y="229" width="0.8579%" height="15" fill="rgb(180,180,51)" fg:x="731" fg:w="30"/><text x="21.1536%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="21.7329%" y="213" width="0.0286%" height="15" fill="rgb(189,189,55)" fg:x="760" fg:w="1"/><text x="21.9829%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56 samples, 1.60%)</title><rect x="20.2173%" y="517" width="1.6014%" height="15" fill="rgb(254,154,0)" fg:x="707" fg:w="56"/><text x="20.4673%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55 samples, 1.57%)</title><rect x="20.2459%" y="501" width="1.5728%" height="15" fill="rgb(252,152,0)" fg:x="708" fg:w="55"/><text x="20.4959%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (55 samples, 1.57%)</title><rect x="20.2459%" y="485" width="1.5728%" height="15" fill="rgb(239,139,0)" fg:x="708" fg:w="55"/><text x="20.4959%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55 samples, 1.57%)</title><rect x="20.2459%" y="469" width="1.5728%" height="15" fill="rgb(71,184,184)" fg:x="708" fg:w="55"/><text x="20.4959%" y="479.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (55 samples, 1.57%)</title><rect x="20.2459%" y="453" width="1.5728%" height="15" fill="rgb(101,211,211)" fg:x="708" fg:w="55"/><text x="20.4959%" y="463.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 1.57%)</title><rect x="20.2459%" y="437" width="1.5728%" height="15" fill="rgb(100,210,210)" fg:x="708" fg:w="55"/><text x="20.4959%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (54 samples, 1.54%)</title><rect x="20.2745%" y="421" width="1.5442%" height="15" fill="rgb(225,125,0)" fg:x="709" fg:w="54"/><text x="20.5245%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (54 samples, 1.54%)</title><rect x="20.2745%" y="405" width="1.5442%" height="15" fill="rgb(199,99,0)" fg:x="709" fg:w="54"/><text x="20.5245%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (54 samples, 1.54%)</title><rect x="20.2745%" y="389" width="1.5442%" height="15" fill="rgb(249,149,0)" fg:x="709" fg:w="54"/><text x="20.5245%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (54 samples, 1.54%)</title><rect x="20.2745%" y="373" width="1.5442%" height="15" fill="rgb(52,167,167)" fg:x="709" fg:w="54"/><text x="20.5245%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.06%)</title><rect x="21.7615%" y="357" width="0.0572%" height="15" fill="rgb(218,118,0)" fg:x="761" fg:w="2"/><text x="22.0115%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.06%)</title><rect x="21.7615%" y="341" width="0.0572%" height="15" fill="rgb(217,117,0)" fg:x="761" fg:w="2"/><text x="22.0115%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="21.7615%" y="325" width="0.0572%" height="15" fill="rgb(201,201,59)" fg:x="761" fg:w="2"/><text x="22.0115%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="21.8187%" y="421" width="0.0572%" height="15" fill="rgb(99,210,210)" fg:x="763" fg:w="2"/><text x="22.0687%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="21.8759%" y="405" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="765" fg:w="1"/><text x="22.1259%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.37%)</title><rect x="22.1333%" y="277" width="0.3717%" height="15" fill="rgb(207,107,0)" fg:x="774" fg:w="13"/><text x="22.3833%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.37%)</title><rect x="22.1333%" y="261" width="0.3717%" height="15" fill="rgb(222,122,0)" fg:x="774" fg:w="13"/><text x="22.3833%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.37%)</title><rect x="22.1333%" y="245" width="0.3717%" height="15" fill="rgb(223,123,0)" fg:x="774" fg:w="13"/><text x="22.3833%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.37%)</title><rect x="22.1333%" y="229" width="0.3717%" height="15" fill="rgb(223,123,0)" fg:x="774" fg:w="13"/><text x="22.3833%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.37%)</title><rect x="22.1333%" y="213" width="0.3717%" height="15" fill="rgb(240,140,0)" fg:x="774" fg:w="13"/><text x="22.3833%" y="223.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.37%)</title><rect x="22.1333%" y="197" width="0.3717%" height="15" fill="rgb(249,149,0)" fg:x="774" fg:w="13"/><text x="22.3833%" y="207.50"></text></g><g><title>malloc (13 samples, 0.37%)</title><rect x="22.1333%" y="181" width="0.3717%" height="15" fill="rgb(190,190,55)" fg:x="774" fg:w="13"/><text x="22.3833%" y="191.50"></text></g><g><title>[libc.so.6] (10 samples, 0.29%)</title><rect x="22.2190%" y="165" width="0.2860%" height="15" fill="rgb(228,228,69)" fg:x="777" fg:w="10"/><text x="22.4690%" y="175.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (24 samples, 0.69%)</title><rect x="22.1333%" y="357" width="0.6863%" height="15" fill="rgb(85,197,197)" fg:x="774" fg:w="24"/><text x="22.3833%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.69%)</title><rect x="22.1333%" y="341" width="0.6863%" height="15" fill="rgb(218,118,0)" fg:x="774" fg:w="24"/><text x="22.3833%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.69%)</title><rect x="22.1333%" y="325" width="0.6863%" height="15" fill="rgb(220,120,0)" fg:x="774" fg:w="24"/><text x="22.3833%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.69%)</title><rect x="22.1333%" y="309" width="0.6863%" height="15" fill="rgb(218,118,0)" fg:x="774" fg:w="24"/><text x="22.3833%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.69%)</title><rect x="22.1333%" y="293" width="0.6863%" height="15" fill="rgb(88,200,200)" fg:x="774" fg:w="24"/><text x="22.3833%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11 samples, 0.31%)</title><rect x="22.5050%" y="277" width="0.3146%" height="15" fill="rgb(192,92,0)" fg:x="787" fg:w="11"/><text x="22.7550%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.31%)</title><rect x="22.5050%" y="261" width="0.3146%" height="15" fill="rgb(228,128,0)" fg:x="787" fg:w="11"/><text x="22.7550%" y="271.50"></text></g><g><title>[libc.so.6] (10 samples, 0.29%)</title><rect x="22.5336%" y="245" width="0.2860%" height="15" fill="rgb(221,221,66)" fg:x="788" fg:w="10"/><text x="22.7836%" y="255.50"></text></g><g><title>core::ptr::read_volatile (3 samples, 0.09%)</title><rect x="22.8196%" y="261" width="0.0858%" height="15" fill="rgb(227,127,0)" fg:x="798" fg:w="3"/><text x="23.0696%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.40%)</title><rect x="22.8196%" y="357" width="0.4003%" height="15" fill="rgb(218,118,0)" fg:x="798" fg:w="14"/><text x="23.0696%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.40%)</title><rect x="22.8196%" y="341" width="0.4003%" height="15" fill="rgb(242,142,0)" fg:x="798" fg:w="14"/><text x="23.0696%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.40%)</title><rect x="22.8196%" y="325" width="0.4003%" height="15" fill="rgb(229,129,0)" fg:x="798" fg:w="14"/><text x="23.0696%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.40%)</title><rect x="22.8196%" y="309" width="0.4003%" height="15" fill="rgb(250,150,0)" fg:x="798" fg:w="14"/><text x="23.0696%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.40%)</title><rect x="22.8196%" y="293" width="0.4003%" height="15" fill="rgb(216,116,0)" fg:x="798" fg:w="14"/><text x="23.0696%" y="303.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.40%)</title><rect x="22.8196%" y="277" width="0.4003%" height="15" fill="rgb(241,141,0)" fg:x="798" fg:w="14"/><text x="23.0696%" y="287.50"></text></g><g><title>malloc (11 samples, 0.31%)</title><rect x="22.9053%" y="261" width="0.3146%" height="15" fill="rgb(219,219,66)" fg:x="801" fg:w="11"/><text x="23.1553%" y="271.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="22.9911%" y="245" width="0.2288%" height="15" fill="rgb(227,227,68)" fg:x="804" fg:w="8"/><text x="23.2411%" y="255.50"></text></g><g><title>core::clone::Clone::clone (52 samples, 1.49%)</title><rect x="21.8187%" y="437" width="1.4870%" height="15" fill="rgb(240,140,0)" fg:x="763" fg:w="52"/><text x="22.0687%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 1.43%)</title><rect x="21.8759%" y="421" width="1.4298%" height="15" fill="rgb(193,93,0)" fg:x="765" fg:w="50"/><text x="22.1259%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (49 samples, 1.40%)</title><rect x="21.9045%" y="405" width="1.4012%" height="15" fill="rgb(204,104,0)" fg:x="766" fg:w="49"/><text x="22.1545%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (49 samples, 1.40%)</title><rect x="21.9045%" y="389" width="1.4012%" height="15" fill="rgb(225,125,0)" fg:x="766" fg:w="49"/><text x="22.1545%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (49 samples, 1.40%)</title><rect x="21.9045%" y="373" width="1.4012%" height="15" fill="rgb(102,213,213)" fg:x="766" fg:w="49"/><text x="22.1545%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.09%)</title><rect x="23.2199%" y="357" width="0.0858%" height="15" fill="rgb(245,145,0)" fg:x="812" fg:w="3"/><text x="23.4699%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="23.3057%" y="437" width="0.0286%" height="15" fill="rgb(224,124,0)" fg:x="815" fg:w="1"/><text x="23.5557%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="23.3057%" y="421" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="815" fg:w="1"/><text x="23.5557%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="23.3057%" y="405" width="0.0286%" height="15" fill="rgb(189,189,55)" fg:x="815" fg:w="1"/><text x="23.5557%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.09%)</title><rect x="23.3343%" y="421" width="0.0858%" height="15" fill="rgb(200,100,0)" fg:x="816" fg:w="3"/><text x="23.5843%" y="431.50"></text></g><g><title>core::ptr::write (3 samples, 0.09%)</title><rect x="23.3343%" y="405" width="0.0858%" height="15" fill="rgb(208,108,0)" fg:x="816" fg:w="3"/><text x="23.5843%" y="415.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (113 samples, 3.23%)</title><rect x="20.2173%" y="533" width="3.2313%" height="15" fill="rgb(91,202,202)" fg:x="707" fg:w="113"/><text x="20.4673%" y="543.50">&lt;al..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (57 samples, 1.63%)</title><rect x="21.8187%" y="517" width="1.6300%" height="15" fill="rgb(190,90,0)" fg:x="763" fg:w="57"/><text x="22.0687%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (57 samples, 1.63%)</title><rect x="21.8187%" y="501" width="1.6300%" height="15" fill="rgb(87,199,199)" fg:x="763" fg:w="57"/><text x="22.0687%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (57 samples, 1.63%)</title><rect x="21.8187%" y="485" width="1.6300%" height="15" fill="rgb(56,171,171)" fg:x="763" fg:w="57"/><text x="22.0687%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (57 samples, 1.63%)</title><rect x="21.8187%" y="469" width="1.6300%" height="15" fill="rgb(89,201,201)" fg:x="763" fg:w="57"/><text x="22.0687%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (57 samples, 1.63%)</title><rect x="21.8187%" y="453" width="1.6300%" height="15" fill="rgb(70,183,183)" fg:x="763" fg:w="57"/><text x="22.0687%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (4 samples, 0.11%)</title><rect x="23.3343%" y="437" width="0.1144%" height="15" fill="rgb(51,166,166)" fg:x="816" fg:w="4"/><text x="23.5843%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="23.4201%" y="421" width="0.0286%" height="15" fill="rgb(109,219,219)" fg:x="819" fg:w="1"/><text x="23.6701%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.03%)</title><rect x="23.4201%" y="405" width="0.0286%" height="15" fill="rgb(248,148,0)" fg:x="819" fg:w="1"/><text x="23.6701%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="23.4201%" y="389" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="819" fg:w="1"/><text x="23.6701%" y="399.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_valid_swap (1 samples, 0.03%)</title><rect x="23.4487%" y="533" width="0.0286%" height="15" fill="rgb(100,210,210)" fg:x="820" fg:w="1"/><text x="23.6987%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="23.4487%" y="517" width="0.0286%" height="15" fill="rgb(254,154,0)" fg:x="820" fg:w="1"/><text x="23.6987%" y="527.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (1 samples, 0.03%)</title><rect x="23.5059%" y="501" width="0.0286%" height="15" fill="rgb(71,184,184)" fg:x="822" fg:w="1"/><text x="23.7559%" y="511.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::ops::index::Index&lt;(usize,usize,usize)&gt;&gt;::index (1 samples, 0.03%)</title><rect x="23.5059%" y="485" width="0.0286%" height="15" fill="rgb(109,219,219)" fg:x="822" fg:w="1"/><text x="23.7559%" y="495.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (1 samples, 0.03%)</title><rect x="23.5059%" y="469" width="0.0286%" height="15" fill="rgb(100,211,211)" fg:x="822" fg:w="1"/><text x="23.7559%" y="479.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (1 samples, 0.03%)</title><rect x="23.5059%" y="453" width="0.0286%" height="15" fill="rgb(102,213,213)" fg:x="822" fg:w="1"/><text x="23.7559%" y="463.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="23.5059%" y="437" width="0.0286%" height="15" fill="rgb(83,195,195)" fg:x="822" fg:w="1"/><text x="23.7559%" y="447.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (1 samples, 0.03%)</title><rect x="23.5059%" y="421" width="0.0286%" height="15" fill="rgb(102,213,213)" fg:x="822" fg:w="1"/><text x="23.7559%" y="431.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_valid_replace_position (3 samples, 0.09%)</title><rect x="23.4773%" y="533" width="0.0858%" height="15" fill="rgb(77,190,190)" fg:x="821" fg:w="3"/><text x="23.7273%" y="543.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_moveable_position (2 samples, 0.06%)</title><rect x="23.5059%" y="517" width="0.0572%" height="15" fill="rgb(52,167,167)" fg:x="822" fg:w="2"/><text x="23.7559%" y="527.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_position (1 samples, 0.03%)</title><rect x="23.5345%" y="501" width="0.0286%" height="15" fill="rgb(106,216,216)" fg:x="823" fg:w="1"/><text x="23.7845%" y="511.50"></text></g><g><title>rand::rng::Rng::gen_range (1 samples, 0.03%)</title><rect x="23.5345%" y="485" width="0.0286%" height="15" fill="rgb(102,212,212)" fg:x="823" fg:w="1"/><text x="23.7845%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (1 samples, 0.03%)</title><rect x="23.5345%" y="469" width="0.0286%" height="15" fill="rgb(214,114,0)" fg:x="823" fg:w="1"/><text x="23.7845%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.03%)</title><rect x="23.5345%" y="453" width="0.0286%" height="15" fill="rgb(78,190,190)" fg:x="823" fg:w="1"/><text x="23.7845%" y="463.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (1 samples, 0.03%)</title><rect x="23.5345%" y="437" width="0.0286%" height="15" fill="rgb(104,215,215)" fg:x="823" fg:w="1"/><text x="23.7845%" y="447.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.03%)</title><rect x="23.5345%" y="421" width="0.0286%" height="15" fill="rgb(53,168,168)" fg:x="823" fg:w="1"/><text x="23.7845%" y="431.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.03%)</title><rect x="23.5345%" y="405" width="0.0286%" height="15" fill="rgb(65,179,179)" fg:x="823" fg:w="1"/><text x="23.7845%" y="415.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.03%)</title><rect x="23.5345%" y="389" width="0.0286%" height="15" fill="rgb(94,206,206)" fg:x="823" fg:w="1"/><text x="23.7845%" y="399.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.03%)</title><rect x="23.5345%" y="373" width="0.0286%" height="15" fill="rgb(102,213,213)" fg:x="823" fg:w="1"/><text x="23.7845%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.03%)</title><rect x="23.5345%" y="357" width="0.0286%" height="15" fill="rgb(104,214,214)" fg:x="823" fg:w="1"/><text x="23.7845%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="23.5916%" y="421" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="825" fg:w="1"/><text x="23.8416%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="23.5916%" y="405" width="0.0286%" height="15" fill="rgb(194,94,0)" fg:x="825" fg:w="1"/><text x="23.8416%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="23.5916%" y="389" width="0.0286%" height="15" fill="rgb(251,151,0)" fg:x="825" fg:w="1"/><text x="23.8416%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="23.5916%" y="373" width="0.0286%" height="15" fill="rgb(252,152,0)" fg:x="825" fg:w="1"/><text x="23.8416%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="23.5916%" y="357" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="825" fg:w="1"/><text x="23.8416%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="23.5916%" y="341" width="0.0286%" height="15" fill="rgb(227,127,0)" fg:x="825" fg:w="1"/><text x="23.8416%" y="351.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="23.5916%" y="325" width="0.0286%" height="15" fill="rgb(188,188,54)" fg:x="825" fg:w="1"/><text x="23.8416%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="23.5916%" y="309" width="0.0286%" height="15" fill="rgb(216,216,65)" fg:x="825" fg:w="1"/><text x="23.8416%" y="319.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="23.5916%" y="501" width="0.0572%" height="15" fill="rgb(99,210,210)" fg:x="825" fg:w="2"/><text x="23.8416%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="23.5916%" y="485" width="0.0572%" height="15" fill="rgb(218,118,0)" fg:x="825" fg:w="2"/><text x="23.8416%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.06%)</title><rect x="23.5916%" y="469" width="0.0572%" height="15" fill="rgb(243,143,0)" fg:x="825" fg:w="2"/><text x="23.8416%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.06%)</title><rect x="23.5916%" y="453" width="0.0572%" height="15" fill="rgb(254,154,0)" fg:x="825" fg:w="2"/><text x="23.8416%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.06%)</title><rect x="23.5916%" y="437" width="0.0572%" height="15" fill="rgb(59,173,173)" fg:x="825" fg:w="2"/><text x="23.8416%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="23.6202%" y="421" width="0.0286%" height="15" fill="rgb(220,120,0)" fg:x="826" fg:w="1"/><text x="23.8702%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="23.6202%" y="405" width="0.0286%" height="15" fill="rgb(215,115,0)" fg:x="826" fg:w="1"/><text x="23.8702%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="23.6202%" y="389" width="0.0286%" height="15" fill="rgb(177,177,50)" fg:x="826" fg:w="1"/><text x="23.8702%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="23.7060%" y="261" width="0.1144%" height="15" fill="rgb(228,128,0)" fg:x="829" fg:w="4"/><text x="23.9560%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="23.7060%" y="245" width="0.1144%" height="15" fill="rgb(252,152,0)" fg:x="829" fg:w="4"/><text x="23.9560%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.11%)</title><rect x="23.7060%" y="229" width="0.1144%" height="15" fill="rgb(217,117,0)" fg:x="829" fg:w="4"/><text x="23.9560%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.09%)</title><rect x="23.7346%" y="213" width="0.0858%" height="15" fill="rgb(254,154,0)" fg:x="830" fg:w="3"/><text x="23.9846%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.09%)</title><rect x="23.7346%" y="197" width="0.0858%" height="15" fill="rgb(208,108,0)" fg:x="830" fg:w="3"/><text x="23.9846%" y="207.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.09%)</title><rect x="23.7346%" y="181" width="0.0858%" height="15" fill="rgb(228,128,0)" fg:x="830" fg:w="3"/><text x="23.9846%" y="191.50"></text></g><g><title>malloc (2 samples, 0.06%)</title><rect x="23.7632%" y="165" width="0.0572%" height="15" fill="rgb(217,217,65)" fg:x="831" fg:w="2"/><text x="24.0132%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="23.7918%" y="149" width="0.0286%" height="15" fill="rgb(213,213,63)" fg:x="832" fg:w="1"/><text x="24.0418%" y="159.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (7 samples, 0.20%)</title><rect x="23.7060%" y="341" width="0.2002%" height="15" fill="rgb(72,185,185)" fg:x="829" fg:w="7"/><text x="23.9560%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.20%)</title><rect x="23.7060%" y="325" width="0.2002%" height="15" fill="rgb(225,125,0)" fg:x="829" fg:w="7"/><text x="23.9560%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.20%)</title><rect x="23.7060%" y="309" width="0.2002%" height="15" fill="rgb(206,106,0)" fg:x="829" fg:w="7"/><text x="23.9560%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.20%)</title><rect x="23.7060%" y="293" width="0.2002%" height="15" fill="rgb(247,147,0)" fg:x="829" fg:w="7"/><text x="23.9560%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.20%)</title><rect x="23.7060%" y="277" width="0.2002%" height="15" fill="rgb(65,179,179)" fg:x="829" fg:w="7"/><text x="23.9560%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.09%)</title><rect x="23.8204%" y="261" width="0.0858%" height="15" fill="rgb(244,144,0)" fg:x="833" fg:w="3"/><text x="24.0704%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.09%)</title><rect x="23.8204%" y="245" width="0.0858%" height="15" fill="rgb(194,94,0)" fg:x="833" fg:w="3"/><text x="24.0704%" y="255.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="23.8490%" y="229" width="0.0572%" height="15" fill="rgb(175,175,50)" fg:x="834" fg:w="2"/><text x="24.0990%" y="239.50"></text></g><g><title>core::clone::Clone::clone (9 samples, 0.26%)</title><rect x="23.6774%" y="421" width="0.2574%" height="15" fill="rgb(226,126,0)" fg:x="828" fg:w="9"/><text x="23.9274%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.26%)</title><rect x="23.6774%" y="405" width="0.2574%" height="15" fill="rgb(251,151,0)" fg:x="828" fg:w="9"/><text x="23.9274%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.26%)</title><rect x="23.6774%" y="389" width="0.2574%" height="15" fill="rgb(203,103,0)" fg:x="828" fg:w="9"/><text x="23.9274%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.26%)</title><rect x="23.6774%" y="373" width="0.2574%" height="15" fill="rgb(241,141,0)" fg:x="828" fg:w="9"/><text x="23.9274%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.26%)</title><rect x="23.6774%" y="357" width="0.2574%" height="15" fill="rgb(106,217,217)" fg:x="828" fg:w="9"/><text x="23.9274%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="23.9062%" y="341" width="0.0286%" height="15" fill="rgb(207,107,0)" fg:x="836" fg:w="1"/><text x="24.1562%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="23.9062%" y="325" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="836" fg:w="1"/><text x="24.1562%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="23.9062%" y="309" width="0.0286%" height="15" fill="rgb(212,112,0)" fg:x="836" fg:w="1"/><text x="24.1562%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="23.9062%" y="293" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="836" fg:w="1"/><text x="24.1562%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="23.9062%" y="277" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="836" fg:w="1"/><text x="24.1562%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="23.9062%" y="261" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="836" fg:w="1"/><text x="24.1562%" y="271.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="23.9062%" y="245" width="0.0286%" height="15" fill="rgb(196,196,57)" fg:x="836" fg:w="1"/><text x="24.1562%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.43%)</title><rect x="23.6488%" y="501" width="0.4289%" height="15" fill="rgb(239,139,0)" fg:x="827" fg:w="15"/><text x="23.8988%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.43%)</title><rect x="23.6488%" y="485" width="0.4289%" height="15" fill="rgb(69,182,182)" fg:x="827" fg:w="15"/><text x="23.8988%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.40%)</title><rect x="23.6774%" y="469" width="0.4003%" height="15" fill="rgb(66,180,180)" fg:x="828" fg:w="14"/><text x="23.9274%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (14 samples, 0.40%)</title><rect x="23.6774%" y="453" width="0.4003%" height="15" fill="rgb(71,184,184)" fg:x="828" fg:w="14"/><text x="23.9274%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (14 samples, 0.40%)</title><rect x="23.6774%" y="437" width="0.4003%" height="15" fill="rgb(78,190,190)" fg:x="828" fg:w="14"/><text x="23.9274%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (5 samples, 0.14%)</title><rect x="23.9348%" y="421" width="0.1430%" height="15" fill="rgb(50,165,165)" fg:x="837" fg:w="5"/><text x="24.1848%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.14%)</title><rect x="23.9348%" y="405" width="0.1430%" height="15" fill="rgb(218,118,0)" fg:x="837" fg:w="5"/><text x="24.1848%" y="415.50"></text></g><g><title>core::ptr::write (5 samples, 0.14%)</title><rect x="23.9348%" y="389" width="0.1430%" height="15" fill="rgb(221,121,0)" fg:x="837" fg:w="5"/><text x="24.1848%" y="399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="24.0778%" y="405" width="0.0286%" height="15" fill="rgb(205,105,0)" fg:x="842" fg:w="1"/><text x="24.3278%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="24.0778%" y="389" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="842" fg:w="1"/><text x="24.3278%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="24.0778%" y="373" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="842" fg:w="1"/><text x="24.3278%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="24.0778%" y="357" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="842" fg:w="1"/><text x="24.3278%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="24.0778%" y="341" width="0.0286%" height="15" fill="rgb(230,130,0)" fg:x="842" fg:w="1"/><text x="24.3278%" y="351.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.06%)</title><rect x="24.1064%" y="405" width="0.0572%" height="15" fill="rgb(220,120,0)" fg:x="843" fg:w="2"/><text x="24.3564%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.03%)</title><rect x="24.1636%" y="373" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="845" fg:w="1"/><text x="24.4136%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.03%)</title><rect x="24.1636%" y="357" width="0.0286%" height="15" fill="rgb(215,115,0)" fg:x="845" fg:w="1"/><text x="24.4136%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="24.1636%" y="341" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="845" fg:w="1"/><text x="24.4136%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="24.1636%" y="325" width="0.0286%" height="15" fill="rgb(253,153,0)" fg:x="845" fg:w="1"/><text x="24.4136%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="24.1636%" y="309" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="845" fg:w="1"/><text x="24.4136%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="24.1636%" y="293" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="845" fg:w="1"/><text x="24.4136%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="24.1636%" y="277" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="845" fg:w="1"/><text x="24.4136%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="24.1636%" y="261" width="0.0286%" height="15" fill="rgb(250,150,0)" fg:x="845" fg:w="1"/><text x="24.4136%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (5 samples, 0.14%)</title><rect x="24.0778%" y="501" width="0.1430%" height="15" fill="rgb(230,130,0)" fg:x="842" fg:w="5"/><text x="24.3278%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.14%)</title><rect x="24.0778%" y="485" width="0.1430%" height="15" fill="rgb(214,114,0)" fg:x="842" fg:w="5"/><text x="24.3278%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.14%)</title><rect x="24.0778%" y="469" width="0.1430%" height="15" fill="rgb(55,169,169)" fg:x="842" fg:w="5"/><text x="24.3278%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.14%)</title><rect x="24.0778%" y="453" width="0.1430%" height="15" fill="rgb(73,186,186)" fg:x="842" fg:w="5"/><text x="24.3278%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.14%)</title><rect x="24.0778%" y="437" width="0.1430%" height="15" fill="rgb(53,168,168)" fg:x="842" fg:w="5"/><text x="24.3278%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.14%)</title><rect x="24.0778%" y="421" width="0.1430%" height="15" fill="rgb(208,108,0)" fg:x="842" fg:w="5"/><text x="24.3278%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.06%)</title><rect x="24.1636%" y="405" width="0.0572%" height="15" fill="rgb(201,101,0)" fg:x="845" fg:w="2"/><text x="24.4136%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.06%)</title><rect x="24.1636%" y="389" width="0.0572%" height="15" fill="rgb(91,202,202)" fg:x="845" fg:w="2"/><text x="24.4136%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.03%)</title><rect x="24.1922%" y="373" width="0.0286%" height="15" fill="rgb(216,116,0)" fg:x="846" fg:w="1"/><text x="24.4422%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="24.1922%" y="357" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="846" fg:w="1"/><text x="24.4422%" y="367.50"></text></g><g><title>__rdl_realloc (1 samples, 0.03%)</title><rect x="24.2494%" y="373" width="0.0286%" height="15" fill="rgb(207,207,61)" fg:x="848" fg:w="1"/><text x="24.4994%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.03%)</title><rect x="24.2494%" y="357" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="848" fg:w="1"/><text x="24.4994%" y="367.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (7 samples, 0.20%)</title><rect x="24.2208%" y="501" width="0.2002%" height="15" fill="rgb(57,172,172)" fg:x="847" fg:w="7"/><text x="24.4708%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.20%)</title><rect x="24.2208%" y="485" width="0.2002%" height="15" fill="rgb(209,109,0)" fg:x="847" fg:w="7"/><text x="24.4708%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.20%)</title><rect x="24.2208%" y="469" width="0.2002%" height="15" fill="rgb(192,92,0)" fg:x="847" fg:w="7"/><text x="24.4708%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.20%)</title><rect x="24.2208%" y="453" width="0.2002%" height="15" fill="rgb(247,147,0)" fg:x="847" fg:w="7"/><text x="24.4708%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.20%)</title><rect x="24.2208%" y="437" width="0.2002%" height="15" fill="rgb(233,133,0)" fg:x="847" fg:w="7"/><text x="24.4708%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.17%)</title><rect x="24.2494%" y="421" width="0.1716%" height="15" fill="rgb(192,92,0)" fg:x="848" fg:w="6"/><text x="24.4994%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.17%)</title><rect x="24.2494%" y="405" width="0.1716%" height="15" fill="rgb(249,149,0)" fg:x="848" fg:w="6"/><text x="24.4994%" y="415.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.17%)</title><rect x="24.2494%" y="389" width="0.1716%" height="15" fill="rgb(254,154,0)" fg:x="848" fg:w="6"/><text x="24.4994%" y="399.50"></text></g><g><title>realloc (5 samples, 0.14%)</title><rect x="24.2780%" y="373" width="0.1430%" height="15" fill="rgb(197,197,58)" fg:x="849" fg:w="5"/><text x="24.5280%" y="383.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="24.3065%" y="357" width="0.1144%" height="15" fill="rgb(177,177,50)" fg:x="850" fg:w="4"/><text x="24.5565%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="24.3351%" y="341" width="0.0858%" height="15" fill="rgb(225,225,68)" fg:x="851" fg:w="3"/><text x="24.5851%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.06%)</title><rect x="24.4209%" y="501" width="0.0572%" height="15" fill="rgb(232,132,0)" fg:x="854" fg:w="2"/><text x="24.6709%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.06%)</title><rect x="24.4209%" y="485" width="0.0572%" height="15" fill="rgb(237,137,0)" fg:x="854" fg:w="2"/><text x="24.6709%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="24.4209%" y="469" width="0.0572%" height="15" fill="rgb(226,126,0)" fg:x="854" fg:w="2"/><text x="24.6709%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="24.4209%" y="453" width="0.0572%" height="15" fill="rgb(212,112,0)" fg:x="854" fg:w="2"/><text x="24.6709%" y="463.50"></text></g><g><title>malloc (2 samples, 0.06%)</title><rect x="24.4209%" y="437" width="0.0572%" height="15" fill="rgb(219,219,66)" fg:x="854" fg:w="2"/><text x="24.6709%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="24.4209%" y="421" width="0.0572%" height="15" fill="rgb(203,203,60)" fg:x="854" fg:w="2"/><text x="24.6709%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.09%)</title><rect x="24.4781%" y="437" width="0.0858%" height="15" fill="rgb(244,144,0)" fg:x="856" fg:w="3"/><text x="24.7281%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.09%)</title><rect x="24.4781%" y="421" width="0.0858%" height="15" fill="rgb(246,146,0)" fg:x="856" fg:w="3"/><text x="24.7281%" y="431.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.09%)</title><rect x="24.4781%" y="405" width="0.0858%" height="15" fill="rgb(211,111,0)" fg:x="856" fg:w="3"/><text x="24.7281%" y="415.50"></text></g><g><title>realloc (3 samples, 0.09%)</title><rect x="24.4781%" y="389" width="0.0858%" height="15" fill="rgb(180,180,51)" fg:x="856" fg:w="3"/><text x="24.7281%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="24.5067%" y="373" width="0.0572%" height="15" fill="rgb(228,228,69)" fg:x="857" fg:w="2"/><text x="24.7567%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="24.5067%" y="357" width="0.0572%" height="15" fill="rgb(185,185,53)" fg:x="857" fg:w="2"/><text x="24.7567%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="24.5353%" y="341" width="0.0286%" height="15" fill="rgb(183,183,52)" fg:x="858" fg:w="1"/><text x="24.7853%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.14%)</title><rect x="24.4781%" y="501" width="0.1430%" height="15" fill="rgb(192,92,0)" fg:x="856" fg:w="5"/><text x="24.7281%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.14%)</title><rect x="24.4781%" y="485" width="0.1430%" height="15" fill="rgb(197,97,0)" fg:x="856" fg:w="5"/><text x="24.7281%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.14%)</title><rect x="24.4781%" y="469" width="0.1430%" height="15" fill="rgb(242,142,0)" fg:x="856" fg:w="5"/><text x="24.7281%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.14%)</title><rect x="24.4781%" y="453" width="0.1430%" height="15" fill="rgb(239,139,0)" fg:x="856" fg:w="5"/><text x="24.7281%" y="463.50"></text></g><g><title>malloc (2 samples, 0.06%)</title><rect x="24.5639%" y="437" width="0.0572%" height="15" fill="rgb(220,220,66)" fg:x="859" fg:w="2"/><text x="24.8139%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="24.5639%" y="421" width="0.0572%" height="15" fill="rgb(207,207,61)" fg:x="859" fg:w="2"/><text x="24.8139%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="24.5925%" y="405" width="0.0286%" height="15" fill="rgb(229,229,69)" fg:x="860" fg:w="1"/><text x="24.8425%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.03%)</title><rect x="24.6211%" y="501" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="861" fg:w="1"/><text x="24.8711%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="24.6211%" y="485" width="0.0286%" height="15" fill="rgb(201,101,0)" fg:x="861" fg:w="1"/><text x="24.8711%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.03%)</title><rect x="24.6211%" y="469" width="0.0286%" height="15" fill="rgb(220,120,0)" fg:x="861" fg:w="1"/><text x="24.8711%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="24.6211%" y="453" width="0.0286%" height="15" fill="rgb(216,116,0)" fg:x="861" fg:w="1"/><text x="24.8711%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="24.6211%" y="437" width="0.0286%" height="15" fill="rgb(250,150,0)" fg:x="861" fg:w="1"/><text x="24.8711%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="24.6211%" y="421" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="861" fg:w="1"/><text x="24.8711%" y="431.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="24.6211%" y="405" width="0.0286%" height="15" fill="rgb(216,216,65)" fg:x="861" fg:w="1"/><text x="24.8711%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="24.6211%" y="389" width="0.0286%" height="15" fill="rgb(197,197,58)" fg:x="861" fg:w="1"/><text x="24.8711%" y="399.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="24.7641%" y="213" width="0.0286%" height="15" fill="rgb(225,225,68)" fg:x="866" fg:w="1"/><text x="25.0141%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="24.7641%" y="197" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="866" fg:w="1"/><text x="25.0141%" y="207.50"></text></g><g><title>__rust_dealloc (2 samples, 0.06%)</title><rect x="24.7927%" y="213" width="0.0572%" height="15" fill="rgb(228,228,69)" fg:x="867" fg:w="2"/><text x="25.0427%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.23%)</title><rect x="24.7069%" y="341" width="0.2288%" height="15" fill="rgb(225,125,0)" fg:x="864" fg:w="8"/><text x="24.9569%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (8 samples, 0.23%)</title><rect x="24.7069%" y="325" width="0.2288%" height="15" fill="rgb(219,119,0)" fg:x="864" fg:w="8"/><text x="24.9569%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (8 samples, 0.23%)</title><rect x="24.7069%" y="309" width="0.2288%" height="15" fill="rgb(190,90,0)" fg:x="864" fg:w="8"/><text x="24.9569%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (8 samples, 0.23%)</title><rect x="24.7069%" y="293" width="0.2288%" height="15" fill="rgb(236,136,0)" fg:x="864" fg:w="8"/><text x="24.9569%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (8 samples, 0.23%)</title><rect x="24.7069%" y="277" width="0.2288%" height="15" fill="rgb(250,150,0)" fg:x="864" fg:w="8"/><text x="24.9569%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.23%)</title><rect x="24.7069%" y="261" width="0.2288%" height="15" fill="rgb(195,95,0)" fg:x="864" fg:w="8"/><text x="24.9569%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.20%)</title><rect x="24.7355%" y="245" width="0.2002%" height="15" fill="rgb(236,136,0)" fg:x="865" fg:w="7"/><text x="24.9855%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.20%)</title><rect x="24.7355%" y="229" width="0.2002%" height="15" fill="rgb(221,121,0)" fg:x="865" fg:w="7"/><text x="24.9855%" y="239.50"></text></g><g><title>cfree (3 samples, 0.09%)</title><rect x="24.8499%" y="213" width="0.0858%" height="15" fill="rgb(180,180,52)" fg:x="869" fg:w="3"/><text x="25.0999%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="24.8785%" y="197" width="0.0572%" height="15" fill="rgb(186,186,54)" fg:x="870" fg:w="2"/><text x="25.1285%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (13 samples, 0.37%)</title><rect x="24.7069%" y="421" width="0.3717%" height="15" fill="rgb(59,173,173)" fg:x="864" fg:w="13"/><text x="24.9569%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (13 samples, 0.37%)</title><rect x="24.7069%" y="405" width="0.3717%" height="15" fill="rgb(82,194,194)" fg:x="864" fg:w="13"/><text x="24.9569%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (13 samples, 0.37%)</title><rect x="24.7069%" y="389" width="0.3717%" height="15" fill="rgb(251,151,0)" fg:x="864" fg:w="13"/><text x="24.9569%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (13 samples, 0.37%)</title><rect x="24.7069%" y="373" width="0.3717%" height="15" fill="rgb(191,91,0)" fg:x="864" fg:w="13"/><text x="24.9569%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (13 samples, 0.37%)</title><rect x="24.7069%" y="357" width="0.3717%" height="15" fill="rgb(213,113,0)" fg:x="864" fg:w="13"/><text x="24.9569%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (5 samples, 0.14%)</title><rect x="24.9357%" y="341" width="0.1430%" height="15" fill="rgb(233,133,0)" fg:x="872" fg:w="5"/><text x="25.1857%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.14%)</title><rect x="24.9357%" y="325" width="0.1430%" height="15" fill="rgb(235,135,0)" fg:x="872" fg:w="5"/><text x="25.1857%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.14%)</title><rect x="24.9357%" y="309" width="0.1430%" height="15" fill="rgb(199,99,0)" fg:x="872" fg:w="5"/><text x="25.1857%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.14%)</title><rect x="24.9357%" y="293" width="0.1430%" height="15" fill="rgb(217,117,0)" fg:x="872" fg:w="5"/><text x="25.1857%" y="303.50"></text></g><g><title>cfree (5 samples, 0.14%)</title><rect x="24.9357%" y="277" width="0.1430%" height="15" fill="rgb(191,191,56)" fg:x="872" fg:w="5"/><text x="25.1857%" y="287.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="24.9643%" y="261" width="0.1144%" height="15" fill="rgb(212,212,63)" fg:x="873" fg:w="4"/><text x="25.2143%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (16 samples, 0.46%)</title><rect x="24.6497%" y="501" width="0.4575%" height="15" fill="rgb(242,142,0)" fg:x="862" fg:w="16"/><text x="24.8997%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (16 samples, 0.46%)</title><rect x="24.6497%" y="485" width="0.4575%" height="15" fill="rgb(240,140,0)" fg:x="862" fg:w="16"/><text x="24.8997%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (16 samples, 0.46%)</title><rect x="24.6497%" y="469" width="0.4575%" height="15" fill="rgb(240,140,0)" fg:x="862" fg:w="16"/><text x="24.8997%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.46%)</title><rect x="24.6497%" y="453" width="0.4575%" height="15" fill="rgb(61,175,175)" fg:x="862" fg:w="16"/><text x="24.8997%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (16 samples, 0.46%)</title><rect x="24.6497%" y="437" width="0.4575%" height="15" fill="rgb(96,207,207)" fg:x="862" fg:w="16"/><text x="24.8997%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.03%)</title><rect x="25.0786%" y="421" width="0.0286%" height="15" fill="rgb(77,190,190)" fg:x="877" fg:w="1"/><text x="25.3286%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="25.0786%" y="405" width="0.0286%" height="15" fill="rgb(241,141,0)" fg:x="877" fg:w="1"/><text x="25.3286%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="25.0786%" y="389" width="0.0286%" height="15" fill="rgb(211,111,0)" fg:x="877" fg:w="1"/><text x="25.3286%" y="399.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="25.0786%" y="373" width="0.0286%" height="15" fill="rgb(191,191,55)" fg:x="877" fg:w="1"/><text x="25.3286%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.03%)</title><rect x="25.1358%" y="389" width="0.0286%" height="15" fill="rgb(109,219,219)" fg:x="879" fg:w="1"/><text x="25.3858%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.03%)</title><rect x="25.1358%" y="373" width="0.0286%" height="15" fill="rgb(86,198,198)" fg:x="879" fg:w="1"/><text x="25.3858%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="25.1358%" y="357" width="0.0286%" height="15" fill="rgb(75,188,188)" fg:x="879" fg:w="1"/><text x="25.3858%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="25.1358%" y="341" width="0.0286%" height="15" fill="rgb(212,112,0)" fg:x="879" fg:w="1"/><text x="25.3858%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="25.1358%" y="325" width="0.0286%" height="15" fill="rgb(240,140,0)" fg:x="879" fg:w="1"/><text x="25.3858%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="25.1358%" y="309" width="0.0286%" height="15" fill="rgb(243,143,0)" fg:x="879" fg:w="1"/><text x="25.3858%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="25.1358%" y="293" width="0.0286%" height="15" fill="rgb(220,120,0)" fg:x="879" fg:w="1"/><text x="25.3858%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="25.1358%" y="277" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="879" fg:w="1"/><text x="25.3858%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="25.1358%" y="261" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="879" fg:w="1"/><text x="25.3858%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (5 samples, 0.14%)</title><rect x="25.1358%" y="469" width="0.1430%" height="15" fill="rgb(82,194,194)" fg:x="879" fg:w="5"/><text x="25.3858%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.14%)</title><rect x="25.1358%" y="453" width="0.1430%" height="15" fill="rgb(96,208,208)" fg:x="879" fg:w="5"/><text x="25.3858%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.14%)</title><rect x="25.1358%" y="437" width="0.1430%" height="15" fill="rgb(74,187,187)" fg:x="879" fg:w="5"/><text x="25.3858%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.14%)</title><rect x="25.1358%" y="421" width="0.1430%" height="15" fill="rgb(52,167,167)" fg:x="879" fg:w="5"/><text x="25.3858%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.14%)</title><rect x="25.1358%" y="405" width="0.1430%" height="15" fill="rgb(77,190,190)" fg:x="879" fg:w="5"/><text x="25.3858%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (4 samples, 0.11%)</title><rect x="25.1644%" y="389" width="0.1144%" height="15" fill="rgb(99,210,210)" fg:x="880" fg:w="4"/><text x="25.4144%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (4 samples, 0.11%)</title><rect x="25.1644%" y="373" width="0.1144%" height="15" fill="rgb(84,196,196)" fg:x="880" fg:w="4"/><text x="25.4144%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.11%)</title><rect x="25.1644%" y="357" width="0.1144%" height="15" fill="rgb(89,201,201)" fg:x="880" fg:w="4"/><text x="25.4144%" y="367.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.11%)</title><rect x="25.1644%" y="341" width="0.1144%" height="15" fill="rgb(96,207,207)" fg:x="880" fg:w="4"/><text x="25.4144%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.11%)</title><rect x="25.1644%" y="325" width="0.1144%" height="15" fill="rgb(208,108,0)" fg:x="880" fg:w="4"/><text x="25.4144%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.11%)</title><rect x="25.1644%" y="309" width="0.1144%" height="15" fill="rgb(223,123,0)" fg:x="880" fg:w="4"/><text x="25.4144%" y="319.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.11%)</title><rect x="25.1644%" y="293" width="0.1144%" height="15" fill="rgb(224,124,0)" fg:x="880" fg:w="4"/><text x="25.4144%" y="303.50"></text></g><g><title>malloc (4 samples, 0.11%)</title><rect x="25.1644%" y="277" width="0.1144%" height="15" fill="rgb(199,199,58)" fg:x="880" fg:w="4"/><text x="25.4144%" y="287.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="25.1644%" y="261" width="0.1144%" height="15" fill="rgb(214,214,64)" fg:x="880" fg:w="4"/><text x="25.4144%" y="271.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="25.1930%" y="245" width="0.0858%" height="15" fill="rgb(220,220,66)" fg:x="881" fg:w="3"/><text x="25.4430%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="25.2502%" y="229" width="0.0286%" height="15" fill="rgb(184,184,53)" fg:x="883" fg:w="1"/><text x="25.5002%" y="239.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::replace (62 samples, 1.77%)</title><rect x="23.5631%" y="533" width="1.7729%" height="15" fill="rgb(57,172,172)" fg:x="824" fg:w="62"/><text x="23.8131%" y="543.50">a..</text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (62 samples, 1.77%)</title><rect x="23.5631%" y="517" width="1.7729%" height="15" fill="rgb(54,169,169)" fg:x="824" fg:w="62"/><text x="23.8131%" y="527.50">a..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (8 samples, 0.23%)</title><rect x="25.1072%" y="501" width="0.2288%" height="15" fill="rgb(211,111,0)" fg:x="878" fg:w="8"/><text x="25.3572%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (8 samples, 0.23%)</title><rect x="25.1072%" y="485" width="0.2288%" height="15" fill="rgb(52,167,167)" fg:x="878" fg:w="8"/><text x="25.3572%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.06%)</title><rect x="25.2788%" y="469" width="0.0572%" height="15" fill="rgb(99,210,210)" fg:x="884" fg:w="2"/><text x="25.5288%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.06%)</title><rect x="25.2788%" y="453" width="0.0572%" height="15" fill="rgb(238,138,0)" fg:x="884" fg:w="2"/><text x="25.5288%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.06%)</title><rect x="25.2788%" y="437" width="0.0572%" height="15" fill="rgb(197,97,0)" fg:x="884" fg:w="2"/><text x="25.5288%" y="447.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.06%)</title><rect x="25.2788%" y="421" width="0.0572%" height="15" fill="rgb(102,212,212)" fg:x="884" fg:w="2"/><text x="25.5288%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.06%)</title><rect x="25.2788%" y="405" width="0.0572%" height="15" fill="rgb(217,117,0)" fg:x="884" fg:w="2"/><text x="25.5288%" y="415.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.06%)</title><rect x="25.2788%" y="389" width="0.0572%" height="15" fill="rgb(214,114,0)" fg:x="884" fg:w="2"/><text x="25.5288%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.06%)</title><rect x="25.2788%" y="373" width="0.0572%" height="15" fill="rgb(227,127,0)" fg:x="884" fg:w="2"/><text x="25.5288%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.43%)</title><rect x="25.3360%" y="501" width="0.4289%" height="15" fill="rgb(197,97,0)" fg:x="886" fg:w="15"/><text x="25.5860%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.43%)</title><rect x="25.3360%" y="485" width="0.4289%" height="15" fill="rgb(249,149,0)" fg:x="886" fg:w="15"/><text x="25.5860%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.43%)</title><rect x="25.3360%" y="469" width="0.4289%" height="15" fill="rgb(228,128,0)" fg:x="886" fg:w="15"/><text x="25.5860%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.43%)</title><rect x="25.3360%" y="453" width="0.4289%" height="15" fill="rgb(57,171,171)" fg:x="886" fg:w="15"/><text x="25.5860%" y="463.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (15 samples, 0.43%)</title><rect x="25.3360%" y="437" width="0.4289%" height="15" fill="rgb(101,211,211)" fg:x="886" fg:w="15"/><text x="25.5860%" y="447.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.43%)</title><rect x="25.3360%" y="421" width="0.4289%" height="15" fill="rgb(51,166,166)" fg:x="886" fg:w="15"/><text x="25.5860%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.40%)</title><rect x="25.3646%" y="405" width="0.4003%" height="15" fill="rgb(253,153,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.40%)</title><rect x="25.3646%" y="389" width="0.4003%" height="15" fill="rgb(191,91,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.40%)</title><rect x="25.3646%" y="373" width="0.4003%" height="15" fill="rgb(232,132,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.40%)</title><rect x="25.3646%" y="357" width="0.4003%" height="15" fill="rgb(62,176,176)" fg:x="887" fg:w="14"/><text x="25.6146%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.40%)</title><rect x="25.3646%" y="341" width="0.4003%" height="15" fill="rgb(247,147,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.40%)</title><rect x="25.3646%" y="325" width="0.4003%" height="15" fill="rgb(214,114,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.40%)</title><rect x="25.3646%" y="309" width="0.4003%" height="15" fill="rgb(195,95,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.40%)</title><rect x="25.3646%" y="293" width="0.4003%" height="15" fill="rgb(210,110,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.40%)</title><rect x="25.3646%" y="277" width="0.4003%" height="15" fill="rgb(203,103,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="287.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.40%)</title><rect x="25.3646%" y="261" width="0.4003%" height="15" fill="rgb(204,104,0)" fg:x="887" fg:w="14"/><text x="25.6146%" y="271.50"></text></g><g><title>malloc (14 samples, 0.40%)</title><rect x="25.3646%" y="245" width="0.4003%" height="15" fill="rgb(222,222,67)" fg:x="887" fg:w="14"/><text x="25.6146%" y="255.50"></text></g><g><title>[libc.so.6] (14 samples, 0.40%)</title><rect x="25.3646%" y="229" width="0.4003%" height="15" fill="rgb(179,179,51)" fg:x="887" fg:w="14"/><text x="25.6146%" y="239.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="25.5362%" y="213" width="0.2288%" height="15" fill="rgb(185,185,53)" fg:x="893" fg:w="8"/><text x="25.7862%" y="223.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="25.8221%" y="165" width="0.0286%" height="15" fill="rgb(178,178,51)" fg:x="903" fg:w="1"/><text x="26.0721%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="25.8221%" y="149" width="0.0286%" height="15" fill="rgb(252,152,0)" fg:x="903" fg:w="1"/><text x="26.0721%" y="159.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (18 samples, 0.51%)</title><rect x="25.8221%" y="341" width="0.5147%" height="15" fill="rgb(91,202,202)" fg:x="903" fg:w="18"/><text x="26.0721%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.51%)</title><rect x="25.8221%" y="325" width="0.5147%" height="15" fill="rgb(204,104,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.51%)</title><rect x="25.8221%" y="309" width="0.5147%" height="15" fill="rgb(215,115,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.51%)</title><rect x="25.8221%" y="293" width="0.5147%" height="15" fill="rgb(234,134,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.51%)</title><rect x="25.8221%" y="277" width="0.5147%" height="15" fill="rgb(78,190,190)" fg:x="903" fg:w="18"/><text x="26.0721%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.51%)</title><rect x="25.8221%" y="261" width="0.5147%" height="15" fill="rgb(242,142,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.51%)</title><rect x="25.8221%" y="245" width="0.5147%" height="15" fill="rgb(228,128,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.51%)</title><rect x="25.8221%" y="229" width="0.5147%" height="15" fill="rgb(230,130,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.51%)</title><rect x="25.8221%" y="213" width="0.5147%" height="15" fill="rgb(211,111,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.51%)</title><rect x="25.8221%" y="197" width="0.5147%" height="15" fill="rgb(239,139,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="207.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.51%)</title><rect x="25.8221%" y="181" width="0.5147%" height="15" fill="rgb(220,120,0)" fg:x="903" fg:w="18"/><text x="26.0721%" y="191.50"></text></g><g><title>malloc (17 samples, 0.49%)</title><rect x="25.8507%" y="165" width="0.4861%" height="15" fill="rgb(203,203,60)" fg:x="904" fg:w="17"/><text x="26.1007%" y="175.50"></text></g><g><title>[libc.so.6] (14 samples, 0.40%)</title><rect x="25.9365%" y="149" width="0.4003%" height="15" fill="rgb(186,186,54)" fg:x="907" fg:w="14"/><text x="26.1865%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="26.3083%" y="133" width="0.0286%" height="15" fill="rgb(217,217,65)" fg:x="920" fg:w="1"/><text x="26.5583%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.14%)</title><rect x="26.3369%" y="341" width="0.1430%" height="15" fill="rgb(224,124,0)" fg:x="921" fg:w="5"/><text x="26.5869%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.14%)</title><rect x="26.3369%" y="325" width="0.1430%" height="15" fill="rgb(223,123,0)" fg:x="921" fg:w="5"/><text x="26.5869%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.14%)</title><rect x="26.3369%" y="309" width="0.1430%" height="15" fill="rgb(236,136,0)" fg:x="921" fg:w="5"/><text x="26.5869%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.14%)</title><rect x="26.3369%" y="293" width="0.1430%" height="15" fill="rgb(250,150,0)" fg:x="921" fg:w="5"/><text x="26.5869%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.14%)</title><rect x="26.3369%" y="277" width="0.1430%" height="15" fill="rgb(214,114,0)" fg:x="921" fg:w="5"/><text x="26.5869%" y="287.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.14%)</title><rect x="26.3369%" y="261" width="0.1430%" height="15" fill="rgb(203,103,0)" fg:x="921" fg:w="5"/><text x="26.5869%" y="271.50"></text></g><g><title>malloc (5 samples, 0.14%)</title><rect x="26.3369%" y="245" width="0.1430%" height="15" fill="rgb(181,181,52)" fg:x="921" fg:w="5"/><text x="26.5869%" y="255.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="26.3655%" y="229" width="0.1144%" height="15" fill="rgb(214,214,64)" fg:x="922" fg:w="4"/><text x="26.6155%" y="239.50"></text></g><g><title>core::clone::Clone::clone (26 samples, 0.74%)</title><rect x="25.7649%" y="421" width="0.7435%" height="15" fill="rgb(244,144,0)" fg:x="901" fg:w="26"/><text x="26.0149%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.74%)</title><rect x="25.7649%" y="405" width="0.7435%" height="15" fill="rgb(221,121,0)" fg:x="901" fg:w="26"/><text x="26.0149%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.74%)</title><rect x="25.7649%" y="389" width="0.7435%" height="15" fill="rgb(253,153,0)" fg:x="901" fg:w="26"/><text x="26.0149%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.74%)</title><rect x="25.7649%" y="373" width="0.7435%" height="15" fill="rgb(240,140,0)" fg:x="901" fg:w="26"/><text x="26.0149%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.74%)</title><rect x="25.7649%" y="357" width="0.7435%" height="15" fill="rgb(91,202,202)" fg:x="901" fg:w="26"/><text x="26.0149%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.03%)</title><rect x="26.4798%" y="341" width="0.0286%" height="15" fill="rgb(224,124,0)" fg:x="926" fg:w="1"/><text x="26.7298%" y="351.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (44 samples, 1.26%)</title><rect x="25.3360%" y="517" width="1.2582%" height="15" fill="rgb(74,187,187)" fg:x="886" fg:w="44"/><text x="25.5860%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (29 samples, 0.83%)</title><rect x="25.7649%" y="501" width="0.8293%" height="15" fill="rgb(225,125,0)" fg:x="901" fg:w="29"/><text x="26.0149%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.83%)</title><rect x="25.7649%" y="485" width="0.8293%" height="15" fill="rgb(75,188,188)" fg:x="901" fg:w="29"/><text x="26.0149%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.83%)</title><rect x="25.7649%" y="469" width="0.8293%" height="15" fill="rgb(89,201,201)" fg:x="901" fg:w="29"/><text x="26.0149%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (29 samples, 0.83%)</title><rect x="25.7649%" y="453" width="0.8293%" height="15" fill="rgb(101,211,211)" fg:x="901" fg:w="29"/><text x="26.0149%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (29 samples, 0.83%)</title><rect x="25.7649%" y="437" width="0.8293%" height="15" fill="rgb(102,213,213)" fg:x="901" fg:w="29"/><text x="26.0149%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.09%)</title><rect x="26.5084%" y="421" width="0.0858%" height="15" fill="rgb(75,188,188)" fg:x="927" fg:w="3"/><text x="26.7584%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.09%)</title><rect x="26.5084%" y="405" width="0.0858%" height="15" fill="rgb(244,144,0)" fg:x="927" fg:w="3"/><text x="26.7584%" y="415.50"></text></g><g><title>core::ptr::write (3 samples, 0.09%)</title><rect x="26.5084%" y="389" width="0.0858%" height="15" fill="rgb(221,121,0)" fg:x="927" fg:w="3"/><text x="26.7584%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="26.7658%" y="325" width="0.0286%" height="15" fill="rgb(223,223,67)" fg:x="936" fg:w="1"/><text x="27.0158%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="26.7658%" y="309" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="936" fg:w="1"/><text x="27.0158%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.14%)</title><rect x="26.7372%" y="373" width="0.1430%" height="15" fill="rgb(248,148,0)" fg:x="935" fg:w="5"/><text x="26.9872%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.14%)</title><rect x="26.7372%" y="357" width="0.1430%" height="15" fill="rgb(239,139,0)" fg:x="935" fg:w="5"/><text x="26.9872%" y="367.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.14%)</title><rect x="26.7372%" y="341" width="0.1430%" height="15" fill="rgb(227,127,0)" fg:x="935" fg:w="5"/><text x="26.9872%" y="351.50"></text></g><g><title>malloc (3 samples, 0.09%)</title><rect x="26.7944%" y="325" width="0.0858%" height="15" fill="rgb(207,207,61)" fg:x="937" fg:w="3"/><text x="27.0444%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="26.8516%" y="309" width="0.0286%" height="15" fill="rgb(183,183,53)" fg:x="939" fg:w="1"/><text x="27.1016%" y="319.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (6 samples, 0.17%)</title><rect x="26.7372%" y="501" width="0.1716%" height="15" fill="rgb(62,176,176)" fg:x="935" fg:w="6"/><text x="26.9872%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.17%)</title><rect x="26.7372%" y="485" width="0.1716%" height="15" fill="rgb(192,92,0)" fg:x="935" fg:w="6"/><text x="26.9872%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.17%)</title><rect x="26.7372%" y="469" width="0.1716%" height="15" fill="rgb(248,148,0)" fg:x="935" fg:w="6"/><text x="26.9872%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.17%)</title><rect x="26.7372%" y="453" width="0.1716%" height="15" fill="rgb(218,118,0)" fg:x="935" fg:w="6"/><text x="26.9872%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.17%)</title><rect x="26.7372%" y="437" width="0.1716%" height="15" fill="rgb(77,190,190)" fg:x="935" fg:w="6"/><text x="26.9872%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.17%)</title><rect x="26.7372%" y="421" width="0.1716%" height="15" fill="rgb(218,118,0)" fg:x="935" fg:w="6"/><text x="26.9872%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.17%)</title><rect x="26.7372%" y="405" width="0.1716%" height="15" fill="rgb(244,144,0)" fg:x="935" fg:w="6"/><text x="26.9872%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.17%)</title><rect x="26.7372%" y="389" width="0.1716%" height="15" fill="rgb(253,153,0)" fg:x="935" fg:w="6"/><text x="26.9872%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="26.8802%" y="373" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="940" fg:w="1"/><text x="27.1302%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="26.8802%" y="357" width="0.0286%" height="15" fill="rgb(237,137,0)" fg:x="940" fg:w="1"/><text x="27.1302%" y="367.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (2 samples, 0.06%)</title><rect x="26.9088%" y="501" width="0.0572%" height="15" fill="rgb(94,205,205)" fg:x="941" fg:w="2"/><text x="27.1588%" y="511.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (2 samples, 0.06%)</title><rect x="26.9088%" y="485" width="0.0572%" height="15" fill="rgb(81,194,194)" fg:x="941" fg:w="2"/><text x="27.1588%" y="495.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (2 samples, 0.06%)</title><rect x="26.9088%" y="469" width="0.0572%" height="15" fill="rgb(60,174,174)" fg:x="941" fg:w="2"/><text x="27.1588%" y="479.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (2 samples, 0.06%)</title><rect x="26.9088%" y="453" width="0.0572%" height="15" fill="rgb(72,185,185)" fg:x="941" fg:w="2"/><text x="27.1588%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="27.0232%" y="421" width="0.0286%" height="15" fill="rgb(82,195,195)" fg:x="945" fg:w="1"/><text x="27.2732%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.03%)</title><rect x="27.0232%" y="405" width="0.0286%" height="15" fill="rgb(107,218,218)" fg:x="945" fg:w="1"/><text x="27.2732%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="27.0232%" y="389" width="0.0286%" height="15" fill="rgb(60,174,174)" fg:x="945" fg:w="1"/><text x="27.2732%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="27.2233%" y="165" width="0.0286%" height="15" fill="rgb(195,195,57)" fg:x="952" fg:w="1"/><text x="27.4733%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.17%)</title><rect x="27.2233%" y="213" width="0.1716%" height="15" fill="rgb(205,105,0)" fg:x="952" fg:w="6"/><text x="27.4733%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.17%)</title><rect x="27.2233%" y="197" width="0.1716%" height="15" fill="rgb(242,142,0)" fg:x="952" fg:w="6"/><text x="27.4733%" y="207.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.17%)</title><rect x="27.2233%" y="181" width="0.1716%" height="15" fill="rgb(234,134,0)" fg:x="952" fg:w="6"/><text x="27.4733%" y="191.50"></text></g><g><title>malloc (5 samples, 0.14%)</title><rect x="27.2519%" y="165" width="0.1430%" height="15" fill="rgb(213,213,63)" fg:x="953" fg:w="5"/><text x="27.5019%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="27.3663%" y="149" width="0.0286%" height="15" fill="rgb(223,223,67)" fg:x="957" fg:w="1"/><text x="27.6163%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.23%)</title><rect x="27.1947%" y="261" width="0.2288%" height="15" fill="rgb(194,94,0)" fg:x="951" fg:w="8"/><text x="27.4447%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.23%)</title><rect x="27.1947%" y="245" width="0.2288%" height="15" fill="rgb(221,121,0)" fg:x="951" fg:w="8"/><text x="27.4447%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.23%)</title><rect x="27.1947%" y="229" width="0.2288%" height="15" fill="rgb(234,134,0)" fg:x="951" fg:w="8"/><text x="27.4447%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="27.3949%" y="213" width="0.0286%" height="15" fill="rgb(194,94,0)" fg:x="958" fg:w="1"/><text x="27.6449%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="27.3949%" y="197" width="0.0286%" height="15" fill="rgb(207,107,0)" fg:x="958" fg:w="1"/><text x="27.6449%" y="207.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (9 samples, 0.26%)</title><rect x="27.1947%" y="341" width="0.2574%" height="15" fill="rgb(72,185,185)" fg:x="951" fg:w="9"/><text x="27.4447%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.26%)</title><rect x="27.1947%" y="325" width="0.2574%" height="15" fill="rgb(210,110,0)" fg:x="951" fg:w="9"/><text x="27.4447%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.26%)</title><rect x="27.1947%" y="309" width="0.2574%" height="15" fill="rgb(239,139,0)" fg:x="951" fg:w="9"/><text x="27.4447%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.26%)</title><rect x="27.1947%" y="293" width="0.2574%" height="15" fill="rgb(226,126,0)" fg:x="951" fg:w="9"/><text x="27.4447%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.26%)</title><rect x="27.1947%" y="277" width="0.2574%" height="15" fill="rgb(81,193,193)" fg:x="951" fg:w="9"/><text x="27.4447%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="27.4235%" y="261" width="0.0286%" height="15" fill="rgb(220,120,0)" fg:x="959" fg:w="1"/><text x="27.6735%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="27.4235%" y="245" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="959" fg:w="1"/><text x="27.6735%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="27.4235%" y="229" width="0.0286%" height="15" fill="rgb(182,182,52)" fg:x="959" fg:w="1"/><text x="27.6735%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="27.4521%" y="341" width="0.0286%" height="15" fill="rgb(230,130,0)" fg:x="960" fg:w="1"/><text x="27.7021%" y="351.50"></text></g><g><title>core::clone::Clone::clone (19 samples, 0.54%)</title><rect x="27.0518%" y="421" width="0.5433%" height="15" fill="rgb(246,146,0)" fg:x="946" fg:w="19"/><text x="27.3018%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.54%)</title><rect x="27.0518%" y="405" width="0.5433%" height="15" fill="rgb(233,133,0)" fg:x="946" fg:w="19"/><text x="27.3018%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.49%)</title><rect x="27.1090%" y="389" width="0.4861%" height="15" fill="rgb(220,120,0)" fg:x="948" fg:w="17"/><text x="27.3590%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.49%)</title><rect x="27.1090%" y="373" width="0.4861%" height="15" fill="rgb(208,108,0)" fg:x="948" fg:w="17"/><text x="27.3590%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.49%)</title><rect x="27.1090%" y="357" width="0.4861%" height="15" fill="rgb(64,178,178)" fg:x="948" fg:w="17"/><text x="27.3590%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="27.4807%" y="341" width="0.1144%" height="15" fill="rgb(235,135,0)" fg:x="961" fg:w="4"/><text x="27.7307%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="27.4807%" y="325" width="0.1144%" height="15" fill="rgb(250,150,0)" fg:x="961" fg:w="4"/><text x="27.7307%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.11%)</title><rect x="27.4807%" y="309" width="0.1144%" height="15" fill="rgb(200,100,0)" fg:x="961" fg:w="4"/><text x="27.7307%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.11%)</title><rect x="27.4807%" y="293" width="0.1144%" height="15" fill="rgb(234,134,0)" fg:x="961" fg:w="4"/><text x="27.7307%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.11%)</title><rect x="27.4807%" y="277" width="0.1144%" height="15" fill="rgb(232,132,0)" fg:x="961" fg:w="4"/><text x="27.7307%" y="287.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.11%)</title><rect x="27.4807%" y="261" width="0.1144%" height="15" fill="rgb(213,113,0)" fg:x="961" fg:w="4"/><text x="27.7307%" y="271.50"></text></g><g><title>malloc (4 samples, 0.11%)</title><rect x="27.4807%" y="245" width="0.1144%" height="15" fill="rgb(191,191,55)" fg:x="961" fg:w="4"/><text x="27.7307%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (8 samples, 0.23%)</title><rect x="27.5951%" y="421" width="0.2288%" height="15" fill="rgb(77,190,190)" fg:x="965" fg:w="8"/><text x="27.8451%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.23%)</title><rect x="27.5951%" y="405" width="0.2288%" height="15" fill="rgb(202,102,0)" fg:x="965" fg:w="8"/><text x="27.8451%" y="415.50"></text></g><g><title>core::ptr::write (8 samples, 0.23%)</title><rect x="27.5951%" y="389" width="0.2288%" height="15" fill="rgb(191,91,0)" fg:x="965" fg:w="8"/><text x="27.8451%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (30 samples, 0.86%)</title><rect x="27.0232%" y="453" width="0.8579%" height="15" fill="rgb(55,170,170)" fg:x="945" fg:w="30"/><text x="27.2732%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (30 samples, 0.86%)</title><rect x="27.0232%" y="437" width="0.8579%" height="15" fill="rgb(108,218,218)" fg:x="945" fg:w="30"/><text x="27.2732%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (2 samples, 0.06%)</title><rect x="27.8238%" y="421" width="0.0572%" height="15" fill="rgb(66,179,179)" fg:x="973" fg:w="2"/><text x="28.0738%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (2 samples, 0.06%)</title><rect x="27.8238%" y="405" width="0.0572%" height="15" fill="rgb(77,189,189)" fg:x="973" fg:w="2"/><text x="28.0738%" y="415.50"></text></g><g><title>hashbrown::raw::offset_from (2 samples, 0.06%)</title><rect x="27.8238%" y="389" width="0.0572%" height="15" fill="rgb(53,167,167)" fg:x="973" fg:w="2"/><text x="28.0738%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (2 samples, 0.06%)</title><rect x="27.8238%" y="373" width="0.0572%" height="15" fill="rgb(204,104,0)" fg:x="973" fg:w="2"/><text x="28.0738%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (33 samples, 0.94%)</title><rect x="26.9660%" y="501" width="0.9437%" height="15" fill="rgb(217,117,0)" fg:x="943" fg:w="33"/><text x="27.2160%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.94%)</title><rect x="26.9660%" y="485" width="0.9437%" height="15" fill="rgb(69,183,183)" fg:x="943" fg:w="33"/><text x="27.2160%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.89%)</title><rect x="27.0232%" y="469" width="0.8865%" height="15" fill="rgb(80,192,192)" fg:x="945" fg:w="31"/><text x="27.2732%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.03%)</title><rect x="27.8810%" y="453" width="0.0286%" height="15" fill="rgb(90,201,201)" fg:x="975" fg:w="1"/><text x="28.1310%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.03%)</title><rect x="27.8810%" y="437" width="0.0286%" height="15" fill="rgb(61,175,175)" fg:x="975" fg:w="1"/><text x="28.1310%" y="447.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.03%)</title><rect x="27.8810%" y="421" width="0.0286%" height="15" fill="rgb(109,219,219)" fg:x="975" fg:w="1"/><text x="28.1310%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="27.8810%" y="405" width="0.0286%" height="15" fill="rgb(212,112,0)" fg:x="975" fg:w="1"/><text x="28.1310%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="27.8810%" y="389" width="0.0286%" height="15" fill="rgb(216,116,0)" fg:x="975" fg:w="1"/><text x="28.1310%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="27.8810%" y="373" width="0.0286%" height="15" fill="rgb(252,152,0)" fg:x="975" fg:w="1"/><text x="28.1310%" y="383.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="27.8810%" y="357" width="0.0286%" height="15" fill="rgb(183,183,53)" fg:x="975" fg:w="1"/><text x="28.1310%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="27.9096%" y="357" width="0.0286%" height="15" fill="rgb(219,119,0)" fg:x="976" fg:w="1"/><text x="28.1596%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="27.9096%" y="341" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="976" fg:w="1"/><text x="28.1596%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.09%)</title><rect x="27.9096%" y="405" width="0.0858%" height="15" fill="rgb(251,151,0)" fg:x="976" fg:w="3"/><text x="28.1596%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.09%)</title><rect x="27.9096%" y="389" width="0.0858%" height="15" fill="rgb(252,152,0)" fg:x="976" fg:w="3"/><text x="28.1596%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.09%)</title><rect x="27.9096%" y="373" width="0.0858%" height="15" fill="rgb(251,151,0)" fg:x="976" fg:w="3"/><text x="28.1596%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.06%)</title><rect x="27.9382%" y="357" width="0.0572%" height="15" fill="rgb(251,151,0)" fg:x="977" fg:w="2"/><text x="28.1882%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="27.9382%" y="341" width="0.0572%" height="15" fill="rgb(236,136,0)" fg:x="977" fg:w="2"/><text x="28.1882%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.11%)</title><rect x="28.0812%" y="277" width="0.1144%" height="15" fill="rgb(221,121,0)" fg:x="982" fg:w="4"/><text x="28.3312%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="28.1670%" y="261" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="985" fg:w="1"/><text x="28.4170%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (7 samples, 0.20%)</title><rect x="28.0240%" y="373" width="0.2002%" height="15" fill="rgb(222,122,0)" fg:x="980" fg:w="7"/><text x="28.2740%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (7 samples, 0.20%)</title><rect x="28.0240%" y="357" width="0.2002%" height="15" fill="rgb(246,146,0)" fg:x="980" fg:w="7"/><text x="28.2740%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.20%)</title><rect x="28.0240%" y="341" width="0.2002%" height="15" fill="rgb(246,146,0)" fg:x="980" fg:w="7"/><text x="28.2740%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.20%)</title><rect x="28.0240%" y="325" width="0.2002%" height="15" fill="rgb(223,123,0)" fg:x="980" fg:w="7"/><text x="28.2740%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.20%)</title><rect x="28.0240%" y="309" width="0.2002%" height="15" fill="rgb(225,125,0)" fg:x="980" fg:w="7"/><text x="28.2740%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.20%)</title><rect x="28.0240%" y="293" width="0.2002%" height="15" fill="rgb(217,117,0)" fg:x="980" fg:w="7"/><text x="28.2740%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.03%)</title><rect x="28.1956%" y="277" width="0.0286%" height="15" fill="rgb(202,102,0)" fg:x="986" fg:w="1"/><text x="28.4456%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (15 samples, 0.43%)</title><rect x="27.9096%" y="501" width="0.4289%" height="15" fill="rgb(252,152,0)" fg:x="976" fg:w="15"/><text x="28.1596%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.43%)</title><rect x="27.9096%" y="485" width="0.4289%" height="15" fill="rgb(197,97,0)" fg:x="976" fg:w="15"/><text x="28.1596%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.43%)</title><rect x="27.9096%" y="469" width="0.4289%" height="15" fill="rgb(107,217,217)" fg:x="976" fg:w="15"/><text x="28.1596%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.43%)</title><rect x="27.9096%" y="453" width="0.4289%" height="15" fill="rgb(94,206,206)" fg:x="976" fg:w="15"/><text x="28.1596%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.43%)</title><rect x="27.9096%" y="437" width="0.4289%" height="15" fill="rgb(102,213,213)" fg:x="976" fg:w="15"/><text x="28.1596%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.43%)</title><rect x="27.9096%" y="421" width="0.4289%" height="15" fill="rgb(212,112,0)" fg:x="976" fg:w="15"/><text x="28.1596%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.34%)</title><rect x="27.9954%" y="405" width="0.3432%" height="15" fill="rgb(232,132,0)" fg:x="979" fg:w="12"/><text x="28.2454%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (12 samples, 0.34%)</title><rect x="27.9954%" y="389" width="0.3432%" height="15" fill="rgb(78,190,190)" fg:x="979" fg:w="12"/><text x="28.2454%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.11%)</title><rect x="28.2242%" y="373" width="0.1144%" height="15" fill="rgb(195,95,0)" fg:x="987" fg:w="4"/><text x="28.4742%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.11%)</title><rect x="28.2242%" y="357" width="0.1144%" height="15" fill="rgb(197,97,0)" fg:x="987" fg:w="4"/><text x="28.4742%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="28.3100%" y="341" width="0.0286%" height="15" fill="rgb(190,90,0)" fg:x="990" fg:w="1"/><text x="28.5600%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="28.3100%" y="325" width="0.0286%" height="15" fill="rgb(192,92,0)" fg:x="990" fg:w="1"/><text x="28.5600%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="28.3100%" y="309" width="0.0286%" height="15" fill="rgb(235,135,0)" fg:x="990" fg:w="1"/><text x="28.5600%" y="319.50"></text></g><g><title>__rdl_realloc (2 samples, 0.06%)</title><rect x="28.3672%" y="373" width="0.0572%" height="15" fill="rgb(216,216,65)" fg:x="992" fg:w="2"/><text x="28.6172%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.06%)</title><rect x="28.3672%" y="357" width="0.0572%" height="15" fill="rgb(193,93,0)" fg:x="992" fg:w="2"/><text x="28.6172%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.37%)</title><rect x="28.3386%" y="437" width="0.3717%" height="15" fill="rgb(249,149,0)" fg:x="991" fg:w="13"/><text x="28.5886%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.34%)</title><rect x="28.3672%" y="421" width="0.3432%" height="15" fill="rgb(191,91,0)" fg:x="992" fg:w="12"/><text x="28.6172%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.34%)</title><rect x="28.3672%" y="405" width="0.3432%" height="15" fill="rgb(192,92,0)" fg:x="992" fg:w="12"/><text x="28.6172%" y="415.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.34%)</title><rect x="28.3672%" y="389" width="0.3432%" height="15" fill="rgb(227,127,0)" fg:x="992" fg:w="12"/><text x="28.6172%" y="399.50"></text></g><g><title>realloc (10 samples, 0.29%)</title><rect x="28.4244%" y="373" width="0.2860%" height="15" fill="rgb(223,223,67)" fg:x="994" fg:w="10"/><text x="28.6744%" y="383.50"></text></g><g><title>[libc.so.6] (10 samples, 0.29%)</title><rect x="28.4244%" y="357" width="0.2860%" height="15" fill="rgb(222,222,67)" fg:x="994" fg:w="10"/><text x="28.6744%" y="367.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="28.4816%" y="341" width="0.2288%" height="15" fill="rgb(177,177,50)" fg:x="996" fg:w="8"/><text x="28.7316%" y="351.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (14 samples, 0.40%)</title><rect x="28.3386%" y="501" width="0.4003%" height="15" fill="rgb(104,215,215)" fg:x="991" fg:w="14"/><text x="28.5886%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.40%)</title><rect x="28.3386%" y="485" width="0.4003%" height="15" fill="rgb(251,151,0)" fg:x="991" fg:w="14"/><text x="28.5886%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.40%)</title><rect x="28.3386%" y="469" width="0.4003%" height="15" fill="rgb(234,134,0)" fg:x="991" fg:w="14"/><text x="28.5886%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.40%)</title><rect x="28.3386%" y="453" width="0.4003%" height="15" fill="rgb(193,93,0)" fg:x="991" fg:w="14"/><text x="28.5886%" y="463.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="28.7103%" y="437" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="1004" fg:w="1"/><text x="28.9603%" y="447.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.03%)</title><rect x="28.7103%" y="421" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="1004" fg:w="1"/><text x="28.9603%" y="431.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.03%)</title><rect x="28.7103%" y="405" width="0.0286%" height="15" fill="rgb(219,119,0)" fg:x="1004" fg:w="1"/><text x="28.9603%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="28.7389%" y="437" width="0.0286%" height="15" fill="rgb(183,183,53)" fg:x="1005" fg:w="1"/><text x="28.9889%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="28.7389%" y="421" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="1005" fg:w="1"/><text x="28.9889%" y="431.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="28.7675%" y="437" width="0.0286%" height="15" fill="rgb(220,120,0)" fg:x="1006" fg:w="1"/><text x="29.0175%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.26%)</title><rect x="28.7389%" y="501" width="0.2574%" height="15" fill="rgb(237,137,0)" fg:x="1005" fg:w="9"/><text x="28.9889%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.26%)</title><rect x="28.7389%" y="485" width="0.2574%" height="15" fill="rgb(220,120,0)" fg:x="1005" fg:w="9"/><text x="28.9889%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.26%)</title><rect x="28.7389%" y="469" width="0.2574%" height="15" fill="rgb(208,108,0)" fg:x="1005" fg:w="9"/><text x="28.9889%" y="479.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.26%)</title><rect x="28.7389%" y="453" width="0.2574%" height="15" fill="rgb(241,141,0)" fg:x="1005" fg:w="9"/><text x="28.9889%" y="463.50"></text></g><g><title>malloc (7 samples, 0.20%)</title><rect x="28.7961%" y="437" width="0.2002%" height="15" fill="rgb(229,229,69)" fg:x="1007" fg:w="7"/><text x="29.0461%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="28.8819%" y="421" width="0.1144%" height="15" fill="rgb(181,181,52)" fg:x="1010" fg:w="4"/><text x="29.1319%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.06%)</title><rect x="29.0249%" y="453" width="0.0572%" height="15" fill="rgb(245,145,0)" fg:x="1015" fg:w="2"/><text x="29.2749%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.09%)</title><rect x="29.0821%" y="437" width="0.0858%" height="15" fill="rgb(241,141,0)" fg:x="1017" fg:w="3"/><text x="29.3321%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.09%)</title><rect x="29.0821%" y="421" width="0.0858%" height="15" fill="rgb(215,115,0)" fg:x="1017" fg:w="3"/><text x="29.3321%" y="431.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.09%)</title><rect x="29.0821%" y="405" width="0.0858%" height="15" fill="rgb(238,138,0)" fg:x="1017" fg:w="3"/><text x="29.3321%" y="415.50"></text></g><g><title>realloc (3 samples, 0.09%)</title><rect x="29.0821%" y="389" width="0.0858%" height="15" fill="rgb(228,228,69)" fg:x="1017" fg:w="3"/><text x="29.3321%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="29.1107%" y="373" width="0.0572%" height="15" fill="rgb(175,175,50)" fg:x="1018" fg:w="2"/><text x="29.3607%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="29.1107%" y="357" width="0.0572%" height="15" fill="rgb(221,221,67)" fg:x="1018" fg:w="2"/><text x="29.3607%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="29.1679%" y="437" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="1020" fg:w="1"/><text x="29.4179%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.40%)</title><rect x="29.0821%" y="453" width="0.4003%" height="15" fill="rgb(215,115,0)" fg:x="1017" fg:w="14"/><text x="29.3321%" y="463.50"></text></g><g><title>malloc (10 samples, 0.29%)</title><rect x="29.1965%" y="437" width="0.2860%" height="15" fill="rgb(181,181,52)" fg:x="1021" fg:w="10"/><text x="29.4465%" y="447.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="29.2536%" y="421" width="0.2288%" height="15" fill="rgb(194,194,57)" fg:x="1023" fg:w="8"/><text x="29.5036%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.51%)</title><rect x="29.0249%" y="485" width="0.5147%" height="15" fill="rgb(229,129,0)" fg:x="1015" fg:w="18"/><text x="29.2749%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.51%)</title><rect x="29.0249%" y="469" width="0.5147%" height="15" fill="rgb(219,119,0)" fg:x="1015" fg:w="18"/><text x="29.2749%" y="479.50"></text></g><g><title>core::cmp::max (2 samples, 0.06%)</title><rect x="29.4824%" y="453" width="0.0572%" height="15" fill="rgb(196,96,0)" fg:x="1031" fg:w="2"/><text x="29.7324%" y="463.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.06%)</title><rect x="29.4824%" y="437" width="0.0572%" height="15" fill="rgb(216,116,0)" fg:x="1031" fg:w="2"/><text x="29.7324%" y="447.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.06%)</title><rect x="29.4824%" y="421" width="0.0572%" height="15" fill="rgb(203,103,0)" fg:x="1031" fg:w="2"/><text x="29.7324%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="29.5396%" y="485" width="0.0286%" height="15" fill="rgb(248,148,0)" fg:x="1033" fg:w="1"/><text x="29.7896%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.60%)</title><rect x="28.9963%" y="501" width="0.6005%" height="15" fill="rgb(205,105,0)" fg:x="1014" fg:w="21"/><text x="29.2463%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="29.5682%" y="485" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="1034" fg:w="1"/><text x="29.8182%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (3 samples, 0.09%)</title><rect x="29.5968%" y="501" width="0.0858%" height="15" fill="rgb(204,104,0)" fg:x="1035" fg:w="3"/><text x="29.8468%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.09%)</title><rect x="29.5968%" y="485" width="0.0858%" height="15" fill="rgb(228,128,0)" fg:x="1035" fg:w="3"/><text x="29.8468%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.09%)</title><rect x="29.5968%" y="469" width="0.0858%" height="15" fill="rgb(220,120,0)" fg:x="1035" fg:w="3"/><text x="29.8468%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.09%)</title><rect x="29.5968%" y="453" width="0.0858%" height="15" fill="rgb(205,105,0)" fg:x="1035" fg:w="3"/><text x="29.8468%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.09%)</title><rect x="29.5968%" y="437" width="0.0858%" height="15" fill="rgb(190,90,0)" fg:x="1035" fg:w="3"/><text x="29.8468%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.09%)</title><rect x="29.5968%" y="421" width="0.0858%" height="15" fill="rgb(249,149,0)" fg:x="1035" fg:w="3"/><text x="29.8468%" y="431.50"></text></g><g><title>cfree (3 samples, 0.09%)</title><rect x="29.5968%" y="405" width="0.0858%" height="15" fill="rgb(176,176,50)" fg:x="1035" fg:w="3"/><text x="29.8468%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="29.5968%" y="389" width="0.0858%" height="15" fill="rgb(215,215,64)" fg:x="1035" fg:w="3"/><text x="29.8468%" y="399.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="29.7970%" y="213" width="0.0286%" height="15" fill="rgb(186,186,54)" fg:x="1042" fg:w="1"/><text x="30.0470%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="29.7970%" y="197" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="1042" fg:w="1"/><text x="30.0470%" y="207.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="29.8256%" y="213" width="0.0286%" height="15" fill="rgb(224,224,68)" fg:x="1043" fg:w="1"/><text x="30.0756%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.66%)</title><rect x="29.7398%" y="245" width="0.6577%" height="15" fill="rgb(217,117,0)" fg:x="1040" fg:w="23"/><text x="29.9898%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.66%)</title><rect x="29.7398%" y="229" width="0.6577%" height="15" fill="rgb(199,99,0)" fg:x="1040" fg:w="23"/><text x="29.9898%" y="239.50"></text></g><g><title>cfree (19 samples, 0.54%)</title><rect x="29.8542%" y="213" width="0.5433%" height="15" fill="rgb(217,217,65)" fg:x="1044" fg:w="19"/><text x="30.1042%" y="223.50"></text></g><g><title>[libc.so.6] (14 samples, 0.40%)</title><rect x="29.9971%" y="197" width="0.4003%" height="15" fill="rgb(208,208,62)" fg:x="1049" fg:w="14"/><text x="30.2471%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.71%)</title><rect x="29.7112%" y="341" width="0.7149%" height="15" fill="rgb(240,140,0)" fg:x="1039" fg:w="25"/><text x="29.9612%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (25 samples, 0.71%)</title><rect x="29.7112%" y="325" width="0.7149%" height="15" fill="rgb(192,92,0)" fg:x="1039" fg:w="25"/><text x="29.9612%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (25 samples, 0.71%)</title><rect x="29.7112%" y="309" width="0.7149%" height="15" fill="rgb(228,128,0)" fg:x="1039" fg:w="25"/><text x="29.9612%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (25 samples, 0.71%)</title><rect x="29.7112%" y="293" width="0.7149%" height="15" fill="rgb(249,149,0)" fg:x="1039" fg:w="25"/><text x="29.9612%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (25 samples, 0.71%)</title><rect x="29.7112%" y="277" width="0.7149%" height="15" fill="rgb(202,102,0)" fg:x="1039" fg:w="25"/><text x="29.9612%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.71%)</title><rect x="29.7112%" y="261" width="0.7149%" height="15" fill="rgb(193,93,0)" fg:x="1039" fg:w="25"/><text x="29.9612%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="30.3975%" y="245" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="1063" fg:w="1"/><text x="30.6475%" y="255.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.09%)</title><rect x="30.4833%" y="277" width="0.0858%" height="15" fill="rgb(202,202,60)" fg:x="1066" fg:w="3"/><text x="30.7333%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.09%)</title><rect x="30.4833%" y="261" width="0.0858%" height="15" fill="rgb(213,113,0)" fg:x="1066" fg:w="3"/><text x="30.7333%" y="271.50"></text></g><g><title>__rust_dealloc (2 samples, 0.06%)</title><rect x="30.5691%" y="277" width="0.0572%" height="15" fill="rgb(229,229,69)" fg:x="1069" fg:w="2"/><text x="30.8191%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.46%)</title><rect x="30.4261%" y="309" width="0.4575%" height="15" fill="rgb(230,130,0)" fg:x="1064" fg:w="16"/><text x="30.6761%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.46%)</title><rect x="30.4261%" y="293" width="0.4575%" height="15" fill="rgb(242,142,0)" fg:x="1064" fg:w="16"/><text x="30.6761%" y="303.50"></text></g><g><title>cfree (9 samples, 0.26%)</title><rect x="30.6263%" y="277" width="0.2574%" height="15" fill="rgb(221,221,66)" fg:x="1071" fg:w="9"/><text x="30.8763%" y="287.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="30.6548%" y="261" width="0.2288%" height="15" fill="rgb(190,190,55)" fg:x="1072" fg:w="8"/><text x="30.9048%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (43 samples, 1.23%)</title><rect x="29.6826%" y="421" width="1.2296%" height="15" fill="rgb(106,216,216)" fg:x="1038" fg:w="43"/><text x="29.9326%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (42 samples, 1.20%)</title><rect x="29.7112%" y="405" width="1.2010%" height="15" fill="rgb(73,186,186)" fg:x="1039" fg:w="42"/><text x="29.9612%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (42 samples, 1.20%)</title><rect x="29.7112%" y="389" width="1.2010%" height="15" fill="rgb(218,118,0)" fg:x="1039" fg:w="42"/><text x="29.9612%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (42 samples, 1.20%)</title><rect x="29.7112%" y="373" width="1.2010%" height="15" fill="rgb(213,113,0)" fg:x="1039" fg:w="42"/><text x="29.9612%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (42 samples, 1.20%)</title><rect x="29.7112%" y="357" width="1.2010%" height="15" fill="rgb(237,137,0)" fg:x="1039" fg:w="42"/><text x="29.9612%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (17 samples, 0.49%)</title><rect x="30.4261%" y="341" width="0.4861%" height="15" fill="rgb(219,119,0)" fg:x="1064" fg:w="17"/><text x="30.6761%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.49%)</title><rect x="30.4261%" y="325" width="0.4861%" height="15" fill="rgb(195,95,0)" fg:x="1064" fg:w="17"/><text x="30.6761%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="30.8836%" y="309" width="0.0286%" height="15" fill="rgb(212,112,0)" fg:x="1080" fg:w="1"/><text x="31.1336%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (45 samples, 1.29%)</title><rect x="29.6826%" y="501" width="1.2868%" height="15" fill="rgb(230,130,0)" fg:x="1038" fg:w="45"/><text x="29.9326%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (45 samples, 1.29%)</title><rect x="29.6826%" y="485" width="1.2868%" height="15" fill="rgb(197,97,0)" fg:x="1038" fg:w="45"/><text x="29.9326%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (45 samples, 1.29%)</title><rect x="29.6826%" y="469" width="1.2868%" height="15" fill="rgb(204,104,0)" fg:x="1038" fg:w="45"/><text x="29.9326%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 1.29%)</title><rect x="29.6826%" y="453" width="1.2868%" height="15" fill="rgb(106,216,216)" fg:x="1038" fg:w="45"/><text x="29.9326%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (45 samples, 1.29%)</title><rect x="29.6826%" y="437" width="1.2868%" height="15" fill="rgb(96,207,207)" fg:x="1038" fg:w="45"/><text x="29.9326%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2 samples, 0.06%)</title><rect x="30.9122%" y="421" width="0.0572%" height="15" fill="rgb(97,208,208)" fg:x="1081" fg:w="2"/><text x="31.1622%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.06%)</title><rect x="30.9122%" y="405" width="0.0572%" height="15" fill="rgb(196,96,0)" fg:x="1081" fg:w="2"/><text x="31.1622%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.06%)</title><rect x="30.9122%" y="389" width="0.0572%" height="15" fill="rgb(218,118,0)" fg:x="1081" fg:w="2"/><text x="31.1622%" y="399.50"></text></g><g><title>cfree (2 samples, 0.06%)</title><rect x="30.9122%" y="373" width="0.0572%" height="15" fill="rgb(208,208,62)" fg:x="1081" fg:w="2"/><text x="31.1622%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="30.9408%" y="357" width="0.0286%" height="15" fill="rgb(192,192,56)" fg:x="1082" fg:w="1"/><text x="31.1908%" y="367.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1 samples, 0.03%)</title><rect x="30.9694%" y="501" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="511.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.03%)</title><rect x="30.9694%" y="485" width="0.0286%" height="15" fill="rgb(226,126,0)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.03%)</title><rect x="30.9694%" y="469" width="0.0286%" height="15" fill="rgb(56,171,171)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.03%)</title><rect x="30.9694%" y="453" width="0.0286%" height="15" fill="rgb(98,209,209)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.03%)</title><rect x="30.9694%" y="437" width="0.0286%" height="15" fill="rgb(91,203,203)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.03%)</title><rect x="30.9694%" y="421" width="0.0286%" height="15" fill="rgb(72,185,185)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.03%)</title><rect x="30.9694%" y="405" width="0.0286%" height="15" fill="rgb(101,212,212)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="30.9694%" y="389" width="0.0286%" height="15" fill="rgb(67,180,180)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="399.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (1 samples, 0.03%)</title><rect x="30.9694%" y="373" width="0.0286%" height="15" fill="rgb(231,131,0)" fg:x="1083" fg:w="1"/><text x="31.2194%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::FullBucketsIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="31.1696%" y="389" width="0.0286%" height="15" fill="rgb(87,199,199)" fg:x="1090" fg:w="1"/><text x="31.4196%" y="399.50"></text></g><g><title>hashbrown::raw::FullBucketsIndices::next_impl (1 samples, 0.03%)</title><rect x="31.1696%" y="373" width="0.0286%" height="15" fill="rgb(55,169,169)" fg:x="1090" fg:w="1"/><text x="31.4196%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="31.1696%" y="357" width="0.0286%" height="15" fill="rgb(107,217,217)" fg:x="1090" fg:w="1"/><text x="31.4196%" y="367.50"></text></g><g><title>core::mem::swap (1 samples, 0.03%)</title><rect x="31.1982%" y="389" width="0.0286%" height="15" fill="rgb(245,145,0)" fg:x="1091" fg:w="1"/><text x="31.4482%" y="399.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.03%)</title><rect x="31.1982%" y="373" width="0.0286%" height="15" fill="rgb(192,92,0)" fg:x="1091" fg:w="1"/><text x="31.4482%" y="383.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="31.1982%" y="357" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="1091" fg:w="1"/><text x="31.4482%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.06%)</title><rect x="31.2554%" y="277" width="0.0572%" height="15" fill="rgb(204,104,0)" fg:x="1093" fg:w="2"/><text x="31.5054%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="31.2554%" y="261" width="0.0572%" height="15" fill="rgb(219,119,0)" fg:x="1093" fg:w="2"/><text x="31.5054%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.14%)</title><rect x="31.2268%" y="325" width="0.1430%" height="15" fill="rgb(241,141,0)" fg:x="1092" fg:w="5"/><text x="31.4768%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.14%)</title><rect x="31.2268%" y="309" width="0.1430%" height="15" fill="rgb(192,92,0)" fg:x="1092" fg:w="5"/><text x="31.4768%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.14%)</title><rect x="31.2268%" y="293" width="0.1430%" height="15" fill="rgb(224,124,0)" fg:x="1092" fg:w="5"/><text x="31.4768%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.06%)</title><rect x="31.3126%" y="277" width="0.0572%" height="15" fill="rgb(231,131,0)" fg:x="1095" fg:w="2"/><text x="31.5626%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="31.3411%" y="261" width="0.0286%" height="15" fill="rgb(205,105,0)" fg:x="1096" fg:w="1"/><text x="31.5911%" y="271.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.06%)</title><rect x="31.3697%" y="325" width="0.0572%" height="15" fill="rgb(221,121,0)" fg:x="1097" fg:w="2"/><text x="31.6197%" y="335.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="31.3983%" y="309" width="0.0286%" height="15" fill="rgb(244,144,0)" fg:x="1098" fg:w="1"/><text x="31.6483%" y="319.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="31.3983%" y="293" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="1098" fg:w="1"/><text x="31.6483%" y="303.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="31.3983%" y="277" width="0.0286%" height="15" fill="rgb(216,116,0)" fg:x="1098" fg:w="1"/><text x="31.6483%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="31.5413%" y="197" width="0.0286%" height="15" fill="rgb(190,90,0)" fg:x="1103" fg:w="1"/><text x="31.7913%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="31.5413%" y="181" width="0.0286%" height="15" fill="rgb(213,113,0)" fg:x="1103" fg:w="1"/><text x="31.7913%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (14 samples, 0.40%)</title><rect x="31.2268%" y="389" width="0.4003%" height="15" fill="rgb(94,205,205)" fg:x="1092" fg:w="14"/><text x="31.4768%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (14 samples, 0.40%)</title><rect x="31.2268%" y="373" width="0.4003%" height="15" fill="rgb(98,209,209)" fg:x="1092" fg:w="14"/><text x="31.4768%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.40%)</title><rect x="31.2268%" y="357" width="0.4003%" height="15" fill="rgb(107,217,217)" fg:x="1092" fg:w="14"/><text x="31.4768%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.40%)</title><rect x="31.2268%" y="341" width="0.4003%" height="15" fill="rgb(245,145,0)" fg:x="1092" fg:w="14"/><text x="31.4768%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.20%)</title><rect x="31.4269%" y="325" width="0.2002%" height="15" fill="rgb(245,145,0)" fg:x="1099" fg:w="7"/><text x="31.6769%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (7 samples, 0.20%)</title><rect x="31.4269%" y="309" width="0.2002%" height="15" fill="rgb(66,180,180)" fg:x="1099" fg:w="7"/><text x="31.6769%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (7 samples, 0.20%)</title><rect x="31.4269%" y="293" width="0.2002%" height="15" fill="rgb(192,92,0)" fg:x="1099" fg:w="7"/><text x="31.6769%" y="303.50"></text></g><g><title>core::hash::Hasher::write_isize (7 samples, 0.20%)</title><rect x="31.4269%" y="277" width="0.2002%" height="15" fill="rgb(219,119,0)" fg:x="1099" fg:w="7"/><text x="31.6769%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.20%)</title><rect x="31.4269%" y="261" width="0.2002%" height="15" fill="rgb(196,96,0)" fg:x="1099" fg:w="7"/><text x="31.6769%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.20%)</title><rect x="31.4269%" y="245" width="0.2002%" height="15" fill="rgb(220,120,0)" fg:x="1099" fg:w="7"/><text x="31.6769%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.20%)</title><rect x="31.4269%" y="229" width="0.2002%" height="15" fill="rgb(250,150,0)" fg:x="1099" fg:w="7"/><text x="31.6769%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.20%)</title><rect x="31.4269%" y="213" width="0.2002%" height="15" fill="rgb(204,104,0)" fg:x="1099" fg:w="7"/><text x="31.6769%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.06%)</title><rect x="31.5699%" y="197" width="0.0572%" height="15" fill="rgb(226,126,0)" fg:x="1104" fg:w="2"/><text x="31.8199%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket_ptr (3 samples, 0.09%)</title><rect x="31.6271%" y="389" width="0.0858%" height="15" fill="rgb(97,208,208)" fg:x="1106" fg:w="3"/><text x="31.8771%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.09%)</title><rect x="31.6271%" y="373" width="0.0858%" height="15" fill="rgb(190,90,0)" fg:x="1106" fg:w="3"/><text x="31.8771%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="31.7129%" y="341" width="0.0286%" height="15" fill="rgb(93,204,204)" fg:x="1109" fg:w="1"/><text x="31.9629%" y="351.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (1 samples, 0.03%)</title><rect x="31.7129%" y="325" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="1109" fg:w="1"/><text x="31.9629%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (6 samples, 0.17%)</title><rect x="31.7129%" y="357" width="0.1716%" height="15" fill="rgb(81,194,194)" fg:x="1109" fg:w="6"/><text x="31.9629%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.14%)</title><rect x="31.7415%" y="341" width="0.1430%" height="15" fill="rgb(77,189,189)" fg:x="1110" fg:w="5"/><text x="31.9915%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.14%)</title><rect x="31.7415%" y="325" width="0.1430%" height="15" fill="rgb(249,149,0)" fg:x="1110" fg:w="5"/><text x="31.9915%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (2 samples, 0.06%)</title><rect x="31.8845%" y="357" width="0.0572%" height="15" fill="rgb(53,168,168)" fg:x="1115" fg:w="2"/><text x="32.1345%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (2 samples, 0.06%)</title><rect x="31.8845%" y="341" width="0.0572%" height="15" fill="rgb(106,216,216)" fg:x="1115" fg:w="2"/><text x="32.1345%" y="351.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.06%)</title><rect x="31.8845%" y="325" width="0.0572%" height="15" fill="rgb(65,178,178)" fg:x="1115" fg:w="2"/><text x="32.1345%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (11 samples, 0.31%)</title><rect x="31.7129%" y="389" width="0.3146%" height="15" fill="rgb(79,191,191)" fg:x="1109" fg:w="11"/><text x="31.9629%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (11 samples, 0.31%)</title><rect x="31.7129%" y="373" width="0.3146%" height="15" fill="rgb(59,174,174)" fg:x="1109" fg:w="11"/><text x="31.9629%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.09%)</title><rect x="31.9417%" y="357" width="0.0858%" height="15" fill="rgb(100,211,211)" fg:x="1117" fg:w="3"/><text x="32.1917%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.09%)</title><rect x="31.9417%" y="341" width="0.0858%" height="15" fill="rgb(205,105,0)" fg:x="1117" fg:w="3"/><text x="32.1917%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.09%)</title><rect x="31.9417%" y="325" width="0.0858%" height="15" fill="rgb(212,112,0)" fg:x="1117" fg:w="3"/><text x="32.1917%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (34 samples, 0.97%)</title><rect x="31.1410%" y="469" width="0.9723%" height="15" fill="rgb(63,177,177)" fg:x="1089" fg:w="34"/><text x="31.3910%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (34 samples, 0.97%)</title><rect x="31.1410%" y="453" width="0.9723%" height="15" fill="rgb(101,212,212)" fg:x="1089" fg:w="34"/><text x="31.3910%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (33 samples, 0.94%)</title><rect x="31.1696%" y="437" width="0.9437%" height="15" fill="rgb(94,205,205)" fg:x="1090" fg:w="33"/><text x="31.4196%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (33 samples, 0.94%)</title><rect x="31.1696%" y="421" width="0.9437%" height="15" fill="rgb(57,172,172)" fg:x="1090" fg:w="33"/><text x="31.4196%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (33 samples, 0.94%)</title><rect x="31.1696%" y="405" width="0.9437%" height="15" fill="rgb(94,205,205)" fg:x="1090" fg:w="33"/><text x="31.4196%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (3 samples, 0.09%)</title><rect x="32.0275%" y="389" width="0.0858%" height="15" fill="rgb(68,181,181)" fg:x="1120" fg:w="3"/><text x="32.2775%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (3 samples, 0.09%)</title><rect x="32.0275%" y="373" width="0.0858%" height="15" fill="rgb(96,207,207)" fg:x="1120" fg:w="3"/><text x="32.2775%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.09%)</title><rect x="32.0275%" y="357" width="0.0858%" height="15" fill="rgb(70,183,183)" fg:x="1120" fg:w="3"/><text x="32.2775%" y="367.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.09%)</title><rect x="32.0275%" y="341" width="0.0858%" height="15" fill="rgb(59,173,173)" fg:x="1120" fg:w="3"/><text x="32.2775%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.09%)</title><rect x="32.0275%" y="325" width="0.0858%" height="15" fill="rgb(216,116,0)" fg:x="1120" fg:w="3"/><text x="32.2775%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.09%)</title><rect x="32.0275%" y="309" width="0.0858%" height="15" fill="rgb(206,106,0)" fg:x="1120" fg:w="3"/><text x="32.2775%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.09%)</title><rect x="32.0275%" y="293" width="0.0858%" height="15" fill="rgb(212,112,0)" fg:x="1120" fg:w="3"/><text x="32.2775%" y="303.50"></text></g><g><title>malloc (2 samples, 0.06%)</title><rect x="32.0560%" y="277" width="0.0572%" height="15" fill="rgb(197,197,58)" fg:x="1121" fg:w="2"/><text x="32.3060%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="32.0560%" y="261" width="0.0572%" height="15" fill="rgb(180,180,52)" fg:x="1121" fg:w="2"/><text x="32.3060%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="32.1704%" y="373" width="0.0286%" height="15" fill="rgb(211,111,0)" fg:x="1125" fg:w="1"/><text x="32.4204%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.11%)</title><rect x="32.1418%" y="437" width="0.1144%" height="15" fill="rgb(201,101,0)" fg:x="1124" fg:w="4"/><text x="32.3918%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.11%)</title><rect x="32.1418%" y="421" width="0.1144%" height="15" fill="rgb(212,112,0)" fg:x="1124" fg:w="4"/><text x="32.3918%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.11%)</title><rect x="32.1418%" y="405" width="0.1144%" height="15" fill="rgb(206,106,0)" fg:x="1124" fg:w="4"/><text x="32.3918%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.11%)</title><rect x="32.1418%" y="389" width="0.1144%" height="15" fill="rgb(208,108,0)" fg:x="1124" fg:w="4"/><text x="32.3918%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="32.1990%" y="373" width="0.0572%" height="15" fill="rgb(222,122,0)" fg:x="1126" fg:w="2"/><text x="32.4490%" y="383.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.03%)</title><rect x="32.2562%" y="437" width="0.0286%" height="15" fill="rgb(232,132,0)" fg:x="1128" fg:w="1"/><text x="32.5062%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.34%)</title><rect x="32.1132%" y="469" width="0.3432%" height="15" fill="rgb(64,177,177)" fg:x="1123" fg:w="12"/><text x="32.3632%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.34%)</title><rect x="32.1132%" y="453" width="0.3432%" height="15" fill="rgb(197,97,0)" fg:x="1123" fg:w="12"/><text x="32.3632%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.17%)</title><rect x="32.2848%" y="437" width="0.1716%" height="15" fill="rgb(227,127,0)" fg:x="1129" fg:w="6"/><text x="32.5348%" y="447.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (6 samples, 0.17%)</title><rect x="32.2848%" y="421" width="0.1716%" height="15" fill="rgb(93,204,204)" fg:x="1129" fg:w="6"/><text x="32.5348%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (6 samples, 0.17%)</title><rect x="32.2848%" y="405" width="0.1716%" height="15" fill="rgb(230,130,0)" fg:x="1129" fg:w="6"/><text x="32.5348%" y="415.50"></text></g><g><title>core::hash::Hasher::write_isize (6 samples, 0.17%)</title><rect x="32.2848%" y="389" width="0.1716%" height="15" fill="rgb(241,141,0)" fg:x="1129" fg:w="6"/><text x="32.5348%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.17%)</title><rect x="32.2848%" y="373" width="0.1716%" height="15" fill="rgb(222,122,0)" fg:x="1129" fg:w="6"/><text x="32.5348%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.14%)</title><rect x="32.3134%" y="357" width="0.1430%" height="15" fill="rgb(254,154,0)" fg:x="1130" fg:w="5"/><text x="32.5634%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.14%)</title><rect x="32.3134%" y="341" width="0.1430%" height="15" fill="rgb(242,142,0)" fg:x="1130" fg:w="5"/><text x="32.5634%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.14%)</title><rect x="32.3134%" y="325" width="0.1430%" height="15" fill="rgb(206,106,0)" fg:x="1130" fg:w="5"/><text x="32.5634%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.06%)</title><rect x="32.3992%" y="309" width="0.0572%" height="15" fill="rgb(214,114,0)" fg:x="1133" fg:w="2"/><text x="32.6492%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="32.4850%" y="437" width="0.0286%" height="15" fill="rgb(69,182,182)" fg:x="1136" fg:w="1"/><text x="32.7350%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="32.5136%" y="437" width="0.0286%" height="15" fill="rgb(84,196,196)" fg:x="1137" fg:w="1"/><text x="32.7636%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="32.5136%" y="421" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="1137" fg:w="1"/><text x="32.7636%" y="431.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (209 samples, 5.98%)</title><rect x="26.5942%" y="517" width="5.9766%" height="15" fill="rgb(87,198,198)" fg:x="930" fg:w="209"/><text x="26.8442%" y="527.50">alc::key..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (55 samples, 1.57%)</title><rect x="30.9980%" y="501" width="1.5728%" height="15" fill="rgb(254,154,0)" fg:x="1084" fg:w="55"/><text x="31.2480%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (53 samples, 1.52%)</title><rect x="31.0552%" y="485" width="1.5156%" height="15" fill="rgb(68,181,181)" fg:x="1086" fg:w="53"/><text x="31.3052%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.11%)</title><rect x="32.4564%" y="469" width="0.1144%" height="15" fill="rgb(91,203,203)" fg:x="1135" fg:w="4"/><text x="32.7064%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.11%)</title><rect x="32.4564%" y="453" width="0.1144%" height="15" fill="rgb(67,181,181)" fg:x="1135" fg:w="4"/><text x="32.7064%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.03%)</title><rect x="32.5422%" y="437" width="0.0286%" height="15" fill="rgb(79,191,191)" fg:x="1138" fg:w="1"/><text x="32.7922%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="32.5422%" y="421" width="0.0286%" height="15" fill="rgb(58,173,173)" fg:x="1138" fg:w="1"/><text x="32.7922%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="32.5422%" y="405" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="1138" fg:w="1"/><text x="32.7922%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="32.5708%" y="501" width="0.0286%" height="15" fill="rgb(226,126,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="32.5708%" y="485" width="0.0286%" height="15" fill="rgb(196,96,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (1 samples, 0.03%)</title><rect x="32.5708%" y="469" width="0.0286%" height="15" fill="rgb(239,139,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.03%)</title><rect x="32.5708%" y="453" width="0.0286%" height="15" fill="rgb(233,133,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.03%)</title><rect x="32.5708%" y="437" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.03%)</title><rect x="32.5708%" y="421" width="0.0286%" height="15" fill="rgb(239,139,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.03%)</title><rect x="32.5708%" y="405" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="32.5708%" y="389" width="0.0286%" height="15" fill="rgb(210,110,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="32.5708%" y="373" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="32.5708%" y="357" width="0.0286%" height="15" fill="rgb(244,144,0)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="367.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="32.5708%" y="341" width="0.0286%" height="15" fill="rgb(218,218,65)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="32.5708%" y="325" width="0.0286%" height="15" fill="rgb(222,222,67)" fg:x="1139" fg:w="1"/><text x="32.8208%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="32.5994%" y="405" width="0.0286%" height="15" fill="rgb(100,211,211)" fg:x="1140" fg:w="1"/><text x="32.8494%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.03%)</title><rect x="32.5994%" y="389" width="0.0286%" height="15" fill="rgb(59,173,173)" fg:x="1140" fg:w="1"/><text x="32.8494%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.03%)</title><rect x="32.5994%" y="373" width="0.0286%" height="15" fill="rgb(84,196,196)" fg:x="1140" fg:w="1"/><text x="32.8494%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.03%)</title><rect x="32.5994%" y="357" width="0.0286%" height="15" fill="rgb(228,128,0)" fg:x="1140" fg:w="1"/><text x="32.8494%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="32.5994%" y="341" width="0.0286%" height="15" fill="rgb(254,154,0)" fg:x="1140" fg:w="1"/><text x="32.8494%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.11%)</title><rect x="32.6280%" y="245" width="0.1144%" height="15" fill="rgb(191,91,0)" fg:x="1141" fg:w="4"/><text x="32.8780%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.11%)</title><rect x="32.6280%" y="229" width="0.1144%" height="15" fill="rgb(211,111,0)" fg:x="1141" fg:w="4"/><text x="32.8780%" y="239.50"></text></g><g><title>cfree (4 samples, 0.11%)</title><rect x="32.6280%" y="213" width="0.1144%" height="15" fill="rgb(179,179,51)" fg:x="1141" fg:w="4"/><text x="32.8780%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="32.6280%" y="197" width="0.1144%" height="15" fill="rgb(181,181,52)" fg:x="1141" fg:w="4"/><text x="32.8780%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.20%)</title><rect x="32.6280%" y="341" width="0.2002%" height="15" fill="rgb(201,101,0)" fg:x="1141" fg:w="7"/><text x="32.8780%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (7 samples, 0.20%)</title><rect x="32.6280%" y="325" width="0.2002%" height="15" fill="rgb(245,145,0)" fg:x="1141" fg:w="7"/><text x="32.8780%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (7 samples, 0.20%)</title><rect x="32.6280%" y="309" width="0.2002%" height="15" fill="rgb(205,105,0)" fg:x="1141" fg:w="7"/><text x="32.8780%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (7 samples, 0.20%)</title><rect x="32.6280%" y="293" width="0.2002%" height="15" fill="rgb(232,132,0)" fg:x="1141" fg:w="7"/><text x="32.8780%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (7 samples, 0.20%)</title><rect x="32.6280%" y="277" width="0.2002%" height="15" fill="rgb(228,128,0)" fg:x="1141" fg:w="7"/><text x="32.8780%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.20%)</title><rect x="32.6280%" y="261" width="0.2002%" height="15" fill="rgb(197,97,0)" fg:x="1141" fg:w="7"/><text x="32.8780%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.09%)</title><rect x="32.7424%" y="245" width="0.0858%" height="15" fill="rgb(246,146,0)" fg:x="1145" fg:w="3"/><text x="32.9924%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.06%)</title><rect x="32.7709%" y="229" width="0.0572%" height="15" fill="rgb(237,137,0)" fg:x="1146" fg:w="2"/><text x="33.0209%" y="239.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_new_layouts (446 samples, 12.75%)</title><rect x="20.1887%" y="549" width="12.7538%" height="15" fill="rgb(50,165,165)" fg:x="706" fg:w="446"/><text x="20.4387%" y="559.50">alc::optimizer::Lay..</text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::swap (266 samples, 7.61%)</title><rect x="25.3360%" y="533" width="7.6065%" height="15" fill="rgb(70,184,184)" fg:x="886" fg:w="266"/><text x="25.5860%" y="543.50">alc::keybo..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (13 samples, 0.37%)</title><rect x="32.5708%" y="517" width="0.3717%" height="15" fill="rgb(227,127,0)" fg:x="1139" fg:w="13"/><text x="32.8208%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (12 samples, 0.34%)</title><rect x="32.5994%" y="501" width="0.3432%" height="15" fill="rgb(197,97,0)" fg:x="1140" fg:w="12"/><text x="32.8494%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (12 samples, 0.34%)</title><rect x="32.5994%" y="485" width="0.3432%" height="15" fill="rgb(218,118,0)" fg:x="1140" fg:w="12"/><text x="32.8494%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (12 samples, 0.34%)</title><rect x="32.5994%" y="469" width="0.3432%" height="15" fill="rgb(195,95,0)" fg:x="1140" fg:w="12"/><text x="32.8494%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.34%)</title><rect x="32.5994%" y="453" width="0.3432%" height="15" fill="rgb(72,185,185)" fg:x="1140" fg:w="12"/><text x="32.8494%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (12 samples, 0.34%)</title><rect x="32.5994%" y="437" width="0.3432%" height="15" fill="rgb(73,186,186)" fg:x="1140" fg:w="12"/><text x="32.8494%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (12 samples, 0.34%)</title><rect x="32.5994%" y="421" width="0.3432%" height="15" fill="rgb(65,178,178)" fg:x="1140" fg:w="12"/><text x="32.8494%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (11 samples, 0.31%)</title><rect x="32.6280%" y="405" width="0.3146%" height="15" fill="rgb(53,167,167)" fg:x="1141" fg:w="11"/><text x="32.8780%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (11 samples, 0.31%)</title><rect x="32.6280%" y="389" width="0.3146%" height="15" fill="rgb(226,126,0)" fg:x="1141" fg:w="11"/><text x="32.8780%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (11 samples, 0.31%)</title><rect x="32.6280%" y="373" width="0.3146%" height="15" fill="rgb(199,99,0)" fg:x="1141" fg:w="11"/><text x="32.8780%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (11 samples, 0.31%)</title><rect x="32.6280%" y="357" width="0.3146%" height="15" fill="rgb(250,150,0)" fg:x="1141" fg:w="11"/><text x="32.8780%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.11%)</title><rect x="32.8281%" y="341" width="0.1144%" height="15" fill="rgb(243,143,0)" fg:x="1148" fg:w="4"/><text x="33.0781%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="32.8281%" y="325" width="0.1144%" height="15" fill="rgb(193,93,0)" fg:x="1148" fg:w="4"/><text x="33.0781%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.11%)</title><rect x="32.8281%" y="309" width="0.1144%" height="15" fill="rgb(217,117,0)" fg:x="1148" fg:w="4"/><text x="33.0781%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.11%)</title><rect x="32.8281%" y="293" width="0.1144%" height="15" fill="rgb(251,151,0)" fg:x="1148" fg:w="4"/><text x="33.0781%" y="303.50"></text></g><g><title>cfree (4 samples, 0.11%)</title><rect x="32.8281%" y="277" width="0.1144%" height="15" fill="rgb(189,189,55)" fg:x="1148" fg:w="4"/><text x="33.0781%" y="287.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="32.8567%" y="261" width="0.0858%" height="15" fill="rgb(178,178,51)" fg:x="1149" fg:w="3"/><text x="33.1067%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.49%)</title><rect x="32.9425%" y="357" width="0.4861%" height="15" fill="rgb(227,127,0)" fg:x="1152" fg:w="17"/><text x="33.1925%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.49%)</title><rect x="32.9425%" y="341" width="0.4861%" height="15" fill="rgb(240,140,0)" fg:x="1152" fg:w="17"/><text x="33.1925%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.49%)</title><rect x="32.9425%" y="325" width="0.4861%" height="15" fill="rgb(196,96,0)" fg:x="1152" fg:w="17"/><text x="33.1925%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.49%)</title><rect x="32.9425%" y="309" width="0.4861%" height="15" fill="rgb(242,142,0)" fg:x="1152" fg:w="17"/><text x="33.1925%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.49%)</title><rect x="32.9425%" y="293" width="0.4861%" height="15" fill="rgb(239,139,0)" fg:x="1152" fg:w="17"/><text x="33.1925%" y="303.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.49%)</title><rect x="32.9425%" y="277" width="0.4861%" height="15" fill="rgb(248,148,0)" fg:x="1152" fg:w="17"/><text x="33.1925%" y="287.50"></text></g><g><title>malloc (17 samples, 0.49%)</title><rect x="32.9425%" y="261" width="0.4861%" height="15" fill="rgb(225,225,68)" fg:x="1152" fg:w="17"/><text x="33.1925%" y="271.50"></text></g><g><title>[libc.so.6] (17 samples, 0.49%)</title><rect x="32.9425%" y="245" width="0.4861%" height="15" fill="rgb(217,217,65)" fg:x="1152" fg:w="17"/><text x="33.1925%" y="255.50"></text></g><g><title>[libc.so.6] (16 samples, 0.46%)</title><rect x="32.9711%" y="229" width="0.4575%" height="15" fill="rgb(226,226,68)" fg:x="1153" fg:w="16"/><text x="33.2211%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="33.4001%" y="213" width="0.0286%" height="15" fill="rgb(183,183,53)" fg:x="1168" fg:w="1"/><text x="33.6501%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.66%)</title><rect x="32.9425%" y="517" width="0.6577%" height="15" fill="rgb(243,143,0)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.66%)</title><rect x="32.9425%" y="501" width="0.6577%" height="15" fill="rgb(247,147,0)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.66%)</title><rect x="32.9425%" y="485" width="0.6577%" height="15" fill="rgb(210,110,0)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.66%)</title><rect x="32.9425%" y="469" width="0.6577%" height="15" fill="rgb(63,177,177)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="479.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (23 samples, 0.66%)</title><rect x="32.9425%" y="453" width="0.6577%" height="15" fill="rgb(93,205,205)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="463.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.66%)</title><rect x="32.9425%" y="437" width="0.6577%" height="15" fill="rgb(75,188,188)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.66%)</title><rect x="32.9425%" y="421" width="0.6577%" height="15" fill="rgb(224,124,0)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.66%)</title><rect x="32.9425%" y="405" width="0.6577%" height="15" fill="rgb(212,112,0)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.66%)</title><rect x="32.9425%" y="389" width="0.6577%" height="15" fill="rgb(223,123,0)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.66%)</title><rect x="32.9425%" y="373" width="0.6577%" height="15" fill="rgb(96,207,207)" fg:x="1152" fg:w="23"/><text x="33.1925%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.17%)</title><rect x="33.4287%" y="357" width="0.1716%" height="15" fill="rgb(229,129,0)" fg:x="1169" fg:w="6"/><text x="33.6787%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.17%)</title><rect x="33.4287%" y="341" width="0.1716%" height="15" fill="rgb(196,96,0)" fg:x="1169" fg:w="6"/><text x="33.6787%" y="351.50"></text></g><g><title>[libc.so.6] (6 samples, 0.17%)</title><rect x="33.4287%" y="325" width="0.1716%" height="15" fill="rgb(207,207,61)" fg:x="1169" fg:w="6"/><text x="33.6787%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="33.6002%" y="437" width="0.0572%" height="15" fill="rgb(52,167,167)" fg:x="1175" fg:w="2"/><text x="33.8502%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.03%)</title><rect x="33.6288%" y="421" width="0.0286%" height="15" fill="rgb(54,169,169)" fg:x="1176" fg:w="1"/><text x="33.8788%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="33.6288%" y="405" width="0.0286%" height="15" fill="rgb(104,215,215)" fg:x="1176" fg:w="1"/><text x="33.8788%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.03%)</title><rect x="33.6288%" y="389" width="0.0286%" height="15" fill="rgb(109,219,219)" fg:x="1176" fg:w="1"/><text x="33.8788%" y="399.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="33.6574%" y="421" width="0.0286%" height="15" fill="rgb(72,185,185)" fg:x="1177" fg:w="1"/><text x="33.9074%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.83%)</title><rect x="33.8862%" y="229" width="0.8293%" height="15" fill="rgb(247,147,0)" fg:x="1185" fg:w="29"/><text x="34.1362%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.83%)</title><rect x="33.8862%" y="213" width="0.8293%" height="15" fill="rgb(220,120,0)" fg:x="1185" fg:w="29"/><text x="34.1362%" y="223.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.83%)</title><rect x="33.8862%" y="197" width="0.8293%" height="15" fill="rgb(248,148,0)" fg:x="1185" fg:w="29"/><text x="34.1362%" y="207.50"></text></g><g><title>malloc (29 samples, 0.83%)</title><rect x="33.8862%" y="181" width="0.8293%" height="15" fill="rgb(215,215,64)" fg:x="1185" fg:w="29"/><text x="34.1362%" y="191.50"></text></g><g><title>[libc.so.6] (20 samples, 0.57%)</title><rect x="34.1436%" y="165" width="0.5719%" height="15" fill="rgb(200,200,59)" fg:x="1194" fg:w="20"/><text x="34.3936%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.92%)</title><rect x="33.8290%" y="277" width="0.9151%" height="15" fill="rgb(254,154,0)" fg:x="1183" fg:w="32"/><text x="34.0790%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.92%)</title><rect x="33.8290%" y="261" width="0.9151%" height="15" fill="rgb(227,127,0)" fg:x="1183" fg:w="32"/><text x="34.0790%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.92%)</title><rect x="33.8290%" y="245" width="0.9151%" height="15" fill="rgb(231,131,0)" fg:x="1183" fg:w="32"/><text x="34.0790%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="34.7155%" y="229" width="0.0286%" height="15" fill="rgb(207,107,0)" fg:x="1214" fg:w="1"/><text x="34.9655%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="34.7155%" y="213" width="0.0286%" height="15" fill="rgb(225,125,0)" fg:x="1214" fg:w="1"/><text x="34.9655%" y="223.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (41 samples, 1.17%)</title><rect x="33.8290%" y="357" width="1.1724%" height="15" fill="rgb(101,211,211)" fg:x="1183" fg:w="41"/><text x="34.0790%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 1.17%)</title><rect x="33.8290%" y="341" width="1.1724%" height="15" fill="rgb(203,103,0)" fg:x="1183" fg:w="41"/><text x="34.0790%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 1.17%)</title><rect x="33.8290%" y="325" width="1.1724%" height="15" fill="rgb(219,119,0)" fg:x="1183" fg:w="41"/><text x="34.0790%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 1.17%)</title><rect x="33.8290%" y="309" width="1.1724%" height="15" fill="rgb(233,133,0)" fg:x="1183" fg:w="41"/><text x="34.0790%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 1.17%)</title><rect x="33.8290%" y="293" width="1.1724%" height="15" fill="rgb(65,179,179)" fg:x="1183" fg:w="41"/><text x="34.0790%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.26%)</title><rect x="34.7441%" y="277" width="0.2574%" height="15" fill="rgb(247,147,0)" fg:x="1215" fg:w="9"/><text x="34.9941%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.26%)</title><rect x="34.7441%" y="261" width="0.2574%" height="15" fill="rgb(212,112,0)" fg:x="1215" fg:w="9"/><text x="34.9941%" y="271.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="34.7727%" y="245" width="0.2288%" height="15" fill="rgb(185,185,53)" fg:x="1216" fg:w="8"/><text x="35.0227%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="35.0014%" y="357" width="0.0858%" height="15" fill="rgb(197,97,0)" fg:x="1224" fg:w="3"/><text x="35.2514%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="35.0300%" y="341" width="0.0572%" height="15" fill="rgb(207,107,0)" fg:x="1225" fg:w="2"/><text x="35.2800%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="35.0300%" y="325" width="0.0572%" height="15" fill="rgb(239,139,0)" fg:x="1225" fg:w="2"/><text x="35.2800%" y="335.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.06%)</title><rect x="35.0300%" y="309" width="0.0572%" height="15" fill="rgb(204,104,0)" fg:x="1225" fg:w="2"/><text x="35.2800%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="35.0872%" y="261" width="0.0286%" height="15" fill="rgb(196,196,57)" fg:x="1227" fg:w="1"/><text x="35.3372%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="35.0872%" y="245" width="0.0286%" height="15" fill="rgb(205,105,0)" fg:x="1227" fg:w="1"/><text x="35.3372%" y="255.50"></text></g><g><title>core::clone::Clone::clone (64 samples, 1.83%)</title><rect x="33.6574%" y="437" width="1.8301%" height="15" fill="rgb(226,126,0)" fg:x="1177" fg:w="64"/><text x="33.9074%" y="447.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (63 samples, 1.80%)</title><rect x="33.6860%" y="421" width="1.8015%" height="15" fill="rgb(217,117,0)" fg:x="1178" fg:w="63"/><text x="33.9360%" y="431.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 1.80%)</title><rect x="33.6860%" y="405" width="1.8015%" height="15" fill="rgb(237,137,0)" fg:x="1178" fg:w="63"/><text x="33.9360%" y="415.50">a..</text></g><g><title>alloc::slice::hack::to_vec (63 samples, 1.80%)</title><rect x="33.6860%" y="389" width="1.8015%" height="15" fill="rgb(242,142,0)" fg:x="1178" fg:w="63"/><text x="33.9360%" y="399.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 1.80%)</title><rect x="33.6860%" y="373" width="1.8015%" height="15" fill="rgb(61,175,175)" fg:x="1178" fg:w="63"/><text x="33.9360%" y="383.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.40%)</title><rect x="35.0872%" y="357" width="0.4003%" height="15" fill="rgb(190,90,0)" fg:x="1227" fg:w="14"/><text x="35.3372%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.40%)</title><rect x="35.0872%" y="341" width="0.4003%" height="15" fill="rgb(195,95,0)" fg:x="1227" fg:w="14"/><text x="35.3372%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.40%)</title><rect x="35.0872%" y="325" width="0.4003%" height="15" fill="rgb(241,141,0)" fg:x="1227" fg:w="14"/><text x="35.3372%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.40%)</title><rect x="35.0872%" y="309" width="0.4003%" height="15" fill="rgb(223,123,0)" fg:x="1227" fg:w="14"/><text x="35.3372%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.40%)</title><rect x="35.0872%" y="293" width="0.4003%" height="15" fill="rgb(253,153,0)" fg:x="1227" fg:w="14"/><text x="35.3372%" y="303.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.40%)</title><rect x="35.0872%" y="277" width="0.4003%" height="15" fill="rgb(198,98,0)" fg:x="1227" fg:w="14"/><text x="35.3372%" y="287.50"></text></g><g><title>malloc (13 samples, 0.37%)</title><rect x="35.1158%" y="261" width="0.3717%" height="15" fill="rgb(193,193,56)" fg:x="1228" fg:w="13"/><text x="35.3658%" y="271.50"></text></g><g><title>[libc.so.6] (11 samples, 0.31%)</title><rect x="35.1730%" y="245" width="0.3146%" height="15" fill="rgb(192,192,56)" fg:x="1230" fg:w="11"/><text x="35.4230%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="35.4590%" y="229" width="0.0286%" height="15" fill="rgb(199,199,58)" fg:x="1240" fg:w="1"/><text x="35.7090%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6 samples, 0.17%)</title><rect x="35.4876%" y="437" width="0.1716%" height="15" fill="rgb(51,166,166)" fg:x="1241" fg:w="6"/><text x="35.7376%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.17%)</title><rect x="35.4876%" y="421" width="0.1716%" height="15" fill="rgb(241,141,0)" fg:x="1241" fg:w="6"/><text x="35.7376%" y="431.50"></text></g><g><title>core::ptr::write (6 samples, 0.17%)</title><rect x="35.4876%" y="405" width="0.1716%" height="15" fill="rgb(253,153,0)" fg:x="1241" fg:w="6"/><text x="35.7376%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (73 samples, 2.09%)</title><rect x="33.6002%" y="469" width="2.0875%" height="15" fill="rgb(101,212,212)" fg:x="1175" fg:w="73"/><text x="33.8502%" y="479.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (73 samples, 2.09%)</title><rect x="33.6002%" y="453" width="2.0875%" height="15" fill="rgb(62,176,176)" fg:x="1175" fg:w="73"/><text x="33.8502%" y="463.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (1 samples, 0.03%)</title><rect x="35.6591%" y="437" width="0.0286%" height="15" fill="rgb(67,180,180)" fg:x="1247" fg:w="1"/><text x="35.9091%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (1 samples, 0.03%)</title><rect x="35.6591%" y="421" width="0.0286%" height="15" fill="rgb(81,194,194)" fg:x="1247" fg:w="1"/><text x="35.9091%" y="431.50"></text></g><g><title>hashbrown::raw::offset_from (1 samples, 0.03%)</title><rect x="35.6591%" y="405" width="0.0286%" height="15" fill="rgb(68,181,181)" fg:x="1247" fg:w="1"/><text x="35.9091%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (1 samples, 0.03%)</title><rect x="35.6591%" y="389" width="0.0286%" height="15" fill="rgb(214,114,0)" fg:x="1247" fg:w="1"/><text x="35.9091%" y="399.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (97 samples, 2.77%)</title><rect x="32.9425%" y="533" width="2.7738%" height="15" fill="rgb(63,177,177)" fg:x="1152" fg:w="97"/><text x="33.1925%" y="543.50">&lt;a..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (74 samples, 2.12%)</title><rect x="33.6002%" y="517" width="2.1161%" height="15" fill="rgb(195,95,0)" fg:x="1175" fg:w="74"/><text x="33.8502%" y="527.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (74 samples, 2.12%)</title><rect x="33.6002%" y="501" width="2.1161%" height="15" fill="rgb(78,190,190)" fg:x="1175" fg:w="74"/><text x="33.8502%" y="511.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 2.12%)</title><rect x="33.6002%" y="485" width="2.1161%" height="15" fill="rgb(96,207,207)" fg:x="1175" fg:w="74"/><text x="33.8502%" y="495.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.03%)</title><rect x="35.6877%" y="469" width="0.0286%" height="15" fill="rgb(100,211,211)" fg:x="1248" fg:w="1"/><text x="35.9377%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.03%)</title><rect x="35.6877%" y="453" width="0.0286%" height="15" fill="rgb(92,204,204)" fg:x="1248" fg:w="1"/><text x="35.9377%" y="463.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.03%)</title><rect x="35.6877%" y="437" width="0.0286%" height="15" fill="rgb(56,171,171)" fg:x="1248" fg:w="1"/><text x="35.9377%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="35.6877%" y="421" width="0.0286%" height="15" fill="rgb(233,133,0)" fg:x="1248" fg:w="1"/><text x="35.9377%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="35.6877%" y="405" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="1248" fg:w="1"/><text x="35.9377%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="35.6877%" y="389" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="1248" fg:w="1"/><text x="35.9377%" y="399.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="35.6877%" y="373" width="0.0286%" height="15" fill="rgb(223,223,67)" fg:x="1248" fg:w="1"/><text x="35.9377%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="35.6877%" y="357" width="0.0286%" height="15" fill="rgb(213,213,63)" fg:x="1248" fg:w="1"/><text x="35.9377%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="35.7449%" y="453" width="0.0286%" height="15" fill="rgb(97,208,208)" fg:x="1250" fg:w="1"/><text x="35.9949%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="35.7449%" y="437" width="0.0286%" height="15" fill="rgb(245,145,0)" fg:x="1250" fg:w="1"/><text x="35.9949%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.03%)</title><rect x="35.7449%" y="421" width="0.0286%" height="15" fill="rgb(227,127,0)" fg:x="1250" fg:w="1"/><text x="35.9949%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.03%)</title><rect x="35.7735%" y="405" width="0.0286%" height="15" fill="rgb(66,180,180)" fg:x="1251" fg:w="1"/><text x="36.0235%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.03%)</title><rect x="35.7735%" y="389" width="0.0286%" height="15" fill="rgb(97,208,208)" fg:x="1251" fg:w="1"/><text x="36.0235%" y="399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.03%)</title><rect x="35.7735%" y="373" width="0.0286%" height="15" fill="rgb(62,176,176)" fg:x="1251" fg:w="1"/><text x="36.0235%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="35.7735%" y="357" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="1251" fg:w="1"/><text x="36.0235%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.03%)</title><rect x="35.7735%" y="341" width="0.0286%" height="15" fill="rgb(236,136,0)" fg:x="1251" fg:w="1"/><text x="36.0235%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (3 samples, 0.09%)</title><rect x="35.7449%" y="517" width="0.0858%" height="15" fill="rgb(215,115,0)" fg:x="1250" fg:w="3"/><text x="35.9949%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.09%)</title><rect x="35.7449%" y="501" width="0.0858%" height="15" fill="rgb(223,123,0)" fg:x="1250" fg:w="3"/><text x="35.9949%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.09%)</title><rect x="35.7449%" y="485" width="0.0858%" height="15" fill="rgb(87,199,199)" fg:x="1250" fg:w="3"/><text x="35.9949%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.09%)</title><rect x="35.7449%" y="469" width="0.0858%" height="15" fill="rgb(56,170,170)" fg:x="1250" fg:w="3"/><text x="35.9949%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.06%)</title><rect x="35.7735%" y="453" width="0.0572%" height="15" fill="rgb(69,183,183)" fg:x="1251" fg:w="2"/><text x="36.0235%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.06%)</title><rect x="35.7735%" y="437" width="0.0572%" height="15" fill="rgb(91,203,203)" fg:x="1251" fg:w="2"/><text x="36.0235%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.06%)</title><rect x="35.7735%" y="421" width="0.0572%" height="15" fill="rgb(81,193,193)" fg:x="1251" fg:w="2"/><text x="36.0235%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="35.8021%" y="405" width="0.0286%" height="15" fill="rgb(97,208,208)" fg:x="1252" fg:w="1"/><text x="36.0521%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="35.8021%" y="389" width="0.0286%" height="15" fill="rgb(197,97,0)" fg:x="1252" fg:w="1"/><text x="36.0521%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="35.8021%" y="373" width="0.0286%" height="15" fill="rgb(198,98,0)" fg:x="1252" fg:w="1"/><text x="36.0521%" y="383.50"></text></g><g><title>&lt;&amp;f32 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="36.1167%" y="501" width="0.0286%" height="15" fill="rgb(65,179,179)" fg:x="1263" fg:w="1"/><text x="36.3667%" y="511.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.14%)</title><rect x="37.1175%" y="485" width="0.1430%" height="15" fill="rgb(102,213,213)" fg:x="1298" fg:w="5"/><text x="37.3675%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.11%)</title><rect x="37.1461%" y="469" width="0.1144%" height="15" fill="rgb(248,148,0)" fg:x="1299" fg:w="4"/><text x="37.3961%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="37.2319%" y="453" width="0.0286%" height="15" fill="rgb(209,109,0)" fg:x="1302" fg:w="1"/><text x="37.4819%" y="463.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (13 samples, 0.37%)</title><rect x="37.6894%" y="437" width="0.3717%" height="15" fill="rgb(75,188,188)" fg:x="1318" fg:w="13"/><text x="37.9394%" y="447.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (30 samples, 0.86%)</title><rect x="37.2605%" y="485" width="0.8579%" height="15" fill="rgb(79,192,192)" fg:x="1303" fg:w="30"/><text x="37.5105%" y="495.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (30 samples, 0.86%)</title><rect x="37.2605%" y="469" width="0.8579%" height="15" fill="rgb(65,178,178)" fg:x="1303" fg:w="30"/><text x="37.5105%" y="479.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (15 samples, 0.43%)</title><rect x="37.6894%" y="453" width="0.4289%" height="15" fill="rgb(68,181,181)" fg:x="1318" fg:w="15"/><text x="37.9394%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.06%)</title><rect x="38.0612%" y="437" width="0.0572%" height="15" fill="rgb(214,114,0)" fg:x="1331" fg:w="2"/><text x="38.3112%" y="447.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get::_{{closure}} (2 samples, 0.06%)</title><rect x="38.0612%" y="421" width="0.0572%" height="15" fill="rgb(60,174,174)" fg:x="1331" fg:w="2"/><text x="38.3112%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.06%)</title><rect x="38.0612%" y="405" width="0.0572%" height="15" fill="rgb(246,146,0)" fg:x="1331" fg:w="2"/><text x="38.3112%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.06%)</title><rect x="38.0612%" y="389" width="0.0572%" height="15" fill="rgb(238,138,0)" fg:x="1331" fg:w="2"/><text x="38.3112%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.06%)</title><rect x="38.0612%" y="373" width="0.0572%" height="15" fill="rgb(102,212,212)" fg:x="1331" fg:w="2"/><text x="38.3112%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.77%)</title><rect x="38.1184%" y="485" width="0.7721%" height="15" fill="rgb(202,102,0)" fg:x="1333" fg:w="27"/><text x="38.3684%" y="495.50"></text></g><g><title>core::ptr::read (3 samples, 0.09%)</title><rect x="38.8047%" y="469" width="0.0858%" height="15" fill="rgb(241,141,0)" fg:x="1357" fg:w="3"/><text x="39.0547%" y="479.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.06%)</title><rect x="39.0049%" y="357" width="0.0572%" height="15" fill="rgb(216,216,65)" fg:x="1364" fg:w="2"/><text x="39.2549%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.06%)</title><rect x="39.0049%" y="341" width="0.0572%" height="15" fill="rgb(200,100,0)" fg:x="1364" fg:w="2"/><text x="39.2549%" y="351.50"></text></g><g><title>__rust_dealloc (3 samples, 0.09%)</title><rect x="39.0621%" y="357" width="0.0858%" height="15" fill="rgb(184,184,53)" fg:x="1366" fg:w="3"/><text x="39.3121%" y="367.50"></text></g><g><title>[alc] (3 samples, 0.09%)</title><rect x="39.4624%" y="341" width="0.0858%" height="15" fill="rgb(199,199,58)" fg:x="1380" fg:w="3"/><text x="39.7124%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="39.4624%" y="325" width="0.0858%" height="15" fill="rgb(208,208,62)" fg:x="1380" fg:w="3"/><text x="39.7124%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (94 samples, 2.69%)</title><rect x="38.9477%" y="389" width="2.6880%" height="15" fill="rgb(246,146,0)" fg:x="1362" fg:w="94"/><text x="39.1977%" y="399.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (94 samples, 2.69%)</title><rect x="38.9477%" y="373" width="2.6880%" height="15" fill="rgb(224,124,0)" fg:x="1362" fg:w="94"/><text x="39.1977%" y="383.50">al..</text></g><g><title>cfree (87 samples, 2.49%)</title><rect x="39.1478%" y="357" width="2.4878%" height="15" fill="rgb(227,227,69)" fg:x="1369" fg:w="87"/><text x="39.3978%" y="367.50">cf..</text></g><g><title>[libc.so.6] (73 samples, 2.09%)</title><rect x="39.5482%" y="341" width="2.0875%" height="15" fill="rgb(207,207,61)" fg:x="1383" fg:w="73"/><text x="39.7982%" y="351.50">[..</text></g><g><title>[libc.so.6] (35 samples, 1.00%)</title><rect x="40.6348%" y="325" width="1.0009%" height="15" fill="rgb(183,183,53)" fg:x="1421" fg:w="35"/><text x="40.8848%" y="335.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="41.4069%" y="309" width="0.2288%" height="15" fill="rgb(188,188,54)" fg:x="1448" fg:w="8"/><text x="41.6569%" y="319.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (194 samples, 5.55%)</title><rect x="36.1453%" y="501" width="5.5476%" height="15" fill="rgb(59,173,173)" fg:x="1264" fg:w="194"/><text x="36.3953%" y="511.50">&lt;alc::o..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (98 samples, 2.80%)</title><rect x="38.8905%" y="485" width="2.8024%" height="15" fill="rgb(202,102,0)" fg:x="1360" fg:w="98"/><text x="39.1405%" y="495.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 2.80%)</title><rect x="38.8905%" y="469" width="2.8024%" height="15" fill="rgb(202,102,0)" fg:x="1360" fg:w="98"/><text x="39.1405%" y="479.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (98 samples, 2.80%)</title><rect x="38.8905%" y="453" width="2.8024%" height="15" fill="rgb(248,148,0)" fg:x="1360" fg:w="98"/><text x="39.1405%" y="463.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 2.80%)</title><rect x="38.8905%" y="437" width="2.8024%" height="15" fill="rgb(93,205,205)" fg:x="1360" fg:w="98"/><text x="39.1405%" y="447.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (96 samples, 2.75%)</title><rect x="38.9477%" y="421" width="2.7452%" height="15" fill="rgb(208,108,0)" fg:x="1362" fg:w="96"/><text x="39.1977%" y="431.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 2.75%)</title><rect x="38.9477%" y="405" width="2.7452%" height="15" fill="rgb(224,124,0)" fg:x="1362" fg:w="96"/><text x="39.1977%" y="415.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.06%)</title><rect x="41.6357%" y="389" width="0.0572%" height="15" fill="rgb(207,107,0)" fg:x="1456" fg:w="2"/><text x="41.8857%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.03%)</title><rect x="41.6643%" y="373" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="1457" fg:w="1"/><text x="41.9143%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="41.7787%" y="325" width="0.0286%" height="15" fill="rgb(215,115,0)" fg:x="1461" fg:w="1"/><text x="42.0287%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.09%)</title><rect x="41.7501%" y="341" width="0.0858%" height="15" fill="rgb(233,133,0)" fg:x="1460" fg:w="3"/><text x="42.0001%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="41.8073%" y="325" width="0.0286%" height="15" fill="rgb(206,106,0)" fg:x="1462" fg:w="1"/><text x="42.0573%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.11%)</title><rect x="41.7501%" y="389" width="0.1144%" height="15" fill="rgb(237,137,0)" fg:x="1460" fg:w="4"/><text x="42.0001%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.11%)</title><rect x="41.7501%" y="373" width="0.1144%" height="15" fill="rgb(241,141,0)" fg:x="1460" fg:w="4"/><text x="42.0001%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.11%)</title><rect x="41.7501%" y="357" width="0.1144%" height="15" fill="rgb(192,92,0)" fg:x="1460" fg:w="4"/><text x="42.0001%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="41.8359%" y="341" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="1463" fg:w="1"/><text x="42.0859%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="41.8359%" y="325" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="1463" fg:w="1"/><text x="42.0859%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.14%)</title><rect x="42.9225%" y="181" width="0.1430%" height="15" fill="rgb(191,91,0)" fg:x="1501" fg:w="5"/><text x="43.1725%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.43%)</title><rect x="42.6651%" y="197" width="0.4289%" height="15" fill="rgb(194,94,0)" fg:x="1492" fg:w="15"/><text x="42.9151%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="43.0655%" y="181" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="1506" fg:w="1"/><text x="43.3155%" y="191.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (48 samples, 1.37%)</title><rect x="41.8645%" y="309" width="1.3726%" height="15" fill="rgb(76,188,188)" fg:x="1464" fg:w="48"/><text x="42.1145%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (42 samples, 1.20%)</title><rect x="42.0360%" y="293" width="1.2010%" height="15" fill="rgb(212,112,0)" fg:x="1470" fg:w="42"/><text x="42.2860%" y="303.50"></text></g><g><title>core::hash::Hasher::write_isize (42 samples, 1.20%)</title><rect x="42.0360%" y="277" width="1.2010%" height="15" fill="rgb(195,95,0)" fg:x="1470" fg:w="42"/><text x="42.2860%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (42 samples, 1.20%)</title><rect x="42.0360%" y="261" width="1.2010%" height="15" fill="rgb(206,106,0)" fg:x="1470" fg:w="42"/><text x="42.2860%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (40 samples, 1.14%)</title><rect x="42.0932%" y="245" width="1.1438%" height="15" fill="rgb(216,116,0)" fg:x="1472" fg:w="40"/><text x="42.3432%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (40 samples, 1.14%)</title><rect x="42.0932%" y="229" width="1.1438%" height="15" fill="rgb(239,139,0)" fg:x="1472" fg:w="40"/><text x="42.3432%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (40 samples, 1.14%)</title><rect x="42.0932%" y="213" width="1.1438%" height="15" fill="rgb(210,110,0)" fg:x="1472" fg:w="40"/><text x="42.3432%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.14%)</title><rect x="43.0941%" y="197" width="0.1430%" height="15" fill="rgb(225,125,0)" fg:x="1507" fg:w="5"/><text x="43.3441%" y="207.50"></text></g><g><title>core::hash::Hash::hash_slice (49 samples, 1.40%)</title><rect x="41.8645%" y="325" width="1.4012%" height="15" fill="rgb(238,138,0)" fg:x="1464" fg:w="49"/><text x="42.1145%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="43.2371%" y="309" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="1512" fg:w="1"/><text x="43.4871%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="43.3800%" y="229" width="0.0286%" height="15" fill="rgb(202,102,0)" fg:x="1517" fg:w="1"/><text x="43.6300%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.11%)</title><rect x="43.3228%" y="245" width="0.1144%" height="15" fill="rgb(198,98,0)" fg:x="1515" fg:w="4"/><text x="43.5728%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="43.4086%" y="229" width="0.0286%" height="15" fill="rgb(210,110,0)" fg:x="1518" fg:w="1"/><text x="43.6586%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.09%)</title><rect x="43.4372%" y="245" width="0.0858%" height="15" fill="rgb(254,154,0)" fg:x="1519" fg:w="3"/><text x="43.6872%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (63 samples, 1.80%)</title><rect x="41.7501%" y="421" width="1.8015%" height="15" fill="rgb(102,213,213)" fg:x="1460" fg:w="63"/><text x="42.0001%" y="431.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (63 samples, 1.80%)</title><rect x="41.7501%" y="405" width="1.8015%" height="15" fill="rgb(253,153,0)" fg:x="1460" fg:w="63"/><text x="42.0001%" y="415.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (59 samples, 1.69%)</title><rect x="41.8645%" y="389" width="1.6872%" height="15" fill="rgb(194,94,0)" fg:x="1464" fg:w="59"/><text x="42.1145%" y="399.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (59 samples, 1.69%)</title><rect x="41.8645%" y="373" width="1.6872%" height="15" fill="rgb(76,189,189)" fg:x="1464" fg:w="59"/><text x="42.1145%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (59 samples, 1.69%)</title><rect x="41.8645%" y="357" width="1.6872%" height="15" fill="rgb(219,119,0)" fg:x="1464" fg:w="59"/><text x="42.1145%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (59 samples, 1.69%)</title><rect x="41.8645%" y="341" width="1.6872%" height="15" fill="rgb(252,152,0)" fg:x="1464" fg:w="59"/><text x="42.1145%" y="351.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (10 samples, 0.29%)</title><rect x="43.2657%" y="325" width="0.2860%" height="15" fill="rgb(234,134,0)" fg:x="1513" fg:w="10"/><text x="43.5157%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.29%)</title><rect x="43.2657%" y="309" width="0.2860%" height="15" fill="rgb(192,92,0)" fg:x="1513" fg:w="10"/><text x="43.5157%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.29%)</title><rect x="43.2657%" y="293" width="0.2860%" height="15" fill="rgb(210,110,0)" fg:x="1513" fg:w="10"/><text x="43.5157%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.29%)</title><rect x="43.2657%" y="277" width="0.2860%" height="15" fill="rgb(212,112,0)" fg:x="1513" fg:w="10"/><text x="43.5157%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.29%)</title><rect x="43.2657%" y="261" width="0.2860%" height="15" fill="rgb(192,92,0)" fg:x="1513" fg:w="10"/><text x="43.5157%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="43.5230%" y="245" width="0.0286%" height="15" fill="rgb(228,128,0)" fg:x="1522" fg:w="1"/><text x="43.7730%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="43.6088%" y="373" width="0.0286%" height="15" fill="rgb(83,195,195)" fg:x="1525" fg:w="1"/><text x="43.8588%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="43.6088%" y="357" width="0.0286%" height="15" fill="rgb(61,175,175)" fg:x="1525" fg:w="1"/><text x="43.8588%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="43.6374%" y="213" width="0.0572%" height="15" fill="rgb(206,106,0)" fg:x="1526" fg:w="2"/><text x="43.8874%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.06%)</title><rect x="43.6374%" y="197" width="0.0572%" height="15" fill="rgb(201,101,0)" fg:x="1526" fg:w="2"/><text x="43.8874%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (12 samples, 0.34%)</title><rect x="43.6374%" y="373" width="0.3432%" height="15" fill="rgb(70,183,183)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (12 samples, 0.34%)</title><rect x="43.6374%" y="357" width="0.3432%" height="15" fill="rgb(77,190,190)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="367.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (12 samples, 0.34%)</title><rect x="43.6374%" y="341" width="0.3432%" height="15" fill="rgb(84,196,196)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.34%)</title><rect x="43.6374%" y="325" width="0.3432%" height="15" fill="rgb(211,111,0)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="335.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::cmp::PartialEq&gt;::eq (12 samples, 0.34%)</title><rect x="43.6374%" y="309" width="0.3432%" height="15" fill="rgb(85,197,197)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="319.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (12 samples, 0.34%)</title><rect x="43.6374%" y="293" width="0.3432%" height="15" fill="rgb(221,121,0)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.34%)</title><rect x="43.6374%" y="277" width="0.3432%" height="15" fill="rgb(231,131,0)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.34%)</title><rect x="43.6374%" y="261" width="0.3432%" height="15" fill="rgb(64,178,178)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (12 samples, 0.34%)</title><rect x="43.6374%" y="245" width="0.3432%" height="15" fill="rgb(246,146,0)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.34%)</title><rect x="43.6374%" y="229" width="0.3432%" height="15" fill="rgb(235,135,0)" fg:x="1526" fg:w="12"/><text x="43.8874%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (10 samples, 0.29%)</title><rect x="43.6946%" y="213" width="0.2860%" height="15" fill="rgb(231,131,0)" fg:x="1528" fg:w="10"/><text x="43.9446%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (10 samples, 0.29%)</title><rect x="43.6946%" y="197" width="0.2860%" height="15" fill="rgb(62,176,176)" fg:x="1528" fg:w="10"/><text x="43.9446%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.29%)</title><rect x="43.6946%" y="181" width="0.2860%" height="15" fill="rgb(228,128,0)" fg:x="1528" fg:w="10"/><text x="43.9446%" y="191.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (10 samples, 0.29%)</title><rect x="43.6946%" y="165" width="0.2860%" height="15" fill="rgb(109,219,219)" fg:x="1528" fg:w="10"/><text x="43.9446%" y="175.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.09%)</title><rect x="43.9806%" y="373" width="0.0858%" height="15" fill="rgb(89,201,201)" fg:x="1538" fg:w="3"/><text x="44.2306%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (84 samples, 2.40%)</title><rect x="41.6929%" y="485" width="2.4021%" height="15" fill="rgb(210,110,0)" fg:x="1458" fg:w="84"/><text x="41.9429%" y="495.50">&lt;s..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (84 samples, 2.40%)</title><rect x="41.6929%" y="469" width="2.4021%" height="15" fill="rgb(229,129,0)" fg:x="1458" fg:w="84"/><text x="41.9429%" y="479.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (84 samples, 2.40%)</title><rect x="41.6929%" y="453" width="2.4021%" height="15" fill="rgb(64,178,178)" fg:x="1458" fg:w="84"/><text x="41.9429%" y="463.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (84 samples, 2.40%)</title><rect x="41.6929%" y="437" width="2.4021%" height="15" fill="rgb(84,196,196)" fg:x="1458" fg:w="84"/><text x="41.9429%" y="447.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.54%)</title><rect x="43.5516%" y="421" width="0.5433%" height="15" fill="rgb(78,190,190)" fg:x="1523" fg:w="19"/><text x="43.8016%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.54%)</title><rect x="43.5516%" y="405" width="0.5433%" height="15" fill="rgb(56,170,170)" fg:x="1523" fg:w="19"/><text x="43.8016%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (19 samples, 0.54%)</title><rect x="43.5516%" y="389" width="0.5433%" height="15" fill="rgb(86,198,198)" fg:x="1523" fg:w="19"/><text x="43.8016%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="44.0663%" y="373" width="0.0286%" height="15" fill="rgb(71,184,184)" fg:x="1541" fg:w="1"/><text x="44.3163%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="44.0663%" y="357" width="0.0286%" height="15" fill="rgb(219,119,0)" fg:x="1541" fg:w="1"/><text x="44.3163%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="44.0663%" y="341" width="0.0286%" height="15" fill="rgb(243,143,0)" fg:x="1541" fg:w="1"/><text x="44.3163%" y="351.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="44.0949%" y="389" width="0.0286%" height="15" fill="rgb(208,208,62)" fg:x="1542" fg:w="1"/><text x="44.3449%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="44.0949%" y="373" width="0.0286%" height="15" fill="rgb(234,134,0)" fg:x="1542" fg:w="1"/><text x="44.3449%" y="383.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::ops::index::Index&lt;alc::text_processor::ngram::Ngram&gt;&gt;::index (97 samples, 2.77%)</title><rect x="41.6929%" y="501" width="2.7738%" height="15" fill="rgb(108,218,218)" fg:x="1458" fg:w="97"/><text x="41.9429%" y="511.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (13 samples, 0.37%)</title><rect x="44.0949%" y="485" width="0.3717%" height="15" fill="rgb(205,105,0)" fg:x="1542" fg:w="13"/><text x="44.3449%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (13 samples, 0.37%)</title><rect x="44.0949%" y="469" width="0.3717%" height="15" fill="rgb(204,104,0)" fg:x="1542" fg:w="13"/><text x="44.3449%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (13 samples, 0.37%)</title><rect x="44.0949%" y="453" width="0.3717%" height="15" fill="rgb(221,121,0)" fg:x="1542" fg:w="13"/><text x="44.3449%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.37%)</title><rect x="44.0949%" y="437" width="0.3717%" height="15" fill="rgb(233,133,0)" fg:x="1542" fg:w="13"/><text x="44.3449%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.37%)</title><rect x="44.0949%" y="421" width="0.3717%" height="15" fill="rgb(209,109,0)" fg:x="1542" fg:w="13"/><text x="44.3449%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.37%)</title><rect x="44.0949%" y="405" width="0.3717%" height="15" fill="rgb(220,120,0)" fg:x="1542" fg:w="13"/><text x="44.3449%" y="415.50"></text></g><g><title>cfree (12 samples, 0.34%)</title><rect x="44.1235%" y="389" width="0.3432%" height="15" fill="rgb(206,206,61)" fg:x="1543" fg:w="12"/><text x="44.3735%" y="399.50"></text></g><g><title>[libc.so.6] (11 samples, 0.31%)</title><rect x="44.1521%" y="373" width="0.3146%" height="15" fill="rgb(192,192,56)" fg:x="1544" fg:w="11"/><text x="44.4021%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.06%)</title><rect x="44.4667%" y="469" width="0.0572%" height="15" fill="rgb(206,106,0)" fg:x="1555" fg:w="2"/><text x="44.7167%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.06%)</title><rect x="44.4667%" y="453" width="0.0572%" height="15" fill="rgb(253,153,0)" fg:x="1555" fg:w="2"/><text x="44.7167%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.06%)</title><rect x="44.4667%" y="437" width="0.0572%" height="15" fill="rgb(201,101,0)" fg:x="1555" fg:w="2"/><text x="44.7167%" y="447.50"></text></g><g><title>__rdl_alloc (3 samples, 0.09%)</title><rect x="44.5811%" y="325" width="0.0858%" height="15" fill="rgb(192,192,56)" fg:x="1559" fg:w="3"/><text x="44.8311%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.09%)</title><rect x="44.5811%" y="309" width="0.0858%" height="15" fill="rgb(244,144,0)" fg:x="1559" fg:w="3"/><text x="44.8311%" y="319.50"></text></g><g><title>__rust_alloc (2 samples, 0.06%)</title><rect x="44.6669%" y="325" width="0.0572%" height="15" fill="rgb(184,184,53)" fg:x="1562" fg:w="2"/><text x="44.9169%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.46%)</title><rect x="44.5811%" y="373" width="0.4575%" height="15" fill="rgb(214,114,0)" fg:x="1559" fg:w="16"/><text x="44.8311%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.46%)</title><rect x="44.5811%" y="357" width="0.4575%" height="15" fill="rgb(209,109,0)" fg:x="1559" fg:w="16"/><text x="44.8311%" y="367.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.46%)</title><rect x="44.5811%" y="341" width="0.4575%" height="15" fill="rgb(245,145,0)" fg:x="1559" fg:w="16"/><text x="44.8311%" y="351.50"></text></g><g><title>malloc (11 samples, 0.31%)</title><rect x="44.7240%" y="325" width="0.3146%" height="15" fill="rgb(185,185,53)" fg:x="1564" fg:w="11"/><text x="44.9740%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.51%)</title><rect x="44.5525%" y="421" width="0.5147%" height="15" fill="rgb(208,108,0)" fg:x="1558" fg:w="18"/><text x="44.8025%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.51%)</title><rect x="44.5525%" y="405" width="0.5147%" height="15" fill="rgb(227,127,0)" fg:x="1558" fg:w="18"/><text x="44.8025%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.51%)</title><rect x="44.5525%" y="389" width="0.5147%" height="15" fill="rgb(247,147,0)" fg:x="1558" fg:w="18"/><text x="44.8025%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="45.0386%" y="373" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="1575" fg:w="1"/><text x="45.2886%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="45.0386%" y="357" width="0.0286%" height="15" fill="rgb(233,133,0)" fg:x="1575" fg:w="1"/><text x="45.2886%" y="367.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (32 samples, 0.92%)</title><rect x="44.4667%" y="501" width="0.9151%" height="15" fill="rgb(75,188,188)" fg:x="1555" fg:w="32"/><text x="44.7167%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.92%)</title><rect x="44.4667%" y="485" width="0.9151%" height="15" fill="rgb(205,105,0)" fg:x="1555" fg:w="32"/><text x="44.7167%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.86%)</title><rect x="44.5239%" y="469" width="0.8579%" height="15" fill="rgb(207,107,0)" fg:x="1557" fg:w="30"/><text x="44.7739%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.86%)</title><rect x="44.5239%" y="453" width="0.8579%" height="15" fill="rgb(204,104,0)" fg:x="1557" fg:w="30"/><text x="44.7739%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.86%)</title><rect x="44.5239%" y="437" width="0.8579%" height="15" fill="rgb(93,204,204)" fg:x="1557" fg:w="30"/><text x="44.7739%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11 samples, 0.31%)</title><rect x="45.0672%" y="421" width="0.3146%" height="15" fill="rgb(226,126,0)" fg:x="1576" fg:w="11"/><text x="45.3172%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.31%)</title><rect x="45.0672%" y="405" width="0.3146%" height="15" fill="rgb(219,119,0)" fg:x="1576" fg:w="11"/><text x="45.3172%" y="415.50"></text></g><g><title>[libc.so.6] (11 samples, 0.31%)</title><rect x="45.0672%" y="389" width="0.3146%" height="15" fill="rgb(225,225,68)" fg:x="1576" fg:w="11"/><text x="45.3172%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="45.4961%" y="485" width="0.0286%" height="15" fill="rgb(205,105,0)" fg:x="1591" fg:w="1"/><text x="45.7461%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.17%)</title><rect x="45.3818%" y="501" width="0.1716%" height="15" fill="rgb(233,133,0)" fg:x="1587" fg:w="6"/><text x="45.6318%" y="511.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="45.5247%" y="485" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="1592" fg:w="1"/><text x="45.7747%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="45.5533%" y="501" width="0.0572%" height="15" fill="rgb(195,95,0)" fg:x="1593" fg:w="2"/><text x="45.8033%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="45.5533%" y="485" width="0.0572%" height="15" fill="rgb(240,140,0)" fg:x="1593" fg:w="2"/><text x="45.8033%" y="495.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="45.5533%" y="469" width="0.0572%" height="15" fill="rgb(70,183,183)" fg:x="1593" fg:w="2"/><text x="45.8033%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="45.5533%" y="453" width="0.0572%" height="15" fill="rgb(74,187,187)" fg:x="1593" fg:w="2"/><text x="45.8033%" y="463.50"></text></g><g><title>__rdl_alloc (11 samples, 0.31%)</title><rect x="47.3263%" y="309" width="0.3146%" height="15" fill="rgb(211,211,63)" fg:x="1655" fg:w="11"/><text x="47.5763%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.31%)</title><rect x="47.3263%" y="293" width="0.3146%" height="15" fill="rgb(193,93,0)" fg:x="1655" fg:w="11"/><text x="47.5763%" y="303.50"></text></g><g><title>__rust_alloc (4 samples, 0.11%)</title><rect x="47.6408%" y="309" width="0.1144%" height="15" fill="rgb(214,214,64)" fg:x="1666" fg:w="4"/><text x="47.8908%" y="319.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="47.7552%" y="309" width="0.0286%" height="15" fill="rgb(245,145,0)" fg:x="1670" fg:w="1"/><text x="48.0052%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 2.06%)</title><rect x="47.2405%" y="357" width="2.0589%" height="15" fill="rgb(209,109,0)" fg:x="1652" fg:w="72"/><text x="47.4905%" y="367.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 2.06%)</title><rect x="47.2405%" y="341" width="2.0589%" height="15" fill="rgb(198,98,0)" fg:x="1652" fg:w="72"/><text x="47.4905%" y="351.50">a..</text></g><g><title>alloc::alloc::alloc (72 samples, 2.06%)</title><rect x="47.2405%" y="325" width="2.0589%" height="15" fill="rgb(252,152,0)" fg:x="1652" fg:w="72"/><text x="47.4905%" y="335.50">a..</text></g><g><title>malloc (53 samples, 1.52%)</title><rect x="47.7838%" y="309" width="1.5156%" height="15" fill="rgb(190,190,55)" fg:x="1671" fg:w="53"/><text x="48.0338%" y="319.50"></text></g><g><title>[libc.so.6] (13 samples, 0.37%)</title><rect x="48.9277%" y="293" width="0.3717%" height="15" fill="rgb(204,204,60)" fg:x="1711" fg:w="13"/><text x="49.1777%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (78 samples, 2.23%)</title><rect x="47.1833%" y="405" width="2.2305%" height="15" fill="rgb(234,134,0)" fg:x="1650" fg:w="78"/><text x="47.4333%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 2.23%)</title><rect x="47.1833%" y="389" width="2.2305%" height="15" fill="rgb(197,97,0)" fg:x="1650" fg:w="78"/><text x="47.4333%" y="399.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 2.23%)</title><rect x="47.1833%" y="373" width="2.2305%" height="15" fill="rgb(201,101,0)" fg:x="1650" fg:w="78"/><text x="47.4333%" y="383.50">a..</text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.11%)</title><rect x="49.2994%" y="357" width="0.1144%" height="15" fill="rgb(216,116,0)" fg:x="1724" fg:w="4"/><text x="49.5494%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.11%)</title><rect x="49.2994%" y="341" width="0.1144%" height="15" fill="rgb(235,135,0)" fg:x="1724" fg:w="4"/><text x="49.5494%" y="351.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (90 samples, 2.57%)</title><rect x="47.0975%" y="485" width="2.5736%" height="15" fill="rgb(92,204,204)" fg:x="1647" fg:w="90"/><text x="47.3475%" y="495.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (90 samples, 2.57%)</title><rect x="47.0975%" y="469" width="2.5736%" height="15" fill="rgb(215,115,0)" fg:x="1647" fg:w="90"/><text x="47.3475%" y="479.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (90 samples, 2.57%)</title><rect x="47.0975%" y="453" width="2.5736%" height="15" fill="rgb(237,137,0)" fg:x="1647" fg:w="90"/><text x="47.3475%" y="463.50">al..</text></g><g><title>alloc::slice::hack::to_vec (90 samples, 2.57%)</title><rect x="47.0975%" y="437" width="2.5736%" height="15" fill="rgb(212,112,0)" fg:x="1647" fg:w="90"/><text x="47.3475%" y="447.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (90 samples, 2.57%)</title><rect x="47.0975%" y="421" width="2.5736%" height="15" fill="rgb(79,192,192)" fg:x="1647" fg:w="90"/><text x="47.3475%" y="431.50">&lt;T..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.26%)</title><rect x="49.4138%" y="405" width="0.2574%" height="15" fill="rgb(204,104,0)" fg:x="1728" fg:w="9"/><text x="49.6638%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.26%)</title><rect x="49.4138%" y="389" width="0.2574%" height="15" fill="rgb(209,109,0)" fg:x="1728" fg:w="9"/><text x="49.6638%" y="399.50"></text></g><g><title>[libc.so.6] (9 samples, 0.26%)</title><rect x="49.4138%" y="373" width="0.2574%" height="15" fill="rgb(218,218,65)" fg:x="1728" fg:w="9"/><text x="49.6638%" y="383.50"></text></g><g><title>[alc] (1 samples, 0.03%)</title><rect x="49.7283%" y="309" width="0.0286%" height="15" fill="rgb(206,206,61)" fg:x="1739" fg:w="1"/><text x="49.9783%" y="319.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="49.7283%" y="293" width="0.0286%" height="15" fill="rgb(201,201,59)" fg:x="1739" fg:w="1"/><text x="49.9783%" y="303.50"></text></g><g><title>__rdl_alloc (3 samples, 0.09%)</title><rect x="49.7569%" y="309" width="0.0858%" height="15" fill="rgb(187,187,54)" fg:x="1740" fg:w="3"/><text x="50.0069%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.09%)</title><rect x="49.7569%" y="293" width="0.0858%" height="15" fill="rgb(206,106,0)" fg:x="1740" fg:w="3"/><text x="50.0069%" y="303.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="49.8427%" y="309" width="0.0286%" height="15" fill="rgb(221,221,67)" fg:x="1743" fg:w="1"/><text x="50.0927%" y="319.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="49.8713%" y="309" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="1744" fg:w="1"/><text x="50.1213%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.34%)</title><rect x="49.7283%" y="405" width="0.3432%" height="15" fill="rgb(221,121,0)" fg:x="1739" fg:w="12"/><text x="49.9783%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.34%)</title><rect x="49.7283%" y="389" width="0.3432%" height="15" fill="rgb(244,144,0)" fg:x="1739" fg:w="12"/><text x="49.9783%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.34%)</title><rect x="49.7283%" y="373" width="0.3432%" height="15" fill="rgb(210,110,0)" fg:x="1739" fg:w="12"/><text x="49.9783%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.34%)</title><rect x="49.7283%" y="357" width="0.3432%" height="15" fill="rgb(226,126,0)" fg:x="1739" fg:w="12"/><text x="49.9783%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.34%)</title><rect x="49.7283%" y="341" width="0.3432%" height="15" fill="rgb(240,140,0)" fg:x="1739" fg:w="12"/><text x="49.9783%" y="351.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.34%)</title><rect x="49.7283%" y="325" width="0.3432%" height="15" fill="rgb(210,110,0)" fg:x="1739" fg:w="12"/><text x="49.9783%" y="335.50"></text></g><g><title>malloc (6 samples, 0.17%)</title><rect x="49.8999%" y="309" width="0.1716%" height="15" fill="rgb(225,225,68)" fg:x="1745" fg:w="6"/><text x="50.1499%" y="319.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (21 samples, 0.60%)</title><rect x="49.6711%" y="485" width="0.6005%" height="15" fill="rgb(88,200,200)" fg:x="1737" fg:w="21"/><text x="49.9211%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.57%)</title><rect x="49.6997%" y="469" width="0.5719%" height="15" fill="rgb(226,126,0)" fg:x="1738" fg:w="20"/><text x="49.9497%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.57%)</title><rect x="49.6997%" y="453" width="0.5719%" height="15" fill="rgb(219,119,0)" fg:x="1738" fg:w="20"/><text x="49.9497%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.57%)</title><rect x="49.6997%" y="437" width="0.5719%" height="15" fill="rgb(199,99,0)" fg:x="1738" fg:w="20"/><text x="49.9497%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.57%)</title><rect x="49.6997%" y="421" width="0.5719%" height="15" fill="rgb(50,165,165)" fg:x="1738" fg:w="20"/><text x="49.9497%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (7 samples, 0.20%)</title><rect x="50.0715%" y="405" width="0.2002%" height="15" fill="rgb(230,130,0)" fg:x="1751" fg:w="7"/><text x="50.3215%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.20%)</title><rect x="50.0715%" y="389" width="0.2002%" height="15" fill="rgb(236,136,0)" fg:x="1751" fg:w="7"/><text x="50.3215%" y="399.50"></text></g><g><title>[libc.so.6] (7 samples, 0.20%)</title><rect x="50.0715%" y="373" width="0.2002%" height="15" fill="rgb(178,178,51)" fg:x="1751" fg:w="7"/><text x="50.3215%" y="383.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.06%)</title><rect x="50.2717%" y="485" width="0.0572%" height="15" fill="rgb(67,180,180)" fg:x="1758" fg:w="2"/><text x="50.5217%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="50.3003%" y="469" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="1759" fg:w="1"/><text x="50.5503%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.09%)</title><rect x="50.5576%" y="469" width="0.0858%" height="15" fill="rgb(215,115,0)" fg:x="1768" fg:w="3"/><text x="50.8076%" y="479.50"></text></g><g><title>__rdl_alloc (9 samples, 0.26%)</title><rect x="51.5013%" y="245" width="0.2574%" height="15" fill="rgb(189,189,55)" fg:x="1801" fg:w="9"/><text x="51.7513%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.26%)</title><rect x="51.5013%" y="229" width="0.2574%" height="15" fill="rgb(206,106,0)" fg:x="1801" fg:w="9"/><text x="51.7513%" y="239.50"></text></g><g><title>__rust_alloc (6 samples, 0.17%)</title><rect x="51.7587%" y="245" width="0.1716%" height="15" fill="rgb(215,215,64)" fg:x="1810" fg:w="6"/><text x="52.0087%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 2.23%)</title><rect x="51.3011%" y="293" width="2.2305%" height="15" fill="rgb(251,151,0)" fg:x="1794" fg:w="78"/><text x="51.5511%" y="303.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 2.23%)</title><rect x="51.3011%" y="277" width="2.2305%" height="15" fill="rgb(231,131,0)" fg:x="1794" fg:w="78"/><text x="51.5511%" y="287.50">a..</text></g><g><title>alloc::alloc::alloc (78 samples, 2.23%)</title><rect x="51.3011%" y="261" width="2.2305%" height="15" fill="rgb(239,139,0)" fg:x="1794" fg:w="78"/><text x="51.5511%" y="271.50">a..</text></g><g><title>malloc (56 samples, 1.60%)</title><rect x="51.9302%" y="245" width="1.6014%" height="15" fill="rgb(198,198,58)" fg:x="1816" fg:w="56"/><text x="52.1802%" y="255.50"></text></g><g><title>[libc.so.6] (7 samples, 0.20%)</title><rect x="53.3314%" y="229" width="0.2002%" height="15" fill="rgb(177,177,50)" fg:x="1865" fg:w="7"/><text x="53.5814%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (93 samples, 2.66%)</title><rect x="51.1581%" y="341" width="2.6594%" height="15" fill="rgb(192,92,0)" fg:x="1789" fg:w="93"/><text x="51.4081%" y="351.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (93 samples, 2.66%)</title><rect x="51.1581%" y="325" width="2.6594%" height="15" fill="rgb(213,113,0)" fg:x="1789" fg:w="93"/><text x="51.4081%" y="335.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (93 samples, 2.66%)</title><rect x="51.1581%" y="309" width="2.6594%" height="15" fill="rgb(204,104,0)" fg:x="1789" fg:w="93"/><text x="51.4081%" y="319.50">al..</text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.29%)</title><rect x="53.5316%" y="293" width="0.2860%" height="15" fill="rgb(218,118,0)" fg:x="1872" fg:w="10"/><text x="53.7816%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (10 samples, 0.29%)</title><rect x="53.5316%" y="277" width="0.2860%" height="15" fill="rgb(231,131,0)" fg:x="1872" fg:w="10"/><text x="53.7816%" y="287.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (122 samples, 3.49%)</title><rect x="51.1581%" y="421" width="3.4887%" height="15" fill="rgb(87,199,199)" fg:x="1789" fg:w="122"/><text x="51.4081%" y="431.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (122 samples, 3.49%)</title><rect x="51.1581%" y="405" width="3.4887%" height="15" fill="rgb(197,97,0)" fg:x="1789" fg:w="122"/><text x="51.4081%" y="415.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (122 samples, 3.49%)</title><rect x="51.1581%" y="389" width="3.4887%" height="15" fill="rgb(236,136,0)" fg:x="1789" fg:w="122"/><text x="51.4081%" y="399.50">all..</text></g><g><title>alloc::slice::hack::to_vec (122 samples, 3.49%)</title><rect x="51.1581%" y="373" width="3.4887%" height="15" fill="rgb(221,121,0)" fg:x="1789" fg:w="122"/><text x="51.4081%" y="383.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (122 samples, 3.49%)</title><rect x="51.1581%" y="357" width="3.4887%" height="15" fill="rgb(101,212,212)" fg:x="1789" fg:w="122"/><text x="51.4081%" y="367.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (29 samples, 0.83%)</title><rect x="53.8176%" y="341" width="0.8293%" height="15" fill="rgb(214,114,0)" fg:x="1882" fg:w="29"/><text x="54.0676%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.83%)</title><rect x="53.8176%" y="325" width="0.8293%" height="15" fill="rgb(195,95,0)" fg:x="1882" fg:w="29"/><text x="54.0676%" y="335.50"></text></g><g><title>[libc.so.6] (20 samples, 0.57%)</title><rect x="54.0749%" y="309" width="0.5719%" height="15" fill="rgb(195,195,57)" fg:x="1891" fg:w="20"/><text x="54.3249%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="54.6468%" y="421" width="0.0858%" height="15" fill="rgb(242,142,0)" fg:x="1911" fg:w="3"/><text x="54.8968%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="54.7040%" y="405" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="1913" fg:w="1"/><text x="54.9540%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="54.7040%" y="389" width="0.0286%" height="15" fill="rgb(239,139,0)" fg:x="1913" fg:w="1"/><text x="54.9540%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="54.7040%" y="373" width="0.0286%" height="15" fill="rgb(196,96,0)" fg:x="1913" fg:w="1"/><text x="54.9540%" y="383.50"></text></g><g><title>__rdl_alloc (9 samples, 0.26%)</title><rect x="54.7326%" y="325" width="0.2574%" height="15" fill="rgb(225,225,68)" fg:x="1914" fg:w="9"/><text x="54.9826%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.26%)</title><rect x="54.7326%" y="309" width="0.2574%" height="15" fill="rgb(203,103,0)" fg:x="1914" fg:w="9"/><text x="54.9826%" y="319.50"></text></g><g><title>__rust_alloc (3 samples, 0.09%)</title><rect x="54.9900%" y="325" width="0.0858%" height="15" fill="rgb(198,198,58)" fg:x="1923" fg:w="3"/><text x="55.2400%" y="335.50"></text></g><g><title>core::ptr::read_volatile (4 samples, 0.11%)</title><rect x="55.0758%" y="325" width="0.1144%" height="15" fill="rgb(204,104,0)" fg:x="1926" fg:w="4"/><text x="55.3258%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46 samples, 1.32%)</title><rect x="54.7326%" y="421" width="1.3154%" height="15" fill="rgb(226,126,0)" fg:x="1914" fg:w="46"/><text x="54.9826%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 1.32%)</title><rect x="54.7326%" y="405" width="1.3154%" height="15" fill="rgb(228,128,0)" fg:x="1914" fg:w="46"/><text x="54.9826%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 1.32%)</title><rect x="54.7326%" y="389" width="1.3154%" height="15" fill="rgb(194,94,0)" fg:x="1914" fg:w="46"/><text x="54.9826%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 1.32%)</title><rect x="54.7326%" y="373" width="1.3154%" height="15" fill="rgb(243,143,0)" fg:x="1914" fg:w="46"/><text x="54.9826%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 1.32%)</title><rect x="54.7326%" y="357" width="1.3154%" height="15" fill="rgb(190,90,0)" fg:x="1914" fg:w="46"/><text x="54.9826%" y="367.50"></text></g><g><title>alloc::alloc::alloc (46 samples, 1.32%)</title><rect x="54.7326%" y="341" width="1.3154%" height="15" fill="rgb(210,110,0)" fg:x="1914" fg:w="46"/><text x="54.9826%" y="351.50"></text></g><g><title>malloc (30 samples, 0.86%)</title><rect x="55.1902%" y="325" width="0.8579%" height="15" fill="rgb(177,177,50)" fg:x="1930" fg:w="30"/><text x="55.4402%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="56.0194%" y="309" width="0.0286%" height="15" fill="rgb(211,211,63)" fg:x="1959" fg:w="1"/><text x="56.2694%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (208 samples, 5.95%)</title><rect x="50.3289%" y="485" width="5.9480%" height="15" fill="rgb(235,135,0)" fg:x="1760" fg:w="208"/><text x="50.5789%" y="495.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (197 samples, 5.63%)</title><rect x="50.6434%" y="469" width="5.6334%" height="15" fill="rgb(194,94,0)" fg:x="1771" fg:w="197"/><text x="50.8934%" y="479.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (197 samples, 5.63%)</title><rect x="50.6434%" y="453" width="5.6334%" height="15" fill="rgb(246,146,0)" fg:x="1771" fg:w="197"/><text x="50.8934%" y="463.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (197 samples, 5.63%)</title><rect x="50.6434%" y="437" width="5.6334%" height="15" fill="rgb(106,217,217)" fg:x="1771" fg:w="197"/><text x="50.8934%" y="447.50">&lt;T as a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 0.23%)</title><rect x="56.0480%" y="421" width="0.2288%" height="15" fill="rgb(231,131,0)" fg:x="1960" fg:w="8"/><text x="56.2980%" y="431.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="56.2768%" y="469" width="0.0286%" height="15" fill="rgb(197,97,0)" fg:x="1968" fg:w="1"/><text x="56.5268%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.06%)</title><rect x="56.2768%" y="485" width="0.0572%" height="15" fill="rgb(251,151,0)" fg:x="1968" fg:w="2"/><text x="56.5268%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="56.3054%" y="469" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="1969" fg:w="1"/><text x="56.5554%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.46%)</title><rect x="56.3340%" y="485" width="0.4575%" height="15" fill="rgb(223,123,0)" fg:x="1970" fg:w="16"/><text x="56.5840%" y="495.50"></text></g><g><title>core::ptr::read (11 samples, 0.31%)</title><rect x="56.4770%" y="469" width="0.3146%" height="15" fill="rgb(196,96,0)" fg:x="1975" fg:w="11"/><text x="56.7270%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.11%)</title><rect x="56.7915%" y="485" width="0.1144%" height="15" fill="rgb(192,92,0)" fg:x="1986" fg:w="4"/><text x="57.0415%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="56.9059%" y="437" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="1990" fg:w="1"/><text x="57.1559%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.03%)</title><rect x="57.0489%" y="389" width="0.0286%" height="15" fill="rgb(227,127,0)" fg:x="1995" fg:w="1"/><text x="57.2989%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.06%)</title><rect x="57.0489%" y="405" width="0.0572%" height="15" fill="rgb(226,126,0)" fg:x="1995" fg:w="2"/><text x="57.2989%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.03%)</title><rect x="57.0775%" y="389" width="0.0286%" height="15" fill="rgb(208,108,0)" fg:x="1996" fg:w="1"/><text x="57.3275%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.17%)</title><rect x="57.1633%" y="373" width="0.1716%" height="15" fill="rgb(243,143,0)" fg:x="1999" fg:w="6"/><text x="57.4133%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (4 samples, 0.11%)</title><rect x="57.2205%" y="357" width="0.1144%" height="15" fill="rgb(220,120,0)" fg:x="2001" fg:w="4"/><text x="57.4705%" y="367.50"></text></g><g><title>__rdl_realloc (12 samples, 0.34%)</title><rect x="57.8782%" y="309" width="0.3432%" height="15" fill="rgb(196,196,57)" fg:x="2024" fg:w="12"/><text x="58.1282%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.20%)</title><rect x="58.0212%" y="293" width="0.2002%" height="15" fill="rgb(231,131,0)" fg:x="2029" fg:w="7"/><text x="58.2712%" y="303.50"></text></g><g><title>__rust_realloc (5 samples, 0.14%)</title><rect x="58.2213%" y="309" width="0.1430%" height="15" fill="rgb(213,213,64)" fg:x="2036" fg:w="5"/><text x="58.4713%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (444 samples, 12.70%)</title><rect x="57.8782%" y="357" width="12.6966%" height="15" fill="rgb(233,133,0)" fg:x="2024" fg:w="444"/><text x="58.1282%" y="367.50">&lt;alloc::alloc::Glob..</text></g><g><title>alloc::alloc::Global::grow_impl (444 samples, 12.70%)</title><rect x="57.8782%" y="341" width="12.6966%" height="15" fill="rgb(244,144,0)" fg:x="2024" fg:w="444"/><text x="58.1282%" y="351.50">alloc::alloc::Globa..</text></g><g><title>alloc::alloc::realloc (444 samples, 12.70%)</title><rect x="57.8782%" y="325" width="12.6966%" height="15" fill="rgb(238,138,0)" fg:x="2024" fg:w="444"/><text x="58.1282%" y="335.50">alloc::alloc::reall..</text></g><g><title>realloc (427 samples, 12.21%)</title><rect x="58.3643%" y="309" width="12.2105%" height="15" fill="rgb(199,199,59)" fg:x="2041" fg:w="427"/><text x="58.6143%" y="319.50">realloc</text></g><g><title>[libc.so.6] (358 samples, 10.24%)</title><rect x="60.3374%" y="293" width="10.2373%" height="15" fill="rgb(180,180,51)" fg:x="2110" fg:w="358"/><text x="60.5874%" y="303.50">[libc.so.6]</text></g><g><title>[libc.so.6] (309 samples, 8.84%)</title><rect x="61.7386%" y="277" width="8.8361%" height="15" fill="rgb(206,206,61)" fg:x="2159" fg:w="309"/><text x="61.9886%" y="287.50">[libc.so.6]</text></g><g><title>[libc.so.6] (11 samples, 0.31%)</title><rect x="70.2602%" y="261" width="0.3146%" height="15" fill="rgb(197,197,58)" fg:x="2457" fg:w="11"/><text x="70.5102%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (467 samples, 13.35%)</title><rect x="57.3349%" y="373" width="13.3543%" height="15" fill="rgb(252,152,0)" fg:x="2005" fg:w="467"/><text x="57.5849%" y="383.50">alloc::raw_vec::fini..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.11%)</title><rect x="70.5748%" y="357" width="0.1144%" height="15" fill="rgb(216,116,0)" fg:x="2468" fg:w="4"/><text x="70.8248%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.09%)</title><rect x="70.6892%" y="373" width="0.0858%" height="15" fill="rgb(253,153,0)" fg:x="2472" fg:w="3"/><text x="70.9392%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.09%)</title><rect x="70.6892%" y="357" width="0.0858%" height="15" fill="rgb(239,139,0)" fg:x="2472" fg:w="3"/><text x="70.9392%" y="367.50"></text></g><g><title>core::cmp::max (17 samples, 0.49%)</title><rect x="70.7749%" y="373" width="0.4861%" height="15" fill="rgb(232,132,0)" fg:x="2475" fg:w="17"/><text x="71.0249%" y="383.50"></text></g><g><title>core::cmp::Ord::max (17 samples, 0.49%)</title><rect x="70.7749%" y="357" width="0.4861%" height="15" fill="rgb(249,149,0)" fg:x="2475" fg:w="17"/><text x="71.0249%" y="367.50"></text></g><g><title>core::cmp::max_by (17 samples, 0.49%)</title><rect x="70.7749%" y="341" width="0.4861%" height="15" fill="rgb(254,154,0)" fg:x="2475" fg:w="17"/><text x="71.0249%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (505 samples, 14.44%)</title><rect x="56.9345%" y="437" width="14.4409%" height="15" fill="rgb(244,144,0)" fg:x="1991" fg:w="505"/><text x="57.1845%" y="447.50">alloc::vec::Vec&lt;T,A&gt;::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (505 samples, 14.44%)</title><rect x="56.9345%" y="421" width="14.4409%" height="15" fill="rgb(197,97,0)" fg:x="1991" fg:w="505"/><text x="57.1845%" y="431.50">alloc::raw_vec::RawVec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (499 samples, 14.27%)</title><rect x="57.1061%" y="405" width="14.2694%" height="15" fill="rgb(237,137,0)" fg:x="1997" fg:w="499"/><text x="57.3561%" y="415.50">alloc::raw_vec::RawVec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (499 samples, 14.27%)</title><rect x="57.1061%" y="389" width="14.2694%" height="15" fill="rgb(254,154,0)" fg:x="1997" fg:w="499"/><text x="57.3561%" y="399.50">alloc::raw_vec::RawVec..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.11%)</title><rect x="71.2611%" y="373" width="0.1144%" height="15" fill="rgb(200,100,0)" fg:x="2492" fg:w="4"/><text x="71.5111%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.11%)</title><rect x="71.2611%" y="357" width="0.1144%" height="15" fill="rgb(203,103,0)" fg:x="2492" fg:w="4"/><text x="71.5111%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.29%)</title><rect x="71.3755%" y="437" width="0.2860%" height="15" fill="rgb(225,125,0)" fg:x="2496" fg:w="10"/><text x="71.6255%" y="447.50"></text></g><g><title>[libc.so.6] (10 samples, 0.29%)</title><rect x="71.3755%" y="421" width="0.2860%" height="15" fill="rgb(191,191,55)" fg:x="2496" fg:w="10"/><text x="71.6255%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (519 samples, 14.84%)</title><rect x="56.9059%" y="453" width="14.8413%" height="15" fill="rgb(202,102,0)" fg:x="1990" fg:w="519"/><text x="57.1559%" y="463.50">alloc::vec::Vec&lt;T,A&gt;::a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.09%)</title><rect x="71.6614%" y="437" width="0.0858%" height="15" fill="rgb(205,105,0)" fg:x="2506" fg:w="3"/><text x="71.9114%" y="447.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (527 samples, 15.07%)</title><rect x="56.9059%" y="485" width="15.0701%" height="15" fill="rgb(84,196,196)" fg:x="1990" fg:w="527"/><text x="57.1559%" y="495.50">alc::keyboard::LayoutPo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (527 samples, 15.07%)</title><rect x="56.9059%" y="469" width="15.0701%" height="15" fill="rgb(254,154,0)" fg:x="1990" fg:w="527"/><text x="57.1559%" y="479.50">alloc::vec::Vec&lt;T,A&gt;::a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (8 samples, 0.23%)</title><rect x="71.7472%" y="453" width="0.2288%" height="15" fill="rgb(217,117,0)" fg:x="2509" fg:w="8"/><text x="71.9972%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.23%)</title><rect x="71.7472%" y="437" width="0.2288%" height="15" fill="rgb(212,112,0)" fg:x="2509" fg:w="8"/><text x="71.9972%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (8 samples, 0.23%)</title><rect x="71.7472%" y="421" width="0.2288%" height="15" fill="rgb(227,127,0)" fg:x="2509" fg:w="8"/><text x="71.9972%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.23%)</title><rect x="71.7472%" y="405" width="0.2288%" height="15" fill="rgb(204,104,0)" fg:x="2509" fg:w="8"/><text x="71.9972%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.09%)</title><rect x="72.4621%" y="325" width="0.0858%" height="15" fill="rgb(214,114,0)" fg:x="2534" fg:w="3"/><text x="72.7121%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.20%)</title><rect x="72.4335%" y="341" width="0.2002%" height="15" fill="rgb(208,108,0)" fg:x="2533" fg:w="7"/><text x="72.6835%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.09%)</title><rect x="72.5479%" y="325" width="0.0858%" height="15" fill="rgb(232,132,0)" fg:x="2537" fg:w="3"/><text x="72.7979%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.29%)</title><rect x="72.8339%" y="325" width="0.2860%" height="15" fill="rgb(232,132,0)" fg:x="2547" fg:w="10"/><text x="73.0839%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (46 samples, 1.32%)</title><rect x="72.2333%" y="389" width="1.3154%" height="15" fill="rgb(241,141,0)" fg:x="2526" fg:w="46"/><text x="72.4833%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (46 samples, 1.32%)</title><rect x="72.2333%" y="373" width="1.3154%" height="15" fill="rgb(205,105,0)" fg:x="2526" fg:w="46"/><text x="72.4833%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (46 samples, 1.32%)</title><rect x="72.2333%" y="357" width="1.3154%" height="15" fill="rgb(201,101,0)" fg:x="2526" fg:w="46"/><text x="72.4833%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (32 samples, 0.92%)</title><rect x="72.6337%" y="341" width="0.9151%" height="15" fill="rgb(237,137,0)" fg:x="2540" fg:w="32"/><text x="72.8837%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (15 samples, 0.43%)</title><rect x="73.1198%" y="325" width="0.4289%" height="15" fill="rgb(212,112,0)" fg:x="2557" fg:w="15"/><text x="73.3698%" y="335.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.03%)</title><rect x="73.5488%" y="389" width="0.0286%" height="15" fill="rgb(240,140,0)" fg:x="2572" fg:w="1"/><text x="73.7988%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.17%)</title><rect x="74.1779%" y="245" width="0.1716%" height="15" fill="rgb(195,95,0)" fg:x="2594" fg:w="6"/><text x="74.4279%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.31%)</title><rect x="74.0921%" y="261" width="0.3146%" height="15" fill="rgb(195,95,0)" fg:x="2591" fg:w="11"/><text x="74.3421%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="74.3494%" y="245" width="0.0572%" height="15" fill="rgb(237,137,0)" fg:x="2600" fg:w="2"/><text x="74.5994%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (91 samples, 2.60%)</title><rect x="71.9760%" y="421" width="2.6022%" height="15" fill="rgb(73,186,186)" fg:x="2517" fg:w="91"/><text x="72.2260%" y="431.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (89 samples, 2.55%)</title><rect x="72.0332%" y="405" width="2.5450%" height="15" fill="rgb(218,118,0)" fg:x="2519" fg:w="89"/><text x="72.2832%" y="415.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 1.00%)</title><rect x="73.5774%" y="389" width="1.0009%" height="15" fill="rgb(215,115,0)" fg:x="2573" fg:w="35"/><text x="73.8274%" y="399.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (35 samples, 1.00%)</title><rect x="73.5774%" y="373" width="1.0009%" height="15" fill="rgb(100,211,211)" fg:x="2573" fg:w="35"/><text x="73.8274%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (28 samples, 0.80%)</title><rect x="73.7775%" y="357" width="0.8007%" height="15" fill="rgb(225,125,0)" fg:x="2580" fg:w="28"/><text x="74.0275%" y="367.50"></text></g><g><title>core::hash::Hasher::write_isize (28 samples, 0.80%)</title><rect x="73.7775%" y="341" width="0.8007%" height="15" fill="rgb(237,137,0)" fg:x="2580" fg:w="28"/><text x="74.0275%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (28 samples, 0.80%)</title><rect x="73.7775%" y="325" width="0.8007%" height="15" fill="rgb(196,96,0)" fg:x="2580" fg:w="28"/><text x="74.0275%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.74%)</title><rect x="73.8347%" y="309" width="0.7435%" height="15" fill="rgb(204,104,0)" fg:x="2582" fg:w="26"/><text x="74.0847%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (26 samples, 0.74%)</title><rect x="73.8347%" y="293" width="0.7435%" height="15" fill="rgb(236,136,0)" fg:x="2582" fg:w="26"/><text x="74.0847%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.74%)</title><rect x="73.8347%" y="277" width="0.7435%" height="15" fill="rgb(224,124,0)" fg:x="2582" fg:w="26"/><text x="74.0847%" y="287.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.17%)</title><rect x="74.4066%" y="261" width="0.1716%" height="15" fill="rgb(224,124,0)" fg:x="2602" fg:w="6"/><text x="74.6566%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="74.6354%" y="373" width="0.0286%" height="15" fill="rgb(67,181,181)" fg:x="2610" fg:w="1"/><text x="74.8854%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="74.6354%" y="357" width="0.0286%" height="15" fill="rgb(100,211,211)" fg:x="2610" fg:w="1"/><text x="74.8854%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (26 samples, 0.74%)</title><rect x="74.6640%" y="357" width="0.7435%" height="15" fill="rgb(71,185,185)" fg:x="2611" fg:w="26"/><text x="74.9140%" y="367.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (26 samples, 0.74%)</title><rect x="74.6640%" y="341" width="0.7435%" height="15" fill="rgb(53,167,167)" fg:x="2611" fg:w="26"/><text x="74.9140%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.74%)</title><rect x="74.6640%" y="325" width="0.7435%" height="15" fill="rgb(205,105,0)" fg:x="2611" fg:w="26"/><text x="74.9140%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (26 samples, 0.74%)</title><rect x="74.6640%" y="309" width="0.7435%" height="15" fill="rgb(76,189,189)" fg:x="2611" fg:w="26"/><text x="74.9140%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (30 samples, 0.86%)</title><rect x="74.6640%" y="373" width="0.8579%" height="15" fill="rgb(91,203,203)" fg:x="2611" fg:w="30"/><text x="74.9140%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.11%)</title><rect x="75.4075%" y="357" width="0.1144%" height="15" fill="rgb(79,192,192)" fg:x="2637" fg:w="4"/><text x="75.6575%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.11%)</title><rect x="75.4075%" y="341" width="0.1144%" height="15" fill="rgb(93,204,204)" fg:x="2637" fg:w="4"/><text x="75.6575%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.11%)</title><rect x="75.4075%" y="325" width="0.1144%" height="15" fill="rgb(198,98,0)" fg:x="2637" fg:w="4"/><text x="75.6575%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.11%)</title><rect x="75.4075%" y="309" width="0.1144%" height="15" fill="rgb(205,105,0)" fg:x="2637" fg:w="4"/><text x="75.6575%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (12 samples, 0.34%)</title><rect x="75.5219%" y="373" width="0.3432%" height="15" fill="rgb(65,179,179)" fg:x="2641" fg:w="12"/><text x="75.7719%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="75.8650%" y="373" width="0.0286%" height="15" fill="rgb(56,171,171)" fg:x="2653" fg:w="1"/><text x="76.1150%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="75.8650%" y="357" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="2653" fg:w="1"/><text x="76.1150%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="75.8650%" y="341" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="2653" fg:w="1"/><text x="76.1150%" y="351.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (140 samples, 4.00%)</title><rect x="71.9760%" y="485" width="4.0034%" height="15" fill="rgb(94,205,205)" fg:x="2517" fg:w="140"/><text x="72.2260%" y="495.50">alc:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (140 samples, 4.00%)</title><rect x="71.9760%" y="469" width="4.0034%" height="15" fill="rgb(240,140,0)" fg:x="2517" fg:w="140"/><text x="72.2260%" y="479.50">std:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (140 samples, 4.00%)</title><rect x="71.9760%" y="453" width="4.0034%" height="15" fill="rgb(101,212,212)" fg:x="2517" fg:w="140"/><text x="72.2260%" y="463.50">hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (140 samples, 4.00%)</title><rect x="71.9760%" y="437" width="4.0034%" height="15" fill="rgb(68,181,181)" fg:x="2517" fg:w="140"/><text x="72.2260%" y="447.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (49 samples, 1.40%)</title><rect x="74.5782%" y="421" width="1.4012%" height="15" fill="rgb(105,215,215)" fg:x="2608" fg:w="49"/><text x="74.8282%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (49 samples, 1.40%)</title><rect x="74.5782%" y="405" width="1.4012%" height="15" fill="rgb(75,188,188)" fg:x="2608" fg:w="49"/><text x="74.8282%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (49 samples, 1.40%)</title><rect x="74.5782%" y="389" width="1.4012%" height="15" fill="rgb(71,184,184)" fg:x="2608" fg:w="49"/><text x="74.8282%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.09%)</title><rect x="75.8936%" y="373" width="0.0858%" height="15" fill="rgb(109,219,219)" fg:x="2654" fg:w="3"/><text x="76.1436%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.09%)</title><rect x="75.8936%" y="357" width="0.0858%" height="15" fill="rgb(218,118,0)" fg:x="2654" fg:w="3"/><text x="76.1436%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.51%)</title><rect x="76.0652%" y="389" width="0.5147%" height="15" fill="rgb(215,115,0)" fg:x="2660" fg:w="18"/><text x="76.3152%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (18 samples, 0.51%)</title><rect x="76.0652%" y="373" width="0.5147%" height="15" fill="rgb(248,148,0)" fg:x="2660" fg:w="18"/><text x="76.3152%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (18 samples, 0.51%)</title><rect x="76.0652%" y="357" width="0.5147%" height="15" fill="rgb(198,98,0)" fg:x="2660" fg:w="18"/><text x="76.3152%" y="367.50"></text></g><g><title>__rdl_alloc (3 samples, 0.09%)</title><rect x="76.6657%" y="245" width="0.0858%" height="15" fill="rgb(211,211,63)" fg:x="2681" fg:w="3"/><text x="76.9157%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.09%)</title><rect x="76.6657%" y="229" width="0.0858%" height="15" fill="rgb(236,136,0)" fg:x="2681" fg:w="3"/><text x="76.9157%" y="239.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="76.7515%" y="245" width="0.0286%" height="15" fill="rgb(223,223,67)" fg:x="2684" fg:w="1"/><text x="77.0015%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.71%)</title><rect x="76.5799%" y="341" width="0.7149%" height="15" fill="rgb(192,92,0)" fg:x="2678" fg:w="25"/><text x="76.8299%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.71%)</title><rect x="76.5799%" y="325" width="0.7149%" height="15" fill="rgb(205,105,0)" fg:x="2678" fg:w="25"/><text x="76.8299%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.71%)</title><rect x="76.5799%" y="309" width="0.7149%" height="15" fill="rgb(244,144,0)" fg:x="2678" fg:w="25"/><text x="76.8299%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.66%)</title><rect x="76.6371%" y="293" width="0.6577%" height="15" fill="rgb(202,102,0)" fg:x="2680" fg:w="23"/><text x="76.8871%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.66%)</title><rect x="76.6371%" y="277" width="0.6577%" height="15" fill="rgb(202,102,0)" fg:x="2680" fg:w="23"/><text x="76.8871%" y="287.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.66%)</title><rect x="76.6371%" y="261" width="0.6577%" height="15" fill="rgb(221,121,0)" fg:x="2680" fg:w="23"/><text x="76.8871%" y="271.50"></text></g><g><title>malloc (18 samples, 0.51%)</title><rect x="76.7801%" y="245" width="0.5147%" height="15" fill="rgb(190,190,55)" fg:x="2685" fg:w="18"/><text x="77.0301%" y="255.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (55 samples, 1.57%)</title><rect x="76.0652%" y="421" width="1.5728%" height="15" fill="rgb(79,191,191)" fg:x="2660" fg:w="55"/><text x="76.3152%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (55 samples, 1.57%)</title><rect x="76.0652%" y="405" width="1.5728%" height="15" fill="rgb(223,123,0)" fg:x="2660" fg:w="55"/><text x="76.3152%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 1.06%)</title><rect x="76.5799%" y="389" width="1.0580%" height="15" fill="rgb(213,113,0)" fg:x="2678" fg:w="37"/><text x="76.8299%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 1.06%)</title><rect x="76.5799%" y="373" width="1.0580%" height="15" fill="rgb(238,138,0)" fg:x="2678" fg:w="37"/><text x="76.8299%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 1.06%)</title><rect x="76.5799%" y="357" width="1.0580%" height="15" fill="rgb(89,201,201)" fg:x="2678" fg:w="37"/><text x="76.8299%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12 samples, 0.34%)</title><rect x="77.2948%" y="341" width="0.3432%" height="15" fill="rgb(245,145,0)" fg:x="2703" fg:w="12"/><text x="77.5448%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.34%)</title><rect x="77.2948%" y="325" width="0.3432%" height="15" fill="rgb(194,94,0)" fg:x="2703" fg:w="12"/><text x="77.5448%" y="335.50"></text></g><g><title>[libc.so.6] (12 samples, 0.34%)</title><rect x="77.2948%" y="309" width="0.3432%" height="15" fill="rgb(214,214,64)" fg:x="2703" fg:w="12"/><text x="77.5448%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.11%)</title><rect x="77.6380%" y="421" width="0.1144%" height="15" fill="rgb(218,118,0)" fg:x="2715" fg:w="4"/><text x="77.8880%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="77.7238%" y="405" width="0.0286%" height="15" fill="rgb(219,119,0)" fg:x="2718" fg:w="1"/><text x="77.9738%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="77.7238%" y="389" width="0.0286%" height="15" fill="rgb(243,143,0)" fg:x="2718" fg:w="1"/><text x="77.9738%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="77.7238%" y="373" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="2718" fg:w="1"/><text x="77.9738%" y="383.50"></text></g><g><title>__rdl_alloc (2 samples, 0.06%)</title><rect x="77.7810%" y="325" width="0.0572%" height="15" fill="rgb(201,201,59)" fg:x="2720" fg:w="2"/><text x="78.0310%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.06%)</title><rect x="77.7810%" y="309" width="0.0572%" height="15" fill="rgb(238,138,0)" fg:x="2720" fg:w="2"/><text x="78.0310%" y="319.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="77.8381%" y="325" width="0.0286%" height="15" fill="rgb(228,228,69)" fg:x="2722" fg:w="1"/><text x="78.0881%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.23%)</title><rect x="77.7810%" y="373" width="0.2288%" height="15" fill="rgb(230,130,0)" fg:x="2720" fg:w="8"/><text x="78.0310%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.23%)</title><rect x="77.7810%" y="357" width="0.2288%" height="15" fill="rgb(249,149,0)" fg:x="2720" fg:w="8"/><text x="78.0310%" y="367.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.23%)</title><rect x="77.7810%" y="341" width="0.2288%" height="15" fill="rgb(241,141,0)" fg:x="2720" fg:w="8"/><text x="78.0310%" y="351.50"></text></g><g><title>malloc (5 samples, 0.14%)</title><rect x="77.8667%" y="325" width="0.1430%" height="15" fill="rgb(206,206,61)" fg:x="2723" fg:w="5"/><text x="78.1167%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (74 samples, 2.12%)</title><rect x="75.9794%" y="485" width="2.1161%" height="15" fill="rgb(223,123,0)" fg:x="2657" fg:w="74"/><text x="76.2294%" y="495.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (74 samples, 2.12%)</title><rect x="75.9794%" y="469" width="2.1161%" height="15" fill="rgb(242,142,0)" fg:x="2657" fg:w="74"/><text x="76.2294%" y="479.50">a..</text></g><g><title>alloc::slice::hack::to_vec (74 samples, 2.12%)</title><rect x="75.9794%" y="453" width="2.1161%" height="15" fill="rgb(232,132,0)" fg:x="2657" fg:w="74"/><text x="76.2294%" y="463.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74 samples, 2.12%)</title><rect x="75.9794%" y="437" width="2.1161%" height="15" fill="rgb(109,219,219)" fg:x="2657" fg:w="74"/><text x="76.2294%" y="447.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.34%)</title><rect x="77.7524%" y="421" width="0.3432%" height="15" fill="rgb(211,111,0)" fg:x="2719" fg:w="12"/><text x="78.0024%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.31%)</title><rect x="77.7810%" y="405" width="0.3146%" height="15" fill="rgb(250,150,0)" fg:x="2720" fg:w="11"/><text x="78.0310%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.31%)</title><rect x="77.7810%" y="389" width="0.3146%" height="15" fill="rgb(211,111,0)" fg:x="2720" fg:w="11"/><text x="78.0310%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.09%)</title><rect x="78.0097%" y="373" width="0.0858%" height="15" fill="rgb(224,124,0)" fg:x="2728" fg:w="3"/><text x="78.2597%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.09%)</title><rect x="78.0097%" y="357" width="0.0858%" height="15" fill="rgb(227,127,0)" fg:x="2728" fg:w="3"/><text x="78.2597%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.06%)</title><rect x="78.0955%" y="485" width="0.0572%" height="15" fill="rgb(238,138,0)" fg:x="2731" fg:w="2"/><text x="78.3455%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.11%)</title><rect x="78.7818%" y="437" width="0.1144%" height="15" fill="rgb(217,117,0)" fg:x="2755" fg:w="4"/><text x="79.0318%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.06%)</title><rect x="78.8390%" y="421" width="0.0572%" height="15" fill="rgb(249,149,0)" fg:x="2757" fg:w="2"/><text x="79.0890%" y="431.50"></text></g><g><title>__rdl_realloc (1 samples, 0.03%)</title><rect x="79.1250%" y="373" width="0.0286%" height="15" fill="rgb(196,196,57)" fg:x="2767" fg:w="1"/><text x="79.3750%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.03%)</title><rect x="79.1250%" y="357" width="0.0286%" height="15" fill="rgb(254,154,0)" fg:x="2767" fg:w="1"/><text x="79.3750%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 1.03%)</title><rect x="79.1250%" y="421" width="1.0295%" height="15" fill="rgb(209,109,0)" fg:x="2767" fg:w="36"/><text x="79.3750%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 1.03%)</title><rect x="79.1250%" y="405" width="1.0295%" height="15" fill="rgb(240,140,0)" fg:x="2767" fg:w="36"/><text x="79.3750%" y="415.50"></text></g><g><title>alloc::alloc::realloc (36 samples, 1.03%)</title><rect x="79.1250%" y="389" width="1.0295%" height="15" fill="rgb(205,105,0)" fg:x="2767" fg:w="36"/><text x="79.3750%" y="399.50"></text></g><g><title>realloc (35 samples, 1.00%)</title><rect x="79.1536%" y="373" width="1.0009%" height="15" fill="rgb(226,226,68)" fg:x="2768" fg:w="35"/><text x="79.4036%" y="383.50"></text></g><g><title>[libc.so.6] (31 samples, 0.89%)</title><rect x="79.2679%" y="357" width="0.8865%" height="15" fill="rgb(193,193,56)" fg:x="2772" fg:w="31"/><text x="79.5179%" y="367.50"></text></g><g><title>[libc.so.6] (28 samples, 0.80%)</title><rect x="79.3537%" y="341" width="0.8007%" height="15" fill="rgb(218,218,65)" fg:x="2775" fg:w="28"/><text x="79.6037%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="80.0686%" y="325" width="0.0858%" height="15" fill="rgb(203,203,60)" fg:x="2800" fg:w="3"/><text x="80.3186%" y="335.50"></text></g><g><title>__rdl_alloc (3 samples, 0.09%)</title><rect x="80.1544%" y="421" width="0.0858%" height="15" fill="rgb(216,216,64)" fg:x="2803" fg:w="3"/><text x="80.4044%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.09%)</title><rect x="80.1544%" y="405" width="0.0858%" height="15" fill="rgb(240,140,0)" fg:x="2803" fg:w="3"/><text x="80.4044%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.06%)</title><rect x="80.2402%" y="421" width="0.0572%" height="15" fill="rgb(219,119,0)" fg:x="2806" fg:w="2"/><text x="80.4902%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 1.77%)</title><rect x="78.8962%" y="437" width="1.7729%" height="15" fill="rgb(226,126,0)" fg:x="2759" fg:w="62"/><text x="79.1462%" y="447.50">a..</text></g><g><title>malloc (13 samples, 0.37%)</title><rect x="80.2974%" y="421" width="0.3717%" height="15" fill="rgb(182,182,52)" fg:x="2808" fg:w="13"/><text x="80.5474%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.06%)</title><rect x="80.6691%" y="437" width="0.0572%" height="15" fill="rgb(202,102,0)" fg:x="2821" fg:w="2"/><text x="80.9191%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.06%)</title><rect x="80.6691%" y="421" width="0.0572%" height="15" fill="rgb(227,127,0)" fg:x="2821" fg:w="2"/><text x="80.9191%" y="431.50"></text></g><g><title>core::cmp::max (2 samples, 0.06%)</title><rect x="80.7263%" y="437" width="0.0572%" height="15" fill="rgb(232,132,0)" fg:x="2823" fg:w="2"/><text x="80.9763%" y="447.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.06%)</title><rect x="80.7263%" y="421" width="0.0572%" height="15" fill="rgb(238,138,0)" fg:x="2823" fg:w="2"/><text x="80.9763%" y="431.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.06%)</title><rect x="80.7263%" y="405" width="0.0572%" height="15" fill="rgb(205,105,0)" fg:x="2823" fg:w="2"/><text x="80.9763%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (75 samples, 2.14%)</title><rect x="78.6674%" y="469" width="2.1447%" height="15" fill="rgb(245,145,0)" fg:x="2751" fg:w="75"/><text x="78.9174%" y="479.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (75 samples, 2.14%)</title><rect x="78.6674%" y="453" width="2.1447%" height="15" fill="rgb(202,102,0)" fg:x="2751" fg:w="75"/><text x="78.9174%" y="463.50">a..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="80.7835%" y="437" width="0.0286%" height="15" fill="rgb(250,150,0)" fg:x="2825" fg:w="1"/><text x="81.0335%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="80.7835%" y="421" width="0.0286%" height="15" fill="rgb(193,93,0)" fg:x="2825" fg:w="1"/><text x="81.0335%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="80.8121%" y="469" width="0.0286%" height="15" fill="rgb(222,122,0)" fg:x="2826" fg:w="1"/><text x="81.0621%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="80.8121%" y="453" width="0.0286%" height="15" fill="rgb(201,101,0)" fg:x="2826" fg:w="1"/><text x="81.0621%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (100 samples, 2.86%)</title><rect x="78.1527%" y="485" width="2.8596%" height="15" fill="rgb(227,127,0)" fg:x="2733" fg:w="100"/><text x="78.4027%" y="495.50">al..</text></g><g><title>core::ptr::write (6 samples, 0.17%)</title><rect x="80.8407%" y="469" width="0.1716%" height="15" fill="rgb(243,143,0)" fg:x="2827" fg:w="6"/><text x="81.0907%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (4 samples, 0.11%)</title><rect x="81.0123%" y="485" width="0.1144%" height="15" fill="rgb(200,100,0)" fg:x="2833" fg:w="4"/><text x="81.2623%" y="495.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.11%)</title><rect x="81.1267%" y="389" width="0.1144%" height="15" fill="rgb(228,228,69)" fg:x="2837" fg:w="4"/><text x="81.3767%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.11%)</title><rect x="81.1267%" y="373" width="0.1144%" height="15" fill="rgb(236,136,0)" fg:x="2837" fg:w="4"/><text x="81.3767%" y="383.50"></text></g><g><title>__rust_dealloc (7 samples, 0.20%)</title><rect x="81.2411%" y="389" width="0.2002%" height="15" fill="rgb(209,209,62)" fg:x="2841" fg:w="7"/><text x="81.4911%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 2.26%)</title><rect x="81.1267%" y="421" width="2.2591%" height="15" fill="rgb(253,153,0)" fg:x="2837" fg:w="79"/><text x="81.3767%" y="431.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (79 samples, 2.26%)</title><rect x="81.1267%" y="405" width="2.2591%" height="15" fill="rgb(243,143,0)" fg:x="2837" fg:w="79"/><text x="81.3767%" y="415.50">a..</text></g><g><title>cfree (68 samples, 1.94%)</title><rect x="81.4412%" y="389" width="1.9445%" height="15" fill="rgb(177,177,50)" fg:x="2848" fg:w="68"/><text x="81.6912%" y="399.50">c..</text></g><g><title>[libc.so.6] (46 samples, 1.32%)</title><rect x="82.0703%" y="373" width="1.3154%" height="15" fill="rgb(186,186,54)" fg:x="2870" fg:w="46"/><text x="82.3203%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (82 samples, 2.34%)</title><rect x="81.1267%" y="485" width="2.3449%" height="15" fill="rgb(222,122,0)" fg:x="2837" fg:w="82"/><text x="81.3767%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (82 samples, 2.34%)</title><rect x="81.1267%" y="469" width="2.3449%" height="15" fill="rgb(194,94,0)" fg:x="2837" fg:w="82"/><text x="81.3767%" y="479.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (82 samples, 2.34%)</title><rect x="81.1267%" y="453" width="2.3449%" height="15" fill="rgb(233,133,0)" fg:x="2837" fg:w="82"/><text x="81.3767%" y="463.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 2.34%)</title><rect x="81.1267%" y="437" width="2.3449%" height="15" fill="rgb(194,94,0)" fg:x="2837" fg:w="82"/><text x="81.3767%" y="447.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.09%)</title><rect x="83.3858%" y="421" width="0.0858%" height="15" fill="rgb(229,129,0)" fg:x="2916" fg:w="3"/><text x="83.6358%" y="431.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.09%)</title><rect x="83.7289%" y="341" width="0.0858%" height="15" fill="rgb(192,192,56)" fg:x="2928" fg:w="3"/><text x="83.9789%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.09%)</title><rect x="83.7289%" y="325" width="0.0858%" height="15" fill="rgb(242,142,0)" fg:x="2928" fg:w="3"/><text x="83.9789%" y="335.50"></text></g><g><title>__rust_dealloc (3 samples, 0.09%)</title><rect x="83.8147%" y="341" width="0.0858%" height="15" fill="rgb(226,226,68)" fg:x="2931" fg:w="3"/><text x="84.0647%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (98 samples, 2.80%)</title><rect x="83.5573%" y="373" width="2.8024%" height="15" fill="rgb(231,131,0)" fg:x="2922" fg:w="98"/><text x="83.8073%" y="383.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (98 samples, 2.80%)</title><rect x="83.5573%" y="357" width="2.8024%" height="15" fill="rgb(241,141,0)" fg:x="2922" fg:w="98"/><text x="83.8073%" y="367.50">al..</text></g><g><title>cfree (86 samples, 2.46%)</title><rect x="83.9005%" y="341" width="2.4593%" height="15" fill="rgb(228,228,69)" fg:x="2934" fg:w="86"/><text x="84.1505%" y="351.50">cf..</text></g><g><title>[libc.so.6] (68 samples, 1.94%)</title><rect x="84.4152%" y="325" width="1.9445%" height="15" fill="rgb(225,225,68)" fg:x="2952" fg:w="68"/><text x="84.6652%" y="335.50">[..</text></g><g><title>[libc.so.6] (16 samples, 0.46%)</title><rect x="85.9022%" y="309" width="0.4575%" height="15" fill="rgb(179,179,51)" fg:x="3004" fg:w="16"/><text x="86.1522%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="86.2739%" y="293" width="0.0858%" height="15" fill="rgb(223,223,67)" fg:x="3017" fg:w="3"/><text x="86.5239%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 2.92%)</title><rect x="83.4715%" y="469" width="2.9168%" height="15" fill="rgb(224,124,0)" fg:x="2919" fg:w="102"/><text x="83.7215%" y="479.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (102 samples, 2.92%)</title><rect x="83.4715%" y="453" width="2.9168%" height="15" fill="rgb(217,117,0)" fg:x="2919" fg:w="102"/><text x="83.7215%" y="463.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (99 samples, 2.83%)</title><rect x="83.5573%" y="437" width="2.8310%" height="15" fill="rgb(208,108,0)" fg:x="2922" fg:w="99"/><text x="83.8073%" y="447.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (99 samples, 2.83%)</title><rect x="83.5573%" y="421" width="2.8310%" height="15" fill="rgb(212,112,0)" fg:x="2922" fg:w="99"/><text x="83.8073%" y="431.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (99 samples, 2.83%)</title><rect x="83.5573%" y="405" width="2.8310%" height="15" fill="rgb(239,139,0)" fg:x="2922" fg:w="99"/><text x="83.8073%" y="415.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 2.83%)</title><rect x="83.5573%" y="389" width="2.8310%" height="15" fill="rgb(242,142,0)" fg:x="2922" fg:w="99"/><text x="83.8073%" y="399.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="86.3597%" y="373" width="0.0286%" height="15" fill="rgb(196,96,0)" fg:x="3020" fg:w="1"/><text x="86.6097%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.03%)</title><rect x="86.3597%" y="357" width="0.0286%" height="15" fill="rgb(237,137,0)" fg:x="3020" fg:w="1"/><text x="86.6097%" y="367.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="86.4455%" y="405" width="0.0286%" height="15" fill="rgb(190,190,55)" fg:x="3023" fg:w="1"/><text x="86.6955%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="86.4455%" y="389" width="0.0286%" height="15" fill="rgb(201,101,0)" fg:x="3023" fg:w="1"/><text x="86.6955%" y="399.50"></text></g><g><title>__rust_dealloc (3 samples, 0.09%)</title><rect x="86.4741%" y="405" width="0.0858%" height="15" fill="rgb(182,182,52)" fg:x="3024" fg:w="3"/><text x="86.7241%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 1.17%)</title><rect x="86.4169%" y="437" width="1.1724%" height="15" fill="rgb(245,145,0)" fg:x="3022" fg:w="41"/><text x="86.6669%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 1.17%)</title><rect x="86.4169%" y="421" width="1.1724%" height="15" fill="rgb(239,139,0)" fg:x="3022" fg:w="41"/><text x="86.6669%" y="431.50"></text></g><g><title>cfree (36 samples, 1.03%)</title><rect x="86.5599%" y="405" width="1.0295%" height="15" fill="rgb(222,222,67)" fg:x="3027" fg:w="36"/><text x="86.8099%" y="415.50"></text></g><g><title>[libc.so.6] (27 samples, 0.77%)</title><rect x="86.8173%" y="389" width="0.7721%" height="15" fill="rgb(200,200,59)" fg:x="3036" fg:w="27"/><text x="87.0673%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="87.5322%" y="373" width="0.0572%" height="15" fill="rgb(217,217,65)" fg:x="3061" fg:w="2"/><text x="87.7822%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="87.5608%" y="357" width="0.0286%" height="15" fill="rgb(183,183,53)" fg:x="3062" fg:w="1"/><text x="87.8108%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (148 samples, 4.23%)</title><rect x="83.4715%" y="485" width="4.2322%" height="15" fill="rgb(200,100,0)" fg:x="2919" fg:w="148"/><text x="83.7215%" y="495.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (46 samples, 1.32%)</title><rect x="86.3883%" y="469" width="1.3154%" height="15" fill="rgb(242,142,0)" fg:x="3021" fg:w="46"/><text x="86.6383%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 1.32%)</title><rect x="86.3883%" y="453" width="1.3154%" height="15" fill="rgb(201,101,0)" fg:x="3021" fg:w="46"/><text x="86.6383%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.11%)</title><rect x="87.5894%" y="437" width="0.1144%" height="15" fill="rgb(203,103,0)" fg:x="3063" fg:w="4"/><text x="87.8394%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.03%)</title><rect x="87.6752%" y="421" width="0.0286%" height="15" fill="rgb(199,99,0)" fg:x="3066" fg:w="1"/><text x="87.9252%" y="431.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (3 samples, 0.09%)</title><rect x="87.7037%" y="453" width="0.0858%" height="15" fill="rgb(220,120,0)" fg:x="3067" fg:w="3"/><text x="87.9537%" y="463.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3 samples, 0.09%)</title><rect x="87.7037%" y="437" width="0.0858%" height="15" fill="rgb(75,188,188)" fg:x="3067" fg:w="3"/><text x="87.9537%" y="447.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (3 samples, 0.09%)</title><rect x="87.7037%" y="421" width="0.0858%" height="15" fill="rgb(226,126,0)" fg:x="3067" fg:w="3"/><text x="87.9537%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.09%)</title><rect x="87.7037%" y="405" width="0.0858%" height="15" fill="rgb(216,116,0)" fg:x="3067" fg:w="3"/><text x="87.9537%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (3 samples, 0.09%)</title><rect x="87.7037%" y="389" width="0.0858%" height="15" fill="rgb(193,93,0)" fg:x="3067" fg:w="3"/><text x="87.9537%" y="399.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.11%)</title><rect x="87.7895%" y="357" width="0.1144%" height="15" fill="rgb(177,177,51)" fg:x="3070" fg:w="4"/><text x="88.0395%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.11%)</title><rect x="87.7895%" y="341" width="0.1144%" height="15" fill="rgb(206,106,0)" fg:x="3070" fg:w="4"/><text x="88.0395%" y="351.50"></text></g><g><title>__rust_dealloc (3 samples, 0.09%)</title><rect x="87.9039%" y="357" width="0.0858%" height="15" fill="rgb(224,224,68)" fg:x="3074" fg:w="3"/><text x="88.1539%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 1.34%)</title><rect x="87.7895%" y="389" width="1.3440%" height="15" fill="rgb(253,153,0)" fg:x="3070" fg:w="47"/><text x="88.0395%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 1.34%)</title><rect x="87.7895%" y="373" width="1.3440%" height="15" fill="rgb(194,94,0)" fg:x="3070" fg:w="47"/><text x="88.0395%" y="383.50"></text></g><g><title>cfree (40 samples, 1.14%)</title><rect x="87.9897%" y="357" width="1.1438%" height="15" fill="rgb(185,185,53)" fg:x="3077" fg:w="40"/><text x="88.2397%" y="367.50"></text></g><g><title>[libc.so.6] (25 samples, 0.71%)</title><rect x="88.4186%" y="341" width="0.7149%" height="15" fill="rgb(220,220,66)" fg:x="3092" fg:w="25"/><text x="88.6686%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (52 samples, 1.49%)</title><rect x="87.7895%" y="453" width="1.4870%" height="15" fill="rgb(208,108,0)" fg:x="3070" fg:w="52"/><text x="88.0395%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 1.49%)</title><rect x="87.7895%" y="437" width="1.4870%" height="15" fill="rgb(99,210,210)" fg:x="3070" fg:w="52"/><text x="88.0395%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (52 samples, 1.49%)</title><rect x="87.7895%" y="421" width="1.4870%" height="15" fill="rgb(250,150,0)" fg:x="3070" fg:w="52"/><text x="88.0395%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 1.49%)</title><rect x="87.7895%" y="405" width="1.4870%" height="15" fill="rgb(239,139,0)" fg:x="3070" fg:w="52"/><text x="88.0395%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.14%)</title><rect x="89.1335%" y="389" width="0.1430%" height="15" fill="rgb(203,103,0)" fg:x="3117" fg:w="5"/><text x="89.3835%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (5 samples, 0.14%)</title><rect x="89.1335%" y="373" width="0.1430%" height="15" fill="rgb(213,113,0)" fg:x="3117" fg:w="5"/><text x="89.3835%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (56 samples, 1.60%)</title><rect x="87.7037%" y="485" width="1.6014%" height="15" fill="rgb(217,117,0)" fg:x="3067" fg:w="56"/><text x="87.9537%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 1.60%)</title><rect x="87.7037%" y="469" width="1.6014%" height="15" fill="rgb(214,114,0)" fg:x="3067" fg:w="56"/><text x="87.9537%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.03%)</title><rect x="89.2765%" y="453" width="0.0286%" height="15" fill="rgb(203,103,0)" fg:x="3122" fg:w="1"/><text x="89.5265%" y="463.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (1,541 samples, 44.07%)</title><rect x="45.6105%" y="501" width="44.0663%" height="15" fill="rgb(53,168,168)" fg:x="1595" fg:w="1541"/><text x="45.8605%" y="511.50">alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (13 samples, 0.37%)</title><rect x="89.3051%" y="485" width="0.3717%" height="15" fill="rgb(211,111,0)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.37%)</title><rect x="89.3051%" y="469" width="0.3717%" height="15" fill="rgb(237,137,0)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (13 samples, 0.37%)</title><rect x="89.3051%" y="453" width="0.3717%" height="15" fill="rgb(251,151,0)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.37%)</title><rect x="89.3051%" y="437" width="0.3717%" height="15" fill="rgb(109,219,219)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (13 samples, 0.37%)</title><rect x="89.3051%" y="421" width="0.3717%" height="15" fill="rgb(236,136,0)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.37%)</title><rect x="89.3051%" y="405" width="0.3717%" height="15" fill="rgb(252,152,0)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.37%)</title><rect x="89.3051%" y="389" width="0.3717%" height="15" fill="rgb(227,127,0)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.37%)</title><rect x="89.3051%" y="373" width="0.3717%" height="15" fill="rgb(237,137,0)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="383.50"></text></g><g><title>cfree (13 samples, 0.37%)</title><rect x="89.3051%" y="357" width="0.3717%" height="15" fill="rgb(195,195,57)" fg:x="3123" fg:w="13"/><text x="89.5551%" y="367.50"></text></g><g><title>[libc.so.6] (10 samples, 0.29%)</title><rect x="89.3909%" y="341" width="0.2860%" height="15" fill="rgb(176,176,50)" fg:x="3126" fg:w="10"/><text x="89.6409%" y="351.50"></text></g><g><title>__rdl_realloc (1 samples, 0.03%)</title><rect x="89.9342%" y="389" width="0.0286%" height="15" fill="rgb(229,229,69)" fg:x="3145" fg:w="1"/><text x="90.1842%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.03%)</title><rect x="89.9342%" y="373" width="0.0286%" height="15" fill="rgb(251,151,0)" fg:x="3145" fg:w="1"/><text x="90.1842%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.51%)</title><rect x="89.9342%" y="437" width="0.5147%" height="15" fill="rgb(245,145,0)" fg:x="3145" fg:w="18"/><text x="90.1842%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.51%)</title><rect x="89.9342%" y="421" width="0.5147%" height="15" fill="rgb(220,120,0)" fg:x="3145" fg:w="18"/><text x="90.1842%" y="431.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.51%)</title><rect x="89.9342%" y="405" width="0.5147%" height="15" fill="rgb(254,154,0)" fg:x="3145" fg:w="18"/><text x="90.1842%" y="415.50"></text></g><g><title>realloc (17 samples, 0.49%)</title><rect x="89.9628%" y="389" width="0.4861%" height="15" fill="rgb(182,182,52)" fg:x="3146" fg:w="17"/><text x="90.2128%" y="399.50"></text></g><g><title>[libc.so.6] (14 samples, 0.40%)</title><rect x="90.0486%" y="373" width="0.4003%" height="15" fill="rgb(191,191,56)" fg:x="3149" fg:w="14"/><text x="90.2986%" y="383.50"></text></g><g><title>[libc.so.6] (13 samples, 0.37%)</title><rect x="90.0772%" y="357" width="0.3717%" height="15" fill="rgb(200,200,59)" fg:x="3150" fg:w="13"/><text x="90.3272%" y="367.50"></text></g><g><title>[alc] (1 samples, 0.03%)</title><rect x="90.4490%" y="437" width="0.0286%" height="15" fill="rgb(202,202,60)" fg:x="3163" fg:w="1"/><text x="90.6990%" y="447.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="90.4490%" y="421" width="0.0286%" height="15" fill="rgb(211,211,63)" fg:x="3163" fg:w="1"/><text x="90.6990%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="90.4776%" y="437" width="0.0286%" height="15" fill="rgb(176,176,50)" fg:x="3164" fg:w="1"/><text x="90.7276%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="90.4776%" y="421" width="0.0286%" height="15" fill="rgb(232,132,0)" fg:x="3164" fg:w="1"/><text x="90.7276%" y="431.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="90.5061%" y="437" width="0.0286%" height="15" fill="rgb(219,219,66)" fg:x="3165" fg:w="1"/><text x="90.7561%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="90.5347%" y="437" width="0.0286%" height="15" fill="rgb(201,101,0)" fg:x="3166" fg:w="1"/><text x="90.7847%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 1.06%)</title><rect x="89.7912%" y="453" width="1.0580%" height="15" fill="rgb(237,137,0)" fg:x="3140" fg:w="37"/><text x="90.0412%" y="463.50"></text></g><g><title>malloc (10 samples, 0.29%)</title><rect x="90.5633%" y="437" width="0.2860%" height="15" fill="rgb(201,201,59)" fg:x="3167" fg:w="10"/><text x="90.8133%" y="447.50"></text></g><g><title>core::cmp::max (3 samples, 0.09%)</title><rect x="90.8493%" y="453" width="0.0858%" height="15" fill="rgb(251,151,0)" fg:x="3177" fg:w="3"/><text x="91.0993%" y="463.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.09%)</title><rect x="90.8493%" y="437" width="0.0858%" height="15" fill="rgb(238,138,0)" fg:x="3177" fg:w="3"/><text x="91.0993%" y="447.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.09%)</title><rect x="90.8493%" y="421" width="0.0858%" height="15" fill="rgb(215,115,0)" fg:x="3177" fg:w="3"/><text x="91.0993%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (42 samples, 1.20%)</title><rect x="89.7912%" y="485" width="1.2010%" height="15" fill="rgb(245,145,0)" fg:x="3140" fg:w="42"/><text x="90.0412%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 1.20%)</title><rect x="89.7912%" y="469" width="1.2010%" height="15" fill="rgb(210,110,0)" fg:x="3140" fg:w="42"/><text x="90.0412%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.06%)</title><rect x="90.9351%" y="453" width="0.0572%" height="15" fill="rgb(220,120,0)" fg:x="3180" fg:w="2"/><text x="91.1851%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.06%)</title><rect x="90.9351%" y="437" width="0.0572%" height="15" fill="rgb(252,152,0)" fg:x="3180" fg:w="2"/><text x="91.1851%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="90.9923%" y="485" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="3182" fg:w="1"/><text x="91.2423%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="90.9923%" y="469" width="0.0286%" height="15" fill="rgb(240,140,0)" fg:x="3182" fg:w="1"/><text x="91.2423%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48 samples, 1.37%)</title><rect x="89.6769%" y="501" width="1.3726%" height="15" fill="rgb(222,122,0)" fg:x="3136" fg:w="48"/><text x="89.9269%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="91.0209%" y="485" width="0.0286%" height="15" fill="rgb(209,109,0)" fg:x="3183" fg:w="1"/><text x="91.2709%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.20%)</title><rect x="91.0781%" y="469" width="0.2002%" height="15" fill="rgb(235,135,0)" fg:x="3185" fg:w="7"/><text x="91.3281%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (6 samples, 0.17%)</title><rect x="91.1067%" y="453" width="0.1716%" height="15" fill="rgb(191,91,0)" fg:x="3186" fg:w="6"/><text x="91.3567%" y="463.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.17%)</title><rect x="91.1067%" y="437" width="0.1716%" height="15" fill="rgb(254,154,0)" fg:x="3186" fg:w="6"/><text x="91.3567%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.17%)</title><rect x="91.1067%" y="421" width="0.1716%" height="15" fill="rgb(196,96,0)" fg:x="3186" fg:w="6"/><text x="91.3567%" y="431.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams::_{{closure}} (6 samples, 0.17%)</title><rect x="91.1067%" y="405" width="0.1716%" height="15" fill="rgb(58,172,172)" fg:x="3186" fg:w="6"/><text x="91.3567%" y="415.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::total_cmp (6 samples, 0.17%)</title><rect x="91.1067%" y="389" width="0.1716%" height="15" fill="rgb(240,140,0)" fg:x="3186" fg:w="6"/><text x="91.3567%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (10 samples, 0.29%)</title><rect x="91.0495%" y="501" width="0.2860%" height="15" fill="rgb(235,135,0)" fg:x="3184" fg:w="10"/><text x="91.2995%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (10 samples, 0.29%)</title><rect x="91.0495%" y="485" width="0.2860%" height="15" fill="rgb(199,99,0)" fg:x="3184" fg:w="10"/><text x="91.2995%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="91.2782%" y="469" width="0.0572%" height="15" fill="rgb(222,122,0)" fg:x="3192" fg:w="2"/><text x="91.5282%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.06%)</title><rect x="91.2782%" y="453" width="0.0572%" height="15" fill="rgb(216,116,0)" fg:x="3192" fg:w="2"/><text x="91.5282%" y="463.50"></text></g><g><title>[alc] (1 samples, 0.03%)</title><rect x="91.5356%" y="405" width="0.0286%" height="15" fill="rgb(220,220,66)" fg:x="3201" fg:w="1"/><text x="91.7856%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="91.5356%" y="389" width="0.0286%" height="15" fill="rgb(177,177,50)" fg:x="3201" fg:w="1"/><text x="91.7856%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (17 samples, 0.49%)</title><rect x="91.3354%" y="501" width="0.4861%" height="15" fill="rgb(192,92,0)" fg:x="3194" fg:w="17"/><text x="91.5854%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (17 samples, 0.49%)</title><rect x="91.3354%" y="485" width="0.4861%" height="15" fill="rgb(214,114,0)" fg:x="3194" fg:w="17"/><text x="91.5854%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.49%)</title><rect x="91.3354%" y="469" width="0.4861%" height="15" fill="rgb(239,139,0)" fg:x="3194" fg:w="17"/><text x="91.5854%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.49%)</title><rect x="91.3354%" y="453" width="0.4861%" height="15" fill="rgb(226,126,0)" fg:x="3194" fg:w="17"/><text x="91.5854%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.49%)</title><rect x="91.3354%" y="437" width="0.4861%" height="15" fill="rgb(195,95,0)" fg:x="3194" fg:w="17"/><text x="91.5854%" y="447.50"></text></g><g><title>cfree (16 samples, 0.46%)</title><rect x="91.3640%" y="421" width="0.4575%" height="15" fill="rgb(198,198,58)" fg:x="3195" fg:w="16"/><text x="91.6140%" y="431.50"></text></g><g><title>[libc.so.6] (9 samples, 0.26%)</title><rect x="91.5642%" y="405" width="0.2574%" height="15" fill="rgb(200,200,59)" fg:x="3202" fg:w="9"/><text x="91.8142%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="91.7930%" y="389" width="0.0286%" height="15" fill="rgb(212,212,63)" fg:x="3210" fg:w="1"/><text x="92.0430%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="91.7930%" y="373" width="0.0286%" height="15" fill="rgb(215,215,64)" fg:x="3210" fg:w="1"/><text x="92.0430%" y="383.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.06%)</title><rect x="91.8216%" y="373" width="0.0572%" height="15" fill="rgb(180,180,52)" fg:x="3211" fg:w="2"/><text x="92.0716%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.06%)</title><rect x="91.8216%" y="357" width="0.0572%" height="15" fill="rgb(252,152,0)" fg:x="3211" fg:w="2"/><text x="92.0716%" y="367.50"></text></g><g><title>__rust_dealloc (2 samples, 0.06%)</title><rect x="91.8788%" y="373" width="0.0572%" height="15" fill="rgb(212,212,63)" fg:x="3213" fg:w="2"/><text x="92.1288%" y="383.50"></text></g><g><title>[alc] (2 samples, 0.06%)</title><rect x="92.0503%" y="357" width="0.0572%" height="15" fill="rgb(198,198,58)" fg:x="3219" fg:w="2"/><text x="92.3003%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="92.0503%" y="341" width="0.0572%" height="15" fill="rgb(191,191,56)" fg:x="3219" fg:w="2"/><text x="92.3003%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.86%)</title><rect x="91.8216%" y="405" width="0.8579%" height="15" fill="rgb(245,145,0)" fg:x="3211" fg:w="30"/><text x="92.0716%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.86%)</title><rect x="91.8216%" y="389" width="0.8579%" height="15" fill="rgb(247,147,0)" fg:x="3211" fg:w="30"/><text x="92.0716%" y="399.50"></text></g><g><title>cfree (26 samples, 0.74%)</title><rect x="91.9359%" y="373" width="0.7435%" height="15" fill="rgb(205,205,60)" fg:x="3215" fg:w="26"/><text x="92.1859%" y="383.50"></text></g><g><title>[libc.so.6] (20 samples, 0.57%)</title><rect x="92.1075%" y="357" width="0.5719%" height="15" fill="rgb(218,218,65)" fg:x="3221" fg:w="20"/><text x="92.3575%" y="367.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="92.5651%" y="341" width="0.1144%" height="15" fill="rgb(213,213,63)" fg:x="3237" fg:w="4"/><text x="92.8151%" y="351.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population (2,090 samples, 59.77%)</title><rect x="32.9425%" y="549" width="59.7655%" height="15" fill="rgb(60,174,174)" fg:x="1152" fg:w="2090"/><text x="33.1925%" y="559.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (1,993 samples, 56.99%)</title><rect x="35.7163%" y="533" width="56.9917%" height="15" fill="rgb(106,216,216)" fg:x="1249" fg:w="1993"/><text x="35.9663%" y="543.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (1,989 samples, 56.88%)</title><rect x="35.8307%" y="517" width="56.8773%" height="15" fill="rgb(81,193,193)" fg:x="1253" fg:w="1989"/><text x="36.0807%" y="527.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (31 samples, 0.89%)</title><rect x="91.8216%" y="501" width="0.8865%" height="15" fill="rgb(205,105,0)" fg:x="3211" fg:w="31"/><text x="92.0716%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.89%)</title><rect x="91.8216%" y="485" width="0.8865%" height="15" fill="rgb(199,99,0)" fg:x="3211" fg:w="31"/><text x="92.0716%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (31 samples, 0.89%)</title><rect x="91.8216%" y="469" width="0.8865%" height="15" fill="rgb(249,149,0)" fg:x="3211" fg:w="31"/><text x="92.0716%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.89%)</title><rect x="91.8216%" y="453" width="0.8865%" height="15" fill="rgb(68,181,181)" fg:x="3211" fg:w="31"/><text x="92.0716%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (31 samples, 0.89%)</title><rect x="91.8216%" y="437" width="0.8865%" height="15" fill="rgb(231,131,0)" fg:x="3211" fg:w="31"/><text x="92.0716%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.89%)</title><rect x="91.8216%" y="421" width="0.8865%" height="15" fill="rgb(224,124,0)" fg:x="3211" fg:w="31"/><text x="92.0716%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="92.6794%" y="405" width="0.0286%" height="15" fill="rgb(204,104,0)" fg:x="3241" fg:w="1"/><text x="92.9294%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.03%)</title><rect x="92.6794%" y="389" width="0.0286%" height="15" fill="rgb(254,154,0)" fg:x="3241" fg:w="1"/><text x="92.9294%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.03%)</title><rect x="92.7080%" y="533" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="3242" fg:w="1"/><text x="92.9580%" y="543.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.03%)</title><rect x="92.7080%" y="517" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="3242" fg:w="1"/><text x="92.9580%" y="527.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.03%)</title><rect x="92.7080%" y="501" width="0.0286%" height="15" fill="rgb(219,119,0)" fg:x="3242" fg:w="1"/><text x="92.9580%" y="511.50"></text></g><g><title>core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt;::new (1 samples, 0.03%)</title><rect x="92.7080%" y="485" width="0.0286%" height="15" fill="rgb(197,97,0)" fg:x="3242" fg:w="1"/><text x="92.9580%" y="495.50"></text></g><g><title>alloc::slice::stable_sort::_{{closure}} (1 samples, 0.03%)</title><rect x="92.7080%" y="469" width="0.0286%" height="15" fill="rgb(247,147,0)" fg:x="3242" fg:w="1"/><text x="92.9580%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="92.7080%" y="453" width="0.0286%" height="15" fill="rgb(212,112,0)" fg:x="3242" fg:w="1"/><text x="92.9580%" y="463.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="92.7080%" y="437" width="0.0286%" height="15" fill="rgb(223,223,67)" fg:x="3242" fg:w="1"/><text x="92.9580%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="92.7080%" y="421" width="0.0286%" height="15" fill="rgb(189,189,55)" fg:x="3242" fg:w="1"/><text x="92.9580%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (5 samples, 0.14%)</title><rect x="92.7366%" y="453" width="0.1430%" height="15" fill="rgb(205,105,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.14%)</title><rect x="92.7366%" y="437" width="0.1430%" height="15" fill="rgb(223,123,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (5 samples, 0.14%)</title><rect x="92.7366%" y="421" width="0.1430%" height="15" fill="rgb(228,128,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (5 samples, 0.14%)</title><rect x="92.7366%" y="405" width="0.1430%" height="15" fill="rgb(237,137,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (5 samples, 0.14%)</title><rect x="92.7366%" y="389" width="0.1430%" height="15" fill="rgb(218,118,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (5 samples, 0.14%)</title><rect x="92.7366%" y="373" width="0.1430%" height="15" fill="rgb(240,140,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (5 samples, 0.14%)</title><rect x="92.7366%" y="357" width="0.1430%" height="15" fill="rgb(192,92,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.14%)</title><rect x="92.7366%" y="341" width="0.1430%" height="15" fill="rgb(223,123,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.14%)</title><rect x="92.7366%" y="325" width="0.1430%" height="15" fill="rgb(210,110,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.14%)</title><rect x="92.7366%" y="309" width="0.1430%" height="15" fill="rgb(200,100,0)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="319.50"></text></g><g><title>cfree (5 samples, 0.14%)</title><rect x="92.7366%" y="293" width="0.1430%" height="15" fill="rgb(203,203,60)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="303.50"></text></g><g><title>[libc.so.6] (5 samples, 0.14%)</title><rect x="92.7366%" y="277" width="0.1430%" height="15" fill="rgb(199,199,58)" fg:x="3243" fg:w="5"/><text x="92.9866%" y="287.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="92.7938%" y="261" width="0.0858%" height="15" fill="rgb(223,223,67)" fg:x="3245" fg:w="3"/><text x="93.0438%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="92.8796%" y="325" width="0.0286%" height="15" fill="rgb(98,209,209)" fg:x="3248" fg:w="1"/><text x="93.1296%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="92.8796%" y="357" width="0.0572%" height="15" fill="rgb(78,190,190)" fg:x="3248" fg:w="2"/><text x="93.1296%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.06%)</title><rect x="92.8796%" y="341" width="0.0572%" height="15" fill="rgb(96,207,207)" fg:x="3248" fg:w="2"/><text x="93.1296%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.03%)</title><rect x="92.9082%" y="325" width="0.0286%" height="15" fill="rgb(68,181,181)" fg:x="3249" fg:w="1"/><text x="93.1582%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.03%)</title><rect x="92.9082%" y="309" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="3249" fg:w="1"/><text x="93.1582%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="92.9082%" y="293" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="3249" fg:w="1"/><text x="93.1582%" y="303.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="93.0512%" y="165" width="0.0286%" height="15" fill="rgb(185,185,53)" fg:x="3254" fg:w="1"/><text x="93.3012%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="93.0512%" y="149" width="0.0286%" height="15" fill="rgb(228,128,0)" fg:x="3254" fg:w="1"/><text x="93.3012%" y="159.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="93.0798%" y="165" width="0.0286%" height="15" fill="rgb(196,196,57)" fg:x="3255" fg:w="1"/><text x="93.3298%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.54%)</title><rect x="92.9368%" y="293" width="0.5433%" height="15" fill="rgb(215,115,0)" fg:x="3250" fg:w="19"/><text x="93.1868%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (16 samples, 0.46%)</title><rect x="93.0226%" y="277" width="0.4575%" height="15" fill="rgb(215,115,0)" fg:x="3253" fg:w="16"/><text x="93.2726%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (16 samples, 0.46%)</title><rect x="93.0226%" y="261" width="0.4575%" height="15" fill="rgb(242,142,0)" fg:x="3253" fg:w="16"/><text x="93.2726%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (16 samples, 0.46%)</title><rect x="93.0226%" y="245" width="0.4575%" height="15" fill="rgb(191,91,0)" fg:x="3253" fg:w="16"/><text x="93.2726%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (16 samples, 0.46%)</title><rect x="93.0226%" y="229" width="0.4575%" height="15" fill="rgb(232,132,0)" fg:x="3253" fg:w="16"/><text x="93.2726%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.46%)</title><rect x="93.0226%" y="213" width="0.4575%" height="15" fill="rgb(230,130,0)" fg:x="3253" fg:w="16"/><text x="93.2726%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.46%)</title><rect x="93.0226%" y="197" width="0.4575%" height="15" fill="rgb(215,115,0)" fg:x="3253" fg:w="16"/><text x="93.2726%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.46%)</title><rect x="93.0226%" y="181" width="0.4575%" height="15" fill="rgb(199,99,0)" fg:x="3253" fg:w="16"/><text x="93.2726%" y="191.50"></text></g><g><title>cfree (13 samples, 0.37%)</title><rect x="93.1084%" y="165" width="0.3717%" height="15" fill="rgb(226,226,68)" fg:x="3256" fg:w="13"/><text x="93.3584%" y="175.50"></text></g><g><title>[libc.so.6] (7 samples, 0.20%)</title><rect x="93.2800%" y="149" width="0.2002%" height="15" fill="rgb(202,202,60)" fg:x="3262" fg:w="7"/><text x="93.5300%" y="159.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="93.5659%" y="229" width="0.0286%" height="15" fill="rgb(190,190,55)" fg:x="3272" fg:w="1"/><text x="93.8159%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 1.00%)</title><rect x="92.7366%" y="517" width="1.0009%" height="15" fill="rgb(227,127,0)" fg:x="3243" fg:w="35"/><text x="92.9866%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)]&gt; (35 samples, 1.00%)</title><rect x="92.7366%" y="501" width="1.0009%" height="15" fill="rgb(235,135,0)" fg:x="3243" fg:w="35"/><text x="92.9866%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt; (35 samples, 1.00%)</title><rect x="92.7366%" y="485" width="1.0009%" height="15" fill="rgb(216,116,0)" fg:x="3243" fg:w="35"/><text x="92.9866%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (35 samples, 1.00%)</title><rect x="92.7366%" y="469" width="1.0009%" height="15" fill="rgb(213,113,0)" fg:x="3243" fg:w="35"/><text x="92.9866%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (30 samples, 0.86%)</title><rect x="92.8796%" y="453" width="0.8579%" height="15" fill="rgb(216,116,0)" fg:x="3248" fg:w="30"/><text x="93.1296%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (30 samples, 0.86%)</title><rect x="92.8796%" y="437" width="0.8579%" height="15" fill="rgb(196,96,0)" fg:x="3248" fg:w="30"/><text x="93.1296%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (30 samples, 0.86%)</title><rect x="92.8796%" y="421" width="0.8579%" height="15" fill="rgb(226,126,0)" fg:x="3248" fg:w="30"/><text x="93.1296%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.86%)</title><rect x="92.8796%" y="405" width="0.8579%" height="15" fill="rgb(83,195,195)" fg:x="3248" fg:w="30"/><text x="93.1296%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (30 samples, 0.86%)</title><rect x="92.8796%" y="389" width="0.8579%" height="15" fill="rgb(94,205,205)" fg:x="3248" fg:w="30"/><text x="93.1296%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (30 samples, 0.86%)</title><rect x="92.8796%" y="373" width="0.8579%" height="15" fill="rgb(60,174,174)" fg:x="3248" fg:w="30"/><text x="93.1296%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (28 samples, 0.80%)</title><rect x="92.9368%" y="357" width="0.8007%" height="15" fill="rgb(89,201,201)" fg:x="3250" fg:w="28"/><text x="93.1868%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (28 samples, 0.80%)</title><rect x="92.9368%" y="341" width="0.8007%" height="15" fill="rgb(195,95,0)" fg:x="3250" fg:w="28"/><text x="93.1868%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (28 samples, 0.80%)</title><rect x="92.9368%" y="325" width="0.8007%" height="15" fill="rgb(222,122,0)" fg:x="3250" fg:w="28"/><text x="93.1868%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (28 samples, 0.80%)</title><rect x="92.9368%" y="309" width="0.8007%" height="15" fill="rgb(191,91,0)" fg:x="3250" fg:w="28"/><text x="93.1868%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (9 samples, 0.26%)</title><rect x="93.4801%" y="293" width="0.2574%" height="15" fill="rgb(240,140,0)" fg:x="3269" fg:w="9"/><text x="93.7301%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.26%)</title><rect x="93.4801%" y="277" width="0.2574%" height="15" fill="rgb(252,152,0)" fg:x="3269" fg:w="9"/><text x="93.7301%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.23%)</title><rect x="93.5087%" y="261" width="0.2288%" height="15" fill="rgb(237,137,0)" fg:x="3270" fg:w="8"/><text x="93.7587%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.23%)</title><rect x="93.5087%" y="245" width="0.2288%" height="15" fill="rgb(248,148,0)" fg:x="3270" fg:w="8"/><text x="93.7587%" y="255.50"></text></g><g><title>cfree (5 samples, 0.14%)</title><rect x="93.5945%" y="229" width="0.1430%" height="15" fill="rgb(195,195,57)" fg:x="3273" fg:w="5"/><text x="93.8445%" y="239.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="93.6231%" y="213" width="0.1144%" height="15" fill="rgb(181,181,52)" fg:x="3274" fg:w="4"/><text x="93.8731%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="93.7089%" y="197" width="0.0286%" height="15" fill="rgb(177,177,51)" fg:x="3277" fg:w="1"/><text x="93.9589%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="93.7089%" y="181" width="0.0286%" height="15" fill="rgb(209,209,62)" fg:x="3277" fg:w="1"/><text x="93.9589%" y="191.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::take_best_layouts (82 samples, 2.34%)</title><rect x="92.7080%" y="549" width="2.3449%" height="15" fill="rgb(79,191,191)" fg:x="3242" fg:w="82"/><text x="92.9580%" y="559.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt;&gt; (81 samples, 2.32%)</title><rect x="92.7366%" y="533" width="2.3163%" height="15" fill="rgb(233,133,0)" fg:x="3243" fg:w="81"/><text x="92.9866%" y="543.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt;&gt; (46 samples, 1.32%)</title><rect x="93.7375%" y="517" width="1.3154%" height="15" fill="rgb(253,153,0)" fg:x="3278" fg:w="46"/><text x="93.9875%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 1.32%)</title><rect x="93.7375%" y="501" width="1.3154%" height="15" fill="rgb(194,94,0)" fg:x="3278" fg:w="46"/><text x="93.9875%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (46 samples, 1.32%)</title><rect x="93.7375%" y="485" width="1.3154%" height="15" fill="rgb(238,138,0)" fg:x="3278" fg:w="46"/><text x="93.9875%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (46 samples, 1.32%)</title><rect x="93.7375%" y="469" width="1.3154%" height="15" fill="rgb(196,96,0)" fg:x="3278" fg:w="46"/><text x="93.9875%" y="479.50"></text></g><g><title>cfree (46 samples, 1.32%)</title><rect x="93.7375%" y="453" width="1.3154%" height="15" fill="rgb(185,185,53)" fg:x="3278" fg:w="46"/><text x="93.9875%" y="463.50"></text></g><g><title>[libc.so.6] (46 samples, 1.32%)</title><rect x="93.7375%" y="437" width="1.3154%" height="15" fill="rgb(191,191,56)" fg:x="3278" fg:w="46"/><text x="93.9875%" y="447.50"></text></g><g><title>[libc.so.6] (46 samples, 1.32%)</title><rect x="93.7375%" y="421" width="1.3154%" height="15" fill="rgb(218,218,65)" fg:x="3278" fg:w="46"/><text x="93.9875%" y="431.50"></text></g><g><title>[libc.so.6] (15 samples, 0.43%)</title><rect x="94.6240%" y="405" width="0.4289%" height="15" fill="rgb(176,176,50)" fg:x="3309" fg:w="15"/><text x="94.8740%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (12 samples, 0.34%)</title><rect x="95.0529%" y="485" width="0.3432%" height="15" fill="rgb(215,115,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.34%)</title><rect x="95.0529%" y="469" width="0.3432%" height="15" fill="rgb(211,111,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (12 samples, 0.34%)</title><rect x="95.0529%" y="453" width="0.3432%" height="15" fill="rgb(229,129,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (12 samples, 0.34%)</title><rect x="95.0529%" y="437" width="0.3432%" height="15" fill="rgb(240,140,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (12 samples, 0.34%)</title><rect x="95.0529%" y="421" width="0.3432%" height="15" fill="rgb(225,125,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (12 samples, 0.34%)</title><rect x="95.0529%" y="405" width="0.3432%" height="15" fill="rgb(216,116,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (12 samples, 0.34%)</title><rect x="95.0529%" y="389" width="0.3432%" height="15" fill="rgb(199,99,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.34%)</title><rect x="95.0529%" y="373" width="0.3432%" height="15" fill="rgb(202,102,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.34%)</title><rect x="95.0529%" y="357" width="0.3432%" height="15" fill="rgb(196,96,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.34%)</title><rect x="95.0529%" y="341" width="0.3432%" height="15" fill="rgb(217,117,0)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="351.50"></text></g><g><title>cfree (12 samples, 0.34%)</title><rect x="95.0529%" y="325" width="0.3432%" height="15" fill="rgb(207,207,61)" fg:x="3324" fg:w="12"/><text x="95.3029%" y="335.50"></text></g><g><title>[libc.so.6] (11 samples, 0.31%)</title><rect x="95.0815%" y="309" width="0.3146%" height="15" fill="rgb(204,204,60)" fg:x="3325" fg:w="11"/><text x="95.3315%" y="319.50"></text></g><g><title>[libc.so.6] (10 samples, 0.29%)</title><rect x="95.1101%" y="293" width="0.2860%" height="15" fill="rgb(218,218,65)" fg:x="3326" fg:w="10"/><text x="95.3601%" y="303.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="95.3103%" y="277" width="0.0858%" height="15" fill="rgb(226,226,68)" fg:x="3333" fg:w="3"/><text x="95.5603%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="95.3961%" y="389" width="0.0286%" height="15" fill="rgb(61,175,175)" fg:x="3336" fg:w="1"/><text x="95.6461%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.03%)</title><rect x="95.3961%" y="373" width="0.0286%" height="15" fill="rgb(83,195,195)" fg:x="3336" fg:w="1"/><text x="95.6461%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.03%)</title><rect x="95.3961%" y="357" width="0.0286%" height="15" fill="rgb(80,193,193)" fg:x="3336" fg:w="1"/><text x="95.6461%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.03%)</title><rect x="95.3961%" y="341" width="0.0286%" height="15" fill="rgb(231,131,0)" fg:x="3336" fg:w="1"/><text x="95.6461%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="95.3961%" y="325" width="0.0286%" height="15" fill="rgb(246,146,0)" fg:x="3336" fg:w="1"/><text x="95.6461%" y="335.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="95.7392%" y="197" width="0.0286%" height="15" fill="rgb(218,218,65)" fg:x="3348" fg:w="1"/><text x="95.9892%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="95.7392%" y="181" width="0.0286%" height="15" fill="rgb(191,91,0)" fg:x="3348" fg:w="1"/><text x="95.9892%" y="191.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="95.7678%" y="197" width="0.0286%" height="15" fill="rgb(219,219,66)" fg:x="3349" fg:w="1"/><text x="96.0178%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.71%)</title><rect x="95.7392%" y="229" width="0.7149%" height="15" fill="rgb(200,100,0)" fg:x="3348" fg:w="25"/><text x="95.9892%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.71%)</title><rect x="95.7392%" y="213" width="0.7149%" height="15" fill="rgb(246,146,0)" fg:x="3348" fg:w="25"/><text x="95.9892%" y="223.50"></text></g><g><title>cfree (23 samples, 0.66%)</title><rect x="95.7964%" y="197" width="0.6577%" height="15" fill="rgb(215,215,64)" fg:x="3350" fg:w="23"/><text x="96.0464%" y="207.50"></text></g><g><title>[libc.so.6] (8 samples, 0.23%)</title><rect x="96.2253%" y="181" width="0.2288%" height="15" fill="rgb(201,201,59)" fg:x="3365" fg:w="8"/><text x="96.4753%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 1.09%)</title><rect x="95.4246%" y="325" width="1.0866%" height="15" fill="rgb(205,105,0)" fg:x="3337" fg:w="38"/><text x="95.6746%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (38 samples, 1.09%)</title><rect x="95.4246%" y="309" width="1.0866%" height="15" fill="rgb(209,109,0)" fg:x="3337" fg:w="38"/><text x="95.6746%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (37 samples, 1.06%)</title><rect x="95.4532%" y="293" width="1.0580%" height="15" fill="rgb(199,99,0)" fg:x="3338" fg:w="37"/><text x="95.7032%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (37 samples, 1.06%)</title><rect x="95.4532%" y="277" width="1.0580%" height="15" fill="rgb(193,93,0)" fg:x="3338" fg:w="37"/><text x="95.7032%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (37 samples, 1.06%)</title><rect x="95.4532%" y="261" width="1.0580%" height="15" fill="rgb(221,121,0)" fg:x="3338" fg:w="37"/><text x="95.7032%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 1.06%)</title><rect x="95.4532%" y="245" width="1.0580%" height="15" fill="rgb(214,114,0)" fg:x="3338" fg:w="37"/><text x="95.7032%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.06%)</title><rect x="96.4541%" y="229" width="0.0572%" height="15" fill="rgb(242,142,0)" fg:x="3373" fg:w="2"/><text x="96.7041%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 1.49%)</title><rect x="95.3961%" y="437" width="1.4870%" height="15" fill="rgb(90,201,201)" fg:x="3336" fg:w="52"/><text x="95.6461%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (52 samples, 1.49%)</title><rect x="95.3961%" y="421" width="1.4870%" height="15" fill="rgb(54,168,168)" fg:x="3336" fg:w="52"/><text x="95.6461%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (52 samples, 1.49%)</title><rect x="95.3961%" y="405" width="1.4870%" height="15" fill="rgb(85,197,197)" fg:x="3336" fg:w="52"/><text x="95.6461%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (51 samples, 1.46%)</title><rect x="95.4246%" y="389" width="1.4584%" height="15" fill="rgb(64,177,177)" fg:x="3337" fg:w="51"/><text x="95.6746%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (51 samples, 1.46%)</title><rect x="95.4246%" y="373" width="1.4584%" height="15" fill="rgb(228,128,0)" fg:x="3337" fg:w="51"/><text x="95.6746%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (51 samples, 1.46%)</title><rect x="95.4246%" y="357" width="1.4584%" height="15" fill="rgb(205,105,0)" fg:x="3337" fg:w="51"/><text x="95.6746%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (51 samples, 1.46%)</title><rect x="95.4246%" y="341" width="1.4584%" height="15" fill="rgb(212,112,0)" fg:x="3337" fg:w="51"/><text x="95.6746%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (13 samples, 0.37%)</title><rect x="96.5113%" y="325" width="0.3717%" height="15" fill="rgb(206,106,0)" fg:x="3375" fg:w="13"/><text x="96.7613%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.37%)</title><rect x="96.5113%" y="309" width="0.3717%" height="15" fill="rgb(244,144,0)" fg:x="3375" fg:w="13"/><text x="96.7613%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.37%)</title><rect x="96.5113%" y="293" width="0.3717%" height="15" fill="rgb(237,137,0)" fg:x="3375" fg:w="13"/><text x="96.7613%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.37%)</title><rect x="96.5113%" y="277" width="0.3717%" height="15" fill="rgb(250,150,0)" fg:x="3375" fg:w="13"/><text x="96.7613%" y="287.50"></text></g><g><title>cfree (13 samples, 0.37%)</title><rect x="96.5113%" y="261" width="0.3717%" height="15" fill="rgb(202,202,60)" fg:x="3375" fg:w="13"/><text x="96.7613%" y="271.50"></text></g><g><title>[libc.so.6] (12 samples, 0.34%)</title><rect x="96.5399%" y="245" width="0.3432%" height="15" fill="rgb(225,225,68)" fg:x="3376" fg:w="12"/><text x="96.7899%" y="255.50"></text></g><g><title>[libc.so.6] (5 samples, 0.14%)</title><rect x="96.7401%" y="229" width="0.1430%" height="15" fill="rgb(197,197,58)" fg:x="3383" fg:w="5"/><text x="96.9901%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="96.8544%" y="213" width="0.0286%" height="15" fill="rgb(227,227,68)" fg:x="3387" fg:w="1"/><text x="97.1044%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 1.89%)</title><rect x="95.0529%" y="533" width="1.8873%" height="15" fill="rgb(222,122,0)" fg:x="3324" fg:w="66"/><text x="95.3029%" y="543.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;]&gt; (66 samples, 1.89%)</title><rect x="95.0529%" y="517" width="1.8873%" height="15" fill="rgb(231,131,0)" fg:x="3324" fg:w="66"/><text x="95.3029%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (66 samples, 1.89%)</title><rect x="95.0529%" y="501" width="1.8873%" height="15" fill="rgb(221,121,0)" fg:x="3324" fg:w="66"/><text x="95.3029%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (54 samples, 1.54%)</title><rect x="95.3961%" y="485" width="1.5442%" height="15" fill="rgb(214,114,0)" fg:x="3336" fg:w="54"/><text x="95.6461%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (54 samples, 1.54%)</title><rect x="95.3961%" y="469" width="1.5442%" height="15" fill="rgb(249,149,0)" fg:x="3336" fg:w="54"/><text x="95.6461%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (54 samples, 1.54%)</title><rect x="95.3961%" y="453" width="1.5442%" height="15" fill="rgb(252,152,0)" fg:x="3336" fg:w="54"/><text x="95.6461%" y="463.50"></text></g><g><title>cfree (2 samples, 0.06%)</title><rect x="96.8830%" y="437" width="0.0572%" height="15" fill="rgb(223,223,67)" fg:x="3388" fg:w="2"/><text x="97.1330%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="96.8830%" y="421" width="0.0572%" height="15" fill="rgb(223,223,67)" fg:x="3388" fg:w="2"/><text x="97.1330%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="96.8830%" y="405" width="0.0572%" height="15" fill="rgb(197,197,58)" fg:x="3388" fg:w="2"/><text x="97.1330%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="96.9116%" y="389" width="0.0286%" height="15" fill="rgb(203,203,60)" fg:x="3389" fg:w="1"/><text x="97.1616%" y="399.50"></text></g><g><title>_start (2,819 samples, 80.61%)</title><rect x="17.9297%" y="837" width="80.6120%" height="15" fill="rgb(194,194,57)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="847.50">_start</text></g><g><title>__libc_start_main (2,819 samples, 80.61%)</title><rect x="17.9297%" y="821" width="80.6120%" height="15" fill="rgb(194,194,57)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="831.50">__libc_start_main</text></g><g><title>[libc.so.6] (2,819 samples, 80.61%)</title><rect x="17.9297%" y="805" width="80.6120%" height="15" fill="rgb(191,191,56)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="815.50">[libc.so.6]</text></g><g><title>main (2,819 samples, 80.61%)</title><rect x="17.9297%" y="789" width="80.6120%" height="15" fill="rgb(195,195,57)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (2,819 samples, 80.61%)</title><rect x="17.9297%" y="773" width="80.6120%" height="15" fill="rgb(230,130,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="783.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (2,819 samples, 80.61%)</title><rect x="17.9297%" y="757" width="80.6120%" height="15" fill="rgb(235,135,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,819 samples, 80.61%)</title><rect x="17.9297%" y="741" width="80.6120%" height="15" fill="rgb(199,99,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,819 samples, 80.61%)</title><rect x="17.9297%" y="725" width="80.6120%" height="15" fill="rgb(227,127,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="735.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (2,819 samples, 80.61%)</title><rect x="17.9297%" y="709" width="80.6120%" height="15" fill="rgb(235,135,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="719.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (2,819 samples, 80.61%)</title><rect x="17.9297%" y="693" width="80.6120%" height="15" fill="rgb(250,150,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,819 samples, 80.61%)</title><rect x="17.9297%" y="677" width="80.6120%" height="15" fill="rgb(213,113,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,819 samples, 80.61%)</title><rect x="17.9297%" y="661" width="80.6120%" height="15" fill="rgb(221,121,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="671.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2,819 samples, 80.61%)</title><rect x="17.9297%" y="645" width="80.6120%" height="15" fill="rgb(250,150,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="655.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (2,819 samples, 80.61%)</title><rect x="17.9297%" y="629" width="80.6120%" height="15" fill="rgb(248,148,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="639.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,819 samples, 80.61%)</title><rect x="17.9297%" y="613" width="80.6120%" height="15" fill="rgb(242,142,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="623.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,819 samples, 80.61%)</title><rect x="17.9297%" y="597" width="80.6120%" height="15" fill="rgb(227,127,0)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="607.50">core::ops::function::FnOnce::call_once</text></g><g><title>alc::main (2,819 samples, 80.61%)</title><rect x="17.9297%" y="581" width="80.6120%" height="15" fill="rgb(85,197,197)" fg:x="627" fg:w="2819"/><text x="18.1797%" y="591.50">alc::main</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize (2,814 samples, 80.47%)</title><rect x="18.0726%" y="565" width="80.4690%" height="15" fill="rgb(86,198,198)" fg:x="632" fg:w="2814"/><text x="18.3226%" y="575.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (122 samples, 3.49%)</title><rect x="95.0529%" y="549" width="3.4887%" height="15" fill="rgb(206,106,0)" fg:x="3324" fg:w="122"/><text x="95.3029%" y="559.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (56 samples, 1.60%)</title><rect x="96.9402%" y="533" width="1.6014%" height="15" fill="rgb(233,133,0)" fg:x="3390" fg:w="56"/><text x="97.1902%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 1.60%)</title><rect x="96.9402%" y="517" width="1.6014%" height="15" fill="rgb(254,154,0)" fg:x="3390" fg:w="56"/><text x="97.1902%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (56 samples, 1.60%)</title><rect x="96.9402%" y="501" width="1.6014%" height="15" fill="rgb(217,117,0)" fg:x="3390" fg:w="56"/><text x="97.1902%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (56 samples, 1.60%)</title><rect x="96.9402%" y="485" width="1.6014%" height="15" fill="rgb(246,146,0)" fg:x="3390" fg:w="56"/><text x="97.1902%" y="495.50"></text></g><g><title>cfree (56 samples, 1.60%)</title><rect x="96.9402%" y="469" width="1.6014%" height="15" fill="rgb(200,200,59)" fg:x="3390" fg:w="56"/><text x="97.1902%" y="479.50"></text></g><g><title>[libc.so.6] (56 samples, 1.60%)</title><rect x="96.9402%" y="453" width="1.6014%" height="15" fill="rgb(214,214,64)" fg:x="3390" fg:w="56"/><text x="97.1902%" y="463.50"></text></g><g><title>[libc.so.6] (56 samples, 1.60%)</title><rect x="96.9402%" y="437" width="1.6014%" height="15" fill="rgb(221,221,66)" fg:x="3390" fg:w="56"/><text x="97.1902%" y="447.50"></text></g><g><title>[libc.so.6] (5 samples, 0.14%)</title><rect x="98.3986%" y="421" width="0.1430%" height="15" fill="rgb(209,209,62)" fg:x="3441" fg:w="5"/><text x="98.6486%" y="431.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (1 samples, 0.03%)</title><rect x="98.5416%" y="837" width="0.0286%" height="15" fill="rgb(85,197,197)" fg:x="3446" fg:w="1"/><text x="98.7916%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="98.6274%" y="741" width="0.0286%" height="15" fill="rgb(238,138,0)" fg:x="3449" fg:w="1"/><text x="98.8774%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="98.6274%" y="725" width="0.0286%" height="15" fill="rgb(229,129,0)" fg:x="3449" fg:w="1"/><text x="98.8774%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="98.6274%" y="709" width="0.0286%" height="15" fill="rgb(237,137,0)" fg:x="3449" fg:w="1"/><text x="98.8774%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="98.6274%" y="693" width="0.0286%" height="15" fill="rgb(249,149,0)" fg:x="3449" fg:w="1"/><text x="98.8774%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="98.6274%" y="677" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="3449" fg:w="1"/><text x="98.8774%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="98.6274%" y="661" width="0.0286%" height="15" fill="rgb(221,121,0)" fg:x="3449" fg:w="1"/><text x="98.8774%" y="671.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="98.6274%" y="821" width="0.0572%" height="15" fill="rgb(61,175,175)" fg:x="3449" fg:w="2"/><text x="98.8774%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="98.6274%" y="805" width="0.0572%" height="15" fill="rgb(237,137,0)" fg:x="3449" fg:w="2"/><text x="98.8774%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.06%)</title><rect x="98.6274%" y="789" width="0.0572%" height="15" fill="rgb(254,154,0)" fg:x="3449" fg:w="2"/><text x="98.8774%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.06%)</title><rect x="98.6274%" y="773" width="0.0572%" height="15" fill="rgb(227,127,0)" fg:x="3449" fg:w="2"/><text x="98.8774%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.06%)</title><rect x="98.6274%" y="757" width="0.0572%" height="15" fill="rgb(58,172,172)" fg:x="3449" fg:w="2"/><text x="98.8774%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="98.6560%" y="741" width="0.0286%" height="15" fill="rgb(206,106,0)" fg:x="3450" fg:w="1"/><text x="98.9060%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="98.6560%" y="725" width="0.0286%" height="15" fill="rgb(217,117,0)" fg:x="3450" fg:w="1"/><text x="98.9060%" y="735.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (1 samples, 0.03%)</title><rect x="98.6846%" y="821" width="0.0286%" height="15" fill="rgb(95,206,206)" fg:x="3451" fg:w="1"/><text x="98.9346%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.03%)</title><rect x="98.6846%" y="805" width="0.0286%" height="15" fill="rgb(194,94,0)" fg:x="3451" fg:w="1"/><text x="98.9346%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.03%)</title><rect x="98.6846%" y="789" width="0.0286%" height="15" fill="rgb(74,187,187)" fg:x="3451" fg:w="1"/><text x="98.9346%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="98.6846%" y="773" width="0.0286%" height="15" fill="rgb(97,208,208)" fg:x="3451" fg:w="1"/><text x="98.9346%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="98.6846%" y="757" width="0.0286%" height="15" fill="rgb(73,186,186)" fg:x="3451" fg:w="1"/><text x="98.9346%" y="767.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (6 samples, 0.17%)</title><rect x="98.5702%" y="837" width="0.1716%" height="15" fill="rgb(65,178,178)" fg:x="3447" fg:w="6"/><text x="98.8202%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.03%)</title><rect x="98.7132%" y="821" width="0.0286%" height="15" fill="rgb(195,95,0)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="98.7132%" y="805" width="0.0286%" height="15" fill="rgb(202,102,0)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="98.7132%" y="789" width="0.0286%" height="15" fill="rgb(252,152,0)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="98.7132%" y="773" width="0.0286%" height="15" fill="rgb(80,193,193)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="783.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="98.7132%" y="757" width="0.0286%" height="15" fill="rgb(102,212,212)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="98.7132%" y="741" width="0.0286%" height="15" fill="rgb(218,118,0)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="98.7132%" y="725" width="0.0286%" height="15" fill="rgb(223,123,0)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="98.7132%" y="709" width="0.0286%" height="15" fill="rgb(253,153,0)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="98.7132%" y="693" width="0.0286%" height="15" fill="rgb(64,178,178)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="98.7132%" y="677" width="0.0286%" height="15" fill="rgb(239,139,0)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="98.7132%" y="661" width="0.0286%" height="15" fill="rgb(199,99,0)" fg:x="3452" fg:w="1"/><text x="98.9632%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.37%)</title><rect x="98.7418%" y="837" width="0.3717%" height="15" fill="rgb(204,104,0)" fg:x="3453" fg:w="13"/><text x="98.9918%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.20%)</title><rect x="98.9134%" y="821" width="0.2002%" height="15" fill="rgb(191,91,0)" fg:x="3459" fg:w="7"/><text x="99.1634%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.20%)</title><rect x="98.9134%" y="805" width="0.2002%" height="15" fill="rgb(190,90,0)" fg:x="3459" fg:w="7"/><text x="99.1634%" y="815.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.20%)</title><rect x="98.9134%" y="789" width="0.2002%" height="15" fill="rgb(208,108,0)" fg:x="3459" fg:w="7"/><text x="99.1634%" y="799.50"></text></g><g><title>cfree (5 samples, 0.14%)</title><rect x="99.1135%" y="837" width="0.1430%" height="15" fill="rgb(192,192,56)" fg:x="3466" fg:w="5"/><text x="99.3635%" y="847.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.06%)</title><rect x="99.2565%" y="837" width="0.0572%" height="15" fill="rgb(96,207,207)" fg:x="3471" fg:w="2"/><text x="99.5065%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="99.2851%" y="821" width="0.0286%" height="15" fill="rgb(58,172,172)" fg:x="3472" fg:w="1"/><text x="99.5351%" y="831.50"></text></g><g><title>all (3,497 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(176,176,50)" fg:x="0" fg:w="3497"/><text x="0.2500%" y="879.50"></text></g><g><title>alc (3,497 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(196,196,57)" fg:x="0" fg:w="3497"/><text x="0.2500%" y="863.50">alc</text></g><g><title>malloc (24 samples, 0.69%)</title><rect x="99.3137%" y="837" width="0.6863%" height="15" fill="rgb(178,178,51)" fg:x="3473" fg:w="24"/><text x="99.5637%" y="847.50"></text></g></svg></svg>