<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="5861"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.0000%" y="837" width="0.0171%" height="15" fill="rgb(190,90,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="0.0000%" y="821" width="0.0171%" height="15" fill="rgb(190,90,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="0.0000%" y="805" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="0.0000%" y="789" width="0.0171%" height="15" fill="rgb(105,215,215)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.0000%" y="773" width="0.0171%" height="15" fill="rgb(67,181,181)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.0000%" y="757" width="0.0171%" height="15" fill="rgb(226,126,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="0.0000%" y="741" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="0.0000%" y="725" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="0.0000%" y="709" width="0.0171%" height="15" fill="rgb(58,172,172)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="0.0000%" y="693" width="0.0171%" height="15" fill="rgb(224,124,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0171%" height="15" fill="rgb(254,154,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.0171%" y="837" width="0.0171%" height="15" fill="rgb(100,211,211)" fg:x="1" fg:w="1"/><text x="0.2671%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.02%)</title><rect x="0.0171%" y="821" width="0.0171%" height="15" fill="rgb(55,169,169)" fg:x="1" fg:w="1"/><text x="0.2671%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.02%)</title><rect x="0.0171%" y="805" width="0.0171%" height="15" fill="rgb(99,209,209)" fg:x="1" fg:w="1"/><text x="0.2671%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="0.0171%" y="789" width="0.0171%" height="15" fill="rgb(248,148,0)" fg:x="1" fg:w="1"/><text x="0.2671%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="0.0171%" y="773" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="1" fg:w="1"/><text x="0.2671%" y="783.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.05%)</title><rect x="0.0341%" y="821" width="0.0512%" height="15" fill="rgb(55,169,169)" fg:x="2" fg:w="3"/><text x="0.2841%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="0.3412%" y="725" width="0.0682%" height="15" fill="rgb(198,98,0)" fg:x="20" fg:w="4"/><text x="0.5912%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="0.3412%" y="709" width="0.0682%" height="15" fill="rgb(246,146,0)" fg:x="20" fg:w="4"/><text x="0.5912%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.07%)</title><rect x="0.3412%" y="693" width="0.0682%" height="15" fill="rgb(197,97,0)" fg:x="20" fg:w="4"/><text x="0.5912%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.07%)</title><rect x="0.3412%" y="677" width="0.0682%" height="15" fill="rgb(199,99,0)" fg:x="20" fg:w="4"/><text x="0.5912%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.07%)</title><rect x="0.3412%" y="661" width="0.0682%" height="15" fill="rgb(241,141,0)" fg:x="20" fg:w="4"/><text x="0.5912%" y="671.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.07%)</title><rect x="0.3412%" y="645" width="0.0682%" height="15" fill="rgb(191,91,0)" fg:x="20" fg:w="4"/><text x="0.5912%" y="655.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (9 samples, 0.15%)</title><rect x="0.3412%" y="805" width="0.1536%" height="15" fill="rgb(54,169,169)" fg:x="20" fg:w="9"/><text x="0.5912%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.15%)</title><rect x="0.3412%" y="789" width="0.1536%" height="15" fill="rgb(227,127,0)" fg:x="20" fg:w="9"/><text x="0.5912%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.15%)</title><rect x="0.3412%" y="773" width="0.1536%" height="15" fill="rgb(198,98,0)" fg:x="20" fg:w="9"/><text x="0.5912%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.15%)</title><rect x="0.3412%" y="757" width="0.1536%" height="15" fill="rgb(221,121,0)" fg:x="20" fg:w="9"/><text x="0.5912%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.15%)</title><rect x="0.3412%" y="741" width="0.1536%" height="15" fill="rgb(91,203,203)" fg:x="20" fg:w="9"/><text x="0.5912%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.09%)</title><rect x="0.4095%" y="725" width="0.0853%" height="15" fill="rgb(231,131,0)" fg:x="24" fg:w="5"/><text x="0.6595%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.09%)</title><rect x="0.4095%" y="709" width="0.0853%" height="15" fill="rgb(200,100,0)" fg:x="24" fg:w="5"/><text x="0.6595%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.36%)</title><rect x="0.4948%" y="805" width="0.3583%" height="15" fill="rgb(219,119,0)" fg:x="29" fg:w="21"/><text x="0.7448%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (3 samples, 0.05%)</title><rect x="0.8531%" y="805" width="0.0512%" height="15" fill="rgb(214,114,0)" fg:x="50" fg:w="3"/><text x="1.1031%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.05%)</title><rect x="0.8531%" y="789" width="0.0512%" height="15" fill="rgb(241,141,0)" fg:x="50" fg:w="3"/><text x="1.1031%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.05%)</title><rect x="0.8531%" y="773" width="0.0512%" height="15" fill="rgb(244,144,0)" fg:x="50" fg:w="3"/><text x="1.1031%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="0.8531%" y="757" width="0.0512%" height="15" fill="rgb(213,113,0)" fg:x="50" fg:w="3"/><text x="1.1031%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="0.8531%" y="741" width="0.0512%" height="15" fill="rgb(200,100,0)" fg:x="50" fg:w="3"/><text x="1.1031%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="0.8531%" y="725" width="0.0512%" height="15" fill="rgb(191,91,0)" fg:x="50" fg:w="3"/><text x="1.1031%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (13 samples, 0.22%)</title><rect x="0.9043%" y="805" width="0.2218%" height="15" fill="rgb(244,144,0)" fg:x="53" fg:w="13"/><text x="1.1543%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (13 samples, 0.22%)</title><rect x="0.9043%" y="789" width="0.2218%" height="15" fill="rgb(237,137,0)" fg:x="53" fg:w="13"/><text x="1.1543%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.22%)</title><rect x="0.9043%" y="773" width="0.2218%" height="15" fill="rgb(241,141,0)" fg:x="53" fg:w="13"/><text x="1.1543%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.22%)</title><rect x="0.9043%" y="757" width="0.2218%" height="15" fill="rgb(207,107,0)" fg:x="53" fg:w="13"/><text x="1.1543%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.22%)</title><rect x="0.9043%" y="741" width="0.2218%" height="15" fill="rgb(209,109,0)" fg:x="53" fg:w="13"/><text x="1.1543%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (5 samples, 0.09%)</title><rect x="1.1261%" y="805" width="0.0853%" height="15" fill="rgb(216,116,0)" fg:x="66" fg:w="5"/><text x="1.3761%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (5 samples, 0.09%)</title><rect x="1.1261%" y="789" width="0.0853%" height="15" fill="rgb(222,122,0)" fg:x="66" fg:w="5"/><text x="1.3761%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="1.1261%" y="773" width="0.0853%" height="15" fill="rgb(248,148,0)" fg:x="66" fg:w="5"/><text x="1.3761%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="1.1261%" y="757" width="0.0853%" height="15" fill="rgb(217,117,0)" fg:x="66" fg:w="5"/><text x="1.3761%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.09%)</title><rect x="1.1261%" y="741" width="0.0853%" height="15" fill="rgb(229,129,0)" fg:x="66" fg:w="5"/><text x="1.3761%" y="751.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (74 samples, 1.26%)</title><rect x="0.0853%" y="821" width="1.2626%" height="15" fill="rgb(99,210,210)" fg:x="5" fg:w="74"/><text x="0.3353%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt;&gt; (8 samples, 0.14%)</title><rect x="1.2114%" y="805" width="0.1365%" height="15" fill="rgb(207,107,0)" fg:x="71" fg:w="8"/><text x="1.4614%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (8 samples, 0.14%)</title><rect x="1.2114%" y="789" width="0.1365%" height="15" fill="rgb(197,97,0)" fg:x="71" fg:w="8"/><text x="1.4614%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.14%)</title><rect x="1.2114%" y="773" width="0.1365%" height="15" fill="rgb(200,100,0)" fg:x="71" fg:w="8"/><text x="1.4614%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (8 samples, 0.14%)</title><rect x="1.2114%" y="757" width="0.1365%" height="15" fill="rgb(250,150,0)" fg:x="71" fg:w="8"/><text x="1.4614%" y="767.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.14%)</title><rect x="1.2114%" y="741" width="0.1365%" height="15" fill="rgb(82,194,194)" fg:x="71" fg:w="8"/><text x="1.4614%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (8 samples, 0.14%)</title><rect x="1.2114%" y="725" width="0.1365%" height="15" fill="rgb(229,129,0)" fg:x="71" fg:w="8"/><text x="1.4614%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.14%)</title><rect x="1.2114%" y="709" width="0.1365%" height="15" fill="rgb(231,131,0)" fg:x="71" fg:w="8"/><text x="1.4614%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.14%)</title><rect x="1.2114%" y="693" width="0.1365%" height="15" fill="rgb(223,123,0)" fg:x="71" fg:w="8"/><text x="1.4614%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.14%)</title><rect x="1.2114%" y="677" width="0.1365%" height="15" fill="rgb(231,131,0)" fg:x="71" fg:w="8"/><text x="1.4614%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.3479%" y="821" width="0.0171%" height="15" fill="rgb(213,113,0)" fg:x="79" fg:w="1"/><text x="1.5979%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.3650%" y="821" width="0.0171%" height="15" fill="rgb(53,167,167)" fg:x="80" fg:w="1"/><text x="1.6150%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.02%)</title><rect x="1.3650%" y="805" width="0.0171%" height="15" fill="rgb(50,165,165)" fg:x="80" fg:w="1"/><text x="1.6150%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.02%)</title><rect x="1.3650%" y="789" width="0.0171%" height="15" fill="rgb(62,176,176)" fg:x="80" fg:w="1"/><text x="1.6150%" y="799.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.02%)</title><rect x="1.3650%" y="773" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="783.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.3650%" y="757" width="0.0171%" height="15" fill="rgb(109,219,219)" fg:x="80" fg:w="1"/><text x="1.6150%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.3650%" y="741" width="0.0171%" height="15" fill="rgb(231,131,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="1.3650%" y="725" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="1.3650%" y="709" width="0.0171%" height="15" fill="rgb(217,117,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="1.3650%" y="693" width="0.0171%" height="15" fill="rgb(86,198,198)" fg:x="80" fg:w="1"/><text x="1.6150%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="1.3650%" y="677" width="0.0171%" height="15" fill="rgb(212,112,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="1.3650%" y="661" width="0.0171%" height="15" fill="rgb(240,140,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="1.3650%" y="645" width="0.0171%" height="15" fill="rgb(207,107,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="1.3650%" y="629" width="0.0171%" height="15" fill="rgb(233,133,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="1.3650%" y="613" width="0.0171%" height="15" fill="rgb(200,100,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="1.3650%" y="597" width="0.0171%" height="15" fill="rgb(222,122,0)" fg:x="80" fg:w="1"/><text x="1.6150%" y="607.50"></text></g><g><title>[libc.so.6] (110 samples, 1.88%)</title><rect x="1.3820%" y="821" width="1.8768%" height="15" fill="rgb(187,187,54)" fg:x="81" fg:w="110"/><text x="1.6320%" y="831.50">[..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.29%)</title><rect x="3.3783%" y="773" width="0.2901%" height="15" fill="rgb(213,113,0)" fg:x="198" fg:w="17"/><text x="3.6283%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.29%)</title><rect x="3.3783%" y="757" width="0.2901%" height="15" fill="rgb(223,123,0)" fg:x="198" fg:w="17"/><text x="3.6283%" y="767.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (36 samples, 0.61%)</title><rect x="3.2588%" y="821" width="0.6142%" height="15" fill="rgb(61,175,175)" fg:x="191" fg:w="36"/><text x="3.5088%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (29 samples, 0.49%)</title><rect x="3.3783%" y="805" width="0.4948%" height="15" fill="rgb(200,100,0)" fg:x="198" fg:w="29"/><text x="3.6283%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.49%)</title><rect x="3.3783%" y="789" width="0.4948%" height="15" fill="rgb(249,149,0)" fg:x="198" fg:w="29"/><text x="3.6283%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.20%)</title><rect x="3.6683%" y="773" width="0.2047%" height="15" fill="rgb(212,112,0)" fg:x="215" fg:w="12"/><text x="3.9183%" y="783.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (1 samples, 0.02%)</title><rect x="3.8731%" y="821" width="0.0171%" height="15" fill="rgb(75,188,188)" fg:x="227" fg:w="1"/><text x="4.1231%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="4.0096%" y="725" width="0.0341%" height="15" fill="rgb(250,150,0)" fg:x="235" fg:w="2"/><text x="4.2596%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="4.0096%" y="709" width="0.0341%" height="15" fill="rgb(213,113,0)" fg:x="235" fg:w="2"/><text x="4.2596%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="4.0096%" y="693" width="0.0341%" height="15" fill="rgb(243,143,0)" fg:x="235" fg:w="2"/><text x="4.2596%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="4.0096%" y="677" width="0.0341%" height="15" fill="rgb(250,150,0)" fg:x="235" fg:w="2"/><text x="4.2596%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="4.0096%" y="661" width="0.0341%" height="15" fill="rgb(224,124,0)" fg:x="235" fg:w="2"/><text x="4.2596%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="4.0096%" y="645" width="0.0341%" height="15" fill="rgb(251,151,0)" fg:x="235" fg:w="2"/><text x="4.2596%" y="655.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (21 samples, 0.36%)</title><rect x="4.0096%" y="805" width="0.3583%" height="15" fill="rgb(67,181,181)" fg:x="235" fg:w="21"/><text x="4.2596%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.36%)</title><rect x="4.0096%" y="789" width="0.3583%" height="15" fill="rgb(194,94,0)" fg:x="235" fg:w="21"/><text x="4.2596%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.36%)</title><rect x="4.0096%" y="773" width="0.3583%" height="15" fill="rgb(225,125,0)" fg:x="235" fg:w="21"/><text x="4.2596%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.36%)</title><rect x="4.0096%" y="757" width="0.3583%" height="15" fill="rgb(237,137,0)" fg:x="235" fg:w="21"/><text x="4.2596%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.36%)</title><rect x="4.0096%" y="741" width="0.3583%" height="15" fill="rgb(93,204,204)" fg:x="235" fg:w="21"/><text x="4.2596%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.32%)</title><rect x="4.0437%" y="725" width="0.3242%" height="15" fill="rgb(251,151,0)" fg:x="237" fg:w="19"/><text x="4.2937%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.32%)</title><rect x="4.0437%" y="709" width="0.3242%" height="15" fill="rgb(222,122,0)" fg:x="237" fg:w="19"/><text x="4.2937%" y="719.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (1 samples, 0.02%)</title><rect x="4.3679%" y="805" width="0.0171%" height="15" fill="rgb(76,188,188)" fg:x="256" fg:w="1"/><text x="4.6179%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="4.3679%" y="789" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="256" fg:w="1"/><text x="4.6179%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="4.3679%" y="773" width="0.0171%" height="15" fill="rgb(87,199,199)" fg:x="256" fg:w="1"/><text x="4.6179%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="4.3679%" y="757" width="0.0171%" height="15" fill="rgb(75,188,188)" fg:x="256" fg:w="1"/><text x="4.6179%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="4.3679%" y="741" width="0.0171%" height="15" fill="rgb(104,214,214)" fg:x="256" fg:w="1"/><text x="4.6179%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.03%)</title><rect x="4.3849%" y="805" width="0.0341%" height="15" fill="rgb(236,136,0)" fg:x="257" fg:w="2"/><text x="4.6349%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="4.3849%" y="789" width="0.0341%" height="15" fill="rgb(226,126,0)" fg:x="257" fg:w="2"/><text x="4.6349%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="4.3849%" y="773" width="0.0341%" height="15" fill="rgb(195,95,0)" fg:x="257" fg:w="2"/><text x="4.6349%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.03%)</title><rect x="4.3849%" y="757" width="0.0341%" height="15" fill="rgb(77,190,190)" fg:x="257" fg:w="2"/><text x="4.6349%" y="767.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="4.3849%" y="741" width="0.0341%" height="15" fill="rgb(57,171,171)" fg:x="257" fg:w="2"/><text x="4.6349%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="4.3849%" y="725" width="0.0341%" height="15" fill="rgb(253,153,0)" fg:x="257" fg:w="2"/><text x="4.6349%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="4.3849%" y="709" width="0.0341%" height="15" fill="rgb(195,95,0)" fg:x="257" fg:w="2"/><text x="4.6349%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="4.3849%" y="693" width="0.0341%" height="15" fill="rgb(196,96,0)" fg:x="257" fg:w="2"/><text x="4.6349%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.03%)</title><rect x="4.3849%" y="677" width="0.0341%" height="15" fill="rgb(51,166,166)" fg:x="257" fg:w="2"/><text x="4.6349%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.03%)</title><rect x="4.3849%" y="661" width="0.0341%" height="15" fill="rgb(213,113,0)" fg:x="257" fg:w="2"/><text x="4.6349%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="4.3849%" y="645" width="0.0341%" height="15" fill="rgb(210,110,0)" fg:x="257" fg:w="2"/><text x="4.6349%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (6 samples, 0.10%)</title><rect x="4.4190%" y="805" width="0.1024%" height="15" fill="rgb(209,109,0)" fg:x="259" fg:w="6"/><text x="4.6690%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.10%)</title><rect x="4.4190%" y="789" width="0.1024%" height="15" fill="rgb(243,143,0)" fg:x="259" fg:w="6"/><text x="4.6690%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.10%)</title><rect x="4.4190%" y="773" width="0.1024%" height="15" fill="rgb(222,122,0)" fg:x="259" fg:w="6"/><text x="4.6690%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.10%)</title><rect x="4.4190%" y="757" width="0.1024%" height="15" fill="rgb(244,144,0)" fg:x="259" fg:w="6"/><text x="4.6690%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.10%)</title><rect x="4.4190%" y="741" width="0.1024%" height="15" fill="rgb(220,120,0)" fg:x="259" fg:w="6"/><text x="4.6690%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.10%)</title><rect x="4.4190%" y="725" width="0.1024%" height="15" fill="rgb(239,139,0)" fg:x="259" fg:w="6"/><text x="4.6690%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="4.5214%" y="789" width="0.0171%" height="15" fill="rgb(222,122,0)" fg:x="265" fg:w="1"/><text x="4.7714%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.02%)</title><rect x="4.5214%" y="773" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="265" fg:w="1"/><text x="4.7714%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.02%)</title><rect x="4.5214%" y="757" width="0.0171%" height="15" fill="rgb(238,138,0)" fg:x="265" fg:w="1"/><text x="4.7714%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="4.5214%" y="741" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="265" fg:w="1"/><text x="4.7714%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="4.5214%" y="725" width="0.0171%" height="15" fill="rgb(223,123,0)" fg:x="265" fg:w="1"/><text x="4.7714%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="4.5214%" y="709" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="265" fg:w="1"/><text x="4.7714%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="4.5214%" y="693" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="265" fg:w="1"/><text x="4.7714%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="4.5214%" y="677" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="265" fg:w="1"/><text x="4.7714%" y="687.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (39 samples, 0.67%)</title><rect x="3.8901%" y="821" width="0.6654%" height="15" fill="rgb(59,173,173)" fg:x="228" fg:w="39"/><text x="4.1401%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.03%)</title><rect x="4.5214%" y="805" width="0.0341%" height="15" fill="rgb(224,124,0)" fg:x="265" fg:w="2"/><text x="4.7714%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="4.5385%" y="789" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="266" fg:w="1"/><text x="4.7885%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="4.5385%" y="773" width="0.0171%" height="15" fill="rgb(227,127,0)" fg:x="266" fg:w="1"/><text x="4.7885%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="4.5385%" y="757" width="0.0171%" height="15" fill="rgb(204,104,0)" fg:x="266" fg:w="1"/><text x="4.7885%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="4.5385%" y="741" width="0.0171%" height="15" fill="rgb(241,141,0)" fg:x="266" fg:w="1"/><text x="4.7885%" y="751.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (1 samples, 0.02%)</title><rect x="4.5555%" y="821" width="0.0171%" height="15" fill="rgb(53,168,168)" fg:x="267" fg:w="1"/><text x="4.8055%" y="831.50"></text></g><g><title>alc::optimizer::arg_min (1 samples, 0.02%)</title><rect x="4.5726%" y="821" width="0.0171%" height="15" fill="rgb(109,219,219)" fg:x="268" fg:w="1"/><text x="4.8226%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="4.5726%" y="805" width="0.0171%" height="15" fill="rgb(205,105,0)" fg:x="268" fg:w="1"/><text x="4.8226%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.09%)</title><rect x="4.5897%" y="821" width="0.0853%" height="15" fill="rgb(192,92,0)" fg:x="269" fg:w="5"/><text x="4.8397%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (38 samples, 0.65%)</title><rect x="4.6750%" y="821" width="0.6484%" height="15" fill="rgb(206,106,0)" fg:x="274" fg:w="38"/><text x="4.9250%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.46%)</title><rect x="4.8627%" y="805" width="0.4607%" height="15" fill="rgb(224,124,0)" fg:x="285" fg:w="27"/><text x="5.1127%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.10%)</title><rect x="5.2210%" y="789" width="0.1024%" height="15" fill="rgb(221,121,0)" fg:x="306" fg:w="6"/><text x="5.4710%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.10%)</title><rect x="5.2210%" y="773" width="0.1024%" height="15" fill="rgb(195,95,0)" fg:x="306" fg:w="6"/><text x="5.4710%" y="783.50"></text></g><g><title>cfree (15 samples, 0.26%)</title><rect x="5.3233%" y="821" width="0.2559%" height="15" fill="rgb(184,184,53)" fg:x="312" fg:w="15"/><text x="5.5733%" y="831.50"></text></g><g><title>malloc (22 samples, 0.38%)</title><rect x="5.5793%" y="821" width="0.3754%" height="15" fill="rgb(204,204,60)" fg:x="327" fg:w="22"/><text x="5.8293%" y="831.50"></text></g><g><title>[[heap]] (351 samples, 5.99%)</title><rect x="0.0341%" y="837" width="5.9887%" height="15" fill="rgb(204,204,60)" fg:x="2" fg:w="351"/><text x="0.2841%" y="847.50">[[heap]]</text></g><g><title>pow (4 samples, 0.07%)</title><rect x="5.9546%" y="821" width="0.0682%" height="15" fill="rgb(198,198,58)" fg:x="349" fg:w="4"/><text x="6.2046%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="6.0229%" y="821" width="0.0171%" height="15" fill="rgb(219,219,66)" fg:x="353" fg:w="1"/><text x="6.2729%" y="831.50"></text></g><g><title>__rdl_realloc (13 samples, 0.22%)</title><rect x="6.0399%" y="821" width="0.2218%" height="15" fill="rgb(224,224,68)" fg:x="354" fg:w="13"/><text x="6.2899%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (13 samples, 0.22%)</title><rect x="6.0399%" y="805" width="0.2218%" height="15" fill="rgb(246,146,0)" fg:x="354" fg:w="13"/><text x="6.2899%" y="815.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_moveable_position (1 samples, 0.02%)</title><rect x="6.2617%" y="821" width="0.0171%" height="15" fill="rgb(102,213,213)" fg:x="367" fg:w="1"/><text x="6.5117%" y="831.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_position (1 samples, 0.02%)</title><rect x="6.2617%" y="805" width="0.0171%" height="15" fill="rgb(62,176,176)" fg:x="367" fg:w="1"/><text x="6.5117%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="6.3982%" y="789" width="0.0171%" height="15" fill="rgb(199,99,0)" fg:x="375" fg:w="1"/><text x="6.6482%" y="799.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (9 samples, 0.15%)</title><rect x="6.2788%" y="821" width="0.1536%" height="15" fill="rgb(58,172,172)" fg:x="368" fg:w="9"/><text x="6.5288%" y="831.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (9 samples, 0.15%)</title><rect x="6.2788%" y="805" width="0.1536%" height="15" fill="rgb(102,213,213)" fg:x="368" fg:w="9"/><text x="6.5288%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (1 samples, 0.02%)</title><rect x="6.4153%" y="789" width="0.0171%" height="15" fill="rgb(218,118,0)" fg:x="376" fg:w="1"/><text x="6.6653%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (1 samples, 0.02%)</title><rect x="6.4153%" y="773" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="376" fg:w="1"/><text x="6.6653%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="6.4153%" y="757" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="376" fg:w="1"/><text x="6.6653%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="6.4153%" y="741" width="0.0171%" height="15" fill="rgb(218,118,0)" fg:x="376" fg:w="1"/><text x="6.6653%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="6.4153%" y="725" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="376" fg:w="1"/><text x="6.6653%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.09%)</title><rect x="6.4323%" y="821" width="0.0853%" height="15" fill="rgb(236,136,0)" fg:x="377" fg:w="5"/><text x="6.6823%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.09%)</title><rect x="6.4323%" y="805" width="0.0853%" height="15" fill="rgb(197,97,0)" fg:x="377" fg:w="5"/><text x="6.6823%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.14%)</title><rect x="6.5177%" y="821" width="0.1365%" height="15" fill="rgb(219,119,0)" fg:x="382" fg:w="8"/><text x="6.7677%" y="831.50"></text></g><g><title>malloc (28 samples, 0.48%)</title><rect x="6.6542%" y="821" width="0.4777%" height="15" fill="rgb(184,184,53)" fg:x="390" fg:w="28"/><text x="6.9042%" y="831.50"></text></g><g><title>[[stack]] (97 samples, 1.66%)</title><rect x="6.0229%" y="837" width="1.6550%" height="15" fill="rgb(191,191,55)" fg:x="353" fg:w="97"/><text x="6.2729%" y="847.50"></text></g><g><title>realloc (32 samples, 0.55%)</title><rect x="7.1319%" y="821" width="0.5460%" height="15" fill="rgb(176,176,50)" fg:x="418" fg:w="32"/><text x="7.3819%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.14%)</title><rect x="7.6779%" y="821" width="0.1365%" height="15" fill="rgb(195,95,0)" fg:x="450" fg:w="8"/><text x="7.9279%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.14%)</title><rect x="7.6779%" y="805" width="0.1365%" height="15" fill="rgb(213,113,0)" fg:x="450" fg:w="8"/><text x="7.9279%" y="815.50"></text></g><g><title>[alc] (19 samples, 0.32%)</title><rect x="7.6779%" y="837" width="0.3242%" height="15" fill="rgb(181,181,52)" fg:x="450" fg:w="19"/><text x="7.9279%" y="847.50"></text></g><g><title>cfree (11 samples, 0.19%)</title><rect x="7.8144%" y="821" width="0.1877%" height="15" fill="rgb(219,219,66)" fg:x="458" fg:w="11"/><text x="8.0644%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.05%)</title><rect x="8.0020%" y="837" width="0.0512%" height="15" fill="rgb(216,216,65)" fg:x="469" fg:w="3"/><text x="8.2520%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.03%)</title><rect x="8.0191%" y="821" width="0.0341%" height="15" fill="rgb(223,223,67)" fg:x="470" fg:w="2"/><text x="8.2691%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="8.0362%" y="805" width="0.0171%" height="15" fill="rgb(193,193,56)" fg:x="471" fg:w="1"/><text x="8.2862%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="8.0362%" y="789" width="0.0171%" height="15" fill="rgb(205,205,61)" fg:x="471" fg:w="1"/><text x="8.2862%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="8.0362%" y="773" width="0.0171%" height="15" fill="rgb(186,186,54)" fg:x="471" fg:w="1"/><text x="8.2862%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="8.0362%" y="757" width="0.0171%" height="15" fill="rgb(191,191,55)" fg:x="471" fg:w="1"/><text x="8.2862%" y="767.50"></text></g><g><title>[libc.so.6] (71 samples, 1.21%)</title><rect x="8.0532%" y="837" width="1.2114%" height="15" fill="rgb(195,195,57)" fg:x="472" fg:w="71"/><text x="8.3032%" y="847.50"></text></g><g><title>[libc.so.6] (7 samples, 0.12%)</title><rect x="9.1452%" y="821" width="0.1194%" height="15" fill="rgb(185,185,53)" fg:x="536" fg:w="7"/><text x="9.3952%" y="831.50"></text></g><g><title>[libm.so.6] (5 samples, 0.09%)</title><rect x="9.2646%" y="837" width="0.0853%" height="15" fill="rgb(212,212,63)" fg:x="543" fg:w="5"/><text x="9.5146%" y="847.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.05%)</title><rect x="9.4011%" y="821" width="0.0512%" height="15" fill="rgb(64,178,178)" fg:x="551" fg:w="3"/><text x="9.6511%" y="831.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (7 samples, 0.12%)</title><rect x="9.4523%" y="821" width="0.1194%" height="15" fill="rgb(50,165,165)" fg:x="554" fg:w="7"/><text x="9.7023%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="9.6229%" y="805" width="0.0341%" height="15" fill="rgb(198,98,0)" fg:x="564" fg:w="2"/><text x="9.8729%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.12%)</title><rect x="9.6571%" y="677" width="0.1194%" height="15" fill="rgb(212,112,0)" fg:x="566" fg:w="7"/><text x="9.9071%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.12%)</title><rect x="9.6571%" y="661" width="0.1194%" height="15" fill="rgb(231,131,0)" fg:x="566" fg:w="7"/><text x="9.9071%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.12%)</title><rect x="9.6571%" y="645" width="0.1194%" height="15" fill="rgb(196,96,0)" fg:x="566" fg:w="7"/><text x="9.9071%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.12%)</title><rect x="9.6571%" y="629" width="0.1194%" height="15" fill="rgb(237,137,0)" fg:x="566" fg:w="7"/><text x="9.9071%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.12%)</title><rect x="9.6571%" y="613" width="0.1194%" height="15" fill="rgb(233,133,0)" fg:x="566" fg:w="7"/><text x="9.9071%" y="623.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.12%)</title><rect x="9.6571%" y="597" width="0.1194%" height="15" fill="rgb(250,150,0)" fg:x="566" fg:w="7"/><text x="9.9071%" y="607.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (13 samples, 0.22%)</title><rect x="9.6571%" y="757" width="0.2218%" height="15" fill="rgb(51,166,166)" fg:x="566" fg:w="13"/><text x="9.9071%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.22%)</title><rect x="9.6571%" y="741" width="0.2218%" height="15" fill="rgb(219,119,0)" fg:x="566" fg:w="13"/><text x="9.9071%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.22%)</title><rect x="9.6571%" y="725" width="0.2218%" height="15" fill="rgb(217,117,0)" fg:x="566" fg:w="13"/><text x="9.9071%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.22%)</title><rect x="9.6571%" y="709" width="0.2218%" height="15" fill="rgb(232,132,0)" fg:x="566" fg:w="13"/><text x="9.9071%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.22%)</title><rect x="9.6571%" y="693" width="0.2218%" height="15" fill="rgb(102,213,213)" fg:x="566" fg:w="13"/><text x="9.9071%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.10%)</title><rect x="9.7765%" y="677" width="0.1024%" height="15" fill="rgb(196,96,0)" fg:x="573" fg:w="6"/><text x="10.0265%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.10%)</title><rect x="9.7765%" y="661" width="0.1024%" height="15" fill="rgb(205,105,0)" fg:x="573" fg:w="6"/><text x="10.0265%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.32%)</title><rect x="9.5717%" y="821" width="0.3242%" height="15" fill="rgb(197,97,0)" fg:x="561" fg:w="19"/><text x="9.8217%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.24%)</title><rect x="9.6571%" y="805" width="0.2389%" height="15" fill="rgb(201,101,0)" fg:x="566" fg:w="14"/><text x="9.9071%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.24%)</title><rect x="9.6571%" y="789" width="0.2389%" height="15" fill="rgb(252,152,0)" fg:x="566" fg:w="14"/><text x="9.9071%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.24%)</title><rect x="9.6571%" y="773" width="0.2389%" height="15" fill="rgb(57,171,171)" fg:x="566" fg:w="14"/><text x="9.9071%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="9.8789%" y="757" width="0.0171%" height="15" fill="rgb(205,105,0)" fg:x="579" fg:w="1"/><text x="10.1289%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="9.8789%" y="741" width="0.0171%" height="15" fill="rgb(226,126,0)" fg:x="579" fg:w="1"/><text x="10.1289%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="9.8789%" y="725" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="579" fg:w="1"/><text x="10.1289%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="9.8789%" y="709" width="0.0171%" height="15" fill="rgb(199,99,0)" fg:x="579" fg:w="1"/><text x="10.1289%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="9.8789%" y="693" width="0.0171%" height="15" fill="rgb(232,132,0)" fg:x="579" fg:w="1"/><text x="10.1289%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="9.8789%" y="677" width="0.0171%" height="15" fill="rgb(234,134,0)" fg:x="579" fg:w="1"/><text x="10.1289%" y="687.50"></text></g><g><title>[libc.so.6] (177 samples, 3.02%)</title><rect x="9.8959%" y="821" width="3.0200%" height="15" fill="rgb(221,221,66)" fg:x="580" fg:w="177"/><text x="10.1459%" y="831.50">[li..</text></g><g><title>__rdl_realloc (11 samples, 0.19%)</title><rect x="12.9159%" y="821" width="0.1877%" height="15" fill="rgb(207,207,61)" fg:x="757" fg:w="11"/><text x="13.1659%" y="831.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (23 samples, 0.39%)</title><rect x="13.1036%" y="821" width="0.3924%" height="15" fill="rgb(62,176,176)" fg:x="768" fg:w="23"/><text x="13.3536%" y="831.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (1 samples, 0.02%)</title><rect x="13.4960%" y="821" width="0.0171%" height="15" fill="rgb(61,175,175)" fg:x="791" fg:w="1"/><text x="13.7460%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.02%)</title><rect x="13.4960%" y="805" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="791" fg:w="1"/><text x="13.7460%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="13.4960%" y="789" width="0.0171%" height="15" fill="rgb(241,141,0)" fg:x="791" fg:w="1"/><text x="13.7460%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="13.4960%" y="773" width="0.0171%" height="15" fill="rgb(238,138,0)" fg:x="791" fg:w="1"/><text x="13.7460%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.4960%" y="757" width="0.0171%" height="15" fill="rgb(190,90,0)" fg:x="791" fg:w="1"/><text x="13.7460%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="13.4960%" y="741" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="791" fg:w="1"/><text x="13.7460%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="13.4960%" y="725" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="791" fg:w="1"/><text x="13.7460%" y="735.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (8 samples, 0.14%)</title><rect x="13.5131%" y="821" width="0.1365%" height="15" fill="rgb(102,213,213)" fg:x="792" fg:w="8"/><text x="13.7631%" y="831.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (4 samples, 0.07%)</title><rect x="13.5813%" y="805" width="0.0682%" height="15" fill="rgb(207,107,0)" fg:x="796" fg:w="4"/><text x="13.8313%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (29 samples, 0.49%)</title><rect x="13.6495%" y="821" width="0.4948%" height="15" fill="rgb(248,148,0)" fg:x="800" fg:w="29"/><text x="13.8995%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="14.1273%" y="805" width="0.0171%" height="15" fill="rgb(205,105,0)" fg:x="828" fg:w="1"/><text x="14.3773%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="14.1273%" y="789" width="0.0171%" height="15" fill="rgb(211,111,0)" fg:x="828" fg:w="1"/><text x="14.3773%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="14.1273%" y="773" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="828" fg:w="1"/><text x="14.3773%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (58 samples, 0.99%)</title><rect x="14.1443%" y="821" width="0.9896%" height="15" fill="rgb(245,145,0)" fg:x="829" fg:w="58"/><text x="14.3943%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.22%)</title><rect x="14.9121%" y="805" width="0.2218%" height="15" fill="rgb(239,139,0)" fg:x="874" fg:w="13"/><text x="15.1621%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.22%)</title><rect x="14.9121%" y="789" width="0.2218%" height="15" fill="rgb(246,146,0)" fg:x="874" fg:w="13"/><text x="15.1621%" y="799.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.22%)</title><rect x="14.9121%" y="773" width="0.2218%" height="15" fill="rgb(206,106,0)" fg:x="874" fg:w="13"/><text x="15.1621%" y="783.50"></text></g><g><title>cfree (73 samples, 1.25%)</title><rect x="15.1339%" y="821" width="1.2455%" height="15" fill="rgb(217,217,65)" fg:x="887" fg:w="73"/><text x="15.3839%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.09%)</title><rect x="16.3795%" y="821" width="0.0853%" height="15" fill="rgb(249,149,0)" fg:x="960" fg:w="5"/><text x="16.6295%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="16.4477%" y="805" width="0.0171%" height="15" fill="rgb(226,126,0)" fg:x="964" fg:w="1"/><text x="16.6977%" y="815.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="16.4477%" y="789" width="0.0171%" height="15" fill="rgb(93,204,204)" fg:x="964" fg:w="1"/><text x="16.6977%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="16.4477%" y="773" width="0.0171%" height="15" fill="rgb(237,137,0)" fg:x="964" fg:w="1"/><text x="16.6977%" y="783.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="16.4477%" y="757" width="0.0171%" height="15" fill="rgb(230,130,0)" fg:x="964" fg:w="1"/><text x="16.6977%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="16.4648%" y="821" width="0.0171%" height="15" fill="rgb(89,200,200)" fg:x="965" fg:w="1"/><text x="16.7148%" y="831.50"></text></g><g><title>malloc (39 samples, 0.67%)</title><rect x="16.4818%" y="821" width="0.6654%" height="15" fill="rgb(183,183,53)" fg:x="966" fg:w="39"/><text x="16.7318%" y="831.50"></text></g><g><title>pow (11 samples, 0.19%)</title><rect x="17.1472%" y="821" width="0.1877%" height="15" fill="rgb(196,196,57)" fg:x="1005" fg:w="11"/><text x="17.3972%" y="831.50"></text></g><g><title>[unknown] (495 samples, 8.45%)</title><rect x="9.3499%" y="837" width="8.4457%" height="15" fill="rgb(226,226,68)" fg:x="548" fg:w="495"/><text x="9.5999%" y="847.50">[unknown]</text></g><g><title>realloc (27 samples, 0.46%)</title><rect x="17.3349%" y="821" width="0.4607%" height="15" fill="rgb(208,208,62)" fg:x="1016" fg:w="27"/><text x="17.5849%" y="831.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::take_top_frequencies (1 samples, 0.02%)</title><rect x="17.8127%" y="341" width="0.0171%" height="15" fill="rgb(93,205,205)" fg:x="1044" fg:w="1"/><text x="18.0627%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.02%)</title><rect x="17.8127%" y="325" width="0.0171%" height="15" fill="rgb(251,151,0)" fg:x="1044" fg:w="1"/><text x="18.0627%" y="335.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.02%)</title><rect x="17.8127%" y="309" width="0.0171%" height="15" fill="rgb(214,114,0)" fg:x="1044" fg:w="1"/><text x="18.0627%" y="319.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.02%)</title><rect x="17.8127%" y="293" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="1044" fg:w="1"/><text x="18.0627%" y="303.50"></text></g><g><title>core::slice::sort::provide_sorted_batch (1 samples, 0.02%)</title><rect x="17.8127%" y="277" width="0.0171%" height="15" fill="rgb(215,115,0)" fg:x="1044" fg:w="1"/><text x="18.0627%" y="287.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.02%)</title><rect x="17.8127%" y="261" width="0.0171%" height="15" fill="rgb(220,120,0)" fg:x="1044" fg:w="1"/><text x="18.0627%" y="271.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.02%)</title><rect x="17.8127%" y="245" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="1044" fg:w="1"/><text x="18.0627%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="17.8127%" y="229" width="0.0171%" height="15" fill="rgb(229,129,0)" fg:x="1044" fg:w="1"/><text x="18.0627%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="17.8297%" y="309" width="0.0171%" height="15" fill="rgb(241,141,0)" fg:x="1045" fg:w="1"/><text x="18.0797%" y="319.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="17.8297%" y="293" width="0.0171%" height="15" fill="rgb(54,168,168)" fg:x="1045" fg:w="1"/><text x="18.0797%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="17.8297%" y="277" width="0.0171%" height="15" fill="rgb(52,167,167)" fg:x="1045" fg:w="1"/><text x="18.0797%" y="287.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1 samples, 0.02%)</title><rect x="17.8468%" y="293" width="0.0171%" height="15" fill="rgb(198,98,0)" fg:x="1046" fg:w="1"/><text x="18.0968%" y="303.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.02%)</title><rect x="17.8468%" y="277" width="0.0171%" height="15" fill="rgb(205,105,0)" fg:x="1046" fg:w="1"/><text x="18.0968%" y="287.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="17.8468%" y="261" width="0.0171%" height="15" fill="rgb(76,188,188)" fg:x="1046" fg:w="1"/><text x="18.0968%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.02%)</title><rect x="17.8468%" y="245" width="0.0171%" height="15" fill="rgb(77,190,190)" fg:x="1046" fg:w="1"/><text x="18.0968%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="17.8468%" y="229" width="0.0171%" height="15" fill="rgb(62,176,176)" fg:x="1046" fg:w="1"/><text x="18.0968%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="17.8468%" y="213" width="0.0171%" height="15" fill="rgb(227,127,0)" fg:x="1046" fg:w="1"/><text x="18.0968%" y="223.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="17.8468%" y="197" width="0.0171%" height="15" fill="rgb(198,98,0)" fg:x="1046" fg:w="1"/><text x="18.0968%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="17.8638%" y="229" width="0.0171%" height="15" fill="rgb(211,111,0)" fg:x="1047" fg:w="1"/><text x="18.1138%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="17.8638%" y="213" width="0.0171%" height="15" fill="rgb(218,118,0)" fg:x="1047" fg:w="1"/><text x="18.1138%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="17.8638%" y="197" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="1047" fg:w="1"/><text x="18.1138%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="17.8638%" y="181" width="0.0171%" height="15" fill="rgb(227,127,0)" fg:x="1047" fg:w="1"/><text x="18.1138%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="17.8638%" y="165" width="0.0171%" height="15" fill="rgb(203,103,0)" fg:x="1047" fg:w="1"/><text x="18.1138%" y="175.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="17.8809%" y="229" width="0.0171%" height="15" fill="rgb(242,142,0)" fg:x="1048" fg:w="1"/><text x="18.1309%" y="239.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="17.8809%" y="213" width="0.0171%" height="15" fill="rgb(228,128,0)" fg:x="1048" fg:w="1"/><text x="18.1309%" y="223.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="17.8809%" y="197" width="0.0171%" height="15" fill="rgb(229,129,0)" fg:x="1048" fg:w="1"/><text x="18.1309%" y="207.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="17.8809%" y="181" width="0.0171%" height="15" fill="rgb(204,104,0)" fg:x="1048" fg:w="1"/><text x="18.1309%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.07%)</title><rect x="17.8638%" y="261" width="0.0682%" height="15" fill="rgb(107,218,218)" fg:x="1047" fg:w="4"/><text x="18.1138%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.07%)</title><rect x="17.8638%" y="245" width="0.0682%" height="15" fill="rgb(252,152,0)" fg:x="1047" fg:w="4"/><text x="18.1138%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.03%)</title><rect x="17.8980%" y="229" width="0.0341%" height="15" fill="rgb(235,135,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="239.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (2 samples, 0.03%)</title><rect x="17.8980%" y="213" width="0.0341%" height="15" fill="rgb(74,187,187)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.03%)</title><rect x="17.8980%" y="197" width="0.0341%" height="15" fill="rgb(209,109,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.03%)</title><rect x="17.8980%" y="181" width="0.0341%" height="15" fill="rgb(214,114,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="191.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.03%)</title><rect x="17.8980%" y="165" width="0.0341%" height="15" fill="rgb(232,132,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="175.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.03%)</title><rect x="17.8980%" y="149" width="0.0341%" height="15" fill="rgb(106,216,216)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.03%)</title><rect x="17.8980%" y="133" width="0.0341%" height="15" fill="rgb(252,152,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="143.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.03%)</title><rect x="17.8980%" y="117" width="0.0341%" height="15" fill="rgb(227,127,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="127.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.03%)</title><rect x="17.8980%" y="101" width="0.0341%" height="15" fill="rgb(244,144,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="111.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="17.8980%" y="85" width="0.0341%" height="15" fill="rgb(226,126,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="95.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="17.8980%" y="69" width="0.0341%" height="15" fill="rgb(222,122,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="17.8980%" y="53" width="0.0341%" height="15" fill="rgb(253,153,0)" fg:x="1049" fg:w="2"/><text x="18.1480%" y="63.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="17.9150%" y="37" width="0.0171%" height="15" fill="rgb(253,153,0)" fg:x="1050" fg:w="1"/><text x="18.1650%" y="47.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::combine_with (7 samples, 0.12%)</title><rect x="17.8297%" y="325" width="0.1194%" height="15" fill="rgb(78,191,191)" fg:x="1045" fg:w="7"/><text x="18.0797%" y="335.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::add_from_key_value (6 samples, 0.10%)</title><rect x="17.8468%" y="309" width="0.1024%" height="15" fill="rgb(104,214,214)" fg:x="1046" fg:w="6"/><text x="18.0968%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.09%)</title><rect x="17.8638%" y="293" width="0.0853%" height="15" fill="rgb(202,102,0)" fg:x="1047" fg:w="5"/><text x="18.1138%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.09%)</title><rect x="17.8638%" y="277" width="0.0853%" height="15" fill="rgb(82,194,194)" fg:x="1047" fg:w="5"/><text x="18.1138%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="17.9321%" y="261" width="0.0171%" height="15" fill="rgb(100,211,211)" fg:x="1051" fg:w="1"/><text x="18.1821%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="17.9321%" y="245" width="0.0171%" height="15" fill="rgb(71,184,184)" fg:x="1051" fg:w="1"/><text x="18.1821%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="17.9321%" y="229" width="0.0171%" height="15" fill="rgb(67,180,180)" fg:x="1051" fg:w="1"/><text x="18.1821%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="17.9321%" y="213" width="0.0171%" height="15" fill="rgb(63,176,176)" fg:x="1051" fg:w="1"/><text x="18.1821%" y="223.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (1 samples, 0.02%)</title><rect x="17.9492%" y="309" width="0.0171%" height="15" fill="rgb(58,172,172)" fg:x="1052" fg:w="1"/><text x="18.1992%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.02%)</title><rect x="17.9492%" y="293" width="0.0171%" height="15" fill="rgb(229,129,0)" fg:x="1052" fg:w="1"/><text x="18.1992%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.02%)</title><rect x="17.9492%" y="277" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="1052" fg:w="1"/><text x="18.1992%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="17.9492%" y="261" width="0.0171%" height="15" fill="rgb(252,152,0)" fg:x="1052" fg:w="1"/><text x="18.1992%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="17.9492%" y="245" width="0.0171%" height="15" fill="rgb(251,151,0)" fg:x="1052" fg:w="1"/><text x="18.1992%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="17.9492%" y="229" width="0.0171%" height="15" fill="rgb(240,140,0)" fg:x="1052" fg:w="1"/><text x="18.1992%" y="239.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="17.9492%" y="213" width="0.0171%" height="15" fill="rgb(207,207,61)" fg:x="1052" fg:w="1"/><text x="18.1992%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="17.9662%" y="309" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="17.9662%" y="293" width="0.0171%" height="15" fill="rgb(252,152,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="17.9662%" y="277" width="0.0171%" height="15" fill="rgb(242,142,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="17.9662%" y="261" width="0.0171%" height="15" fill="rgb(102,213,213)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="17.9662%" y="245" width="0.0171%" height="15" fill="rgb(254,154,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="17.9662%" y="229" width="0.0171%" height="15" fill="rgb(239,139,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="17.9662%" y="213" width="0.0171%" height="15" fill="rgb(199,99,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="17.9662%" y="197" width="0.0171%" height="15" fill="rgb(206,106,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="17.9662%" y="181" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="17.9662%" y="165" width="0.0171%" height="15" fill="rgb(254,154,0)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="175.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="17.9662%" y="149" width="0.0171%" height="15" fill="rgb(182,182,52)" fg:x="1053" fg:w="1"/><text x="18.2162%" y="159.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_datasets (11 samples, 0.19%)</title><rect x="17.8127%" y="549" width="0.1877%" height="15" fill="rgb(91,203,203)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.19%)</title><rect x="17.8127%" y="533" width="0.1877%" height="15" fill="rgb(233,133,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.19%)</title><rect x="17.8127%" y="517" width="0.1877%" height="15" fill="rgb(190,90,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.19%)</title><rect x="17.8127%" y="501" width="0.1877%" height="15" fill="rgb(240,140,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.19%)</title><rect x="17.8127%" y="485" width="0.1877%" height="15" fill="rgb(196,96,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.19%)</title><rect x="17.8127%" y="469" width="0.1877%" height="15" fill="rgb(193,93,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (11 samples, 0.19%)</title><rect x="17.8127%" y="453" width="0.1877%" height="15" fill="rgb(252,152,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.19%)</title><rect x="17.8127%" y="437" width="0.1877%" height="15" fill="rgb(246,146,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.19%)</title><rect x="17.8127%" y="421" width="0.1877%" height="15" fill="rgb(218,118,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.19%)</title><rect x="17.8127%" y="405" width="0.1877%" height="15" fill="rgb(221,121,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (11 samples, 0.19%)</title><rect x="17.8127%" y="389" width="0.1877%" height="15" fill="rgb(213,113,0)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="399.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_datasets::_{{closure}} (11 samples, 0.19%)</title><rect x="17.8127%" y="373" width="0.1877%" height="15" fill="rgb(89,200,200)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="383.50"></text></g><g><title>alc::text_processor::dataset::FrequencyDataset&lt;u32&gt;::try_from_dir (11 samples, 0.19%)</title><rect x="17.8127%" y="357" width="0.1877%" height="15" fill="rgb(59,173,173)" fg:x="1044" fg:w="11"/><text x="18.0627%" y="367.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_file (10 samples, 0.17%)</title><rect x="17.8297%" y="341" width="0.1706%" height="15" fill="rgb(70,184,184)" fg:x="1045" fg:w="10"/><text x="18.0797%" y="351.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_string (3 samples, 0.05%)</title><rect x="17.9492%" y="325" width="0.0512%" height="15" fill="rgb(108,218,218)" fg:x="1052" fg:w="3"/><text x="18.1992%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.02%)</title><rect x="17.9833%" y="309" width="0.0171%" height="15" fill="rgb(228,128,0)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="319.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="17.9833%" y="293" width="0.0171%" height="15" fill="rgb(58,172,172)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.02%)</title><rect x="17.9833%" y="277" width="0.0171%" height="15" fill="rgb(85,197,197)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="17.9833%" y="261" width="0.0171%" height="15" fill="rgb(72,185,185)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="17.9833%" y="245" width="0.0171%" height="15" fill="rgb(96,207,207)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.02%)</title><rect x="17.9833%" y="229" width="0.0171%" height="15" fill="rgb(66,180,180)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.02%)</title><rect x="17.9833%" y="213" width="0.0171%" height="15" fill="rgb(59,173,173)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::full_buckets_indices (1 samples, 0.02%)</title><rect x="17.9833%" y="197" width="0.0171%" height="15" fill="rgb(66,180,180)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="207.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.02%)</title><rect x="17.9833%" y="181" width="0.0171%" height="15" fill="rgb(69,182,182)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="17.9833%" y="165" width="0.0171%" height="15" fill="rgb(73,186,186)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="17.9833%" y="149" width="0.0171%" height="15" fill="rgb(247,147,0)" fg:x="1054" fg:w="1"/><text x="18.2333%" y="159.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::randomize (1 samples, 0.02%)</title><rect x="18.0003%" y="533" width="0.0171%" height="15" fill="rgb(70,183,183)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="543.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (1 samples, 0.02%)</title><rect x="18.0003%" y="517" width="0.0171%" height="15" fill="rgb(70,183,183)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="527.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.0003%" y="501" width="0.0171%" height="15" fill="rgb(86,198,198)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.0003%" y="485" width="0.0171%" height="15" fill="rgb(228,128,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="18.0003%" y="469" width="0.0171%" height="15" fill="rgb(198,98,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="18.0003%" y="453" width="0.0171%" height="15" fill="rgb(236,136,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="18.0003%" y="437" width="0.0171%" height="15" fill="rgb(94,205,205)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.0003%" y="421" width="0.0171%" height="15" fill="rgb(213,113,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.0003%" y="405" width="0.0171%" height="15" fill="rgb(204,104,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="18.0003%" y="389" width="0.0171%" height="15" fill="rgb(195,95,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="18.0003%" y="373" width="0.0171%" height="15" fill="rgb(212,112,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="18.0003%" y="357" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="18.0003%" y="341" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="351.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="18.0003%" y="325" width="0.0171%" height="15" fill="rgb(225,225,68)" fg:x="1055" fg:w="1"/><text x="18.2503%" y="335.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="18.0174%" y="517" width="0.0341%" height="15" fill="rgb(92,203,203)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="18.0174%" y="501" width="0.0341%" height="15" fill="rgb(254,154,0)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="18.0174%" y="485" width="0.0341%" height="15" fill="rgb(72,185,185)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="18.0174%" y="469" width="0.0341%" height="15" fill="rgb(61,175,175)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.03%)</title><rect x="18.0174%" y="453" width="0.0341%" height="15" fill="rgb(96,207,207)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.03%)</title><rect x="18.0174%" y="437" width="0.0341%" height="15" fill="rgb(96,207,207)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="447.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.03%)</title><rect x="18.0174%" y="421" width="0.0341%" height="15" fill="rgb(107,217,217)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="18.0174%" y="405" width="0.0341%" height="15" fill="rgb(237,137,0)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="18.0174%" y="389" width="0.0341%" height="15" fill="rgb(195,95,0)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="18.0174%" y="373" width="0.0341%" height="15" fill="rgb(191,91,0)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="383.50"></text></g><g><title>malloc (2 samples, 0.03%)</title><rect x="18.0174%" y="357" width="0.0341%" height="15" fill="rgb(209,209,62)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="18.0174%" y="341" width="0.0341%" height="15" fill="rgb(206,206,61)" fg:x="1056" fg:w="2"/><text x="18.2674%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.0345%" y="325" width="0.0171%" height="15" fill="rgb(176,176,50)" fg:x="1057" fg:w="1"/><text x="18.2845%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.0345%" y="309" width="0.0171%" height="15" fill="rgb(198,198,58)" fg:x="1057" fg:w="1"/><text x="18.2845%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="18.1368%" y="309" width="0.0171%" height="15" fill="rgb(175,175,50)" fg:x="1063" fg:w="1"/><text x="18.3868%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="18.1368%" y="405" width="0.0341%" height="15" fill="rgb(249,149,0)" fg:x="1063" fg:w="2"/><text x="18.3868%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="18.1368%" y="389" width="0.0341%" height="15" fill="rgb(228,128,0)" fg:x="1063" fg:w="2"/><text x="18.3868%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="18.1368%" y="373" width="0.0341%" height="15" fill="rgb(228,128,0)" fg:x="1063" fg:w="2"/><text x="18.3868%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="18.1368%" y="357" width="0.0341%" height="15" fill="rgb(195,95,0)" fg:x="1063" fg:w="2"/><text x="18.3868%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="18.1368%" y="341" width="0.0341%" height="15" fill="rgb(242,142,0)" fg:x="1063" fg:w="2"/><text x="18.3868%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="18.1368%" y="325" width="0.0341%" height="15" fill="rgb(251,151,0)" fg:x="1063" fg:w="2"/><text x="18.3868%" y="335.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="18.1539%" y="309" width="0.0171%" height="15" fill="rgb(218,218,65)" fg:x="1064" fg:w="1"/><text x="18.4039%" y="319.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="18.1368%" y="485" width="0.0512%" height="15" fill="rgb(64,178,178)" fg:x="1063" fg:w="3"/><text x="18.3868%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="18.1368%" y="469" width="0.0512%" height="15" fill="rgb(218,118,0)" fg:x="1063" fg:w="3"/><text x="18.3868%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.05%)</title><rect x="18.1368%" y="453" width="0.0512%" height="15" fill="rgb(249,149,0)" fg:x="1063" fg:w="3"/><text x="18.3868%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.05%)</title><rect x="18.1368%" y="437" width="0.0512%" height="15" fill="rgb(192,92,0)" fg:x="1063" fg:w="3"/><text x="18.3868%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.05%)</title><rect x="18.1368%" y="421" width="0.0512%" height="15" fill="rgb(103,213,213)" fg:x="1063" fg:w="3"/><text x="18.3868%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="18.1710%" y="405" width="0.0171%" height="15" fill="rgb(248,148,0)" fg:x="1065" fg:w="1"/><text x="18.4210%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="18.1710%" y="389" width="0.0171%" height="15" fill="rgb(206,106,0)" fg:x="1065" fg:w="1"/><text x="18.4210%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.1710%" y="373" width="0.0171%" height="15" fill="rgb(219,219,66)" fg:x="1065" fg:w="1"/><text x="18.4210%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="18.1880%" y="485" width="0.0341%" height="15" fill="rgb(221,121,0)" fg:x="1066" fg:w="2"/><text x="18.4380%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.2051%" y="469" width="0.0171%" height="15" fill="rgb(232,132,0)" fg:x="1067" fg:w="1"/><text x="18.4551%" y="479.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (1 samples, 0.02%)</title><rect x="18.2221%" y="485" width="0.0171%" height="15" fill="rgb(103,214,214)" fg:x="1068" fg:w="1"/><text x="18.4721%" y="495.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (1 samples, 0.02%)</title><rect x="18.2221%" y="469" width="0.0171%" height="15" fill="rgb(233,133,0)" fg:x="1068" fg:w="1"/><text x="18.4721%" y="479.50"></text></g><g><title>pow (1 samples, 0.02%)</title><rect x="18.2221%" y="453" width="0.0171%" height="15" fill="rgb(211,211,63)" fg:x="1068" fg:w="1"/><text x="18.4721%" y="463.50"></text></g><g><title>[libm.so.6] (1 samples, 0.02%)</title><rect x="18.2221%" y="437" width="0.0171%" height="15" fill="rgb(208,208,62)" fg:x="1068" fg:w="1"/><text x="18.4721%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.05%)</title><rect x="18.2904%" y="421" width="0.0512%" height="15" fill="rgb(208,108,0)" fg:x="1072" fg:w="3"/><text x="18.5404%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.05%)</title><rect x="18.2904%" y="405" width="0.0512%" height="15" fill="rgb(203,103,0)" fg:x="1072" fg:w="3"/><text x="18.5404%" y="415.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.05%)</title><rect x="18.2904%" y="389" width="0.0512%" height="15" fill="rgb(211,111,0)" fg:x="1072" fg:w="3"/><text x="18.5404%" y="399.50"></text></g><g><title>realloc (3 samples, 0.05%)</title><rect x="18.2904%" y="373" width="0.0512%" height="15" fill="rgb(185,185,53)" fg:x="1072" fg:w="3"/><text x="18.5404%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="18.3075%" y="357" width="0.0341%" height="15" fill="rgb(210,210,63)" fg:x="1073" fg:w="2"/><text x="18.5575%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.3245%" y="341" width="0.0171%" height="15" fill="rgb(181,181,52)" fg:x="1074" fg:w="1"/><text x="18.5745%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="18.3416%" y="421" width="0.0171%" height="15" fill="rgb(206,206,61)" fg:x="1075" fg:w="1"/><text x="18.5916%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="18.3416%" y="405" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="1075" fg:w="1"/><text x="18.5916%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.15%)</title><rect x="18.2392%" y="485" width="0.1536%" height="15" fill="rgb(209,109,0)" fg:x="1069" fg:w="9"/><text x="18.4892%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.10%)</title><rect x="18.2904%" y="469" width="0.1024%" height="15" fill="rgb(230,130,0)" fg:x="1072" fg:w="6"/><text x="18.5404%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.10%)</title><rect x="18.2904%" y="453" width="0.1024%" height="15" fill="rgb(197,97,0)" fg:x="1072" fg:w="6"/><text x="18.5404%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.10%)</title><rect x="18.2904%" y="437" width="0.1024%" height="15" fill="rgb(223,123,0)" fg:x="1072" fg:w="6"/><text x="18.5404%" y="447.50"></text></g><g><title>malloc (2 samples, 0.03%)</title><rect x="18.3586%" y="421" width="0.0341%" height="15" fill="rgb(198,198,58)" fg:x="1076" fg:w="2"/><text x="18.6086%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.02%)</title><rect x="18.3928%" y="485" width="0.0171%" height="15" fill="rgb(197,97,0)" fg:x="1078" fg:w="1"/><text x="18.6428%" y="495.50"></text></g><g><title>&lt;alc::keyboard::key::Finger as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="18.3928%" y="469" width="0.0171%" height="15" fill="rgb(87,199,199)" fg:x="1078" fg:w="1"/><text x="18.6428%" y="479.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (22 samples, 0.38%)</title><rect x="18.0686%" y="501" width="0.3754%" height="15" fill="rgb(72,185,185)" fg:x="1059" fg:w="22"/><text x="18.3186%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="18.4098%" y="485" width="0.0341%" height="15" fill="rgb(214,114,0)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.03%)</title><rect x="18.4098%" y="469" width="0.0341%" height="15" fill="rgb(248,148,0)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="18.4098%" y="453" width="0.0341%" height="15" fill="rgb(246,146,0)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (2 samples, 0.03%)</title><rect x="18.4098%" y="437" width="0.0341%" height="15" fill="rgb(206,106,0)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="18.4098%" y="421" width="0.0341%" height="15" fill="rgb(96,207,207)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.03%)</title><rect x="18.4098%" y="405" width="0.0341%" height="15" fill="rgb(194,94,0)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="18.4098%" y="389" width="0.0341%" height="15" fill="rgb(197,97,0)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="18.4098%" y="373" width="0.0341%" height="15" fill="rgb(200,100,0)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="18.4098%" y="357" width="0.0341%" height="15" fill="rgb(209,109,0)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="367.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="18.4098%" y="341" width="0.0341%" height="15" fill="rgb(203,203,60)" fg:x="1079" fg:w="2"/><text x="18.6598%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.4269%" y="325" width="0.0171%" height="15" fill="rgb(198,198,58)" fg:x="1080" fg:w="1"/><text x="18.6769%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="18.4440%" y="309" width="0.0171%" height="15" fill="rgb(176,176,50)" fg:x="1081" fg:w="1"/><text x="18.6940%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="18.4440%" y="293" width="0.0171%" height="15" fill="rgb(217,117,0)" fg:x="1081" fg:w="1"/><text x="18.6940%" y="303.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="18.4440%" y="485" width="0.0341%" height="15" fill="rgb(51,166,166)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="18.4440%" y="469" width="0.0341%" height="15" fill="rgb(243,143,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="18.4440%" y="453" width="0.0341%" height="15" fill="rgb(214,114,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="18.4440%" y="437" width="0.0341%" height="15" fill="rgb(218,118,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.03%)</title><rect x="18.4440%" y="421" width="0.0341%" height="15" fill="rgb(93,205,205)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="18.4440%" y="405" width="0.0341%" height="15" fill="rgb(222,122,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="18.4440%" y="389" width="0.0341%" height="15" fill="rgb(242,142,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="18.4440%" y="373" width="0.0341%" height="15" fill="rgb(216,116,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="18.4440%" y="357" width="0.0341%" height="15" fill="rgb(243,143,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="18.4440%" y="341" width="0.0341%" height="15" fill="rgb(233,133,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="18.4440%" y="325" width="0.0341%" height="15" fill="rgb(196,96,0)" fg:x="1081" fg:w="2"/><text x="18.6940%" y="335.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="18.4610%" y="309" width="0.0171%" height="15" fill="rgb(225,225,68)" fg:x="1082" fg:w="1"/><text x="18.7110%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.4781%" y="485" width="0.0171%" height="15" fill="rgb(229,129,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="18.4781%" y="469" width="0.0171%" height="15" fill="rgb(216,116,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="18.4781%" y="453" width="0.0171%" height="15" fill="rgb(240,140,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="18.4781%" y="437" width="0.0171%" height="15" fill="rgb(92,204,204)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="447.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.4781%" y="421" width="0.0171%" height="15" fill="rgb(59,173,173)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.4781%" y="405" width="0.0171%" height="15" fill="rgb(236,136,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="18.4781%" y="389" width="0.0171%" height="15" fill="rgb(248,148,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="18.4781%" y="373" width="0.0171%" height="15" fill="rgb(223,123,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="18.4781%" y="357" width="0.0171%" height="15" fill="rgb(78,190,190)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.4781%" y="341" width="0.0171%" height="15" fill="rgb(229,129,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.4781%" y="325" width="0.0171%" height="15" fill="rgb(213,113,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="18.4781%" y="309" width="0.0171%" height="15" fill="rgb(243,143,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="18.4781%" y="293" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="18.4781%" y="277" width="0.0171%" height="15" fill="rgb(214,114,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="18.4781%" y="261" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="271.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="18.4781%" y="245" width="0.0171%" height="15" fill="rgb(181,181,52)" fg:x="1083" fg:w="1"/><text x="18.7281%" y="255.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (8 samples, 0.14%)</title><rect x="18.4951%" y="485" width="0.1365%" height="15" fill="rgb(64,178,178)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (8 samples, 0.14%)</title><rect x="18.4951%" y="469" width="0.1365%" height="15" fill="rgb(251,151,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.14%)</title><rect x="18.4951%" y="453" width="0.1365%" height="15" fill="rgb(246,146,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.14%)</title><rect x="18.4951%" y="437" width="0.1365%" height="15" fill="rgb(222,122,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.14%)</title><rect x="18.4951%" y="421" width="0.1365%" height="15" fill="rgb(210,110,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.14%)</title><rect x="18.4951%" y="405" width="0.1365%" height="15" fill="rgb(229,129,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.14%)</title><rect x="18.4951%" y="389" width="0.1365%" height="15" fill="rgb(195,95,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.14%)</title><rect x="18.4951%" y="373" width="0.1365%" height="15" fill="rgb(246,146,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.14%)</title><rect x="18.4951%" y="357" width="0.1365%" height="15" fill="rgb(221,121,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.14%)</title><rect x="18.4951%" y="341" width="0.1365%" height="15" fill="rgb(224,124,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="351.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.14%)</title><rect x="18.4951%" y="325" width="0.1365%" height="15" fill="rgb(215,115,0)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="335.50"></text></g><g><title>realloc (8 samples, 0.14%)</title><rect x="18.4951%" y="309" width="0.1365%" height="15" fill="rgb(211,211,63)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="319.50"></text></g><g><title>[libc.so.6] (8 samples, 0.14%)</title><rect x="18.4951%" y="293" width="0.1365%" height="15" fill="rgb(210,210,62)" fg:x="1084" fg:w="8"/><text x="18.7451%" y="303.50"></text></g><g><title>[libc.so.6] (7 samples, 0.12%)</title><rect x="18.5122%" y="277" width="0.1194%" height="15" fill="rgb(213,213,63)" fg:x="1085" fg:w="7"/><text x="18.7622%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.6146%" y="261" width="0.0171%" height="15" fill="rgb(187,187,54)" fg:x="1091" fg:w="1"/><text x="18.8646%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="18.6316%" y="421" width="0.0171%" height="15" fill="rgb(85,197,197)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="18.6316%" y="405" width="0.0171%" height="15" fill="rgb(212,112,0)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="18.6316%" y="389" width="0.0171%" height="15" fill="rgb(219,119,0)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="399.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="18.6316%" y="373" width="0.0171%" height="15" fill="rgb(96,207,207)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="18.6316%" y="357" width="0.0171%" height="15" fill="rgb(192,92,0)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="367.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="18.6316%" y="341" width="0.0171%" height="15" fill="rgb(220,120,0)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="18.6316%" y="325" width="0.0171%" height="15" fill="rgb(252,152,0)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.6316%" y="309" width="0.0171%" height="15" fill="rgb(204,104,0)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.6316%" y="293" width="0.0171%" height="15" fill="rgb(234,134,0)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.6316%" y="277" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="1092" fg:w="1"/><text x="18.8816%" y="287.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (2 samples, 0.03%)</title><rect x="18.6316%" y="485" width="0.0341%" height="15" fill="rgb(55,169,169)" fg:x="1092" fg:w="2"/><text x="18.8816%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.03%)</title><rect x="18.6316%" y="469" width="0.0341%" height="15" fill="rgb(202,102,0)" fg:x="1092" fg:w="2"/><text x="18.8816%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.03%)</title><rect x="18.6316%" y="453" width="0.0341%" height="15" fill="rgb(77,189,189)" fg:x="1092" fg:w="2"/><text x="18.8816%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.03%)</title><rect x="18.6316%" y="437" width="0.0341%" height="15" fill="rgb(71,184,184)" fg:x="1092" fg:w="2"/><text x="18.8816%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="18.6487%" y="421" width="0.0171%" height="15" fill="rgb(58,173,173)" fg:x="1093" fg:w="1"/><text x="18.8987%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="18.6487%" y="405" width="0.0171%" height="15" fill="rgb(105,215,215)" fg:x="1093" fg:w="1"/><text x="18.8987%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="18.6487%" y="389" width="0.0171%" height="15" fill="rgb(90,201,201)" fg:x="1093" fg:w="1"/><text x="18.8987%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="18.6658%" y="485" width="0.0171%" height="15" fill="rgb(208,108,0)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="18.6658%" y="469" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="18.6658%" y="453" width="0.0171%" height="15" fill="rgb(229,129,0)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="18.6658%" y="437" width="0.0171%" height="15" fill="rgb(254,154,0)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="18.6658%" y="421" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="18.6658%" y="405" width="0.0171%" height="15" fill="rgb(236,136,0)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="18.6658%" y="389" width="0.0171%" height="15" fill="rgb(194,94,0)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="399.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="18.6658%" y="373" width="0.0171%" height="15" fill="rgb(183,183,53)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.6658%" y="357" width="0.0171%" height="15" fill="rgb(218,218,65)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.6658%" y="341" width="0.0171%" height="15" fill="rgb(184,184,53)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.6658%" y="325" width="0.0171%" height="15" fill="rgb(201,201,59)" fg:x="1094" fg:w="1"/><text x="18.9158%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.02%)</title><rect x="18.6828%" y="485" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="1095" fg:w="1"/><text x="18.9328%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="18.6828%" y="469" width="0.0171%" height="15" fill="rgb(219,119,0)" fg:x="1095" fg:w="1"/><text x="18.9328%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="18.6828%" y="453" width="0.0171%" height="15" fill="rgb(253,153,0)" fg:x="1095" fg:w="1"/><text x="18.9328%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.6828%" y="437" width="0.0171%" height="15" fill="rgb(254,154,0)" fg:x="1095" fg:w="1"/><text x="18.9328%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="18.6828%" y="421" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="1095" fg:w="1"/><text x="18.9328%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="18.6828%" y="405" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="1095" fg:w="1"/><text x="18.9328%" y="415.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="18.6828%" y="389" width="0.0171%" height="15" fill="rgb(221,221,67)" fg:x="1095" fg:w="1"/><text x="18.9328%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.6828%" y="373" width="0.0171%" height="15" fill="rgb(197,197,58)" fg:x="1095" fg:w="1"/><text x="18.9328%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="18.6999%" y="485" width="0.0171%" height="15" fill="rgb(201,101,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.6999%" y="469" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.02%)</title><rect x="18.6999%" y="453" width="0.0171%" height="15" fill="rgb(231,131,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.02%)</title><rect x="18.6999%" y="437" width="0.0171%" height="15" fill="rgb(198,98,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="18.6999%" y="421" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="18.6999%" y="405" width="0.0171%" height="15" fill="rgb(250,150,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.6999%" y="389" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="18.6999%" y="373" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="18.6999%" y="357" width="0.0171%" height="15" fill="rgb(229,129,0)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="367.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="18.6999%" y="341" width="0.0171%" height="15" fill="rgb(215,215,64)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.6999%" y="325" width="0.0171%" height="15" fill="rgb(203,203,60)" fg:x="1096" fg:w="1"/><text x="18.9499%" y="335.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (17 samples, 0.29%)</title><rect x="18.4440%" y="501" width="0.2901%" height="15" fill="rgb(71,185,185)" fg:x="1081" fg:w="17"/><text x="18.6940%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.02%)</title><rect x="18.7169%" y="485" width="0.0171%" height="15" fill="rgb(201,101,0)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.7169%" y="469" width="0.0171%" height="15" fill="rgb(223,123,0)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="18.7169%" y="453" width="0.0171%" height="15" fill="rgb(236,136,0)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.7169%" y="437" width="0.0171%" height="15" fill="rgb(79,192,192)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.02%)</title><rect x="18.7169%" y="421" width="0.0171%" height="15" fill="rgb(192,92,0)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.7169%" y="405" width="0.0171%" height="15" fill="rgb(199,99,0)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="18.7169%" y="389" width="0.0171%" height="15" fill="rgb(215,115,0)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="18.7169%" y="373" width="0.0171%" height="15" fill="rgb(248,148,0)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="383.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="18.7169%" y="357" width="0.0171%" height="15" fill="rgb(212,212,63)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.7169%" y="341" width="0.0171%" height="15" fill="rgb(221,221,66)" fg:x="1097" fg:w="1"/><text x="18.9669%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="18.7340%" y="501" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="1098" fg:w="1"/><text x="18.9840%" y="511.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_and_score_initial_population (45 samples, 0.77%)</title><rect x="18.0003%" y="549" width="0.7678%" height="15" fill="rgb(68,181,181)" fg:x="1055" fg:w="45"/><text x="18.2503%" y="559.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (44 samples, 0.75%)</title><rect x="18.0174%" y="533" width="0.7507%" height="15" fill="rgb(57,171,171)" fg:x="1056" fg:w="44"/><text x="18.2674%" y="543.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (42 samples, 0.72%)</title><rect x="18.0515%" y="517" width="0.7166%" height="15" fill="rgb(77,190,190)" fg:x="1058" fg:w="42"/><text x="18.3015%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="18.7511%" y="501" width="0.0171%" height="15" fill="rgb(252,152,0)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.7511%" y="485" width="0.0171%" height="15" fill="rgb(240,140,0)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="18.7511%" y="469" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.7511%" y="453" width="0.0171%" height="15" fill="rgb(62,176,176)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="18.7511%" y="437" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.7511%" y="421" width="0.0171%" height="15" fill="rgb(233,133,0)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="18.7511%" y="405" width="0.0171%" height="15" fill="rgb(232,132,0)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="18.7511%" y="389" width="0.0171%" height="15" fill="rgb(247,147,0)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="399.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="18.7511%" y="373" width="0.0171%" height="15" fill="rgb(210,210,62)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.7511%" y="357" width="0.0171%" height="15" fill="rgb(206,206,61)" fg:x="1099" fg:w="1"/><text x="19.0011%" y="367.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (12 samples, 0.20%)</title><rect x="18.7681%" y="453" width="0.2047%" height="15" fill="rgb(72,185,185)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="463.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.20%)</title><rect x="18.7681%" y="437" width="0.2047%" height="15" fill="rgb(109,219,219)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.20%)</title><rect x="18.7681%" y="421" width="0.2047%" height="15" fill="rgb(239,139,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.20%)</title><rect x="18.7681%" y="405" width="0.2047%" height="15" fill="rgb(237,137,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.20%)</title><rect x="18.7681%" y="389" width="0.2047%" height="15" fill="rgb(238,138,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.20%)</title><rect x="18.7681%" y="373" width="0.2047%" height="15" fill="rgb(87,198,198)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.20%)</title><rect x="18.7681%" y="357" width="0.2047%" height="15" fill="rgb(242,142,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.20%)</title><rect x="18.7681%" y="341" width="0.2047%" height="15" fill="rgb(208,108,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.20%)</title><rect x="18.7681%" y="325" width="0.2047%" height="15" fill="rgb(251,151,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.20%)</title><rect x="18.7681%" y="309" width="0.2047%" height="15" fill="rgb(243,143,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.20%)</title><rect x="18.7681%" y="293" width="0.2047%" height="15" fill="rgb(212,112,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="303.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.20%)</title><rect x="18.7681%" y="277" width="0.2047%" height="15" fill="rgb(192,92,0)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="287.50"></text></g><g><title>malloc (12 samples, 0.20%)</title><rect x="18.7681%" y="261" width="0.2047%" height="15" fill="rgb(220,220,66)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="271.50"></text></g><g><title>[libc.so.6] (12 samples, 0.20%)</title><rect x="18.7681%" y="245" width="0.2047%" height="15" fill="rgb(183,183,53)" fg:x="1100" fg:w="12"/><text x="19.0181%" y="255.50"></text></g><g><title>[libc.so.6] (5 samples, 0.09%)</title><rect x="18.8876%" y="229" width="0.0853%" height="15" fill="rgb(177,177,50)" fg:x="1107" fg:w="5"/><text x="19.1376%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.9558%" y="213" width="0.0171%" height="15" fill="rgb(200,200,59)" fg:x="1111" fg:w="1"/><text x="19.2058%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.22%)</title><rect x="18.7681%" y="517" width="0.2218%" height="15" fill="rgb(230,130,0)" fg:x="1100" fg:w="13"/><text x="19.0181%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.22%)</title><rect x="18.7681%" y="501" width="0.2218%" height="15" fill="rgb(193,93,0)" fg:x="1100" fg:w="13"/><text x="19.0181%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.22%)</title><rect x="18.7681%" y="485" width="0.2218%" height="15" fill="rgb(220,120,0)" fg:x="1100" fg:w="13"/><text x="19.0181%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.22%)</title><rect x="18.7681%" y="469" width="0.2218%" height="15" fill="rgb(85,197,197)" fg:x="1100" fg:w="13"/><text x="19.0181%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.9729%" y="453" width="0.0171%" height="15" fill="rgb(247,147,0)" fg:x="1112" fg:w="1"/><text x="19.2229%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.9729%" y="437" width="0.0171%" height="15" fill="rgb(212,112,0)" fg:x="1112" fg:w="1"/><text x="19.2229%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="18.9729%" y="421" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="1112" fg:w="1"/><text x="19.2229%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="18.9729%" y="405" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="1112" fg:w="1"/><text x="19.2229%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="18.9729%" y="389" width="0.0171%" height="15" fill="rgb(224,124,0)" fg:x="1112" fg:w="1"/><text x="19.2229%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="18.9729%" y="373" width="0.0171%" height="15" fill="rgb(231,131,0)" fg:x="1112" fg:w="1"/><text x="19.2229%" y="383.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="18.9729%" y="357" width="0.0171%" height="15" fill="rgb(217,217,65)" fg:x="1112" fg:w="1"/><text x="19.2229%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="19.0070%" y="277" width="0.0341%" height="15" fill="rgb(240,140,0)" fg:x="1114" fg:w="2"/><text x="19.2570%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="19.0070%" y="261" width="0.0341%" height="15" fill="rgb(209,109,0)" fg:x="1114" fg:w="2"/><text x="19.2570%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="19.0070%" y="245" width="0.0341%" height="15" fill="rgb(228,128,0)" fg:x="1114" fg:w="2"/><text x="19.2570%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="19.0070%" y="229" width="0.0341%" height="15" fill="rgb(208,108,0)" fg:x="1114" fg:w="2"/><text x="19.2570%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="19.0070%" y="213" width="0.0341%" height="15" fill="rgb(243,143,0)" fg:x="1114" fg:w="2"/><text x="19.2570%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="19.0070%" y="197" width="0.0341%" height="15" fill="rgb(231,131,0)" fg:x="1114" fg:w="2"/><text x="19.2570%" y="207.50"></text></g><g><title>malloc (2 samples, 0.03%)</title><rect x="19.0070%" y="181" width="0.0341%" height="15" fill="rgb(182,182,52)" fg:x="1114" fg:w="2"/><text x="19.2570%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="19.0070%" y="165" width="0.0341%" height="15" fill="rgb(220,220,66)" fg:x="1114" fg:w="2"/><text x="19.2570%" y="175.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (4 samples, 0.07%)</title><rect x="19.0070%" y="357" width="0.0682%" height="15" fill="rgb(59,173,173)" fg:x="1114" fg:w="4"/><text x="19.2570%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.07%)</title><rect x="19.0070%" y="341" width="0.0682%" height="15" fill="rgb(215,115,0)" fg:x="1114" fg:w="4"/><text x="19.2570%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.07%)</title><rect x="19.0070%" y="325" width="0.0682%" height="15" fill="rgb(208,108,0)" fg:x="1114" fg:w="4"/><text x="19.2570%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.07%)</title><rect x="19.0070%" y="309" width="0.0682%" height="15" fill="rgb(193,93,0)" fg:x="1114" fg:w="4"/><text x="19.2570%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.07%)</title><rect x="19.0070%" y="293" width="0.0682%" height="15" fill="rgb(67,181,181)" fg:x="1114" fg:w="4"/><text x="19.2570%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.03%)</title><rect x="19.0411%" y="277" width="0.0341%" height="15" fill="rgb(231,131,0)" fg:x="1116" fg:w="2"/><text x="19.2911%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="19.0411%" y="261" width="0.0341%" height="15" fill="rgb(198,98,0)" fg:x="1116" fg:w="2"/><text x="19.2911%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="19.0411%" y="245" width="0.0341%" height="15" fill="rgb(224,224,68)" fg:x="1116" fg:w="2"/><text x="19.2911%" y="255.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (19 samples, 0.32%)</title><rect x="18.7681%" y="533" width="0.3242%" height="15" fill="rgb(64,178,178)" fg:x="1100" fg:w="19"/><text x="19.0181%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.10%)</title><rect x="18.9899%" y="517" width="0.1024%" height="15" fill="rgb(211,111,0)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.10%)</title><rect x="18.9899%" y="501" width="0.1024%" height="15" fill="rgb(55,170,170)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.10%)</title><rect x="18.9899%" y="485" width="0.1024%" height="15" fill="rgb(52,167,167)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6 samples, 0.10%)</title><rect x="18.9899%" y="469" width="0.1024%" height="15" fill="rgb(76,189,189)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6 samples, 0.10%)</title><rect x="18.9899%" y="453" width="0.1024%" height="15" fill="rgb(56,171,171)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="463.50"></text></g><g><title>core::clone::Clone::clone (6 samples, 0.10%)</title><rect x="18.9899%" y="437" width="0.1024%" height="15" fill="rgb(236,136,0)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.10%)</title><rect x="18.9899%" y="421" width="0.1024%" height="15" fill="rgb(247,147,0)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.10%)</title><rect x="18.9899%" y="405" width="0.1024%" height="15" fill="rgb(251,151,0)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.10%)</title><rect x="18.9899%" y="389" width="0.1024%" height="15" fill="rgb(199,99,0)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.10%)</title><rect x="18.9899%" y="373" width="0.1024%" height="15" fill="rgb(83,195,195)" fg:x="1113" fg:w="6"/><text x="19.2399%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.0752%" y="357" width="0.0171%" height="15" fill="rgb(228,128,0)" fg:x="1118" fg:w="1"/><text x="19.3252%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.0752%" y="341" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="1118" fg:w="1"/><text x="19.3252%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="19.0752%" y="325" width="0.0171%" height="15" fill="rgb(211,111,0)" fg:x="1118" fg:w="1"/><text x="19.3252%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.0752%" y="309" width="0.0171%" height="15" fill="rgb(208,108,0)" fg:x="1118" fg:w="1"/><text x="19.3252%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.0752%" y="293" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="1118" fg:w="1"/><text x="19.3252%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.0752%" y="277" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="1118" fg:w="1"/><text x="19.3252%" y="287.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.0752%" y="261" width="0.0171%" height="15" fill="rgb(214,214,64)" fg:x="1118" fg:w="1"/><text x="19.3252%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.0752%" y="245" width="0.0171%" height="15" fill="rgb(227,227,69)" fg:x="1118" fg:w="1"/><text x="19.3252%" y="255.50"></text></g><g><title>&lt;alc::keyboard::key::KeycodeKey as alc::keyboard::key::KeyValue&gt;::value (1 samples, 0.02%)</title><rect x="19.0923%" y="501" width="0.0171%" height="15" fill="rgb(104,215,215)" fg:x="1119" fg:w="1"/><text x="19.3423%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="19.1094%" y="501" width="0.0171%" height="15" fill="rgb(202,102,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="19.1094%" y="485" width="0.0171%" height="15" fill="rgb(91,203,203)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="19.1094%" y="469" width="0.0171%" height="15" fill="rgb(70,183,183)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.02%)</title><rect x="19.1094%" y="453" width="0.0171%" height="15" fill="rgb(68,181,181)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.02%)</title><rect x="19.1094%" y="437" width="0.0171%" height="15" fill="rgb(72,185,185)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="447.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.02%)</title><rect x="19.1094%" y="421" width="0.0171%" height="15" fill="rgb(222,122,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="19.1094%" y="405" width="0.0171%" height="15" fill="rgb(207,107,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="19.1094%" y="389" width="0.0171%" height="15" fill="rgb(204,104,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="19.1094%" y="373" width="0.0171%" height="15" fill="rgb(206,106,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="19.1094%" y="357" width="0.0171%" height="15" fill="rgb(80,192,192)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="367.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="19.1094%" y="341" width="0.0171%" height="15" fill="rgb(89,201,201)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="19.1094%" y="325" width="0.0171%" height="15" fill="rgb(203,103,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="19.1094%" y="309" width="0.0171%" height="15" fill="rgb(219,119,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="19.1094%" y="293" width="0.0171%" height="15" fill="rgb(198,98,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="19.1094%" y="277" width="0.0171%" height="15" fill="rgb(80,193,193)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.1094%" y="261" width="0.0171%" height="15" fill="rgb(195,95,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.1094%" y="245" width="0.0171%" height="15" fill="rgb(227,127,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="19.1094%" y="229" width="0.0171%" height="15" fill="rgb(191,91,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.1094%" y="213" width="0.0171%" height="15" fill="rgb(190,90,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.1094%" y="197" width="0.0171%" height="15" fill="rgb(213,113,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.1094%" y="181" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="191.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.1094%" y="165" width="0.0171%" height="15" fill="rgb(186,186,54)" fg:x="1120" fg:w="1"/><text x="19.3594%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (2 samples, 0.03%)</title><rect x="19.1264%" y="501" width="0.0341%" height="15" fill="rgb(234,134,0)" fg:x="1121" fg:w="2"/><text x="19.3764%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.03%)</title><rect x="19.1264%" y="485" width="0.0341%" height="15" fill="rgb(249,149,0)" fg:x="1121" fg:w="2"/><text x="19.3764%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.03%)</title><rect x="19.1264%" y="469" width="0.0341%" height="15" fill="rgb(65,179,179)" fg:x="1121" fg:w="2"/><text x="19.3764%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.03%)</title><rect x="19.1264%" y="453" width="0.0341%" height="15" fill="rgb(71,184,184)" fg:x="1121" fg:w="2"/><text x="19.3764%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="19.1435%" y="437" width="0.0171%" height="15" fill="rgb(92,204,204)" fg:x="1122" fg:w="1"/><text x="19.3935%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="19.1435%" y="421" width="0.0171%" height="15" fill="rgb(62,176,176)" fg:x="1122" fg:w="1"/><text x="19.3935%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="19.1435%" y="405" width="0.0171%" height="15" fill="rgb(83,195,195)" fg:x="1122" fg:w="1"/><text x="19.3935%" y="415.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="19.1435%" y="389" width="0.0171%" height="15" fill="rgb(99,210,210)" fg:x="1122" fg:w="1"/><text x="19.3935%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="19.1606%" y="501" width="0.0171%" height="15" fill="rgb(229,129,0)" fg:x="1123" fg:w="1"/><text x="19.4106%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="19.1606%" y="485" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="1123" fg:w="1"/><text x="19.4106%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="19.1606%" y="469" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="1123" fg:w="1"/><text x="19.4106%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="19.1606%" y="453" width="0.0171%" height="15" fill="rgb(253,153,0)" fg:x="1123" fg:w="1"/><text x="19.4106%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="501" width="0.0341%" height="15" fill="rgb(224,124,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="485" width="0.0341%" height="15" fill="rgb(209,109,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="469" width="0.0341%" height="15" fill="rgb(225,125,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="19.1776%" y="453" width="0.0341%" height="15" fill="rgb(75,188,188)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.03%)</title><rect x="19.1776%" y="437" width="0.0341%" height="15" fill="rgb(76,189,189)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.03%)</title><rect x="19.1776%" y="421" width="0.0341%" height="15" fill="rgb(77,189,189)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.03%)</title><rect x="19.1776%" y="405" width="0.0341%" height="15" fill="rgb(100,211,211)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.03%)</title><rect x="19.1776%" y="389" width="0.0341%" height="15" fill="rgb(251,151,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="373" width="0.0341%" height="15" fill="rgb(231,131,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="357" width="0.0341%" height="15" fill="rgb(193,93,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="19.1776%" y="341" width="0.0341%" height="15" fill="rgb(214,114,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="325" width="0.0341%" height="15" fill="rgb(218,118,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="309" width="0.0341%" height="15" fill="rgb(218,118,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="293" width="0.0341%" height="15" fill="rgb(237,137,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.03%)</title><rect x="19.1776%" y="277" width="0.0341%" height="15" fill="rgb(200,100,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="19.1776%" y="261" width="0.0341%" height="15" fill="rgb(241,141,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="19.1776%" y="245" width="0.0341%" height="15" fill="rgb(240,140,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="19.1776%" y="229" width="0.0341%" height="15" fill="rgb(229,129,0)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="239.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="19.1776%" y="213" width="0.0341%" height="15" fill="rgb(223,223,67)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="19.1776%" y="197" width="0.0341%" height="15" fill="rgb(186,186,54)" fg:x="1124" fg:w="2"/><text x="19.4276%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.02%)</title><rect x="19.2117%" y="389" width="0.0171%" height="15" fill="rgb(56,170,170)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.02%)</title><rect x="19.2117%" y="373" width="0.0171%" height="15" fill="rgb(52,167,167)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="19.2117%" y="357" width="0.0171%" height="15" fill="rgb(94,206,206)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="19.2117%" y="341" width="0.0171%" height="15" fill="rgb(238,138,0)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="19.2117%" y="325" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="19.2117%" y="309" width="0.0171%" height="15" fill="rgb(95,206,206)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="19.2117%" y="293" width="0.0171%" height="15" fill="rgb(214,114,0)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="303.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="19.2117%" y="277" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="19.2117%" y="261" width="0.0171%" height="15" fill="rgb(202,102,0)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.2117%" y="245" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.2117%" y="229" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.2117%" y="213" width="0.0171%" height="15" fill="rgb(215,115,0)" fg:x="1126" fg:w="1"/><text x="19.4617%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.03%)</title><rect x="19.2117%" y="469" width="0.0341%" height="15" fill="rgb(97,208,208)" fg:x="1126" fg:w="2"/><text x="19.4617%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="19.2117%" y="453" width="0.0341%" height="15" fill="rgb(87,199,199)" fg:x="1126" fg:w="2"/><text x="19.4617%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.03%)</title><rect x="19.2117%" y="437" width="0.0341%" height="15" fill="rgb(66,180,180)" fg:x="1126" fg:w="2"/><text x="19.4617%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.03%)</title><rect x="19.2117%" y="421" width="0.0341%" height="15" fill="rgb(78,191,191)" fg:x="1126" fg:w="2"/><text x="19.4617%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.03%)</title><rect x="19.2117%" y="405" width="0.0341%" height="15" fill="rgb(80,193,193)" fg:x="1126" fg:w="2"/><text x="19.4617%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.02%)</title><rect x="19.2288%" y="389" width="0.0171%" height="15" fill="rgb(56,171,171)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.02%)</title><rect x="19.2288%" y="373" width="0.0171%" height="15" fill="rgb(74,187,187)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.02%)</title><rect x="19.2288%" y="357" width="0.0171%" height="15" fill="rgb(104,215,215)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="367.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="19.2288%" y="341" width="0.0171%" height="15" fill="rgb(68,181,181)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.2288%" y="325" width="0.0171%" height="15" fill="rgb(231,131,0)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.2288%" y="309" width="0.0171%" height="15" fill="rgb(222,122,0)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.2288%" y="293" width="0.0171%" height="15" fill="rgb(191,91,0)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="303.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.2288%" y="277" width="0.0171%" height="15" fill="rgb(213,213,63)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.2288%" y="261" width="0.0171%" height="15" fill="rgb(192,192,56)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.2288%" y="245" width="0.0171%" height="15" fill="rgb(203,203,60)" fg:x="1127" fg:w="1"/><text x="19.4788%" y="255.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (11 samples, 0.19%)</title><rect x="19.0923%" y="517" width="0.1877%" height="15" fill="rgb(71,185,185)" fg:x="1119" fg:w="11"/><text x="19.3423%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (4 samples, 0.07%)</title><rect x="19.2117%" y="501" width="0.0682%" height="15" fill="rgb(191,91,0)" fg:x="1126" fg:w="4"/><text x="19.4617%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.07%)</title><rect x="19.2117%" y="485" width="0.0682%" height="15" fill="rgb(90,202,202)" fg:x="1126" fg:w="4"/><text x="19.4617%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="19.2459%" y="469" width="0.0341%" height="15" fill="rgb(57,171,171)" fg:x="1128" fg:w="2"/><text x="19.4959%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="19.2459%" y="453" width="0.0341%" height="15" fill="rgb(216,116,0)" fg:x="1128" fg:w="2"/><text x="19.4959%" y="463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.03%)</title><rect x="19.2459%" y="437" width="0.0341%" height="15" fill="rgb(221,121,0)" fg:x="1128" fg:w="2"/><text x="19.4959%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.03%)</title><rect x="19.2459%" y="421" width="0.0341%" height="15" fill="rgb(190,90,0)" fg:x="1128" fg:w="2"/><text x="19.4959%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.03%)</title><rect x="19.2459%" y="405" width="0.0341%" height="15" fill="rgb(248,148,0)" fg:x="1128" fg:w="2"/><text x="19.4959%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="19.2629%" y="389" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="1129" fg:w="1"/><text x="19.5129%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="19.2629%" y="373" width="0.0171%" height="15" fill="rgb(213,113,0)" fg:x="1129" fg:w="1"/><text x="19.5129%" y="383.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::replace (12 samples, 0.20%)</title><rect x="19.0923%" y="533" width="0.2047%" height="15" fill="rgb(93,204,204)" fg:x="1119" fg:w="12"/><text x="19.3423%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.02%)</title><rect x="19.2800%" y="517" width="0.0171%" height="15" fill="rgb(242,142,0)" fg:x="1130" fg:w="1"/><text x="19.5300%" y="527.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (10 samples, 0.17%)</title><rect x="19.2970%" y="437" width="0.1706%" height="15" fill="rgb(66,179,179)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="447.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.17%)</title><rect x="19.2970%" y="421" width="0.1706%" height="15" fill="rgb(69,183,183)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.17%)</title><rect x="19.2970%" y="405" width="0.1706%" height="15" fill="rgb(219,119,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.17%)</title><rect x="19.2970%" y="389" width="0.1706%" height="15" fill="rgb(245,145,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.17%)</title><rect x="19.2970%" y="373" width="0.1706%" height="15" fill="rgb(233,133,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.17%)</title><rect x="19.2970%" y="357" width="0.1706%" height="15" fill="rgb(79,192,192)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.17%)</title><rect x="19.2970%" y="341" width="0.1706%" height="15" fill="rgb(230,130,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.17%)</title><rect x="19.2970%" y="325" width="0.1706%" height="15" fill="rgb(221,121,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.17%)</title><rect x="19.2970%" y="309" width="0.1706%" height="15" fill="rgb(217,117,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.17%)</title><rect x="19.2970%" y="293" width="0.1706%" height="15" fill="rgb(240,140,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.17%)</title><rect x="19.2970%" y="277" width="0.1706%" height="15" fill="rgb(211,111,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="287.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.17%)</title><rect x="19.2970%" y="261" width="0.1706%" height="15" fill="rgb(209,109,0)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="271.50"></text></g><g><title>malloc (10 samples, 0.17%)</title><rect x="19.2970%" y="245" width="0.1706%" height="15" fill="rgb(197,197,58)" fg:x="1131" fg:w="10"/><text x="19.5470%" y="255.50"></text></g><g><title>[libc.so.6] (9 samples, 0.15%)</title><rect x="19.3141%" y="229" width="0.1536%" height="15" fill="rgb(210,210,63)" fg:x="1132" fg:w="9"/><text x="19.5641%" y="239.50"></text></g><g><title>[libc.so.6] (8 samples, 0.14%)</title><rect x="19.3312%" y="213" width="0.1365%" height="15" fill="rgb(188,188,54)" fg:x="1133" fg:w="8"/><text x="19.5812%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.19%)</title><rect x="19.2970%" y="501" width="0.1877%" height="15" fill="rgb(240,140,0)" fg:x="1131" fg:w="11"/><text x="19.5470%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.19%)</title><rect x="19.2970%" y="485" width="0.1877%" height="15" fill="rgb(237,137,0)" fg:x="1131" fg:w="11"/><text x="19.5470%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.19%)</title><rect x="19.2970%" y="469" width="0.1877%" height="15" fill="rgb(210,110,0)" fg:x="1131" fg:w="11"/><text x="19.5470%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.19%)</title><rect x="19.2970%" y="453" width="0.1877%" height="15" fill="rgb(103,213,213)" fg:x="1131" fg:w="11"/><text x="19.5470%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.4677%" y="437" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="1141" fg:w="1"/><text x="19.7177%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.4677%" y="421" width="0.0171%" height="15" fill="rgb(218,118,0)" fg:x="1141" fg:w="1"/><text x="19.7177%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="19.4677%" y="405" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="1141" fg:w="1"/><text x="19.7177%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.4677%" y="389" width="0.0171%" height="15" fill="rgb(242,142,0)" fg:x="1141" fg:w="1"/><text x="19.7177%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.4677%" y="373" width="0.0171%" height="15" fill="rgb(228,128,0)" fg:x="1141" fg:w="1"/><text x="19.7177%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.4677%" y="357" width="0.0171%" height="15" fill="rgb(250,150,0)" fg:x="1141" fg:w="1"/><text x="19.7177%" y="367.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.4677%" y="341" width="0.0171%" height="15" fill="rgb(202,202,60)" fg:x="1141" fg:w="1"/><text x="19.7177%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.4677%" y="325" width="0.0171%" height="15" fill="rgb(229,229,69)" fg:x="1141" fg:w="1"/><text x="19.7177%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="19.4847%" y="389" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="1142" fg:w="1"/><text x="19.7347%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.10%)</title><rect x="19.5189%" y="261" width="0.1024%" height="15" fill="rgb(208,108,0)" fg:x="1144" fg:w="6"/><text x="19.7689%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.10%)</title><rect x="19.5189%" y="245" width="0.1024%" height="15" fill="rgb(217,117,0)" fg:x="1144" fg:w="6"/><text x="19.7689%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.10%)</title><rect x="19.5189%" y="229" width="0.1024%" height="15" fill="rgb(250,150,0)" fg:x="1144" fg:w="6"/><text x="19.7689%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.09%)</title><rect x="19.5359%" y="213" width="0.0853%" height="15" fill="rgb(238,138,0)" fg:x="1145" fg:w="5"/><text x="19.7859%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.09%)</title><rect x="19.5359%" y="197" width="0.0853%" height="15" fill="rgb(199,99,0)" fg:x="1145" fg:w="5"/><text x="19.7859%" y="207.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.09%)</title><rect x="19.5359%" y="181" width="0.0853%" height="15" fill="rgb(238,138,0)" fg:x="1145" fg:w="5"/><text x="19.7859%" y="191.50"></text></g><g><title>malloc (3 samples, 0.05%)</title><rect x="19.5700%" y="165" width="0.0512%" height="15" fill="rgb(183,183,53)" fg:x="1147" fg:w="3"/><text x="19.8200%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.6042%" y="149" width="0.0171%" height="15" fill="rgb(177,177,50)" fg:x="1149" fg:w="1"/><text x="19.8542%" y="159.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (7 samples, 0.12%)</title><rect x="19.5189%" y="341" width="0.1194%" height="15" fill="rgb(107,217,217)" fg:x="1144" fg:w="7"/><text x="19.7689%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.12%)</title><rect x="19.5189%" y="325" width="0.1194%" height="15" fill="rgb(223,123,0)" fg:x="1144" fg:w="7"/><text x="19.7689%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.12%)</title><rect x="19.5189%" y="309" width="0.1194%" height="15" fill="rgb(217,117,0)" fg:x="1144" fg:w="7"/><text x="19.7689%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.12%)</title><rect x="19.5189%" y="293" width="0.1194%" height="15" fill="rgb(206,106,0)" fg:x="1144" fg:w="7"/><text x="19.7689%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.12%)</title><rect x="19.5189%" y="277" width="0.1194%" height="15" fill="rgb(74,187,187)" fg:x="1144" fg:w="7"/><text x="19.7689%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="19.6212%" y="261" width="0.0171%" height="15" fill="rgb(213,113,0)" fg:x="1150" fg:w="1"/><text x="19.8712%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="19.6212%" y="245" width="0.0171%" height="15" fill="rgb(224,124,0)" fg:x="1150" fg:w="1"/><text x="19.8712%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.09%)</title><rect x="19.6383%" y="341" width="0.0853%" height="15" fill="rgb(203,103,0)" fg:x="1151" fg:w="5"/><text x="19.8883%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.09%)</title><rect x="19.6383%" y="325" width="0.0853%" height="15" fill="rgb(251,151,0)" fg:x="1151" fg:w="5"/><text x="19.8883%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.09%)</title><rect x="19.6383%" y="309" width="0.0853%" height="15" fill="rgb(197,97,0)" fg:x="1151" fg:w="5"/><text x="19.8883%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.09%)</title><rect x="19.6383%" y="293" width="0.0853%" height="15" fill="rgb(204,104,0)" fg:x="1151" fg:w="5"/><text x="19.8883%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.09%)</title><rect x="19.6383%" y="277" width="0.0853%" height="15" fill="rgb(235,135,0)" fg:x="1151" fg:w="5"/><text x="19.8883%" y="287.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.09%)</title><rect x="19.6383%" y="261" width="0.0853%" height="15" fill="rgb(209,109,0)" fg:x="1151" fg:w="5"/><text x="19.8883%" y="271.50"></text></g><g><title>malloc (5 samples, 0.09%)</title><rect x="19.6383%" y="245" width="0.0853%" height="15" fill="rgb(218,218,65)" fg:x="1151" fg:w="5"/><text x="19.8883%" y="255.50"></text></g><g><title>[libc.so.6] (5 samples, 0.09%)</title><rect x="19.6383%" y="229" width="0.0853%" height="15" fill="rgb(204,204,60)" fg:x="1151" fg:w="5"/><text x="19.8883%" y="239.50"></text></g><g><title>core::clone::Clone::clone (15 samples, 0.26%)</title><rect x="19.4847%" y="421" width="0.2559%" height="15" fill="rgb(247,147,0)" fg:x="1142" fg:w="15"/><text x="19.7347%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.26%)</title><rect x="19.4847%" y="405" width="0.2559%" height="15" fill="rgb(229,129,0)" fg:x="1142" fg:w="15"/><text x="19.7347%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.24%)</title><rect x="19.5018%" y="389" width="0.2389%" height="15" fill="rgb(234,134,0)" fg:x="1143" fg:w="14"/><text x="19.7518%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.24%)</title><rect x="19.5018%" y="373" width="0.2389%" height="15" fill="rgb(249,149,0)" fg:x="1143" fg:w="14"/><text x="19.7518%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.24%)</title><rect x="19.5018%" y="357" width="0.2389%" height="15" fill="rgb(80,192,192)" fg:x="1143" fg:w="14"/><text x="19.7518%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="19.7236%" y="341" width="0.0171%" height="15" fill="rgb(192,92,0)" fg:x="1156" fg:w="1"/><text x="19.9736%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (18 samples, 0.31%)</title><rect x="19.4847%" y="453" width="0.3071%" height="15" fill="rgb(68,182,182)" fg:x="1142" fg:w="18"/><text x="19.7347%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (18 samples, 0.31%)</title><rect x="19.4847%" y="437" width="0.3071%" height="15" fill="rgb(91,203,203)" fg:x="1142" fg:w="18"/><text x="19.7347%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.05%)</title><rect x="19.7407%" y="421" width="0.0512%" height="15" fill="rgb(60,174,174)" fg:x="1157" fg:w="3"/><text x="19.9907%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.05%)</title><rect x="19.7407%" y="405" width="0.0512%" height="15" fill="rgb(244,144,0)" fg:x="1157" fg:w="3"/><text x="19.9907%" y="415.50"></text></g><g><title>core::ptr::write (3 samples, 0.05%)</title><rect x="19.7407%" y="389" width="0.0512%" height="15" fill="rgb(195,95,0)" fg:x="1157" fg:w="3"/><text x="19.9907%" y="399.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (30 samples, 0.51%)</title><rect x="19.2970%" y="517" width="0.5119%" height="15" fill="rgb(71,185,185)" fg:x="1131" fg:w="30"/><text x="19.5470%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (19 samples, 0.32%)</title><rect x="19.4847%" y="501" width="0.3242%" height="15" fill="rgb(207,107,0)" fg:x="1142" fg:w="19"/><text x="19.7347%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.32%)</title><rect x="19.4847%" y="485" width="0.3242%" height="15" fill="rgb(64,178,178)" fg:x="1142" fg:w="19"/><text x="19.7347%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.32%)</title><rect x="19.4847%" y="469" width="0.3242%" height="15" fill="rgb(76,188,188)" fg:x="1142" fg:w="19"/><text x="19.7347%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="19.7918%" y="453" width="0.0171%" height="15" fill="rgb(61,175,175)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.02%)</title><rect x="19.7918%" y="437" width="0.0171%" height="15" fill="rgb(102,213,213)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="447.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="19.7918%" y="421" width="0.0171%" height="15" fill="rgb(58,173,173)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.7918%" y="405" width="0.0171%" height="15" fill="rgb(199,99,0)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.7918%" y="389" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.7918%" y="373" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="383.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.7918%" y="357" width="0.0171%" height="15" fill="rgb(175,175,50)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.7918%" y="341" width="0.0171%" height="15" fill="rgb(180,180,52)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.7918%" y="325" width="0.0171%" height="15" fill="rgb(196,196,57)" fg:x="1160" fg:w="1"/><text x="20.0418%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="19.8430%" y="165" width="0.0171%" height="15" fill="rgb(205,205,61)" fg:x="1163" fg:w="1"/><text x="20.0930%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="19.8430%" y="149" width="0.0171%" height="15" fill="rgb(231,131,0)" fg:x="1163" fg:w="1"/><text x="20.0930%" y="159.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="19.8430%" y="341" width="0.0341%" height="15" fill="rgb(80,193,193)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="19.8430%" y="325" width="0.0341%" height="15" fill="rgb(215,115,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="19.8430%" y="309" width="0.0341%" height="15" fill="rgb(236,136,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="19.8430%" y="293" width="0.0341%" height="15" fill="rgb(208,108,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.03%)</title><rect x="19.8430%" y="277" width="0.0341%" height="15" fill="rgb(76,188,188)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="19.8430%" y="261" width="0.0341%" height="15" fill="rgb(225,125,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="19.8430%" y="245" width="0.0341%" height="15" fill="rgb(239,139,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="19.8430%" y="229" width="0.0341%" height="15" fill="rgb(191,91,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="19.8430%" y="213" width="0.0341%" height="15" fill="rgb(203,103,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="19.8430%" y="197" width="0.0341%" height="15" fill="rgb(250,150,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="19.8430%" y="181" width="0.0341%" height="15" fill="rgb(219,119,0)" fg:x="1163" fg:w="2"/><text x="20.0930%" y="191.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.8601%" y="165" width="0.0171%" height="15" fill="rgb(213,213,63)" fg:x="1164" fg:w="1"/><text x="20.1101%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="19.8089%" y="501" width="0.0853%" height="15" fill="rgb(248,148,0)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="19.8089%" y="485" width="0.0853%" height="15" fill="rgb(60,174,174)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="19.8089%" y="469" width="0.0853%" height="15" fill="rgb(64,178,178)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5 samples, 0.09%)</title><rect x="19.8089%" y="453" width="0.0853%" height="15" fill="rgb(102,213,213)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5 samples, 0.09%)</title><rect x="19.8089%" y="437" width="0.0853%" height="15" fill="rgb(76,189,189)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="447.50"></text></g><g><title>core::clone::Clone::clone (5 samples, 0.09%)</title><rect x="19.8089%" y="421" width="0.0853%" height="15" fill="rgb(249,149,0)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="19.8089%" y="405" width="0.0853%" height="15" fill="rgb(219,119,0)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.09%)</title><rect x="19.8089%" y="389" width="0.0853%" height="15" fill="rgb(210,110,0)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.09%)</title><rect x="19.8089%" y="373" width="0.0853%" height="15" fill="rgb(251,151,0)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.09%)</title><rect x="19.8089%" y="357" width="0.0853%" height="15" fill="rgb(93,204,204)" fg:x="1161" fg:w="5"/><text x="20.0589%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.8772%" y="341" width="0.0171%" height="15" fill="rgb(215,115,0)" fg:x="1165" fg:w="1"/><text x="20.1272%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.8772%" y="325" width="0.0171%" height="15" fill="rgb(226,126,0)" fg:x="1165" fg:w="1"/><text x="20.1272%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="19.8772%" y="309" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="1165" fg:w="1"/><text x="20.1272%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.8772%" y="293" width="0.0171%" height="15" fill="rgb(230,130,0)" fg:x="1165" fg:w="1"/><text x="20.1272%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.8772%" y="277" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="1165" fg:w="1"/><text x="20.1272%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.8772%" y="261" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="1165" fg:w="1"/><text x="20.1272%" y="271.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.8772%" y="245" width="0.0171%" height="15" fill="rgb(186,186,54)" fg:x="1165" fg:w="1"/><text x="20.1272%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="19.8942%" y="437" width="0.0171%" height="15" fill="rgb(98,209,209)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="19.8942%" y="421" width="0.0171%" height="15" fill="rgb(190,90,0)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="19.8942%" y="405" width="0.0171%" height="15" fill="rgb(223,123,0)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="19.8942%" y="389" width="0.0171%" height="15" fill="rgb(74,187,187)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="19.8942%" y="373" width="0.0171%" height="15" fill="rgb(203,103,0)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="19.8942%" y="357" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="19.8942%" y="341" width="0.0171%" height="15" fill="rgb(226,126,0)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.8942%" y="325" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.8942%" y="309" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.8942%" y="293" width="0.0171%" height="15" fill="rgb(252,152,0)" fg:x="1166" fg:w="1"/><text x="20.1442%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (2 samples, 0.03%)</title><rect x="19.8942%" y="501" width="0.0341%" height="15" fill="rgb(248,148,0)" fg:x="1166" fg:w="2"/><text x="20.1442%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.03%)</title><rect x="19.8942%" y="485" width="0.0341%" height="15" fill="rgb(239,139,0)" fg:x="1166" fg:w="2"/><text x="20.1442%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.03%)</title><rect x="19.8942%" y="469" width="0.0341%" height="15" fill="rgb(63,177,177)" fg:x="1166" fg:w="2"/><text x="20.1442%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.03%)</title><rect x="19.8942%" y="453" width="0.0341%" height="15" fill="rgb(86,198,198)" fg:x="1166" fg:w="2"/><text x="20.1442%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="19.9113%" y="437" width="0.0171%" height="15" fill="rgb(55,170,170)" fg:x="1167" fg:w="1"/><text x="20.1613%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="19.9113%" y="421" width="0.0171%" height="15" fill="rgb(66,179,179)" fg:x="1167" fg:w="1"/><text x="20.1613%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="19.9113%" y="405" width="0.0171%" height="15" fill="rgb(109,219,219)" fg:x="1167" fg:w="1"/><text x="20.1613%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="19.9113%" y="389" width="0.0171%" height="15" fill="rgb(107,217,217)" fg:x="1167" fg:w="1"/><text x="20.1613%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="19.9113%" y="373" width="0.0171%" height="15" fill="rgb(95,206,206)" fg:x="1167" fg:w="1"/><text x="20.1613%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="19.9113%" y="357" width="0.0171%" height="15" fill="rgb(71,184,184)" fg:x="1167" fg:w="1"/><text x="20.1613%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="19.9113%" y="341" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="1167" fg:w="1"/><text x="20.1613%" y="351.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (1 samples, 0.02%)</title><rect x="19.9283%" y="501" width="0.0171%" height="15" fill="rgb(100,210,210)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="19.9283%" y="485" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="19.9283%" y="469" width="0.0171%" height="15" fill="rgb(199,99,0)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="19.9283%" y="453" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="19.9283%" y="437" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="19.9283%" y="421" width="0.0171%" height="15" fill="rgb(218,118,0)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="19.9283%" y="405" width="0.0171%" height="15" fill="rgb(217,117,0)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="19.9283%" y="389" width="0.0171%" height="15" fill="rgb(220,120,0)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="399.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="19.9283%" y="373" width="0.0171%" height="15" fill="rgb(220,220,66)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.9283%" y="357" width="0.0171%" height="15" fill="rgb(216,216,64)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.9283%" y="341" width="0.0171%" height="15" fill="rgb(189,189,55)" fg:x="1168" fg:w="1"/><text x="20.1783%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.03%)</title><rect x="19.9454%" y="501" width="0.0341%" height="15" fill="rgb(222,122,0)" fg:x="1169" fg:w="2"/><text x="20.1954%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="19.9454%" y="485" width="0.0341%" height="15" fill="rgb(223,123,0)" fg:x="1169" fg:w="2"/><text x="20.1954%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="19.9454%" y="469" width="0.0341%" height="15" fill="rgb(223,123,0)" fg:x="1169" fg:w="2"/><text x="20.1954%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="19.9454%" y="453" width="0.0341%" height="15" fill="rgb(240,140,0)" fg:x="1169" fg:w="2"/><text x="20.1954%" y="463.50"></text></g><g><title>malloc (2 samples, 0.03%)</title><rect x="19.9454%" y="437" width="0.0341%" height="15" fill="rgb(225,225,68)" fg:x="1169" fg:w="2"/><text x="20.1954%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.05%)</title><rect x="19.9795%" y="501" width="0.0512%" height="15" fill="rgb(208,108,0)" fg:x="1171" fg:w="3"/><text x="20.2295%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="19.9966%" y="485" width="0.0341%" height="15" fill="rgb(252,152,0)" fg:x="1172" fg:w="2"/><text x="20.2466%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="19.9966%" y="469" width="0.0341%" height="15" fill="rgb(228,128,0)" fg:x="1172" fg:w="2"/><text x="20.2466%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="19.9966%" y="453" width="0.0341%" height="15" fill="rgb(218,118,0)" fg:x="1172" fg:w="2"/><text x="20.2466%" y="463.50"></text></g><g><title>malloc (2 samples, 0.03%)</title><rect x="19.9966%" y="437" width="0.0341%" height="15" fill="rgb(200,200,59)" fg:x="1172" fg:w="2"/><text x="20.2466%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="19.9966%" y="421" width="0.0341%" height="15" fill="rgb(199,199,58)" fg:x="1172" fg:w="2"/><text x="20.2466%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.0307%" y="405" width="0.0171%" height="15" fill="rgb(88,200,200)" fg:x="1174" fg:w="1"/><text x="20.2807%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="20.0307%" y="389" width="0.0171%" height="15" fill="rgb(52,167,167)" fg:x="1174" fg:w="1"/><text x="20.2807%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="20.0307%" y="373" width="0.0171%" height="15" fill="rgb(85,197,197)" fg:x="1174" fg:w="1"/><text x="20.2807%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="20.0307%" y="357" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="1174" fg:w="1"/><text x="20.2807%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="20.0307%" y="341" width="0.0171%" height="15" fill="rgb(227,127,0)" fg:x="1174" fg:w="1"/><text x="20.2807%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="20.0478%" y="341" width="0.0682%" height="15" fill="rgb(218,118,0)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (4 samples, 0.07%)</title><rect x="20.0478%" y="325" width="0.0682%" height="15" fill="rgb(242,142,0)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (4 samples, 0.07%)</title><rect x="20.0478%" y="309" width="0.0682%" height="15" fill="rgb(229,129,0)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.07%)</title><rect x="20.0478%" y="293" width="0.0682%" height="15" fill="rgb(250,150,0)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.07%)</title><rect x="20.0478%" y="277" width="0.0682%" height="15" fill="rgb(216,116,0)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="20.0478%" y="261" width="0.0682%" height="15" fill="rgb(241,141,0)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="20.0478%" y="245" width="0.0682%" height="15" fill="rgb(242,142,0)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="20.0478%" y="229" width="0.0682%" height="15" fill="rgb(251,151,0)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="239.50"></text></g><g><title>cfree (4 samples, 0.07%)</title><rect x="20.0478%" y="213" width="0.0682%" height="15" fill="rgb(217,217,65)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.07%)</title><rect x="20.0478%" y="197" width="0.0682%" height="15" fill="rgb(177,177,50)" fg:x="1175" fg:w="4"/><text x="20.2978%" y="207.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="20.1160%" y="277" width="0.0171%" height="15" fill="rgb(187,187,54)" fg:x="1179" fg:w="1"/><text x="20.3660%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="20.1160%" y="261" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="1179" fg:w="1"/><text x="20.3660%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (9 samples, 0.15%)</title><rect x="20.0307%" y="421" width="0.1536%" height="15" fill="rgb(102,213,213)" fg:x="1174" fg:w="9"/><text x="20.2807%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (8 samples, 0.14%)</title><rect x="20.0478%" y="405" width="0.1365%" height="15" fill="rgb(100,211,211)" fg:x="1175" fg:w="8"/><text x="20.2978%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (8 samples, 0.14%)</title><rect x="20.0478%" y="389" width="0.1365%" height="15" fill="rgb(224,124,0)" fg:x="1175" fg:w="8"/><text x="20.2978%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (8 samples, 0.14%)</title><rect x="20.0478%" y="373" width="0.1365%" height="15" fill="rgb(246,146,0)" fg:x="1175" fg:w="8"/><text x="20.2978%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (8 samples, 0.14%)</title><rect x="20.0478%" y="357" width="0.1365%" height="15" fill="rgb(207,107,0)" fg:x="1175" fg:w="8"/><text x="20.2978%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.07%)</title><rect x="20.1160%" y="341" width="0.0682%" height="15" fill="rgb(200,100,0)" fg:x="1179" fg:w="4"/><text x="20.3660%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="20.1160%" y="325" width="0.0682%" height="15" fill="rgb(208,108,0)" fg:x="1179" fg:w="4"/><text x="20.3660%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="20.1160%" y="309" width="0.0682%" height="15" fill="rgb(234,134,0)" fg:x="1179" fg:w="4"/><text x="20.3660%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="20.1160%" y="293" width="0.0682%" height="15" fill="rgb(190,90,0)" fg:x="1179" fg:w="4"/><text x="20.3660%" y="303.50"></text></g><g><title>cfree (3 samples, 0.05%)</title><rect x="20.1331%" y="277" width="0.0512%" height="15" fill="rgb(209,209,62)" fg:x="1180" fg:w="3"/><text x="20.3831%" y="287.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="20.1331%" y="261" width="0.0512%" height="15" fill="rgb(181,181,52)" fg:x="1180" fg:w="3"/><text x="20.3831%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (11 samples, 0.19%)</title><rect x="20.0307%" y="501" width="0.1877%" height="15" fill="rgb(233,133,0)" fg:x="1174" fg:w="11"/><text x="20.2807%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (11 samples, 0.19%)</title><rect x="20.0307%" y="485" width="0.1877%" height="15" fill="rgb(211,111,0)" fg:x="1174" fg:w="11"/><text x="20.2807%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (11 samples, 0.19%)</title><rect x="20.0307%" y="469" width="0.1877%" height="15" fill="rgb(191,91,0)" fg:x="1174" fg:w="11"/><text x="20.2807%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.19%)</title><rect x="20.0307%" y="453" width="0.1877%" height="15" fill="rgb(109,219,219)" fg:x="1174" fg:w="11"/><text x="20.2807%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (11 samples, 0.19%)</title><rect x="20.0307%" y="437" width="0.1877%" height="15" fill="rgb(104,214,214)" fg:x="1174" fg:w="11"/><text x="20.2807%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2 samples, 0.03%)</title><rect x="20.1843%" y="421" width="0.0341%" height="15" fill="rgb(80,192,192)" fg:x="1183" fg:w="2"/><text x="20.4343%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="20.1843%" y="405" width="0.0341%" height="15" fill="rgb(244,144,0)" fg:x="1183" fg:w="2"/><text x="20.4343%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="20.1843%" y="389" width="0.0341%" height="15" fill="rgb(254,154,0)" fg:x="1183" fg:w="2"/><text x="20.4343%" y="399.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="20.1843%" y="373" width="0.0341%" height="15" fill="rgb(194,194,57)" fg:x="1183" fg:w="2"/><text x="20.4343%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="20.1843%" y="357" width="0.0341%" height="15" fill="rgb(229,229,69)" fg:x="1183" fg:w="2"/><text x="20.4343%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.02%)</title><rect x="20.2184%" y="389" width="0.0171%" height="15" fill="rgb(100,211,211)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.02%)</title><rect x="20.2184%" y="373" width="0.0171%" height="15" fill="rgb(102,213,213)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="20.2184%" y="357" width="0.0171%" height="15" fill="rgb(83,195,195)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="20.2184%" y="341" width="0.0171%" height="15" fill="rgb(247,147,0)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="20.2184%" y="325" width="0.0171%" height="15" fill="rgb(219,119,0)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="20.2184%" y="309" width="0.0171%" height="15" fill="rgb(52,167,167)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="20.2184%" y="293" width="0.0171%" height="15" fill="rgb(251,151,0)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="303.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="20.2184%" y="277" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="20.2184%" y="261" width="0.0171%" height="15" fill="rgb(214,114,0)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.2184%" y="245" width="0.0171%" height="15" fill="rgb(220,120,0)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.2184%" y="229" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.2184%" y="213" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="1185" fg:w="1"/><text x="20.4684%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.03%)</title><rect x="20.2184%" y="405" width="0.0341%" height="15" fill="rgb(65,179,179)" fg:x="1185" fg:w="2"/><text x="20.4684%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.02%)</title><rect x="20.2355%" y="389" width="0.0171%" height="15" fill="rgb(94,206,206)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.02%)</title><rect x="20.2355%" y="373" width="0.0171%" height="15" fill="rgb(102,213,213)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.02%)</title><rect x="20.2355%" y="357" width="0.0171%" height="15" fill="rgb(104,214,214)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="367.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="20.2355%" y="341" width="0.0171%" height="15" fill="rgb(58,172,172)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="20.2355%" y="325" width="0.0171%" height="15" fill="rgb(194,94,0)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="20.2355%" y="309" width="0.0171%" height="15" fill="rgb(251,151,0)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="20.2355%" y="293" width="0.0171%" height="15" fill="rgb(252,152,0)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="303.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="20.2355%" y="277" width="0.0171%" height="15" fill="rgb(214,214,64)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.2355%" y="261" width="0.0171%" height="15" fill="rgb(206,206,61)" fg:x="1186" fg:w="1"/><text x="20.4855%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.05%)</title><rect x="20.2184%" y="469" width="0.0512%" height="15" fill="rgb(64,178,178)" fg:x="1185" fg:w="3"/><text x="20.4684%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.05%)</title><rect x="20.2184%" y="453" width="0.0512%" height="15" fill="rgb(95,206,206)" fg:x="1185" fg:w="3"/><text x="20.4684%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.05%)</title><rect x="20.2184%" y="437" width="0.0512%" height="15" fill="rgb(99,210,210)" fg:x="1185" fg:w="3"/><text x="20.4684%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.05%)</title><rect x="20.2184%" y="421" width="0.0512%" height="15" fill="rgb(76,189,189)" fg:x="1185" fg:w="3"/><text x="20.4684%" y="431.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.02%)</title><rect x="20.2525%" y="405" width="0.0171%" height="15" fill="rgb(99,210,210)" fg:x="1187" fg:w="1"/><text x="20.5025%" y="415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="20.2696%" y="437" width="0.0171%" height="15" fill="rgb(254,154,0)" fg:x="1188" fg:w="1"/><text x="20.5196%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="20.2696%" y="421" width="0.0171%" height="15" fill="rgb(200,100,0)" fg:x="1188" fg:w="1"/><text x="20.5196%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="20.2696%" y="405" width="0.0171%" height="15" fill="rgb(220,120,0)" fg:x="1188" fg:w="1"/><text x="20.5196%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="20.2696%" y="389" width="0.0171%" height="15" fill="rgb(215,115,0)" fg:x="1188" fg:w="1"/><text x="20.5196%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="20.2696%" y="373" width="0.0171%" height="15" fill="rgb(192,92,0)" fg:x="1188" fg:w="1"/><text x="20.5196%" y="383.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (31 samples, 0.53%)</title><rect x="19.8089%" y="517" width="0.5289%" height="15" fill="rgb(85,197,197)" fg:x="1161" fg:w="31"/><text x="20.0589%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.12%)</title><rect x="20.2184%" y="501" width="0.1194%" height="15" fill="rgb(252,152,0)" fg:x="1185" fg:w="7"/><text x="20.4684%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (7 samples, 0.12%)</title><rect x="20.2184%" y="485" width="0.1194%" height="15" fill="rgb(75,188,188)" fg:x="1185" fg:w="7"/><text x="20.4684%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.07%)</title><rect x="20.2696%" y="469" width="0.0682%" height="15" fill="rgb(109,219,219)" fg:x="1188" fg:w="4"/><text x="20.5196%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.07%)</title><rect x="20.2696%" y="453" width="0.0682%" height="15" fill="rgb(208,108,0)" fg:x="1188" fg:w="4"/><text x="20.5196%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.05%)</title><rect x="20.2866%" y="437" width="0.0512%" height="15" fill="rgb(228,128,0)" fg:x="1189" fg:w="3"/><text x="20.5366%" y="447.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (3 samples, 0.05%)</title><rect x="20.2866%" y="421" width="0.0512%" height="15" fill="rgb(96,207,207)" fg:x="1189" fg:w="3"/><text x="20.5366%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.05%)</title><rect x="20.2866%" y="405" width="0.0512%" height="15" fill="rgb(235,135,0)" fg:x="1189" fg:w="3"/><text x="20.5366%" y="415.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.05%)</title><rect x="20.2866%" y="389" width="0.0512%" height="15" fill="rgb(214,114,0)" fg:x="1189" fg:w="3"/><text x="20.5366%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.05%)</title><rect x="20.2866%" y="373" width="0.0512%" height="15" fill="rgb(225,125,0)" fg:x="1189" fg:w="3"/><text x="20.5366%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="20.3037%" y="357" width="0.0341%" height="15" fill="rgb(206,106,0)" fg:x="1190" fg:w="2"/><text x="20.5537%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="20.3037%" y="341" width="0.0341%" height="15" fill="rgb(247,147,0)" fg:x="1190" fg:w="2"/><text x="20.5537%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="20.3037%" y="325" width="0.0341%" height="15" fill="rgb(206,106,0)" fg:x="1190" fg:w="2"/><text x="20.5537%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="20.3208%" y="309" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="1191" fg:w="1"/><text x="20.5708%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="20.3378%" y="245" width="0.0341%" height="15" fill="rgb(194,94,0)" fg:x="1192" fg:w="2"/><text x="20.5878%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="20.3378%" y="229" width="0.0341%" height="15" fill="rgb(190,90,0)" fg:x="1192" fg:w="2"/><text x="20.5878%" y="239.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="20.3378%" y="213" width="0.0341%" height="15" fill="rgb(205,205,61)" fg:x="1192" fg:w="2"/><text x="20.5878%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.3549%" y="197" width="0.0171%" height="15" fill="rgb(226,226,68)" fg:x="1193" fg:w="1"/><text x="20.6049%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="20.3378%" y="341" width="0.0512%" height="15" fill="rgb(203,103,0)" fg:x="1192" fg:w="3"/><text x="20.5878%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (3 samples, 0.05%)</title><rect x="20.3378%" y="325" width="0.0512%" height="15" fill="rgb(241,141,0)" fg:x="1192" fg:w="3"/><text x="20.5878%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (3 samples, 0.05%)</title><rect x="20.3378%" y="309" width="0.0512%" height="15" fill="rgb(251,151,0)" fg:x="1192" fg:w="3"/><text x="20.5878%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.05%)</title><rect x="20.3378%" y="293" width="0.0512%" height="15" fill="rgb(207,107,0)" fg:x="1192" fg:w="3"/><text x="20.5878%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.05%)</title><rect x="20.3378%" y="277" width="0.0512%" height="15" fill="rgb(249,149,0)" fg:x="1192" fg:w="3"/><text x="20.5878%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="20.3378%" y="261" width="0.0512%" height="15" fill="rgb(212,112,0)" fg:x="1192" fg:w="3"/><text x="20.5878%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="20.3720%" y="245" width="0.0171%" height="15" fill="rgb(218,118,0)" fg:x="1194" fg:w="1"/><text x="20.6220%" y="255.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::swap (66 samples, 1.13%)</title><rect x="19.2970%" y="533" width="1.1261%" height="15" fill="rgb(101,212,212)" fg:x="1131" fg:w="66"/><text x="19.5470%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (5 samples, 0.09%)</title><rect x="20.3378%" y="517" width="0.0853%" height="15" fill="rgb(217,117,0)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (5 samples, 0.09%)</title><rect x="20.3378%" y="501" width="0.0853%" height="15" fill="rgb(214,114,0)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (5 samples, 0.09%)</title><rect x="20.3378%" y="485" width="0.0853%" height="15" fill="rgb(239,139,0)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (5 samples, 0.09%)</title><rect x="20.3378%" y="469" width="0.0853%" height="15" fill="rgb(210,110,0)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="20.3378%" y="453" width="0.0853%" height="15" fill="rgb(66,180,180)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5 samples, 0.09%)</title><rect x="20.3378%" y="437" width="0.0853%" height="15" fill="rgb(71,184,184)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (5 samples, 0.09%)</title><rect x="20.3378%" y="421" width="0.0853%" height="15" fill="rgb(78,190,190)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.09%)</title><rect x="20.3378%" y="405" width="0.0853%" height="15" fill="rgb(50,165,165)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5 samples, 0.09%)</title><rect x="20.3378%" y="389" width="0.0853%" height="15" fill="rgb(218,118,0)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (5 samples, 0.09%)</title><rect x="20.3378%" y="373" width="0.0853%" height="15" fill="rgb(221,121,0)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (5 samples, 0.09%)</title><rect x="20.3378%" y="357" width="0.0853%" height="15" fill="rgb(205,105,0)" fg:x="1192" fg:w="5"/><text x="20.5878%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.03%)</title><rect x="20.3890%" y="341" width="0.0341%" height="15" fill="rgb(203,103,0)" fg:x="1195" fg:w="2"/><text x="20.6390%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="20.3890%" y="325" width="0.0341%" height="15" fill="rgb(195,95,0)" fg:x="1195" fg:w="2"/><text x="20.6390%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="20.3890%" y="309" width="0.0341%" height="15" fill="rgb(247,147,0)" fg:x="1195" fg:w="2"/><text x="20.6390%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="20.3890%" y="293" width="0.0341%" height="15" fill="rgb(230,130,0)" fg:x="1195" fg:w="2"/><text x="20.6390%" y="303.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="20.3890%" y="277" width="0.0341%" height="15" fill="rgb(200,200,59)" fg:x="1195" fg:w="2"/><text x="20.6390%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="20.3890%" y="261" width="0.0341%" height="15" fill="rgb(195,195,57)" fg:x="1195" fg:w="2"/><text x="20.6390%" y="271.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_new_layouts (98 samples, 1.67%)</title><rect x="18.7681%" y="549" width="1.6721%" height="15" fill="rgb(73,186,186)" fg:x="1100" fg:w="98"/><text x="19.0181%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="20.4231%" y="533" width="0.0171%" height="15" fill="rgb(191,91,0)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="20.4231%" y="517" width="0.0171%" height="15" fill="rgb(253,153,0)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="20.4231%" y="501" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="20.4231%" y="485" width="0.0171%" height="15" fill="rgb(238,138,0)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="20.4231%" y="469" width="0.0171%" height="15" fill="rgb(203,103,0)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="20.4231%" y="453" width="0.0171%" height="15" fill="rgb(250,150,0)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="20.4231%" y="437" width="0.0171%" height="15" fill="rgb(230,130,0)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="447.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="20.4231%" y="421" width="0.0171%" height="15" fill="rgb(195,195,57)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.4231%" y="405" width="0.0171%" height="15" fill="rgb(179,179,51)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.4231%" y="389" width="0.0171%" height="15" fill="rgb(196,196,57)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.4231%" y="373" width="0.0171%" height="15" fill="rgb(178,178,51)" fg:x="1197" fg:w="1"/><text x="20.6731%" y="383.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (1 samples, 0.02%)</title><rect x="20.4402%" y="549" width="0.0171%" height="15" fill="rgb(67,181,181)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="559.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (1 samples, 0.02%)</title><rect x="20.4402%" y="533" width="0.0171%" height="15" fill="rgb(60,174,174)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="543.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (1 samples, 0.02%)</title><rect x="20.4402%" y="517" width="0.0171%" height="15" fill="rgb(91,202,202)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="20.4402%" y="501" width="0.0171%" height="15" fill="rgb(216,116,0)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="20.4402%" y="485" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="20.4402%" y="469" width="0.0171%" height="15" fill="rgb(228,128,0)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="20.4402%" y="453" width="0.0171%" height="15" fill="rgb(218,118,0)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="20.4402%" y="437" width="0.0171%" height="15" fill="rgb(198,98,0)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="20.4402%" y="421" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="20.4402%" y="405" width="0.0171%" height="15" fill="rgb(192,92,0)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="415.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="20.4402%" y="389" width="0.0171%" height="15" fill="rgb(223,223,67)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.4402%" y="373" width="0.0171%" height="15" fill="rgb(211,211,63)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.4402%" y="357" width="0.0171%" height="15" fill="rgb(177,177,50)" fg:x="1198" fg:w="1"/><text x="20.6902%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="20.4743%" y="517" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="20.4743%" y="501" width="0.0171%" height="15" fill="rgb(254,154,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="20.4743%" y="485" width="0.0171%" height="15" fill="rgb(216,116,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="20.4743%" y="469" width="0.0171%" height="15" fill="rgb(52,167,167)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="479.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="20.4743%" y="453" width="0.0171%" height="15" fill="rgb(105,215,215)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="463.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="20.4743%" y="437" width="0.0171%" height="15" fill="rgb(89,201,201)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="20.4743%" y="421" width="0.0171%" height="15" fill="rgb(237,137,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="20.4743%" y="405" width="0.0171%" height="15" fill="rgb(226,126,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="20.4743%" y="389" width="0.0171%" height="15" fill="rgb(212,112,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="20.4743%" y="373" width="0.0171%" height="15" fill="rgb(98,209,209)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="20.4743%" y="357" width="0.0171%" height="15" fill="rgb(223,123,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="20.4743%" y="341" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="20.4743%" y="325" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="20.4743%" y="309" width="0.0171%" height="15" fill="rgb(211,111,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="20.4743%" y="293" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="20.4743%" y="277" width="0.0171%" height="15" fill="rgb(253,153,0)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="287.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="20.4743%" y="261" width="0.0171%" height="15" fill="rgb(185,185,53)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.4743%" y="245" width="0.0171%" height="15" fill="rgb(183,183,52)" fg:x="1200" fg:w="1"/><text x="20.7243%" y="255.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="20.4914%" y="421" width="0.0171%" height="15" fill="rgb(52,166,166)" fg:x="1201" fg:w="1"/><text x="20.7414%" y="431.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (7 samples, 0.12%)</title><rect x="20.5255%" y="357" width="0.1194%" height="15" fill="rgb(56,170,170)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.12%)</title><rect x="20.5255%" y="341" width="0.1194%" height="15" fill="rgb(242,142,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.12%)</title><rect x="20.5255%" y="325" width="0.1194%" height="15" fill="rgb(239,139,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.12%)</title><rect x="20.5255%" y="309" width="0.1194%" height="15" fill="rgb(244,144,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.12%)</title><rect x="20.5255%" y="293" width="0.1194%" height="15" fill="rgb(85,197,197)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.12%)</title><rect x="20.5255%" y="277" width="0.1194%" height="15" fill="rgb(254,154,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.12%)</title><rect x="20.5255%" y="261" width="0.1194%" height="15" fill="rgb(221,121,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.12%)</title><rect x="20.5255%" y="245" width="0.1194%" height="15" fill="rgb(201,101,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.12%)</title><rect x="20.5255%" y="229" width="0.1194%" height="15" fill="rgb(220,120,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.12%)</title><rect x="20.5255%" y="213" width="0.1194%" height="15" fill="rgb(216,116,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="223.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.12%)</title><rect x="20.5255%" y="197" width="0.1194%" height="15" fill="rgb(250,150,0)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="207.50"></text></g><g><title>malloc (7 samples, 0.12%)</title><rect x="20.5255%" y="181" width="0.1194%" height="15" fill="rgb(177,177,50)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="191.50"></text></g><g><title>[libc.so.6] (7 samples, 0.12%)</title><rect x="20.5255%" y="165" width="0.1194%" height="15" fill="rgb(216,216,65)" fg:x="1203" fg:w="7"/><text x="20.7755%" y="175.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (14 samples, 0.24%)</title><rect x="20.4743%" y="533" width="0.2389%" height="15" fill="rgb(74,187,187)" fg:x="1200" fg:w="14"/><text x="20.7243%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (13 samples, 0.22%)</title><rect x="20.4914%" y="517" width="0.2218%" height="15" fill="rgb(249,149,0)" fg:x="1201" fg:w="13"/><text x="20.7414%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.22%)</title><rect x="20.4914%" y="501" width="0.2218%" height="15" fill="rgb(51,166,166)" fg:x="1201" fg:w="13"/><text x="20.7414%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.22%)</title><rect x="20.4914%" y="485" width="0.2218%" height="15" fill="rgb(108,218,218)" fg:x="1201" fg:w="13"/><text x="20.7414%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (13 samples, 0.22%)</title><rect x="20.4914%" y="469" width="0.2218%" height="15" fill="rgb(83,195,195)" fg:x="1201" fg:w="13"/><text x="20.7414%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (13 samples, 0.22%)</title><rect x="20.4914%" y="453" width="0.2218%" height="15" fill="rgb(76,189,189)" fg:x="1201" fg:w="13"/><text x="20.7414%" y="463.50"></text></g><g><title>core::clone::Clone::clone (13 samples, 0.22%)</title><rect x="20.4914%" y="437" width="0.2218%" height="15" fill="rgb(190,90,0)" fg:x="1201" fg:w="13"/><text x="20.7414%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.20%)</title><rect x="20.5084%" y="421" width="0.2047%" height="15" fill="rgb(236,136,0)" fg:x="1202" fg:w="12"/><text x="20.7584%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.20%)</title><rect x="20.5084%" y="405" width="0.2047%" height="15" fill="rgb(250,150,0)" fg:x="1202" fg:w="12"/><text x="20.7584%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.20%)</title><rect x="20.5084%" y="389" width="0.2047%" height="15" fill="rgb(195,95,0)" fg:x="1202" fg:w="12"/><text x="20.7584%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.20%)</title><rect x="20.5084%" y="373" width="0.2047%" height="15" fill="rgb(92,204,204)" fg:x="1202" fg:w="12"/><text x="20.7584%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="20.6449%" y="357" width="0.0682%" height="15" fill="rgb(221,121,0)" fg:x="1210" fg:w="4"/><text x="20.8949%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="20.6449%" y="341" width="0.0682%" height="15" fill="rgb(196,96,0)" fg:x="1210" fg:w="4"/><text x="20.8949%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.07%)</title><rect x="20.6449%" y="325" width="0.0682%" height="15" fill="rgb(203,103,0)" fg:x="1210" fg:w="4"/><text x="20.8949%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.07%)</title><rect x="20.6449%" y="309" width="0.0682%" height="15" fill="rgb(200,100,0)" fg:x="1210" fg:w="4"/><text x="20.8949%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.07%)</title><rect x="20.6449%" y="293" width="0.0682%" height="15" fill="rgb(224,124,0)" fg:x="1210" fg:w="4"/><text x="20.8949%" y="303.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.07%)</title><rect x="20.6449%" y="277" width="0.0682%" height="15" fill="rgb(251,151,0)" fg:x="1210" fg:w="4"/><text x="20.8949%" y="287.50"></text></g><g><title>malloc (4 samples, 0.07%)</title><rect x="20.6449%" y="261" width="0.0682%" height="15" fill="rgb(176,176,50)" fg:x="1210" fg:w="4"/><text x="20.8949%" y="271.50"></text></g><g><title>[libc.so.6] (4 samples, 0.07%)</title><rect x="20.6449%" y="245" width="0.0682%" height="15" fill="rgb(195,195,57)" fg:x="1210" fg:w="4"/><text x="20.8949%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.6961%" y="229" width="0.0171%" height="15" fill="rgb(211,211,63)" fg:x="1213" fg:w="1"/><text x="20.9461%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.19%)</title><rect x="20.7132%" y="325" width="0.1877%" height="15" fill="rgb(235,135,0)" fg:x="1214" fg:w="11"/><text x="20.9632%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.19%)</title><rect x="20.7132%" y="309" width="0.1877%" height="15" fill="rgb(199,99,0)" fg:x="1214" fg:w="11"/><text x="20.9632%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.19%)</title><rect x="20.7132%" y="293" width="0.1877%" height="15" fill="rgb(217,117,0)" fg:x="1214" fg:w="11"/><text x="20.9632%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.19%)</title><rect x="20.7132%" y="277" width="0.1877%" height="15" fill="rgb(210,110,0)" fg:x="1214" fg:w="11"/><text x="20.9632%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.19%)</title><rect x="20.7132%" y="261" width="0.1877%" height="15" fill="rgb(234,134,0)" fg:x="1214" fg:w="11"/><text x="20.9632%" y="271.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.19%)</title><rect x="20.7132%" y="245" width="0.1877%" height="15" fill="rgb(242,142,0)" fg:x="1214" fg:w="11"/><text x="20.9632%" y="255.50"></text></g><g><title>malloc (11 samples, 0.19%)</title><rect x="20.7132%" y="229" width="0.1877%" height="15" fill="rgb(217,217,65)" fg:x="1214" fg:w="11"/><text x="20.9632%" y="239.50"></text></g><g><title>[libc.so.6] (8 samples, 0.14%)</title><rect x="20.7644%" y="213" width="0.1365%" height="15" fill="rgb(217,217,65)" fg:x="1217" fg:w="8"/><text x="21.0144%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.8838%" y="197" width="0.0171%" height="15" fill="rgb(185,185,53)" fg:x="1224" fg:w="1"/><text x="21.1338%" y="207.50"></text></g><g><title>core::clone::Clone::clone (15 samples, 0.26%)</title><rect x="20.7132%" y="421" width="0.2559%" height="15" fill="rgb(240,140,0)" fg:x="1214" fg:w="15"/><text x="20.9632%" y="431.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (15 samples, 0.26%)</title><rect x="20.7132%" y="405" width="0.2559%" height="15" fill="rgb(77,190,190)" fg:x="1214" fg:w="15"/><text x="20.9632%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.26%)</title><rect x="20.7132%" y="389" width="0.2559%" height="15" fill="rgb(241,141,0)" fg:x="1214" fg:w="15"/><text x="20.9632%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.26%)</title><rect x="20.7132%" y="373" width="0.2559%" height="15" fill="rgb(211,111,0)" fg:x="1214" fg:w="15"/><text x="20.9632%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.26%)</title><rect x="20.7132%" y="357" width="0.2559%" height="15" fill="rgb(209,109,0)" fg:x="1214" fg:w="15"/><text x="20.9632%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.26%)</title><rect x="20.7132%" y="341" width="0.2559%" height="15" fill="rgb(109,219,219)" fg:x="1214" fg:w="15"/><text x="20.9632%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.07%)</title><rect x="20.9009%" y="325" width="0.0682%" height="15" fill="rgb(229,129,0)" fg:x="1225" fg:w="4"/><text x="21.1509%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.07%)</title><rect x="20.9009%" y="309" width="0.0682%" height="15" fill="rgb(217,117,0)" fg:x="1225" fg:w="4"/><text x="21.1509%" y="319.50"></text></g><g><title>[libc.so.6] (4 samples, 0.07%)</title><rect x="20.9009%" y="293" width="0.0682%" height="15" fill="rgb(194,194,57)" fg:x="1225" fg:w="4"/><text x="21.1509%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (16 samples, 0.27%)</title><rect x="20.7132%" y="453" width="0.2730%" height="15" fill="rgb(96,207,207)" fg:x="1214" fg:w="16"/><text x="20.9632%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (16 samples, 0.27%)</title><rect x="20.7132%" y="437" width="0.2730%" height="15" fill="rgb(99,210,210)" fg:x="1214" fg:w="16"/><text x="20.9632%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="20.9691%" y="421" width="0.0171%" height="15" fill="rgb(78,190,190)" fg:x="1229" fg:w="1"/><text x="21.2191%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="20.9691%" y="405" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="1229" fg:w="1"/><text x="21.2191%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="20.9691%" y="389" width="0.0171%" height="15" fill="rgb(222,122,0)" fg:x="1229" fg:w="1"/><text x="21.2191%" y="399.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.73%)</title><rect x="20.7132%" y="517" width="0.7337%" height="15" fill="rgb(82,194,194)" fg:x="1214" fg:w="43"/><text x="20.9632%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (43 samples, 0.73%)</title><rect x="20.7132%" y="501" width="0.7337%" height="15" fill="rgb(240,140,0)" fg:x="1214" fg:w="43"/><text x="20.9632%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.73%)</title><rect x="20.7132%" y="485" width="0.7337%" height="15" fill="rgb(74,187,187)" fg:x="1214" fg:w="43"/><text x="20.9632%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.73%)</title><rect x="20.7132%" y="469" width="0.7337%" height="15" fill="rgb(52,167,167)" fg:x="1214" fg:w="43"/><text x="20.9632%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (27 samples, 0.46%)</title><rect x="20.9862%" y="453" width="0.4607%" height="15" fill="rgb(77,190,190)" fg:x="1230" fg:w="27"/><text x="21.2362%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (27 samples, 0.46%)</title><rect x="20.9862%" y="437" width="0.4607%" height="15" fill="rgb(99,210,210)" fg:x="1230" fg:w="27"/><text x="21.2362%" y="447.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (27 samples, 0.46%)</title><rect x="20.9862%" y="421" width="0.4607%" height="15" fill="rgb(84,196,196)" fg:x="1230" fg:w="27"/><text x="21.2362%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.46%)</title><rect x="20.9862%" y="405" width="0.4607%" height="15" fill="rgb(233,133,0)" fg:x="1230" fg:w="27"/><text x="21.2362%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.46%)</title><rect x="20.9862%" y="389" width="0.4607%" height="15" fill="rgb(240,140,0)" fg:x="1230" fg:w="27"/><text x="21.2362%" y="399.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.46%)</title><rect x="20.9862%" y="373" width="0.4607%" height="15" fill="rgb(208,108,0)" fg:x="1230" fg:w="27"/><text x="21.2362%" y="383.50"></text></g><g><title>malloc (27 samples, 0.46%)</title><rect x="20.9862%" y="357" width="0.4607%" height="15" fill="rgb(203,203,60)" fg:x="1230" fg:w="27"/><text x="21.2362%" y="367.50"></text></g><g><title>[libc.so.6] (27 samples, 0.46%)</title><rect x="20.9862%" y="341" width="0.4607%" height="15" fill="rgb(203,203,60)" fg:x="1230" fg:w="27"/><text x="21.2362%" y="351.50"></text></g><g><title>[libc.so.6] (22 samples, 0.38%)</title><rect x="21.0715%" y="325" width="0.3754%" height="15" fill="rgb(199,199,58)" fg:x="1235" fg:w="22"/><text x="21.3215%" y="335.50"></text></g><g><title>[libc.so.6] (7 samples, 0.12%)</title><rect x="21.3274%" y="309" width="0.1194%" height="15" fill="rgb(214,214,64)" fg:x="1250" fg:w="7"/><text x="21.5774%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.02%)</title><rect x="21.4469%" y="517" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="21.4469%" y="501" width="0.0171%" height="15" fill="rgb(201,101,0)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="21.4469%" y="485" width="0.0171%" height="15" fill="rgb(57,172,172)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="21.4469%" y="469" width="0.0171%" height="15" fill="rgb(54,169,169)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="21.4469%" y="453" width="0.0171%" height="15" fill="rgb(69,183,183)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="21.4469%" y="437" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.4469%" y="421" width="0.0171%" height="15" fill="rgb(243,143,0)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.4469%" y="405" width="0.0171%" height="15" fill="rgb(238,138,0)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.4469%" y="389" width="0.0171%" height="15" fill="rgb(197,97,0)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="21.4469%" y="373" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="1257" fg:w="1"/><text x="21.6969%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="30.2849%" y="453" width="0.0171%" height="15" fill="rgb(217,117,0)" fg:x="1775" fg:w="1"/><text x="30.5349%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="30.2849%" y="437" width="0.0171%" height="15" fill="rgb(214,114,0)" fg:x="1775" fg:w="1"/><text x="30.5349%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="30.2849%" y="421" width="0.0171%" height="15" fill="rgb(227,127,0)" fg:x="1775" fg:w="1"/><text x="30.5349%" y="431.50"></text></g><g><title>__rdl_alloc (4 samples, 0.07%)</title><rect x="30.3361%" y="309" width="0.0682%" height="15" fill="rgb(181,181,52)" fg:x="1778" fg:w="4"/><text x="30.5861%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.07%)</title><rect x="30.3361%" y="293" width="0.0682%" height="15" fill="rgb(249,149,0)" fg:x="1778" fg:w="4"/><text x="30.5861%" y="303.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="30.4044%" y="309" width="0.0171%" height="15" fill="rgb(207,207,61)" fg:x="1782" fg:w="1"/><text x="30.6544%" y="319.50"></text></g><g><title>core::ptr::read_volatile (4 samples, 0.07%)</title><rect x="30.4214%" y="309" width="0.0682%" height="15" fill="rgb(197,97,0)" fg:x="1783" fg:w="4"/><text x="30.6714%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.34%)</title><rect x="30.3361%" y="405" width="0.3412%" height="15" fill="rgb(245,145,0)" fg:x="1778" fg:w="20"/><text x="30.5861%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.34%)</title><rect x="30.3361%" y="389" width="0.3412%" height="15" fill="rgb(191,91,0)" fg:x="1778" fg:w="20"/><text x="30.5861%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.34%)</title><rect x="30.3361%" y="373" width="0.3412%" height="15" fill="rgb(253,153,0)" fg:x="1778" fg:w="20"/><text x="30.5861%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.34%)</title><rect x="30.3361%" y="357" width="0.3412%" height="15" fill="rgb(191,91,0)" fg:x="1778" fg:w="20"/><text x="30.5861%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.34%)</title><rect x="30.3361%" y="341" width="0.3412%" height="15" fill="rgb(232,132,0)" fg:x="1778" fg:w="20"/><text x="30.5861%" y="351.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.34%)</title><rect x="30.3361%" y="325" width="0.3412%" height="15" fill="rgb(203,103,0)" fg:x="1778" fg:w="20"/><text x="30.5861%" y="335.50"></text></g><g><title>malloc (11 samples, 0.19%)</title><rect x="30.4897%" y="309" width="0.1877%" height="15" fill="rgb(224,224,67)" fg:x="1787" fg:w="11"/><text x="30.7397%" y="319.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (51 samples, 0.87%)</title><rect x="30.2849%" y="485" width="0.8702%" height="15" fill="rgb(72,185,185)" fg:x="1775" fg:w="51"/><text x="30.5349%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51 samples, 0.87%)</title><rect x="30.2849%" y="469" width="0.8702%" height="15" fill="rgb(195,95,0)" fg:x="1775" fg:w="51"/><text x="30.5349%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.85%)</title><rect x="30.3020%" y="453" width="0.8531%" height="15" fill="rgb(210,110,0)" fg:x="1776" fg:w="50"/><text x="30.5520%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.85%)</title><rect x="30.3020%" y="437" width="0.8531%" height="15" fill="rgb(203,103,0)" fg:x="1776" fg:w="50"/><text x="30.5520%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.85%)</title><rect x="30.3020%" y="421" width="0.8531%" height="15" fill="rgb(63,177,177)" fg:x="1776" fg:w="50"/><text x="30.5520%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (28 samples, 0.48%)</title><rect x="30.6774%" y="405" width="0.4777%" height="15" fill="rgb(246,146,0)" fg:x="1798" fg:w="28"/><text x="30.9274%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.48%)</title><rect x="30.6774%" y="389" width="0.4777%" height="15" fill="rgb(195,95,0)" fg:x="1798" fg:w="28"/><text x="30.9274%" y="399.50"></text></g><g><title>[libc.so.6] (28 samples, 0.48%)</title><rect x="30.6774%" y="373" width="0.4777%" height="15" fill="rgb(185,185,53)" fg:x="1798" fg:w="28"/><text x="30.9274%" y="383.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.14%)</title><rect x="31.1551%" y="485" width="0.1365%" height="15" fill="rgb(53,168,168)" fg:x="1826" fg:w="8"/><text x="31.4051%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.05%)</title><rect x="31.2404%" y="469" width="0.0512%" height="15" fill="rgb(252,152,0)" fg:x="1831" fg:w="3"/><text x="31.4904%" y="479.50"></text></g><g><title>&lt;alc::keyboard::key::PhalanxKey as alc::keyboard::key::KeyValue&gt;::value (25 samples, 0.43%)</title><rect x="31.2916%" y="485" width="0.4265%" height="15" fill="rgb(91,202,202)" fg:x="1834" fg:w="25"/><text x="31.5416%" y="495.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (84 samples, 1.43%)</title><rect x="32.0253%" y="437" width="1.4332%" height="15" fill="rgb(63,177,177)" fg:x="1877" fg:w="84"/><text x="32.2753%" y="447.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (117 samples, 2.00%)</title><rect x="31.7181%" y="485" width="1.9962%" height="15" fill="rgb(73,186,186)" fg:x="1859" fg:w="117"/><text x="31.9681%" y="495.50">&lt;..</text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (117 samples, 2.00%)</title><rect x="31.7181%" y="469" width="1.9962%" height="15" fill="rgb(91,202,202)" fg:x="1859" fg:w="117"/><text x="31.9681%" y="479.50">&lt;..</text></g><g><title>array2d::Array2D&lt;T&gt;::get (99 samples, 1.69%)</title><rect x="32.0253%" y="453" width="1.6891%" height="15" fill="rgb(78,190,190)" fg:x="1877" fg:w="99"/><text x="32.2753%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.26%)</title><rect x="33.4585%" y="437" width="0.2559%" height="15" fill="rgb(242,142,0)" fg:x="1961" fg:w="15"/><text x="33.7085%" y="447.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get::_{{closure}} (15 samples, 0.26%)</title><rect x="33.4585%" y="421" width="0.2559%" height="15" fill="rgb(85,197,197)" fg:x="1961" fg:w="15"/><text x="33.7085%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.26%)</title><rect x="33.4585%" y="405" width="0.2559%" height="15" fill="rgb(230,130,0)" fg:x="1961" fg:w="15"/><text x="33.7085%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.26%)</title><rect x="33.4585%" y="389" width="0.2559%" height="15" fill="rgb(211,111,0)" fg:x="1961" fg:w="15"/><text x="33.7085%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.26%)</title><rect x="33.4585%" y="373" width="0.2559%" height="15" fill="rgb(95,206,206)" fg:x="1961" fg:w="15"/><text x="33.7085%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.10%)</title><rect x="33.7144%" y="485" width="0.1024%" height="15" fill="rgb(220,120,0)" fg:x="1976" fg:w="6"/><text x="33.9644%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.03%)</title><rect x="33.7826%" y="469" width="0.0341%" height="15" fill="rgb(224,124,0)" fg:x="1980" fg:w="2"/><text x="34.0326%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="33.7826%" y="453" width="0.0341%" height="15" fill="rgb(203,103,0)" fg:x="1980" fg:w="2"/><text x="34.0326%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.05%)</title><rect x="33.8168%" y="453" width="0.0512%" height="15" fill="rgb(240,140,0)" fg:x="1982" fg:w="3"/><text x="34.0668%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.07%)</title><rect x="33.8168%" y="485" width="0.0682%" height="15" fill="rgb(224,124,0)" fg:x="1982" fg:w="4"/><text x="34.0668%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.07%)</title><rect x="33.8168%" y="469" width="0.0682%" height="15" fill="rgb(223,123,0)" fg:x="1982" fg:w="4"/><text x="34.0668%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="33.8679%" y="453" width="0.0171%" height="15" fill="rgb(92,204,204)" fg:x="1985" fg:w="1"/><text x="34.1179%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 1.40%)</title><rect x="33.8850%" y="485" width="1.3991%" height="15" fill="rgb(250,150,0)" fg:x="1986" fg:w="82"/><text x="34.1350%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.65%)</title><rect x="34.6357%" y="469" width="0.6484%" height="15" fill="rgb(214,114,0)" fg:x="2030" fg:w="38"/><text x="34.8857%" y="479.50"></text></g><g><title>core::ptr::read (21 samples, 0.36%)</title><rect x="34.9258%" y="453" width="0.3583%" height="15" fill="rgb(203,103,0)" fg:x="2047" fg:w="21"/><text x="35.1758%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.14%)</title><rect x="35.2841%" y="485" width="0.1365%" height="15" fill="rgb(197,97,0)" fg:x="2068" fg:w="8"/><text x="35.5341%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt; as core::iter::adapters::step_by::StepByImpl&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::spec_next (8 samples, 0.14%)</title><rect x="35.2841%" y="469" width="0.1365%" height="15" fill="rgb(236,136,0)" fg:x="2068" fg:w="8"/><text x="35.5341%" y="479.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (315 samples, 5.37%)</title><rect x="35.4206%" y="485" width="5.3745%" height="15" fill="rgb(100,211,211)" fg:x="2076" fg:w="315"/><text x="35.6706%" y="495.50">alc::ob..</text></g><g><title>std::f64::&lt;impl f64&gt;::powf (278 samples, 4.74%)</title><rect x="36.0519%" y="469" width="4.7432%" height="15" fill="rgb(221,121,0)" fg:x="2113" fg:w="278"/><text x="36.3019%" y="479.50">std::f..</text></g><g><title>pow (277 samples, 4.73%)</title><rect x="36.0689%" y="453" width="4.7262%" height="15" fill="rgb(228,228,69)" fg:x="2114" fg:w="277"/><text x="36.3189%" y="463.50">pow</text></g><g><title>[libm.so.6] (265 samples, 4.52%)</title><rect x="36.2737%" y="437" width="4.5214%" height="15" fill="rgb(217,217,65)" fg:x="2126" fg:w="265"/><text x="36.5237%" y="447.50">[libm..</text></g><g><title>alc::objective::scoring::same_hand_and_finger (40 samples, 0.68%)</title><rect x="40.7951%" y="485" width="0.6825%" height="15" fill="rgb(91,202,202)" fg:x="2391" fg:w="40"/><text x="41.0451%" y="495.50"></text></g><g><title>&lt;alc::keyboard::key::Hand as core::cmp::PartialEq&gt;::eq (17 samples, 0.29%)</title><rect x="41.1875%" y="469" width="0.2901%" height="15" fill="rgb(81,194,194)" fg:x="2414" fg:w="17"/><text x="41.4375%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (6 samples, 0.10%)</title><rect x="41.4776%" y="485" width="0.1024%" height="15" fill="rgb(216,116,0)" fg:x="2431" fg:w="6"/><text x="41.7276%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="43.0984%" y="437" width="0.0341%" height="15" fill="rgb(225,125,0)" fg:x="2526" fg:w="2"/><text x="43.3484%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (31 samples, 0.53%)</title><rect x="43.1326%" y="437" width="0.5289%" height="15" fill="rgb(217,117,0)" fg:x="2528" fg:w="31"/><text x="43.3826%" y="447.50"></text></g><g><title>__rdl_realloc (13 samples, 0.22%)</title><rect x="44.7193%" y="373" width="0.2218%" height="15" fill="rgb(211,211,63)" fg:x="2621" fg:w="13"/><text x="44.9693%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9 samples, 0.15%)</title><rect x="44.7876%" y="357" width="0.1536%" height="15" fill="rgb(245,145,0)" fg:x="2625" fg:w="9"/><text x="45.0376%" y="367.50"></text></g><g><title>__rust_realloc (3 samples, 0.05%)</title><rect x="44.9411%" y="373" width="0.0512%" height="15" fill="rgb(223,223,67)" fg:x="2634" fg:w="3"/><text x="45.1911%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (296 samples, 5.05%)</title><rect x="44.7193%" y="421" width="5.0503%" height="15" fill="rgb(217,117,0)" fg:x="2621" fg:w="296"/><text x="44.9693%" y="431.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (296 samples, 5.05%)</title><rect x="44.7193%" y="405" width="5.0503%" height="15" fill="rgb(244,144,0)" fg:x="2621" fg:w="296"/><text x="44.9693%" y="415.50">alloc:..</text></g><g><title>alloc::alloc::realloc (296 samples, 5.05%)</title><rect x="44.7193%" y="389" width="5.0503%" height="15" fill="rgb(221,121,0)" fg:x="2621" fg:w="296"/><text x="44.9693%" y="399.50">alloc:..</text></g><g><title>realloc (280 samples, 4.78%)</title><rect x="44.9923%" y="373" width="4.7773%" height="15" fill="rgb(223,223,67)" fg:x="2637" fg:w="280"/><text x="45.2423%" y="383.50">realloc</text></g><g><title>[libc.so.6] (217 samples, 3.70%)</title><rect x="46.0672%" y="357" width="3.7024%" height="15" fill="rgb(204,204,60)" fg:x="2700" fg:w="217"/><text x="46.3172%" y="367.50">[lib..</text></g><g><title>[libc.so.6] (183 samples, 3.12%)</title><rect x="46.6473%" y="341" width="3.1223%" height="15" fill="rgb(224,224,68)" fg:x="2734" fg:w="183"/><text x="46.8973%" y="351.50">[li..</text></g><g><title>[libc.so.6] (6 samples, 0.10%)</title><rect x="49.6673%" y="325" width="0.1024%" height="15" fill="rgb(217,217,65)" fg:x="2911" fg:w="6"/><text x="49.9173%" y="335.50"></text></g><g><title>__rdl_alloc (20 samples, 0.34%)</title><rect x="49.7697%" y="421" width="0.3412%" height="15" fill="rgb(206,206,61)" fg:x="2917" fg:w="20"/><text x="50.0197%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (20 samples, 0.34%)</title><rect x="49.7697%" y="405" width="0.3412%" height="15" fill="rgb(228,128,0)" fg:x="2917" fg:w="20"/><text x="50.0197%" y="415.50"></text></g><g><title>__rust_alloc (8 samples, 0.14%)</title><rect x="50.1109%" y="421" width="0.1365%" height="15" fill="rgb(183,183,53)" fg:x="2937" fg:w="8"/><text x="50.3609%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (14 samples, 0.24%)</title><rect x="50.2474%" y="421" width="0.2389%" height="15" fill="rgb(203,103,0)" fg:x="2945" fg:w="14"/><text x="50.4974%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (492 samples, 8.39%)</title><rect x="43.6615%" y="437" width="8.3945%" height="15" fill="rgb(192,92,0)" fg:x="2559" fg:w="492"/><text x="43.9115%" y="447.50">alloc::raw_v..</text></g><g><title>malloc (92 samples, 1.57%)</title><rect x="50.4863%" y="421" width="1.5697%" height="15" fill="rgb(224,224,68)" fg:x="2959" fg:w="92"/><text x="50.7363%" y="431.50"></text></g><g><title>core::cmp::max (56 samples, 0.96%)</title><rect x="52.0560%" y="437" width="0.9555%" height="15" fill="rgb(218,118,0)" fg:x="3051" fg:w="56"/><text x="52.3060%" y="447.50"></text></g><g><title>core::cmp::Ord::max (56 samples, 0.96%)</title><rect x="52.0560%" y="421" width="0.9555%" height="15" fill="rgb(219,119,0)" fg:x="3051" fg:w="56"/><text x="52.3060%" y="431.50"></text></g><g><title>core::cmp::max_by (56 samples, 0.96%)</title><rect x="52.0560%" y="405" width="0.9555%" height="15" fill="rgb(218,118,0)" fg:x="3051" fg:w="56"/><text x="52.3060%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (615 samples, 10.49%)</title><rect x="42.8596%" y="469" width="10.4931%" height="15" fill="rgb(244,144,0)" fg:x="2512" fg:w="615"/><text x="43.1096%" y="479.50">alloc::raw_vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (615 samples, 10.49%)</title><rect x="42.8596%" y="453" width="10.4931%" height="15" fill="rgb(253,153,0)" fg:x="2512" fg:w="615"/><text x="43.1096%" y="463.50">alloc::raw_vec:..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (20 samples, 0.34%)</title><rect x="53.0114%" y="437" width="0.3412%" height="15" fill="rgb(217,117,0)" fg:x="3107" fg:w="20"/><text x="53.2614%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (20 samples, 0.34%)</title><rect x="53.0114%" y="421" width="0.3412%" height="15" fill="rgb(237,137,0)" fg:x="3107" fg:w="20"/><text x="53.2614%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (22 samples, 0.38%)</title><rect x="53.3527%" y="469" width="0.3754%" height="15" fill="rgb(237,137,0)" fg:x="3127" fg:w="22"/><text x="53.6027%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (22 samples, 0.38%)</title><rect x="53.3527%" y="453" width="0.3754%" height="15" fill="rgb(224,124,0)" fg:x="3127" fg:w="22"/><text x="53.6027%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (741 samples, 12.64%)</title><rect x="41.5799%" y="485" width="12.6429%" height="15" fill="rgb(201,101,0)" fg:x="2437" fg:w="741"/><text x="41.8299%" y="495.50">alloc::vec::Vec&lt;T,A..</text></g><g><title>core::ptr::write (29 samples, 0.49%)</title><rect x="53.7280%" y="469" width="0.4948%" height="15" fill="rgb(214,114,0)" fg:x="3149" fg:w="29"/><text x="53.9780%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (11 samples, 0.19%)</title><rect x="54.2228%" y="485" width="0.1877%" height="15" fill="rgb(225,125,0)" fg:x="3178" fg:w="11"/><text x="54.4728%" y="495.50"></text></g><g><title>&lt;alc::keyboard::key::Hand as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="54.4105%" y="469" width="0.0171%" height="15" fill="rgb(107,218,218)" fg:x="3189" fg:w="1"/><text x="54.6605%" y="479.50"></text></g><g><title>core::cmp::PartialEq::ne (5 samples, 0.09%)</title><rect x="54.4105%" y="485" width="0.0853%" height="15" fill="rgb(201,101,0)" fg:x="3189" fg:w="5"/><text x="54.6605%" y="495.50"></text></g><g><title>&lt;alc::objective::scoring::RollDirection as core::cmp::PartialEq&gt;::eq (4 samples, 0.07%)</title><rect x="54.4276%" y="469" width="0.0682%" height="15" fill="rgb(72,185,185)" fg:x="3190" fg:w="4"/><text x="54.6776%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::gt (71 samples, 1.21%)</title><rect x="54.4958%" y="485" width="1.2114%" height="15" fill="rgb(205,105,0)" fg:x="3194" fg:w="71"/><text x="54.7458%" y="495.50"></text></g><g><title>&lt;alc::keyboard::key::Finger as core::cmp::PartialOrd&gt;::partial_cmp (71 samples, 1.21%)</title><rect x="54.4958%" y="469" width="1.2114%" height="15" fill="rgb(98,209,209)" fg:x="3194" fg:w="71"/><text x="54.7458%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (5 samples, 0.09%)</title><rect x="55.7072%" y="485" width="0.0853%" height="15" fill="rgb(234,134,0)" fg:x="3265" fg:w="5"/><text x="55.9572%" y="495.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (5 samples, 0.09%)</title><rect x="55.7072%" y="469" width="0.0853%" height="15" fill="rgb(235,135,0)" fg:x="3265" fg:w="5"/><text x="55.9572%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::step_by (18 samples, 0.31%)</title><rect x="55.7925%" y="485" width="0.3071%" height="15" fill="rgb(247,147,0)" fg:x="3270" fg:w="18"/><text x="56.0425%" y="495.50"></text></g><g><title>core::iter::adapters::step_by::StepBy&lt;I&gt;::new (18 samples, 0.31%)</title><rect x="55.7925%" y="469" width="0.3071%" height="15" fill="rgb(194,94,0)" fg:x="3270" fg:w="18"/><text x="56.0425%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::iter::adapters::step_by::SpecRangeSetup&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::setup (18 samples, 0.31%)</title><rect x="55.7925%" y="453" width="0.3071%" height="15" fill="rgb(221,121,0)" fg:x="3270" fg:w="18"/><text x="56.0425%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::div_ceil (18 samples, 0.31%)</title><rect x="55.7925%" y="437" width="0.3071%" height="15" fill="rgb(234,134,0)" fg:x="3270" fg:w="18"/><text x="56.0425%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.12%)</title><rect x="57.1404%" y="437" width="0.1194%" height="15" fill="rgb(194,94,0)" fg:x="3349" fg:w="7"/><text x="57.3904%" y="447.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&lt;&amp;f64&gt;&gt;::sum::_{{closure}} (35 samples, 0.60%)</title><rect x="57.2599%" y="437" width="0.5972%" height="15" fill="rgb(66,179,179)" fg:x="3356" fg:w="35"/><text x="57.5099%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&lt;&amp;f64&gt;&gt;::add (35 samples, 0.60%)</title><rect x="57.2599%" y="421" width="0.5972%" height="15" fill="rgb(72,185,185)" fg:x="3356" fg:w="35"/><text x="57.5099%" y="431.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (35 samples, 0.60%)</title><rect x="57.2599%" y="405" width="0.5972%" height="15" fill="rgb(69,182,182)" fg:x="3356" fg:w="35"/><text x="57.5099%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.05%)</title><rect x="57.8570%" y="437" width="0.0512%" height="15" fill="rgb(239,139,0)" fg:x="3391" fg:w="3"/><text x="58.1070%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (109 samples, 1.86%)</title><rect x="56.0996%" y="485" width="1.8598%" height="15" fill="rgb(226,126,0)" fg:x="3288" fg:w="109"/><text x="56.3496%" y="495.50">c..</text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&lt;&amp;f64&gt;&gt;::sum (109 samples, 1.86%)</title><rect x="56.0996%" y="469" width="1.8598%" height="15" fill="rgb(81,193,193)" fg:x="3288" fg:w="109"/><text x="56.3496%" y="479.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (109 samples, 1.86%)</title><rect x="56.0996%" y="453" width="1.8598%" height="15" fill="rgb(220,120,0)" fg:x="3288" fg:w="109"/><text x="56.3496%" y="463.50">&lt;..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (3 samples, 0.05%)</title><rect x="57.9082%" y="437" width="0.0512%" height="15" fill="rgb(191,91,0)" fg:x="3394" fg:w="3"/><text x="58.1582%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (3 samples, 0.05%)</title><rect x="57.9082%" y="421" width="0.0512%" height="15" fill="rgb(199,99,0)" fg:x="3394" fg:w="3"/><text x="58.1582%" y="431.50"></text></g><g><title>core::num::&lt;impl i8&gt;::abs (13 samples, 0.22%)</title><rect x="57.9594%" y="485" width="0.2218%" height="15" fill="rgb(230,130,0)" fg:x="3397" fg:w="13"/><text x="58.2094%" y="495.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.03%)</title><rect x="58.3006%" y="389" width="0.0341%" height="15" fill="rgb(223,223,67)" fg:x="3417" fg:w="2"/><text x="58.5506%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.03%)</title><rect x="58.3006%" y="373" width="0.0341%" height="15" fill="rgb(233,133,0)" fg:x="3417" fg:w="2"/><text x="58.5506%" y="383.50"></text></g><g><title>__rust_dealloc (4 samples, 0.07%)</title><rect x="58.3348%" y="389" width="0.0682%" height="15" fill="rgb(200,200,59)" fg:x="3419" fg:w="4"/><text x="58.5848%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.84%)</title><rect x="58.1812%" y="421" width="0.8360%" height="15" fill="rgb(208,108,0)" fg:x="3410" fg:w="49"/><text x="58.4312%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.84%)</title><rect x="58.1812%" y="405" width="0.8360%" height="15" fill="rgb(206,106,0)" fg:x="3410" fg:w="49"/><text x="58.4312%" y="415.50"></text></g><g><title>cfree (36 samples, 0.61%)</title><rect x="58.4030%" y="389" width="0.6142%" height="15" fill="rgb(213,213,64)" fg:x="3423" fg:w="36"/><text x="58.6530%" y="399.50"></text></g><g><title>[libc.so.6] (21 samples, 0.36%)</title><rect x="58.6589%" y="373" width="0.3583%" height="15" fill="rgb(226,226,68)" fg:x="3438" fg:w="21"/><text x="58.9089%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (53 samples, 0.90%)</title><rect x="58.1812%" y="485" width="0.9043%" height="15" fill="rgb(200,100,0)" fg:x="3410" fg:w="53"/><text x="58.4312%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (53 samples, 0.90%)</title><rect x="58.1812%" y="469" width="0.9043%" height="15" fill="rgb(234,134,0)" fg:x="3410" fg:w="53"/><text x="58.4312%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (53 samples, 0.90%)</title><rect x="58.1812%" y="453" width="0.9043%" height="15" fill="rgb(232,132,0)" fg:x="3410" fg:w="53"/><text x="58.4312%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.90%)</title><rect x="58.1812%" y="437" width="0.9043%" height="15" fill="rgb(213,113,0)" fg:x="3410" fg:w="53"/><text x="58.4312%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.07%)</title><rect x="59.0172%" y="421" width="0.0682%" height="15" fill="rgb(209,109,0)" fg:x="3459" fg:w="4"/><text x="59.2672%" y="431.50"></text></g><g><title>__rdl_dealloc (10 samples, 0.17%)</title><rect x="59.1025%" y="405" width="0.1706%" height="15" fill="rgb(200,200,59)" fg:x="3464" fg:w="10"/><text x="59.3525%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (10 samples, 0.17%)</title><rect x="59.1025%" y="389" width="0.1706%" height="15" fill="rgb(202,102,0)" fg:x="3464" fg:w="10"/><text x="59.3525%" y="399.50"></text></g><g><title>__rust_dealloc (9 samples, 0.15%)</title><rect x="59.2732%" y="405" width="0.1536%" height="15" fill="rgb(176,176,50)" fg:x="3474" fg:w="9"/><text x="59.5232%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (111 samples, 1.89%)</title><rect x="59.1025%" y="437" width="1.8939%" height="15" fill="rgb(196,96,0)" fg:x="3464" fg:w="111"/><text x="59.3525%" y="447.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (111 samples, 1.89%)</title><rect x="59.1025%" y="421" width="1.8939%" height="15" fill="rgb(252,152,0)" fg:x="3464" fg:w="111"/><text x="59.3525%" y="431.50">a..</text></g><g><title>cfree (92 samples, 1.57%)</title><rect x="59.4267%" y="405" width="1.5697%" height="15" fill="rgb(189,189,55)" fg:x="3483" fg:w="92"/><text x="59.6767%" y="415.50"></text></g><g><title>[libc.so.6] (68 samples, 1.16%)</title><rect x="59.8362%" y="389" width="1.1602%" height="15" fill="rgb(199,199,59)" fg:x="3507" fg:w="68"/><text x="60.0862%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (124 samples, 2.12%)</title><rect x="59.0855%" y="485" width="2.1157%" height="15" fill="rgb(193,93,0)" fg:x="3463" fg:w="124"/><text x="59.3355%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (124 samples, 2.12%)</title><rect x="59.0855%" y="469" width="2.1157%" height="15" fill="rgb(204,104,0)" fg:x="3463" fg:w="124"/><text x="59.3355%" y="479.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 2.12%)</title><rect x="59.0855%" y="453" width="2.1157%" height="15" fill="rgb(217,117,0)" fg:x="3463" fg:w="124"/><text x="59.3355%" y="463.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.20%)</title><rect x="60.9964%" y="437" width="0.2047%" height="15" fill="rgb(211,111,0)" fg:x="3575" fg:w="12"/><text x="61.2464%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3 samples, 0.05%)</title><rect x="61.1500%" y="421" width="0.0512%" height="15" fill="rgb(222,122,0)" fg:x="3584" fg:w="3"/><text x="61.4000%" y="431.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.09%)</title><rect x="61.2012%" y="405" width="0.0853%" height="15" fill="rgb(211,211,63)" fg:x="3587" fg:w="5"/><text x="61.4512%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.09%)</title><rect x="61.2012%" y="389" width="0.0853%" height="15" fill="rgb(202,102,0)" fg:x="3587" fg:w="5"/><text x="61.4512%" y="399.50"></text></g><g><title>__rust_dealloc (5 samples, 0.09%)</title><rect x="61.2865%" y="405" width="0.0853%" height="15" fill="rgb(229,229,69)" fg:x="3592" fg:w="5"/><text x="61.5365%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (63 samples, 1.07%)</title><rect x="61.2012%" y="437" width="1.0749%" height="15" fill="rgb(212,112,0)" fg:x="3587" fg:w="63"/><text x="61.4512%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (63 samples, 1.07%)</title><rect x="61.2012%" y="421" width="1.0749%" height="15" fill="rgb(216,116,0)" fg:x="3587" fg:w="63"/><text x="61.4512%" y="431.50"></text></g><g><title>cfree (53 samples, 0.90%)</title><rect x="61.3718%" y="405" width="0.9043%" height="15" fill="rgb(227,227,69)" fg:x="3597" fg:w="53"/><text x="61.6218%" y="415.50"></text></g><g><title>[libc.so.6] (33 samples, 0.56%)</title><rect x="61.7130%" y="389" width="0.5630%" height="15" fill="rgb(183,183,53)" fg:x="3617" fg:w="33"/><text x="61.9630%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (65 samples, 1.11%)</title><rect x="61.2012%" y="485" width="1.1090%" height="15" fill="rgb(219,119,0)" fg:x="3587" fg:w="65"/><text x="61.4512%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (65 samples, 1.11%)</title><rect x="61.2012%" y="469" width="1.1090%" height="15" fill="rgb(225,125,0)" fg:x="3587" fg:w="65"/><text x="61.4512%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 1.11%)</title><rect x="61.2012%" y="453" width="1.1090%" height="15" fill="rgb(251,151,0)" fg:x="3587" fg:w="65"/><text x="61.4512%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.03%)</title><rect x="62.2761%" y="437" width="0.0341%" height="15" fill="rgb(252,152,0)" fg:x="3650" fg:w="2"/><text x="62.5261%" y="447.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.09%)</title><rect x="62.3102%" y="341" width="0.0853%" height="15" fill="rgb(226,226,68)" fg:x="3652" fg:w="5"/><text x="62.5602%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.09%)</title><rect x="62.3102%" y="325" width="0.0853%" height="15" fill="rgb(251,151,0)" fg:x="3652" fg:w="5"/><text x="62.5602%" y="335.50"></text></g><g><title>__rust_dealloc (3 samples, 0.05%)</title><rect x="62.3955%" y="341" width="0.0512%" height="15" fill="rgb(214,214,64)" fg:x="3657" fg:w="3"/><text x="62.6455%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (186 samples, 3.17%)</title><rect x="62.3102%" y="373" width="3.1735%" height="15" fill="rgb(221,121,0)" fg:x="3652" fg:w="186"/><text x="62.5602%" y="383.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (186 samples, 3.17%)</title><rect x="62.3102%" y="357" width="3.1735%" height="15" fill="rgb(238,138,0)" fg:x="3652" fg:w="186"/><text x="62.5602%" y="367.50">all..</text></g><g><title>cfree (178 samples, 3.04%)</title><rect x="62.4467%" y="341" width="3.0370%" height="15" fill="rgb(202,202,60)" fg:x="3660" fg:w="178"/><text x="62.6967%" y="351.50">cfr..</text></g><g><title>[libc.so.6] (149 samples, 2.54%)</title><rect x="62.9415%" y="325" width="2.5422%" height="15" fill="rgb(222,222,67)" fg:x="3689" fg:w="149"/><text x="63.1915%" y="335.50">[l..</text></g><g><title>[libc.so.6] (62 samples, 1.06%)</title><rect x="64.4259%" y="309" width="1.0578%" height="15" fill="rgb(223,223,67)" fg:x="3776" fg:w="62"/><text x="64.6759%" y="319.50"></text></g><g><title>[libc.so.6] (16 samples, 0.27%)</title><rect x="65.2107%" y="293" width="0.2730%" height="15" fill="rgb(203,203,60)" fg:x="3822" fg:w="16"/><text x="65.4607%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt;&gt; (194 samples, 3.31%)</title><rect x="62.3102%" y="485" width="3.3100%" height="15" fill="rgb(225,125,0)" fg:x="3652" fg:w="194"/><text x="62.5602%" y="495.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (194 samples, 3.31%)</title><rect x="62.3102%" y="469" width="3.3100%" height="15" fill="rgb(217,117,0)" fg:x="3652" fg:w="194"/><text x="62.5602%" y="479.50">cor..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 3.31%)</title><rect x="62.3102%" y="453" width="3.3100%" height="15" fill="rgb(202,102,0)" fg:x="3652" fg:w="194"/><text x="62.5602%" y="463.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (194 samples, 3.31%)</title><rect x="62.3102%" y="437" width="3.3100%" height="15" fill="rgb(252,152,0)" fg:x="3652" fg:w="194"/><text x="62.5602%" y="447.50">cor..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 3.31%)</title><rect x="62.3102%" y="421" width="3.3100%" height="15" fill="rgb(57,171,171)" fg:x="3652" fg:w="194"/><text x="62.5602%" y="431.50">&lt;&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (194 samples, 3.31%)</title><rect x="62.3102%" y="405" width="3.3100%" height="15" fill="rgb(251,151,0)" fg:x="3652" fg:w="194"/><text x="62.5602%" y="415.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 3.31%)</title><rect x="62.3102%" y="389" width="3.3100%" height="15" fill="rgb(238,138,0)" fg:x="3652" fg:w="194"/><text x="62.5602%" y="399.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.14%)</title><rect x="65.4837%" y="373" width="0.1365%" height="15" fill="rgb(247,147,0)" fg:x="3838" fg:w="8"/><text x="65.7337%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (6 samples, 0.10%)</title><rect x="65.5178%" y="357" width="0.1024%" height="15" fill="rgb(212,112,0)" fg:x="3840" fg:w="6"/><text x="65.7678%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="65.6202%" y="485" width="0.0171%" height="15" fill="rgb(232,132,0)" fg:x="3846" fg:w="1"/><text x="65.8702%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="65.6202%" y="469" width="0.0171%" height="15" fill="rgb(220,120,0)" fg:x="3846" fg:w="1"/><text x="65.8702%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="65.6202%" y="453" width="0.0171%" height="15" fill="rgb(195,95,0)" fg:x="3846" fg:w="1"/><text x="65.8702%" y="463.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (2,576 samples, 43.95%)</title><rect x="21.7369%" y="501" width="43.9515%" height="15" fill="rgb(56,171,171)" fg:x="1274" fg:w="2576"/><text x="21.9869%" y="511.50">&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scori..</text></g><g><title>pow (3 samples, 0.05%)</title><rect x="65.6373%" y="485" width="0.0512%" height="15" fill="rgb(175,175,50)" fg:x="3847" fg:w="3"/><text x="65.8873%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="65.6884%" y="501" width="0.0512%" height="15" fill="rgb(192,92,0)" fg:x="3850" fg:w="3"/><text x="65.9384%" y="511.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="65.7226%" y="485" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="3852" fg:w="1"/><text x="65.9726%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="65.7396%" y="501" width="0.0341%" height="15" fill="rgb(239,139,0)" fg:x="3853" fg:w="2"/><text x="65.9896%" y="511.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="65.7396%" y="485" width="0.0341%" height="15" fill="rgb(52,167,167)" fg:x="3853" fg:w="2"/><text x="65.9896%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="65.7396%" y="469" width="0.0341%" height="15" fill="rgb(105,215,215)" fg:x="3853" fg:w="2"/><text x="65.9896%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="65.7567%" y="453" width="0.0171%" height="15" fill="rgb(51,165,165)" fg:x="3854" fg:w="1"/><text x="66.0067%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="65.7567%" y="437" width="0.0171%" height="15" fill="rgb(51,166,166)" fg:x="3854" fg:w="1"/><text x="66.0067%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="65.7567%" y="421" width="0.0171%" height="15" fill="rgb(84,196,196)" fg:x="3854" fg:w="1"/><text x="66.0067%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="65.7567%" y="405" width="0.0171%" height="15" fill="rgb(247,147,0)" fg:x="3854" fg:w="1"/><text x="66.0067%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="65.7567%" y="389" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="3854" fg:w="1"/><text x="66.0067%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="66.2856%" y="453" width="0.0171%" height="15" fill="rgb(193,93,0)" fg:x="3885" fg:w="1"/><text x="66.5356%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="66.2856%" y="437" width="0.0171%" height="15" fill="rgb(249,149,0)" fg:x="3885" fg:w="1"/><text x="66.5356%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="66.2856%" y="421" width="0.0171%" height="15" fill="rgb(251,151,0)" fg:x="3885" fg:w="1"/><text x="66.5356%" y="431.50"></text></g><g><title>__rdl_alloc (11 samples, 0.19%)</title><rect x="66.5927%" y="309" width="0.1877%" height="15" fill="rgb(212,212,63)" fg:x="3903" fg:w="11"/><text x="66.8427%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.17%)</title><rect x="66.6098%" y="293" width="0.1706%" height="15" fill="rgb(193,93,0)" fg:x="3904" fg:w="10"/><text x="66.8598%" y="303.50"></text></g><g><title>__rust_alloc (4 samples, 0.07%)</title><rect x="66.7804%" y="309" width="0.0682%" height="15" fill="rgb(198,198,58)" fg:x="3914" fg:w="4"/><text x="67.0304%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 1.13%)</title><rect x="66.4904%" y="357" width="1.1261%" height="15" fill="rgb(246,146,0)" fg:x="3897" fg:w="66"/><text x="66.7404%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 1.13%)</title><rect x="66.4904%" y="341" width="1.1261%" height="15" fill="rgb(219,119,0)" fg:x="3897" fg:w="66"/><text x="66.7404%" y="351.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 1.13%)</title><rect x="66.4904%" y="325" width="1.1261%" height="15" fill="rgb(200,100,0)" fg:x="3897" fg:w="66"/><text x="66.7404%" y="335.50"></text></g><g><title>malloc (45 samples, 0.77%)</title><rect x="66.8487%" y="309" width="0.7678%" height="15" fill="rgb(178,178,51)" fg:x="3918" fg:w="45"/><text x="67.0987%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="67.5994%" y="293" width="0.0171%" height="15" fill="rgb(200,200,59)" fg:x="3962" fg:w="1"/><text x="67.8494%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (80 samples, 1.36%)</title><rect x="66.3539%" y="405" width="1.3650%" height="15" fill="rgb(237,137,0)" fg:x="3889" fg:w="80"/><text x="66.6039%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (80 samples, 1.36%)</title><rect x="66.3539%" y="389" width="1.3650%" height="15" fill="rgb(220,120,0)" fg:x="3889" fg:w="80"/><text x="66.6039%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (80 samples, 1.36%)</title><rect x="66.3539%" y="373" width="1.3650%" height="15" fill="rgb(208,108,0)" fg:x="3889" fg:w="80"/><text x="66.6039%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.10%)</title><rect x="67.6164%" y="357" width="0.1024%" height="15" fill="rgb(241,141,0)" fg:x="3963" fg:w="6"/><text x="67.8664%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.10%)</title><rect x="67.6164%" y="341" width="0.1024%" height="15" fill="rgb(253,153,0)" fg:x="3963" fg:w="6"/><text x="67.8664%" y="351.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (105 samples, 1.79%)</title><rect x="66.2856%" y="485" width="1.7915%" height="15" fill="rgb(56,171,171)" fg:x="3885" fg:w="105"/><text x="66.5356%" y="495.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (105 samples, 1.79%)</title><rect x="66.2856%" y="469" width="1.7915%" height="15" fill="rgb(245,145,0)" fg:x="3885" fg:w="105"/><text x="66.5356%" y="479.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (104 samples, 1.77%)</title><rect x="66.3027%" y="453" width="1.7744%" height="15" fill="rgb(241,141,0)" fg:x="3886" fg:w="104"/><text x="66.5527%" y="463.50">a..</text></g><g><title>alloc::slice::hack::to_vec (104 samples, 1.77%)</title><rect x="66.3027%" y="437" width="1.7744%" height="15" fill="rgb(215,115,0)" fg:x="3886" fg:w="104"/><text x="66.5527%" y="447.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (104 samples, 1.77%)</title><rect x="66.3027%" y="421" width="1.7744%" height="15" fill="rgb(94,206,206)" fg:x="3886" fg:w="104"/><text x="66.5527%" y="431.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.36%)</title><rect x="67.7188%" y="405" width="0.3583%" height="15" fill="rgb(252,152,0)" fg:x="3969" fg:w="21"/><text x="67.9688%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.36%)</title><rect x="67.7188%" y="389" width="0.3583%" height="15" fill="rgb(190,90,0)" fg:x="3969" fg:w="21"/><text x="67.9688%" y="399.50"></text></g><g><title>[libc.so.6] (21 samples, 0.36%)</title><rect x="67.7188%" y="373" width="0.3583%" height="15" fill="rgb(221,221,67)" fg:x="3969" fg:w="21"/><text x="67.9688%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="68.0942%" y="309" width="0.0171%" height="15" fill="rgb(201,201,59)" fg:x="3991" fg:w="1"/><text x="68.3442%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="68.0942%" y="293" width="0.0171%" height="15" fill="rgb(215,115,0)" fg:x="3991" fg:w="1"/><text x="68.3442%" y="303.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="68.0771%" y="485" width="0.0853%" height="15" fill="rgb(57,171,171)" fg:x="3990" fg:w="5"/><text x="68.3271%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="68.0771%" y="469" width="0.0853%" height="15" fill="rgb(213,113,0)" fg:x="3990" fg:w="5"/><text x="68.3271%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.09%)</title><rect x="68.0771%" y="453" width="0.0853%" height="15" fill="rgb(229,129,0)" fg:x="3990" fg:w="5"/><text x="68.3271%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.09%)</title><rect x="68.0771%" y="437" width="0.0853%" height="15" fill="rgb(219,119,0)" fg:x="3990" fg:w="5"/><text x="68.3271%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.09%)</title><rect x="68.0771%" y="421" width="0.0853%" height="15" fill="rgb(56,170,170)" fg:x="3990" fg:w="5"/><text x="68.3271%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.09%)</title><rect x="68.0771%" y="405" width="0.0853%" height="15" fill="rgb(216,116,0)" fg:x="3990" fg:w="5"/><text x="68.3271%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.09%)</title><rect x="68.0771%" y="389" width="0.0853%" height="15" fill="rgb(203,103,0)" fg:x="3990" fg:w="5"/><text x="68.3271%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.09%)</title><rect x="68.0771%" y="373" width="0.0853%" height="15" fill="rgb(248,148,0)" fg:x="3990" fg:w="5"/><text x="68.3271%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.07%)</title><rect x="68.0942%" y="357" width="0.0682%" height="15" fill="rgb(205,105,0)" fg:x="3991" fg:w="4"/><text x="68.3442%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.07%)</title><rect x="68.0942%" y="341" width="0.0682%" height="15" fill="rgb(191,91,0)" fg:x="3991" fg:w="4"/><text x="68.3442%" y="351.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.07%)</title><rect x="68.0942%" y="325" width="0.0682%" height="15" fill="rgb(204,104,0)" fg:x="3991" fg:w="4"/><text x="68.3442%" y="335.50"></text></g><g><title>malloc (3 samples, 0.05%)</title><rect x="68.1112%" y="309" width="0.0512%" height="15" fill="rgb(207,207,61)" fg:x="3992" fg:w="3"/><text x="68.3612%" y="319.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="68.1624%" y="485" width="0.0171%" height="15" fill="rgb(77,190,190)" fg:x="3995" fg:w="1"/><text x="68.4124%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="68.1624%" y="469" width="0.0171%" height="15" fill="rgb(205,105,0)" fg:x="3995" fg:w="1"/><text x="68.4124%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="68.2136%" y="469" width="0.0171%" height="15" fill="rgb(190,90,0)" fg:x="3998" fg:w="1"/><text x="68.4636%" y="479.50"></text></g><g><title>__rdl_alloc (8 samples, 0.14%)</title><rect x="68.6743%" y="245" width="0.1365%" height="15" fill="rgb(225,225,68)" fg:x="4025" fg:w="8"/><text x="68.9243%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8 samples, 0.14%)</title><rect x="68.6743%" y="229" width="0.1365%" height="15" fill="rgb(191,91,0)" fg:x="4025" fg:w="8"/><text x="68.9243%" y="239.50"></text></g><g><title>__rust_alloc (6 samples, 0.10%)</title><rect x="68.8108%" y="245" width="0.1024%" height="15" fill="rgb(215,215,64)" fg:x="4033" fg:w="6"/><text x="69.0608%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (148 samples, 2.53%)</title><rect x="68.5549%" y="293" width="2.5252%" height="15" fill="rgb(203,103,0)" fg:x="4018" fg:w="148"/><text x="68.8049%" y="303.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (148 samples, 2.53%)</title><rect x="68.5549%" y="277" width="2.5252%" height="15" fill="rgb(218,118,0)" fg:x="4018" fg:w="148"/><text x="68.8049%" y="287.50">al..</text></g><g><title>alloc::alloc::alloc (148 samples, 2.53%)</title><rect x="68.5549%" y="261" width="2.5252%" height="15" fill="rgb(248,148,0)" fg:x="4018" fg:w="148"/><text x="68.8049%" y="271.50">al..</text></g><g><title>malloc (127 samples, 2.17%)</title><rect x="68.9132%" y="245" width="2.1669%" height="15" fill="rgb(198,198,58)" fg:x="4039" fg:w="127"/><text x="69.1632%" y="255.50">m..</text></g><g><title>[libc.so.6] (68 samples, 1.16%)</title><rect x="69.9198%" y="229" width="1.1602%" height="15" fill="rgb(182,182,52)" fg:x="4098" fg:w="68"/><text x="70.1698%" y="239.50"></text></g><g><title>[libc.so.6] (7 samples, 0.12%)</title><rect x="70.9606%" y="213" width="0.1194%" height="15" fill="rgb(217,217,65)" fg:x="4159" fg:w="7"/><text x="71.2106%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (159 samples, 2.71%)</title><rect x="68.4525%" y="341" width="2.7128%" height="15" fill="rgb(229,129,0)" fg:x="4012" fg:w="159"/><text x="68.7025%" y="351.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (159 samples, 2.71%)</title><rect x="68.4525%" y="325" width="2.7128%" height="15" fill="rgb(240,140,0)" fg:x="4012" fg:w="159"/><text x="68.7025%" y="335.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (159 samples, 2.71%)</title><rect x="68.4525%" y="309" width="2.7128%" height="15" fill="rgb(192,92,0)" fg:x="4012" fg:w="159"/><text x="68.7025%" y="319.50">al..</text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.09%)</title><rect x="71.0800%" y="293" width="0.0853%" height="15" fill="rgb(228,128,0)" fg:x="4166" fg:w="5"/><text x="71.3300%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (5 samples, 0.09%)</title><rect x="71.0800%" y="277" width="0.0853%" height="15" fill="rgb(249,149,0)" fg:x="4166" fg:w="5"/><text x="71.3300%" y="287.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (201 samples, 3.43%)</title><rect x="68.4525%" y="421" width="3.4294%" height="15" fill="rgb(61,175,175)" fg:x="4012" fg:w="201"/><text x="68.7025%" y="431.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (201 samples, 3.43%)</title><rect x="68.4525%" y="405" width="3.4294%" height="15" fill="rgb(193,93,0)" fg:x="4012" fg:w="201"/><text x="68.7025%" y="415.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (201 samples, 3.43%)</title><rect x="68.4525%" y="389" width="3.4294%" height="15" fill="rgb(213,113,0)" fg:x="4012" fg:w="201"/><text x="68.7025%" y="399.50">all..</text></g><g><title>alloc::slice::hack::to_vec (201 samples, 3.43%)</title><rect x="68.4525%" y="373" width="3.4294%" height="15" fill="rgb(222,122,0)" fg:x="4012" fg:w="201"/><text x="68.7025%" y="383.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (201 samples, 3.43%)</title><rect x="68.4525%" y="357" width="3.4294%" height="15" fill="rgb(71,184,184)" fg:x="4012" fg:w="201"/><text x="68.7025%" y="367.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (42 samples, 0.72%)</title><rect x="71.1653%" y="341" width="0.7166%" height="15" fill="rgb(254,154,0)" fg:x="4171" fg:w="42"/><text x="71.4153%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.72%)</title><rect x="71.1653%" y="325" width="0.7166%" height="15" fill="rgb(230,130,0)" fg:x="4171" fg:w="42"/><text x="71.4153%" y="335.50"></text></g><g><title>[libc.so.6] (34 samples, 0.58%)</title><rect x="71.3018%" y="309" width="0.5801%" height="15" fill="rgb(219,219,66)" fg:x="4179" fg:w="34"/><text x="71.5518%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.10%)</title><rect x="71.8819%" y="421" width="0.1024%" height="15" fill="rgb(244,144,0)" fg:x="4213" fg:w="6"/><text x="72.1319%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.09%)</title><rect x="71.8990%" y="405" width="0.0853%" height="15" fill="rgb(208,108,0)" fg:x="4214" fg:w="5"/><text x="72.1490%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.09%)</title><rect x="71.8990%" y="389" width="0.0853%" height="15" fill="rgb(251,151,0)" fg:x="4214" fg:w="5"/><text x="72.1490%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.09%)</title><rect x="71.8990%" y="373" width="0.0853%" height="15" fill="rgb(215,115,0)" fg:x="4214" fg:w="5"/><text x="72.1490%" y="383.50"></text></g><g><title>__rdl_alloc (3 samples, 0.05%)</title><rect x="71.9843%" y="325" width="0.0512%" height="15" fill="rgb(199,199,58)" fg:x="4219" fg:w="3"/><text x="72.2343%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.05%)</title><rect x="71.9843%" y="309" width="0.0512%" height="15" fill="rgb(213,113,0)" fg:x="4219" fg:w="3"/><text x="72.2343%" y="319.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="72.0355%" y="325" width="0.0171%" height="15" fill="rgb(215,215,64)" fg:x="4222" fg:w="1"/><text x="72.2855%" y="335.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="72.0526%" y="325" width="0.0171%" height="15" fill="rgb(219,119,0)" fg:x="4223" fg:w="1"/><text x="72.3026%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.39%)</title><rect x="71.9843%" y="421" width="0.3924%" height="15" fill="rgb(195,95,0)" fg:x="4219" fg:w="23"/><text x="72.2343%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.39%)</title><rect x="71.9843%" y="405" width="0.3924%" height="15" fill="rgb(212,112,0)" fg:x="4219" fg:w="23"/><text x="72.2343%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.39%)</title><rect x="71.9843%" y="389" width="0.3924%" height="15" fill="rgb(230,130,0)" fg:x="4219" fg:w="23"/><text x="72.2343%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.39%)</title><rect x="71.9843%" y="373" width="0.3924%" height="15" fill="rgb(197,97,0)" fg:x="4219" fg:w="23"/><text x="72.2343%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.39%)</title><rect x="71.9843%" y="357" width="0.3924%" height="15" fill="rgb(204,104,0)" fg:x="4219" fg:w="23"/><text x="72.2343%" y="367.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.39%)</title><rect x="71.9843%" y="341" width="0.3924%" height="15" fill="rgb(251,151,0)" fg:x="4219" fg:w="23"/><text x="72.2343%" y="351.50"></text></g><g><title>malloc (18 samples, 0.31%)</title><rect x="72.0696%" y="325" width="0.3071%" height="15" fill="rgb(217,217,65)" fg:x="4224" fg:w="18"/><text x="72.3196%" y="335.50"></text></g><g><title>[libc.so.6] (7 samples, 0.12%)</title><rect x="72.2573%" y="309" width="0.1194%" height="15" fill="rgb(218,218,65)" fg:x="4235" fg:w="7"/><text x="72.5073%" y="319.50"></text></g><g><title>[libc.so.6] (4 samples, 0.07%)</title><rect x="72.3085%" y="293" width="0.0682%" height="15" fill="rgb(180,180,52)" fg:x="4238" fg:w="4"/><text x="72.5585%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (249 samples, 4.25%)</title><rect x="68.1795%" y="485" width="4.2484%" height="15" fill="rgb(218,118,0)" fg:x="3996" fg:w="249"/><text x="68.4295%" y="495.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (246 samples, 4.20%)</title><rect x="68.2307%" y="469" width="4.1972%" height="15" fill="rgb(230,130,0)" fg:x="3999" fg:w="246"/><text x="68.4807%" y="479.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (246 samples, 4.20%)</title><rect x="68.2307%" y="453" width="4.1972%" height="15" fill="rgb(210,110,0)" fg:x="3999" fg:w="246"/><text x="68.4807%" y="463.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (246 samples, 4.20%)</title><rect x="68.2307%" y="437" width="4.1972%" height="15" fill="rgb(79,192,192)" fg:x="3999" fg:w="246"/><text x="68.4807%" y="447.50">&lt;T as..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.05%)</title><rect x="72.3767%" y="421" width="0.0512%" height="15" fill="rgb(226,126,0)" fg:x="4242" fg:w="3"/><text x="72.6267%" y="431.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="72.4279%" y="469" width="0.0171%" height="15" fill="rgb(197,97,0)" fg:x="4245" fg:w="1"/><text x="72.6779%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.03%)</title><rect x="72.4279%" y="485" width="0.0341%" height="15" fill="rgb(242,142,0)" fg:x="4245" fg:w="2"/><text x="72.6779%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="72.4450%" y="469" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="4246" fg:w="1"/><text x="72.6950%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.14%)</title><rect x="72.4620%" y="485" width="0.1365%" height="15" fill="rgb(214,114,0)" fg:x="4247" fg:w="8"/><text x="72.7120%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="72.5985%" y="485" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="4255" fg:w="1"/><text x="72.8485%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (7 samples, 0.12%)</title><rect x="72.6156%" y="437" width="0.1194%" height="15" fill="rgb(208,108,0)" fg:x="4256" fg:w="7"/><text x="72.8656%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (6 samples, 0.10%)</title><rect x="72.8374%" y="405" width="0.1024%" height="15" fill="rgb(231,131,0)" fg:x="4269" fg:w="6"/><text x="73.0874%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (6 samples, 0.10%)</title><rect x="72.8374%" y="389" width="0.1024%" height="15" fill="rgb(231,131,0)" fg:x="4269" fg:w="6"/><text x="73.0874%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.09%)</title><rect x="73.0933%" y="373" width="0.0853%" height="15" fill="rgb(195,95,0)" fg:x="4284" fg:w="5"/><text x="73.3433%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.14%)</title><rect x="73.1786%" y="373" width="0.1365%" height="15" fill="rgb(252,152,0)" fg:x="4289" fg:w="8"/><text x="73.4286%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3 samples, 0.05%)</title><rect x="73.2639%" y="357" width="0.0512%" height="15" fill="rgb(245,145,0)" fg:x="4294" fg:w="3"/><text x="73.5139%" y="367.50"></text></g><g><title>__rdl_realloc (24 samples, 0.41%)</title><rect x="73.5711%" y="309" width="0.4095%" height="15" fill="rgb(177,177,50)" fg:x="4312" fg:w="24"/><text x="73.8211%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (15 samples, 0.26%)</title><rect x="73.7246%" y="293" width="0.2559%" height="15" fill="rgb(191,91,0)" fg:x="4321" fg:w="15"/><text x="73.9746%" y="303.50"></text></g><g><title>__rust_realloc (2 samples, 0.03%)</title><rect x="73.9805%" y="309" width="0.0341%" height="15" fill="rgb(186,186,54)" fg:x="4336" fg:w="2"/><text x="74.2305%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (731 samples, 12.47%)</title><rect x="73.5711%" y="357" width="12.4723%" height="15" fill="rgb(219,119,0)" fg:x="4312" fg:w="731"/><text x="73.8211%" y="367.50">&lt;alloc::alloc::Glob..</text></g><g><title>alloc::alloc::Global::grow_impl (731 samples, 12.47%)</title><rect x="73.5711%" y="341" width="12.4723%" height="15" fill="rgb(241,141,0)" fg:x="4312" fg:w="731"/><text x="73.8211%" y="351.50">alloc::alloc::Globa..</text></g><g><title>alloc::alloc::realloc (731 samples, 12.47%)</title><rect x="73.5711%" y="325" width="12.4723%" height="15" fill="rgb(192,92,0)" fg:x="4312" fg:w="731"/><text x="73.8211%" y="335.50">alloc::alloc::reall..</text></g><g><title>realloc (705 samples, 12.03%)</title><rect x="74.0147%" y="309" width="12.0287%" height="15" fill="rgb(203,203,60)" fg:x="4338" fg:w="705"/><text x="74.2647%" y="319.50">realloc</text></g><g><title>[libc.so.6] (610 samples, 10.41%)</title><rect x="75.6356%" y="293" width="10.4078%" height="15" fill="rgb(209,209,62)" fg:x="4433" fg:w="610"/><text x="75.8856%" y="303.50">[libc.so.6]</text></g><g><title>[libc.so.6] (546 samples, 9.32%)</title><rect x="76.7275%" y="277" width="9.3158%" height="15" fill="rgb(188,188,54)" fg:x="4497" fg:w="546"/><text x="76.9775%" y="287.50">[libc.so.6]</text></g><g><title>[libc.so.6] (37 samples, 0.63%)</title><rect x="85.4120%" y="261" width="0.6313%" height="15" fill="rgb(201,201,59)" fg:x="5006" fg:w="37"/><text x="85.6620%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (759 samples, 12.95%)</title><rect x="73.3151%" y="373" width="12.9500%" height="15" fill="rgb(244,144,0)" fg:x="4297" fg:w="759"/><text x="73.5651%" y="383.50">alloc::raw_vec::fin..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (13 samples, 0.22%)</title><rect x="86.0433%" y="357" width="0.2218%" height="15" fill="rgb(247,147,0)" fg:x="5043" fg:w="13"/><text x="86.2933%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.09%)</title><rect x="86.2651%" y="373" width="0.0853%" height="15" fill="rgb(216,116,0)" fg:x="5056" fg:w="5"/><text x="86.5151%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (5 samples, 0.09%)</title><rect x="86.2651%" y="357" width="0.0853%" height="15" fill="rgb(190,90,0)" fg:x="5056" fg:w="5"/><text x="86.5151%" y="367.50"></text></g><g><title>core::cmp::max (17 samples, 0.29%)</title><rect x="86.3505%" y="373" width="0.2901%" height="15" fill="rgb(213,113,0)" fg:x="5061" fg:w="17"/><text x="86.6005%" y="383.50"></text></g><g><title>core::cmp::Ord::max (17 samples, 0.29%)</title><rect x="86.3505%" y="357" width="0.2901%" height="15" fill="rgb(237,137,0)" fg:x="5061" fg:w="17"/><text x="86.6005%" y="367.50"></text></g><g><title>core::cmp::max_by (17 samples, 0.29%)</title><rect x="86.3505%" y="341" width="0.2901%" height="15" fill="rgb(242,142,0)" fg:x="5061" fg:w="17"/><text x="86.6005%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (823 samples, 14.04%)</title><rect x="72.7350%" y="437" width="14.0420%" height="15" fill="rgb(252,152,0)" fg:x="4263" fg:w="823"/><text x="72.9850%" y="447.50">alloc::vec::Vec&lt;T,A&gt;:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (823 samples, 14.04%)</title><rect x="72.7350%" y="421" width="14.0420%" height="15" fill="rgb(245,145,0)" fg:x="4263" fg:w="823"/><text x="72.9850%" y="431.50">alloc::raw_vec::RawVe..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (811 samples, 13.84%)</title><rect x="72.9398%" y="405" width="13.8372%" height="15" fill="rgb(245,145,0)" fg:x="4275" fg:w="811"/><text x="73.1898%" y="415.50">alloc::raw_vec::RawVe..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (811 samples, 13.84%)</title><rect x="72.9398%" y="389" width="13.8372%" height="15" fill="rgb(207,107,0)" fg:x="4275" fg:w="811"/><text x="73.1898%" y="399.50">alloc::raw_vec::RawVe..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (8 samples, 0.14%)</title><rect x="86.6405%" y="373" width="0.1365%" height="15" fill="rgb(192,92,0)" fg:x="5078" fg:w="8"/><text x="86.8905%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (8 samples, 0.14%)</title><rect x="86.6405%" y="357" width="0.1365%" height="15" fill="rgb(219,119,0)" fg:x="5078" fg:w="8"/><text x="86.8905%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.22%)</title><rect x="86.7770%" y="437" width="0.2218%" height="15" fill="rgb(196,96,0)" fg:x="5086" fg:w="13"/><text x="87.0270%" y="447.50"></text></g><g><title>[libc.so.6] (13 samples, 0.22%)</title><rect x="86.7770%" y="421" width="0.2218%" height="15" fill="rgb(201,201,59)" fg:x="5086" fg:w="13"/><text x="87.0270%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (853 samples, 14.55%)</title><rect x="72.6156%" y="453" width="14.5538%" height="15" fill="rgb(250,150,0)" fg:x="4256" fg:w="853"/><text x="72.8656%" y="463.50">alloc::vec::Vec&lt;T,A&gt;::..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.17%)</title><rect x="86.9988%" y="437" width="0.1706%" height="15" fill="rgb(204,104,0)" fg:x="5099" fg:w="10"/><text x="87.2488%" y="447.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (861 samples, 14.69%)</title><rect x="72.6156%" y="485" width="14.6903%" height="15" fill="rgb(83,195,195)" fg:x="4256" fg:w="861"/><text x="72.8656%" y="495.50">alc::keyboard::LayoutP..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (861 samples, 14.69%)</title><rect x="72.6156%" y="469" width="14.6903%" height="15" fill="rgb(241,141,0)" fg:x="4256" fg:w="861"/><text x="72.8656%" y="479.50">alloc::vec::Vec&lt;T,A&gt;::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (8 samples, 0.14%)</title><rect x="87.1694%" y="453" width="0.1365%" height="15" fill="rgb(190,90,0)" fg:x="5109" fg:w="8"/><text x="87.4194%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.14%)</title><rect x="87.1694%" y="437" width="0.1365%" height="15" fill="rgb(236,136,0)" fg:x="5109" fg:w="8"/><text x="87.4194%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.12%)</title><rect x="87.1865%" y="421" width="0.1194%" height="15" fill="rgb(236,136,0)" fg:x="5110" fg:w="7"/><text x="87.4365%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.12%)</title><rect x="87.1865%" y="405" width="0.1194%" height="15" fill="rgb(224,124,0)" fg:x="5110" fg:w="7"/><text x="87.4365%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.09%)</title><rect x="87.3742%" y="325" width="0.0853%" height="15" fill="rgb(219,119,0)" fg:x="5121" fg:w="5"/><text x="87.6242%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.17%)</title><rect x="87.3230%" y="389" width="0.1706%" height="15" fill="rgb(249,149,0)" fg:x="5118" fg:w="10"/><text x="87.5730%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.17%)</title><rect x="87.3230%" y="373" width="0.1706%" height="15" fill="rgb(193,93,0)" fg:x="5118" fg:w="10"/><text x="87.5730%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.17%)</title><rect x="87.3230%" y="357" width="0.1706%" height="15" fill="rgb(251,151,0)" fg:x="5118" fg:w="10"/><text x="87.5730%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.14%)</title><rect x="87.3571%" y="341" width="0.1365%" height="15" fill="rgb(206,106,0)" fg:x="5120" fg:w="8"/><text x="87.6071%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="87.4595%" y="325" width="0.0341%" height="15" fill="rgb(221,121,0)" fg:x="5126" fg:w="2"/><text x="87.7095%" y="335.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="87.4936%" y="389" width="0.0171%" height="15" fill="rgb(200,100,0)" fg:x="5128" fg:w="1"/><text x="87.7436%" y="399.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="87.4936%" y="373" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="5128" fg:w="1"/><text x="87.7436%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="87.4936%" y="357" width="0.0171%" height="15" fill="rgb(205,105,0)" fg:x="5128" fg:w="1"/><text x="87.7436%" y="367.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="87.4936%" y="341" width="0.0171%" height="15" fill="rgb(212,112,0)" fg:x="5128" fg:w="1"/><text x="87.7436%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="87.6472%" y="245" width="0.0171%" height="15" fill="rgb(204,104,0)" fg:x="5137" fg:w="1"/><text x="87.8972%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.12%)</title><rect x="87.6130%" y="261" width="0.1194%" height="15" fill="rgb(246,146,0)" fg:x="5135" fg:w="7"/><text x="87.8630%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.07%)</title><rect x="87.6642%" y="245" width="0.0682%" height="15" fill="rgb(238,138,0)" fg:x="5138" fg:w="4"/><text x="87.9142%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.46%)</title><rect x="87.3059%" y="421" width="0.4607%" height="15" fill="rgb(57,172,172)" fg:x="5117" fg:w="27"/><text x="87.5559%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.46%)</title><rect x="87.3059%" y="405" width="0.4607%" height="15" fill="rgb(238,138,0)" fg:x="5117" fg:w="27"/><text x="87.5559%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.26%)</title><rect x="87.5107%" y="389" width="0.2559%" height="15" fill="rgb(209,109,0)" fg:x="5129" fg:w="15"/><text x="87.7607%" y="399.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (15 samples, 0.26%)</title><rect x="87.5107%" y="373" width="0.2559%" height="15" fill="rgb(96,207,207)" fg:x="5129" fg:w="15"/><text x="87.7607%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (12 samples, 0.20%)</title><rect x="87.5618%" y="357" width="0.2047%" height="15" fill="rgb(212,112,0)" fg:x="5132" fg:w="12"/><text x="87.8118%" y="367.50"></text></g><g><title>core::hash::Hasher::write_isize (12 samples, 0.20%)</title><rect x="87.5618%" y="341" width="0.2047%" height="15" fill="rgb(200,100,0)" fg:x="5132" fg:w="12"/><text x="87.8118%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.19%)</title><rect x="87.5789%" y="325" width="0.1877%" height="15" fill="rgb(216,116,0)" fg:x="5133" fg:w="11"/><text x="87.8289%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.19%)</title><rect x="87.5789%" y="309" width="0.1877%" height="15" fill="rgb(206,106,0)" fg:x="5133" fg:w="11"/><text x="87.8289%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.19%)</title><rect x="87.5789%" y="293" width="0.1877%" height="15" fill="rgb(212,112,0)" fg:x="5133" fg:w="11"/><text x="87.8289%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.19%)</title><rect x="87.5789%" y="277" width="0.1877%" height="15" fill="rgb(216,116,0)" fg:x="5133" fg:w="11"/><text x="87.8289%" y="287.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.03%)</title><rect x="87.7325%" y="261" width="0.0341%" height="15" fill="rgb(196,96,0)" fg:x="5142" fg:w="2"/><text x="87.9825%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.7837%" y="373" width="0.0171%" height="15" fill="rgb(69,182,182)" fg:x="5145" fg:w="1"/><text x="88.0337%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="87.7837%" y="357" width="0.0171%" height="15" fill="rgb(60,174,174)" fg:x="5145" fg:w="1"/><text x="88.0337%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (14 samples, 0.24%)</title><rect x="87.8007%" y="357" width="0.2389%" height="15" fill="rgb(70,183,183)" fg:x="5146" fg:w="14"/><text x="88.0507%" y="367.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (14 samples, 0.24%)</title><rect x="87.8007%" y="341" width="0.2389%" height="15" fill="rgb(65,179,179)" fg:x="5146" fg:w="14"/><text x="88.0507%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.24%)</title><rect x="87.8007%" y="325" width="0.2389%" height="15" fill="rgb(208,108,0)" fg:x="5146" fg:w="14"/><text x="88.0507%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (14 samples, 0.24%)</title><rect x="87.8007%" y="309" width="0.2389%" height="15" fill="rgb(79,192,192)" fg:x="5146" fg:w="14"/><text x="88.0507%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (19 samples, 0.32%)</title><rect x="87.8007%" y="373" width="0.3242%" height="15" fill="rgb(89,201,201)" fg:x="5146" fg:w="19"/><text x="88.0507%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (5 samples, 0.09%)</title><rect x="88.0396%" y="357" width="0.0853%" height="15" fill="rgb(64,177,177)" fg:x="5160" fg:w="5"/><text x="88.2896%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (5 samples, 0.09%)</title><rect x="88.0396%" y="341" width="0.0853%" height="15" fill="rgb(56,171,171)" fg:x="5160" fg:w="5"/><text x="88.2896%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.09%)</title><rect x="88.0396%" y="325" width="0.0853%" height="15" fill="rgb(227,127,0)" fg:x="5160" fg:w="5"/><text x="88.2896%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.09%)</title><rect x="88.0396%" y="309" width="0.0853%" height="15" fill="rgb(237,137,0)" fg:x="5160" fg:w="5"/><text x="88.2896%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.05%)</title><rect x="88.1249%" y="373" width="0.0512%" height="15" fill="rgb(87,199,199)" fg:x="5165" fg:w="3"/><text x="88.3749%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.03%)</title><rect x="88.1761%" y="373" width="0.0341%" height="15" fill="rgb(97,208,208)" fg:x="5168" fg:w="2"/><text x="88.4261%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.03%)</title><rect x="88.1761%" y="357" width="0.0341%" height="15" fill="rgb(222,122,0)" fg:x="5168" fg:w="2"/><text x="88.4261%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="88.1761%" y="341" width="0.0341%" height="15" fill="rgb(254,154,0)" fg:x="5168" fg:w="2"/><text x="88.4261%" y="351.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (54 samples, 0.92%)</title><rect x="87.3059%" y="485" width="0.9213%" height="15" fill="rgb(98,209,209)" fg:x="5117" fg:w="54"/><text x="87.5559%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (54 samples, 0.92%)</title><rect x="87.3059%" y="469" width="0.9213%" height="15" fill="rgb(206,106,0)" fg:x="5117" fg:w="54"/><text x="87.5559%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (54 samples, 0.92%)</title><rect x="87.3059%" y="453" width="0.9213%" height="15" fill="rgb(72,186,186)" fg:x="5117" fg:w="54"/><text x="87.5559%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (54 samples, 0.92%)</title><rect x="87.3059%" y="437" width="0.9213%" height="15" fill="rgb(69,182,182)" fg:x="5117" fg:w="54"/><text x="87.5559%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (27 samples, 0.46%)</title><rect x="87.7666%" y="421" width="0.4607%" height="15" fill="rgb(84,196,196)" fg:x="5144" fg:w="27"/><text x="88.0166%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.46%)</title><rect x="87.7666%" y="405" width="0.4607%" height="15" fill="rgb(76,189,189)" fg:x="5144" fg:w="27"/><text x="88.0166%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (26 samples, 0.44%)</title><rect x="87.7837%" y="389" width="0.4436%" height="15" fill="rgb(87,198,198)" fg:x="5145" fg:w="26"/><text x="88.0337%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="88.2102%" y="373" width="0.0171%" height="15" fill="rgb(109,219,219)" fg:x="5170" fg:w="1"/><text x="88.4602%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="88.2102%" y="357" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="5170" fg:w="1"/><text x="88.4602%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.09%)</title><rect x="88.2443%" y="389" width="0.0853%" height="15" fill="rgb(235,135,0)" fg:x="5172" fg:w="5"/><text x="88.4943%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (5 samples, 0.09%)</title><rect x="88.2443%" y="373" width="0.0853%" height="15" fill="rgb(209,109,0)" fg:x="5172" fg:w="5"/><text x="88.4943%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.09%)</title><rect x="88.2443%" y="357" width="0.0853%" height="15" fill="rgb(221,121,0)" fg:x="5172" fg:w="5"/><text x="88.4943%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="88.3467%" y="245" width="0.0171%" height="15" fill="rgb(183,183,52)" fg:x="5178" fg:w="1"/><text x="88.5967%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="88.3467%" y="229" width="0.0171%" height="15" fill="rgb(223,123,0)" fg:x="5178" fg:w="1"/><text x="88.5967%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="88.3296%" y="293" width="0.0512%" height="15" fill="rgb(226,126,0)" fg:x="5177" fg:w="3"/><text x="88.5796%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="88.3296%" y="277" width="0.0512%" height="15" fill="rgb(196,96,0)" fg:x="5177" fg:w="3"/><text x="88.5796%" y="287.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="88.3296%" y="261" width="0.0512%" height="15" fill="rgb(239,139,0)" fg:x="5177" fg:w="3"/><text x="88.5796%" y="271.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="88.3638%" y="245" width="0.0171%" height="15" fill="rgb(211,211,63)" fg:x="5179" fg:w="1"/><text x="88.6138%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="88.3296%" y="341" width="0.0682%" height="15" fill="rgb(218,118,0)" fg:x="5177" fg:w="4"/><text x="88.5796%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="88.3296%" y="325" width="0.0682%" height="15" fill="rgb(239,139,0)" fg:x="5177" fg:w="4"/><text x="88.5796%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.07%)</title><rect x="88.3296%" y="309" width="0.0682%" height="15" fill="rgb(222,122,0)" fg:x="5177" fg:w="4"/><text x="88.5796%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="88.3808%" y="293" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="5180" fg:w="1"/><text x="88.6308%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="88.3808%" y="277" width="0.0171%" height="15" fill="rgb(225,125,0)" fg:x="5180" fg:w="1"/><text x="88.6308%" y="287.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (12 samples, 0.20%)</title><rect x="88.2443%" y="421" width="0.2047%" height="15" fill="rgb(100,210,210)" fg:x="5172" fg:w="12"/><text x="88.4943%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.20%)</title><rect x="88.2443%" y="405" width="0.2047%" height="15" fill="rgb(240,140,0)" fg:x="5172" fg:w="12"/><text x="88.4943%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.12%)</title><rect x="88.3296%" y="389" width="0.1194%" height="15" fill="rgb(245,145,0)" fg:x="5177" fg:w="7"/><text x="88.5796%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.12%)</title><rect x="88.3296%" y="373" width="0.1194%" height="15" fill="rgb(244,144,0)" fg:x="5177" fg:w="7"/><text x="88.5796%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.12%)</title><rect x="88.3296%" y="357" width="0.1194%" height="15" fill="rgb(59,173,173)" fg:x="5177" fg:w="7"/><text x="88.5796%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.05%)</title><rect x="88.3979%" y="341" width="0.0512%" height="15" fill="rgb(226,126,0)" fg:x="5181" fg:w="3"/><text x="88.6479%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="88.3979%" y="325" width="0.0512%" height="15" fill="rgb(228,128,0)" fg:x="5181" fg:w="3"/><text x="88.6479%" y="335.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="88.3979%" y="309" width="0.0512%" height="15" fill="rgb(229,229,69)" fg:x="5181" fg:w="3"/><text x="88.6479%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.32%)</title><rect x="88.2273%" y="485" width="0.3242%" height="15" fill="rgb(191,91,0)" fg:x="5171" fg:w="19"/><text x="88.4773%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.32%)</title><rect x="88.2273%" y="469" width="0.3242%" height="15" fill="rgb(211,111,0)" fg:x="5171" fg:w="19"/><text x="88.4773%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.32%)</title><rect x="88.2273%" y="453" width="0.3242%" height="15" fill="rgb(195,95,0)" fg:x="5171" fg:w="19"/><text x="88.4773%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.32%)</title><rect x="88.2273%" y="437" width="0.3242%" height="15" fill="rgb(57,171,171)" fg:x="5171" fg:w="19"/><text x="88.4773%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.10%)</title><rect x="88.4491%" y="421" width="0.1024%" height="15" fill="rgb(201,101,0)" fg:x="5184" fg:w="6"/><text x="88.6991%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.10%)</title><rect x="88.4491%" y="405" width="0.1024%" height="15" fill="rgb(245,145,0)" fg:x="5184" fg:w="6"/><text x="88.6991%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.10%)</title><rect x="88.4491%" y="389" width="0.1024%" height="15" fill="rgb(205,105,0)" fg:x="5184" fg:w="6"/><text x="88.6991%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.10%)</title><rect x="88.4491%" y="373" width="0.1024%" height="15" fill="rgb(232,132,0)" fg:x="5184" fg:w="6"/><text x="88.6991%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.10%)</title><rect x="88.4491%" y="357" width="0.1024%" height="15" fill="rgb(228,128,0)" fg:x="5184" fg:w="6"/><text x="88.6991%" y="367.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.10%)</title><rect x="88.4491%" y="341" width="0.1024%" height="15" fill="rgb(197,97,0)" fg:x="5184" fg:w="6"/><text x="88.6991%" y="351.50"></text></g><g><title>malloc (5 samples, 0.09%)</title><rect x="88.4661%" y="325" width="0.0853%" height="15" fill="rgb(222,222,67)" fg:x="5185" fg:w="5"/><text x="88.7161%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="88.5344%" y="309" width="0.0171%" height="15" fill="rgb(214,214,64)" fg:x="5189" fg:w="1"/><text x="88.7844%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="88.5344%" y="293" width="0.0171%" height="15" fill="rgb(175,175,50)" fg:x="5189" fg:w="1"/><text x="88.7844%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="88.9951%" y="437" width="0.0171%" height="15" fill="rgb(212,112,0)" fg:x="5216" fg:w="1"/><text x="89.2451%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.07%)</title><rect x="89.0121%" y="437" width="0.0682%" height="15" fill="rgb(227,127,0)" fg:x="5217" fg:w="4"/><text x="89.2621%" y="447.50"></text></g><g><title>__rdl_realloc (3 samples, 0.05%)</title><rect x="89.1315%" y="373" width="0.0512%" height="15" fill="rgb(181,181,52)" fg:x="5224" fg:w="3"/><text x="89.3815%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.03%)</title><rect x="89.1486%" y="357" width="0.0341%" height="15" fill="rgb(218,118,0)" fg:x="5225" fg:w="2"/><text x="89.3986%" y="367.50"></text></g><g><title>__rust_realloc (4 samples, 0.07%)</title><rect x="89.1827%" y="373" width="0.0682%" height="15" fill="rgb(179,179,51)" fg:x="5227" fg:w="4"/><text x="89.4327%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (138 samples, 2.35%)</title><rect x="89.1315%" y="421" width="2.3545%" height="15" fill="rgb(214,114,0)" fg:x="5224" fg:w="138"/><text x="89.3815%" y="431.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (138 samples, 2.35%)</title><rect x="89.1315%" y="405" width="2.3545%" height="15" fill="rgb(215,115,0)" fg:x="5224" fg:w="138"/><text x="89.3815%" y="415.50">a..</text></g><g><title>alloc::alloc::realloc (138 samples, 2.35%)</title><rect x="89.1315%" y="389" width="2.3545%" height="15" fill="rgb(206,106,0)" fg:x="5224" fg:w="138"/><text x="89.3815%" y="399.50">a..</text></g><g><title>realloc (131 samples, 2.24%)</title><rect x="89.2510%" y="373" width="2.2351%" height="15" fill="rgb(177,177,51)" fg:x="5231" fg:w="131"/><text x="89.5010%" y="383.50">r..</text></g><g><title>[libc.so.6] (111 samples, 1.89%)</title><rect x="89.5922%" y="357" width="1.8939%" height="15" fill="rgb(205,205,61)" fg:x="5251" fg:w="111"/><text x="89.8422%" y="367.50">[..</text></g><g><title>[libc.so.6] (103 samples, 1.76%)</title><rect x="89.7287%" y="341" width="1.7574%" height="15" fill="rgb(183,183,52)" fg:x="5259" fg:w="103"/><text x="89.9787%" y="351.50"></text></g><g><title>[libc.so.6] (35 samples, 0.60%)</title><rect x="90.8889%" y="325" width="0.5972%" height="15" fill="rgb(226,226,68)" fg:x="5327" fg:w="35"/><text x="91.1389%" y="335.50"></text></g><g><title>[libc.so.6] (7 samples, 0.12%)</title><rect x="91.3667%" y="309" width="0.1194%" height="15" fill="rgb(220,220,66)" fg:x="5355" fg:w="7"/><text x="91.6167%" y="319.50"></text></g><g><title>__rdl_alloc (4 samples, 0.07%)</title><rect x="91.4861%" y="421" width="0.0682%" height="15" fill="rgb(178,178,51)" fg:x="5362" fg:w="4"/><text x="91.7361%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.07%)</title><rect x="91.4861%" y="405" width="0.0682%" height="15" fill="rgb(217,117,0)" fg:x="5362" fg:w="4"/><text x="91.7361%" y="415.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="91.5543%" y="421" width="0.0171%" height="15" fill="rgb(227,227,69)" fg:x="5366" fg:w="1"/><text x="91.8043%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (153 samples, 2.61%)</title><rect x="89.0804%" y="437" width="2.6105%" height="15" fill="rgb(207,107,0)" fg:x="5221" fg:w="153"/><text x="89.3304%" y="447.50">al..</text></g><g><title>malloc (7 samples, 0.12%)</title><rect x="91.5714%" y="421" width="0.1194%" height="15" fill="rgb(178,178,51)" fg:x="5367" fg:w="7"/><text x="91.8214%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.03%)</title><rect x="91.6908%" y="437" width="0.0341%" height="15" fill="rgb(227,127,0)" fg:x="5374" fg:w="2"/><text x="91.9408%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.03%)</title><rect x="91.6908%" y="421" width="0.0341%" height="15" fill="rgb(240,140,0)" fg:x="5374" fg:w="2"/><text x="91.9408%" y="431.50"></text></g><g><title>core::cmp::max (4 samples, 0.07%)</title><rect x="91.7250%" y="437" width="0.0682%" height="15" fill="rgb(196,96,0)" fg:x="5376" fg:w="4"/><text x="91.9750%" y="447.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.07%)</title><rect x="91.7250%" y="421" width="0.0682%" height="15" fill="rgb(242,142,0)" fg:x="5376" fg:w="4"/><text x="91.9750%" y="431.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.07%)</title><rect x="91.7250%" y="405" width="0.0682%" height="15" fill="rgb(239,139,0)" fg:x="5376" fg:w="4"/><text x="91.9750%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (173 samples, 2.95%)</title><rect x="88.8927%" y="469" width="2.9517%" height="15" fill="rgb(248,148,0)" fg:x="5210" fg:w="173"/><text x="89.1427%" y="479.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (173 samples, 2.95%)</title><rect x="88.8927%" y="453" width="2.9517%" height="15" fill="rgb(249,149,0)" fg:x="5210" fg:w="173"/><text x="89.1427%" y="463.50">all..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.05%)</title><rect x="91.7932%" y="437" width="0.0512%" height="15" fill="rgb(240,140,0)" fg:x="5380" fg:w="3"/><text x="92.0432%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.05%)</title><rect x="91.7932%" y="421" width="0.0512%" height="15" fill="rgb(251,151,0)" fg:x="5380" fg:w="3"/><text x="92.0432%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (7 samples, 0.12%)</title><rect x="91.8444%" y="469" width="0.1194%" height="15" fill="rgb(200,100,0)" fg:x="5383" fg:w="7"/><text x="92.0944%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.12%)</title><rect x="91.8444%" y="453" width="0.1194%" height="15" fill="rgb(243,143,0)" fg:x="5383" fg:w="7"/><text x="92.0944%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (211 samples, 3.60%)</title><rect x="88.5514%" y="485" width="3.6001%" height="15" fill="rgb(247,147,0)" fg:x="5190" fg:w="211"/><text x="88.8014%" y="495.50">allo..</text></g><g><title>core::ptr::write (11 samples, 0.19%)</title><rect x="91.9638%" y="469" width="0.1877%" height="15" fill="rgb(210,110,0)" fg:x="5390" fg:w="11"/><text x="92.2138%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="92.1515%" y="485" width="0.0171%" height="15" fill="rgb(205,105,0)" fg:x="5401" fg:w="1"/><text x="92.4015%" y="495.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.09%)</title><rect x="92.3221%" y="389" width="0.0853%" height="15" fill="rgb(215,215,64)" fg:x="5411" fg:w="5"/><text x="92.5721%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.09%)</title><rect x="92.3221%" y="373" width="0.0853%" height="15" fill="rgb(217,117,0)" fg:x="5411" fg:w="5"/><text x="92.5721%" y="383.50"></text></g><g><title>__rust_dealloc (6 samples, 0.10%)</title><rect x="92.4074%" y="389" width="0.1024%" height="15" fill="rgb(204,204,60)" fg:x="5416" fg:w="6"/><text x="92.6574%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (113 samples, 1.93%)</title><rect x="92.1686%" y="421" width="1.9280%" height="15" fill="rgb(212,112,0)" fg:x="5402" fg:w="113"/><text x="92.4186%" y="431.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (113 samples, 1.93%)</title><rect x="92.1686%" y="405" width="1.9280%" height="15" fill="rgb(223,123,0)" fg:x="5402" fg:w="113"/><text x="92.4186%" y="415.50">a..</text></g><g><title>cfree (93 samples, 1.59%)</title><rect x="92.5098%" y="389" width="1.5868%" height="15" fill="rgb(217,217,65)" fg:x="5422" fg:w="93"/><text x="92.7598%" y="399.50"></text></g><g><title>[libc.so.6] (66 samples, 1.13%)</title><rect x="92.9705%" y="373" width="1.1261%" height="15" fill="rgb(208,208,62)" fg:x="5449" fg:w="66"/><text x="93.2205%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (120 samples, 2.05%)</title><rect x="92.1686%" y="485" width="2.0474%" height="15" fill="rgb(196,96,0)" fg:x="5402" fg:w="120"/><text x="92.4186%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (120 samples, 2.05%)</title><rect x="92.1686%" y="469" width="2.0474%" height="15" fill="rgb(228,128,0)" fg:x="5402" fg:w="120"/><text x="92.4186%" y="479.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (120 samples, 2.05%)</title><rect x="92.1686%" y="453" width="2.0474%" height="15" fill="rgb(192,92,0)" fg:x="5402" fg:w="120"/><text x="92.4186%" y="463.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (120 samples, 2.05%)</title><rect x="92.1686%" y="437" width="2.0474%" height="15" fill="rgb(194,94,0)" fg:x="5402" fg:w="120"/><text x="92.4186%" y="447.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (7 samples, 0.12%)</title><rect x="94.0966%" y="421" width="0.1194%" height="15" fill="rgb(249,149,0)" fg:x="5515" fg:w="7"/><text x="94.3466%" y="431.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.03%)</title><rect x="94.3525%" y="341" width="0.0341%" height="15" fill="rgb(229,229,69)" fg:x="5530" fg:w="2"/><text x="94.6025%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.03%)</title><rect x="94.3525%" y="325" width="0.0341%" height="15" fill="rgb(213,113,0)" fg:x="5530" fg:w="2"/><text x="94.6025%" y="335.50"></text></g><g><title>__rust_dealloc (2 samples, 0.03%)</title><rect x="94.3866%" y="341" width="0.0341%" height="15" fill="rgb(223,223,67)" fg:x="5532" fg:w="2"/><text x="94.6366%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (106 samples, 1.81%)</title><rect x="94.2331%" y="373" width="1.8086%" height="15" fill="rgb(220,120,0)" fg:x="5523" fg:w="106"/><text x="94.4831%" y="383.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (106 samples, 1.81%)</title><rect x="94.2331%" y="357" width="1.8086%" height="15" fill="rgb(248,148,0)" fg:x="5523" fg:w="106"/><text x="94.4831%" y="367.50">a..</text></g><g><title>cfree (95 samples, 1.62%)</title><rect x="94.4207%" y="341" width="1.6209%" height="15" fill="rgb(215,215,64)" fg:x="5534" fg:w="95"/><text x="94.6707%" y="351.50"></text></g><g><title>[libc.so.6] (86 samples, 1.47%)</title><rect x="94.5743%" y="325" width="1.4673%" height="15" fill="rgb(200,200,59)" fg:x="5543" fg:w="86"/><text x="94.8243%" y="335.50"></text></g><g><title>[libc.so.6] (27 samples, 0.46%)</title><rect x="95.5810%" y="309" width="0.4607%" height="15" fill="rgb(229,229,69)" fg:x="5602" fg:w="27"/><text x="95.8310%" y="319.50"></text></g><g><title>[libc.so.6] (6 samples, 0.10%)</title><rect x="95.9393%" y="293" width="0.1024%" height="15" fill="rgb(206,206,61)" fg:x="5623" fg:w="6"/><text x="96.1893%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 1.84%)</title><rect x="94.2160%" y="469" width="1.8427%" height="15" fill="rgb(231,131,0)" fg:x="5522" fg:w="108"/><text x="94.4660%" y="479.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (108 samples, 1.84%)</title><rect x="94.2160%" y="453" width="1.8427%" height="15" fill="rgb(207,107,0)" fg:x="5522" fg:w="108"/><text x="94.4660%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (107 samples, 1.83%)</title><rect x="94.2331%" y="437" width="1.8256%" height="15" fill="rgb(225,125,0)" fg:x="5523" fg:w="107"/><text x="94.4831%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (107 samples, 1.83%)</title><rect x="94.2331%" y="421" width="1.8256%" height="15" fill="rgb(245,145,0)" fg:x="5523" fg:w="107"/><text x="94.4831%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (107 samples, 1.83%)</title><rect x="94.2331%" y="405" width="1.8256%" height="15" fill="rgb(203,103,0)" fg:x="5523" fg:w="107"/><text x="94.4831%" y="415.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 1.83%)</title><rect x="94.2331%" y="389" width="1.8256%" height="15" fill="rgb(219,119,0)" fg:x="5523" fg:w="107"/><text x="94.4831%" y="399.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="96.0416%" y="373" width="0.0171%" height="15" fill="rgb(233,133,0)" fg:x="5629" fg:w="1"/><text x="96.2916%" y="383.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="96.0758%" y="405" width="0.0171%" height="15" fill="rgb(189,189,55)" fg:x="5631" fg:w="1"/><text x="96.3258%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="96.0758%" y="389" width="0.0171%" height="15" fill="rgb(247,147,0)" fg:x="5631" fg:w="1"/><text x="96.3258%" y="399.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="96.0928%" y="405" width="0.0171%" height="15" fill="rgb(194,194,57)" fg:x="5632" fg:w="1"/><text x="96.3428%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.24%)</title><rect x="96.0758%" y="437" width="0.2389%" height="15" fill="rgb(201,101,0)" fg:x="5631" fg:w="14"/><text x="96.3258%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.24%)</title><rect x="96.0758%" y="421" width="0.2389%" height="15" fill="rgb(197,97,0)" fg:x="5631" fg:w="14"/><text x="96.3258%" y="431.50"></text></g><g><title>cfree (12 samples, 0.20%)</title><rect x="96.1099%" y="405" width="0.2047%" height="15" fill="rgb(189,189,55)" fg:x="5633" fg:w="12"/><text x="96.3599%" y="415.50"></text></g><g><title>[libc.so.6] (11 samples, 0.19%)</title><rect x="96.1269%" y="389" width="0.1877%" height="15" fill="rgb(216,216,65)" fg:x="5634" fg:w="11"/><text x="96.3769%" y="399.50"></text></g><g><title>[libc.so.6] (4 samples, 0.07%)</title><rect x="96.2464%" y="373" width="0.0682%" height="15" fill="rgb(187,187,54)" fg:x="5641" fg:w="4"/><text x="96.4964%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (124 samples, 2.12%)</title><rect x="94.2160%" y="485" width="2.1157%" height="15" fill="rgb(215,115,0)" fg:x="5522" fg:w="124"/><text x="94.4660%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (16 samples, 0.27%)</title><rect x="96.0587%" y="469" width="0.2730%" height="15" fill="rgb(205,105,0)" fg:x="5630" fg:w="16"/><text x="96.3087%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.27%)</title><rect x="96.0587%" y="453" width="0.2730%" height="15" fill="rgb(226,126,0)" fg:x="5630" fg:w="16"/><text x="96.3087%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="96.3146%" y="437" width="0.0171%" height="15" fill="rgb(217,117,0)" fg:x="5645" fg:w="1"/><text x="96.5646%" y="447.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (3 samples, 0.05%)</title><rect x="96.3317%" y="453" width="0.0512%" height="15" fill="rgb(237,137,0)" fg:x="5646" fg:w="3"/><text x="96.5817%" y="463.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3 samples, 0.05%)</title><rect x="96.3317%" y="437" width="0.0512%" height="15" fill="rgb(98,209,209)" fg:x="5646" fg:w="3"/><text x="96.5817%" y="447.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (3 samples, 0.05%)</title><rect x="96.3317%" y="421" width="0.0512%" height="15" fill="rgb(202,102,0)" fg:x="5646" fg:w="3"/><text x="96.5817%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.05%)</title><rect x="96.3317%" y="405" width="0.0512%" height="15" fill="rgb(190,90,0)" fg:x="5646" fg:w="3"/><text x="96.5817%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (3 samples, 0.05%)</title><rect x="96.3317%" y="389" width="0.0512%" height="15" fill="rgb(195,95,0)" fg:x="5646" fg:w="3"/><text x="96.5817%" y="399.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="96.4341%" y="357" width="0.0171%" height="15" fill="rgb(218,218,65)" fg:x="5652" fg:w="1"/><text x="96.6841%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.34%)</title><rect x="96.3829%" y="389" width="0.3412%" height="15" fill="rgb(223,123,0)" fg:x="5649" fg:w="20"/><text x="96.6329%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.34%)</title><rect x="96.3829%" y="373" width="0.3412%" height="15" fill="rgb(253,153,0)" fg:x="5649" fg:w="20"/><text x="96.6329%" y="383.50"></text></g><g><title>cfree (16 samples, 0.27%)</title><rect x="96.4511%" y="357" width="0.2730%" height="15" fill="rgb(182,182,52)" fg:x="5653" fg:w="16"/><text x="96.7011%" y="367.50"></text></g><g><title>[libc.so.6] (12 samples, 0.20%)</title><rect x="96.5194%" y="341" width="0.2047%" height="15" fill="rgb(193,193,56)" fg:x="5657" fg:w="12"/><text x="96.7694%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="96.6729%" y="325" width="0.0512%" height="15" fill="rgb(192,192,56)" fg:x="5666" fg:w="3"/><text x="96.9229%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="96.7070%" y="309" width="0.0171%" height="15" fill="rgb(199,199,58)" fg:x="5668" fg:w="1"/><text x="96.9570%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (22 samples, 0.38%)</title><rect x="96.3829%" y="453" width="0.3754%" height="15" fill="rgb(191,91,0)" fg:x="5649" fg:w="22"/><text x="96.6329%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.38%)</title><rect x="96.3829%" y="437" width="0.3754%" height="15" fill="rgb(97,208,208)" fg:x="5649" fg:w="22"/><text x="96.6329%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (22 samples, 0.38%)</title><rect x="96.3829%" y="421" width="0.3754%" height="15" fill="rgb(253,153,0)" fg:x="5649" fg:w="22"/><text x="96.6329%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.38%)</title><rect x="96.3829%" y="405" width="0.3754%" height="15" fill="rgb(246,146,0)" fg:x="5649" fg:w="22"/><text x="96.6329%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.03%)</title><rect x="96.7241%" y="389" width="0.0341%" height="15" fill="rgb(203,103,0)" fg:x="5669" fg:w="2"/><text x="96.9741%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.03%)</title><rect x="96.7241%" y="373" width="0.0341%" height="15" fill="rgb(208,108,0)" fg:x="5669" fg:w="2"/><text x="96.9741%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (26 samples, 0.44%)</title><rect x="96.3317%" y="485" width="0.4436%" height="15" fill="rgb(224,124,0)" fg:x="5646" fg:w="26"/><text x="96.5817%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.44%)</title><rect x="96.3317%" y="469" width="0.4436%" height="15" fill="rgb(209,109,0)" fg:x="5646" fg:w="26"/><text x="96.5817%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.02%)</title><rect x="96.7582%" y="453" width="0.0171%" height="15" fill="rgb(214,114,0)" fg:x="5671" fg:w="1"/><text x="97.0082%" y="463.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (1,824 samples, 31.12%)</title><rect x="65.7738%" y="501" width="31.1210%" height="15" fill="rgb(63,177,177)" fg:x="3855" fg:w="1824"/><text x="66.0238%" y="511.50">alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_seque..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (7 samples, 0.12%)</title><rect x="96.7753%" y="485" width="0.1194%" height="15" fill="rgb(195,95,0)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="96.7753%" y="469" width="0.1194%" height="15" fill="rgb(220,120,0)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (7 samples, 0.12%)</title><rect x="96.7753%" y="453" width="0.1194%" height="15" fill="rgb(240,140,0)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="96.7753%" y="437" width="0.1194%" height="15" fill="rgb(100,211,211)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (7 samples, 0.12%)</title><rect x="96.7753%" y="421" width="0.1194%" height="15" fill="rgb(236,136,0)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="96.7753%" y="405" width="0.1194%" height="15" fill="rgb(197,97,0)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.12%)</title><rect x="96.7753%" y="389" width="0.1194%" height="15" fill="rgb(233,133,0)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.12%)</title><rect x="96.7753%" y="373" width="0.1194%" height="15" fill="rgb(247,147,0)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="383.50"></text></g><g><title>cfree (7 samples, 0.12%)</title><rect x="96.7753%" y="357" width="0.1194%" height="15" fill="rgb(214,214,64)" fg:x="5672" fg:w="7"/><text x="97.0253%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.10%)</title><rect x="96.7924%" y="341" width="0.1024%" height="15" fill="rgb(223,223,67)" fg:x="5673" fg:w="6"/><text x="97.0424%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (19 samples, 0.32%)</title><rect x="96.9630%" y="485" width="0.3242%" height="15" fill="rgb(235,135,0)" fg:x="5683" fg:w="19"/><text x="97.2130%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (19 samples, 0.32%)</title><rect x="96.9630%" y="469" width="0.3242%" height="15" fill="rgb(241,141,0)" fg:x="5683" fg:w="19"/><text x="97.2130%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.32%)</title><rect x="96.9630%" y="453" width="0.3242%" height="15" fill="rgb(245,145,0)" fg:x="5683" fg:w="19"/><text x="97.2130%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.32%)</title><rect x="96.9630%" y="437" width="0.3242%" height="15" fill="rgb(227,127,0)" fg:x="5683" fg:w="19"/><text x="97.2130%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (12 samples, 0.20%)</title><rect x="97.0824%" y="421" width="0.2047%" height="15" fill="rgb(207,107,0)" fg:x="5690" fg:w="12"/><text x="97.3324%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (12 samples, 0.20%)</title><rect x="97.0824%" y="405" width="0.2047%" height="15" fill="rgb(241,141,0)" fg:x="5690" fg:w="12"/><text x="97.3324%" y="415.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.20%)</title><rect x="97.0824%" y="389" width="0.2047%" height="15" fill="rgb(203,103,0)" fg:x="5690" fg:w="12"/><text x="97.3324%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.19%)</title><rect x="97.0995%" y="373" width="0.1877%" height="15" fill="rgb(203,103,0)" fg:x="5691" fg:w="11"/><text x="97.3495%" y="383.50"></text></g><g><title>alc::optimizer::arg_min::_{{closure}} (11 samples, 0.19%)</title><rect x="97.0995%" y="357" width="0.1877%" height="15" fill="rgb(93,204,204)" fg:x="5691" fg:w="11"/><text x="97.3495%" y="367.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::total_cmp (11 samples, 0.19%)</title><rect x="97.0995%" y="341" width="0.1877%" height="15" fill="rgb(215,115,0)" fg:x="5691" fg:w="11"/><text x="97.3495%" y="351.50"></text></g><g><title>alc::optimizer::arg_min (24 samples, 0.41%)</title><rect x="96.8947%" y="501" width="0.4095%" height="15" fill="rgb(80,193,193)" fg:x="5679" fg:w="24"/><text x="97.1447%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="97.2872%" y="485" width="0.0171%" height="15" fill="rgb(230,130,0)" fg:x="5702" fg:w="1"/><text x="97.5372%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="97.4066%" y="453" width="0.0171%" height="15" fill="rgb(196,96,0)" fg:x="5709" fg:w="1"/><text x="97.6566%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.05%)</title><rect x="97.4236%" y="453" width="0.0512%" height="15" fill="rgb(211,111,0)" fg:x="5710" fg:w="3"/><text x="97.6736%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (64 samples, 1.09%)</title><rect x="97.5090%" y="437" width="1.0920%" height="15" fill="rgb(235,135,0)" fg:x="5715" fg:w="64"/><text x="97.7590%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (64 samples, 1.09%)</title><rect x="97.5090%" y="421" width="1.0920%" height="15" fill="rgb(223,123,0)" fg:x="5715" fg:w="64"/><text x="97.7590%" y="431.50"></text></g><g><title>alloc::alloc::realloc (64 samples, 1.09%)</title><rect x="97.5090%" y="405" width="1.0920%" height="15" fill="rgb(241,141,0)" fg:x="5715" fg:w="64"/><text x="97.7590%" y="415.50"></text></g><g><title>realloc (64 samples, 1.09%)</title><rect x="97.5090%" y="389" width="1.0920%" height="15" fill="rgb(181,181,52)" fg:x="5715" fg:w="64"/><text x="97.7590%" y="399.50"></text></g><g><title>[libc.so.6] (63 samples, 1.07%)</title><rect x="97.5260%" y="373" width="1.0749%" height="15" fill="rgb(182,182,52)" fg:x="5716" fg:w="63"/><text x="97.7760%" y="383.50"></text></g><g><title>[libc.so.6] (58 samples, 0.99%)</title><rect x="97.6113%" y="357" width="0.9896%" height="15" fill="rgb(189,189,55)" fg:x="5721" fg:w="58"/><text x="97.8613%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.10%)</title><rect x="98.4985%" y="341" width="0.1024%" height="15" fill="rgb(223,223,67)" fg:x="5773" fg:w="6"/><text x="98.7485%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.05%)</title><rect x="98.6009%" y="437" width="0.0512%" height="15" fill="rgb(248,148,0)" fg:x="5779" fg:w="3"/><text x="98.8509%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (73 samples, 1.25%)</title><rect x="97.4748%" y="453" width="1.2455%" height="15" fill="rgb(209,109,0)" fg:x="5713" fg:w="73"/><text x="97.7248%" y="463.50"></text></g><g><title>malloc (4 samples, 0.07%)</title><rect x="98.6521%" y="437" width="0.0682%" height="15" fill="rgb(198,198,58)" fg:x="5782" fg:w="4"/><text x="98.9021%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (86 samples, 1.47%)</title><rect x="97.3042%" y="501" width="1.4673%" height="15" fill="rgb(222,122,0)" fg:x="5703" fg:w="86"/><text x="97.5542%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (81 samples, 1.38%)</title><rect x="97.3895%" y="485" width="1.3820%" height="15" fill="rgb(206,106,0)" fg:x="5708" fg:w="81"/><text x="97.6395%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (81 samples, 1.38%)</title><rect x="97.3895%" y="469" width="1.3820%" height="15" fill="rgb(210,110,0)" fg:x="5708" fg:w="81"/><text x="97.6395%" y="479.50"></text></g><g><title>core::cmp::max (3 samples, 0.05%)</title><rect x="98.7204%" y="453" width="0.0512%" height="15" fill="rgb(214,114,0)" fg:x="5786" fg:w="3"/><text x="98.9704%" y="463.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.05%)</title><rect x="98.7204%" y="437" width="0.0512%" height="15" fill="rgb(201,101,0)" fg:x="5786" fg:w="3"/><text x="98.9704%" y="447.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.05%)</title><rect x="98.7204%" y="421" width="0.0512%" height="15" fill="rgb(246,146,0)" fg:x="5786" fg:w="3"/><text x="98.9704%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (3 samples, 0.05%)</title><rect x="98.7715%" y="501" width="0.0512%" height="15" fill="rgb(238,138,0)" fg:x="5789" fg:w="3"/><text x="99.0215%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (3 samples, 0.05%)</title><rect x="98.7715%" y="485" width="0.0512%" height="15" fill="rgb(246,146,0)" fg:x="5789" fg:w="3"/><text x="99.0215%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (3 samples, 0.05%)</title><rect x="98.7715%" y="469" width="0.0512%" height="15" fill="rgb(202,102,0)" fg:x="5789" fg:w="3"/><text x="99.0215%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="98.7715%" y="453" width="0.0512%" height="15" fill="rgb(241,141,0)" fg:x="5789" fg:w="3"/><text x="99.0215%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="98.7715%" y="437" width="0.0512%" height="15" fill="rgb(239,139,0)" fg:x="5789" fg:w="3"/><text x="99.0215%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="98.7715%" y="421" width="0.0512%" height="15" fill="rgb(200,100,0)" fg:x="5789" fg:w="3"/><text x="99.0215%" y="431.50"></text></g><g><title>cfree (3 samples, 0.05%)</title><rect x="98.7715%" y="405" width="0.0512%" height="15" fill="rgb(184,184,53)" fg:x="5789" fg:w="3"/><text x="99.0215%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="98.7715%" y="389" width="0.0512%" height="15" fill="rgb(199,199,58)" fg:x="5789" fg:w="3"/><text x="99.0215%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (5 samples, 0.09%)</title><rect x="98.8227%" y="501" width="0.0853%" height="15" fill="rgb(229,129,0)" fg:x="5792" fg:w="5"/><text x="99.0727%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (5 samples, 0.09%)</title><rect x="98.8227%" y="485" width="0.0853%" height="15" fill="rgb(246,146,0)" fg:x="5792" fg:w="5"/><text x="99.0727%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="98.8227%" y="469" width="0.0853%" height="15" fill="rgb(224,124,0)" fg:x="5792" fg:w="5"/><text x="99.0727%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="98.8227%" y="453" width="0.0853%" height="15" fill="rgb(252,152,0)" fg:x="5792" fg:w="5"/><text x="99.0727%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.09%)</title><rect x="98.8227%" y="437" width="0.0853%" height="15" fill="rgb(228,128,0)" fg:x="5792" fg:w="5"/><text x="99.0727%" y="447.50"></text></g><g><title>cfree (5 samples, 0.09%)</title><rect x="98.8227%" y="421" width="0.0853%" height="15" fill="rgb(183,183,53)" fg:x="5792" fg:w="5"/><text x="99.0727%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="98.8739%" y="405" width="0.0341%" height="15" fill="rgb(188,188,54)" fg:x="5795" fg:w="2"/><text x="99.1239%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="98.8739%" y="389" width="0.0341%" height="15" fill="rgb(183,183,53)" fg:x="5795" fg:w="2"/><text x="99.1239%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="98.8910%" y="373" width="0.0171%" height="15" fill="rgb(185,185,53)" fg:x="5796" fg:w="1"/><text x="99.1410%" y="383.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population (4,612 samples, 78.69%)</title><rect x="20.4573%" y="549" width="78.6896%" height="15" fill="rgb(61,175,175)" fg:x="1199" fg:w="4612"/><text x="20.7073%" y="559.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (4,597 samples, 78.43%)</title><rect x="20.7132%" y="533" width="78.4337%" height="15" fill="rgb(103,214,214)" fg:x="1214" fg:w="4597"/><text x="20.9632%" y="543.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (4,553 samples, 77.68%)</title><rect x="21.4639%" y="517" width="77.6830%" height="15" fill="rgb(93,205,205)" fg:x="1258" fg:w="4553"/><text x="21.7139%" y="527.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (14 samples, 0.24%)</title><rect x="98.9080%" y="501" width="0.2389%" height="15" fill="rgb(208,108,0)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.24%)</title><rect x="98.9080%" y="485" width="0.2389%" height="15" fill="rgb(224,124,0)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (14 samples, 0.24%)</title><rect x="98.9080%" y="469" width="0.2389%" height="15" fill="rgb(207,107,0)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.24%)</title><rect x="98.9080%" y="453" width="0.2389%" height="15" fill="rgb(51,166,166)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (14 samples, 0.24%)</title><rect x="98.9080%" y="437" width="0.2389%" height="15" fill="rgb(215,115,0)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.24%)</title><rect x="98.9080%" y="421" width="0.2389%" height="15" fill="rgb(233,133,0)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.24%)</title><rect x="98.9080%" y="405" width="0.2389%" height="15" fill="rgb(206,106,0)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.24%)</title><rect x="98.9080%" y="389" width="0.2389%" height="15" fill="rgb(237,137,0)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="399.50"></text></g><g><title>cfree (14 samples, 0.24%)</title><rect x="98.9080%" y="373" width="0.2389%" height="15" fill="rgb(218,218,65)" fg:x="5797" fg:w="14"/><text x="99.1580%" y="383.50"></text></g><g><title>[libc.so.6] (10 samples, 0.17%)</title><rect x="98.9763%" y="357" width="0.1706%" height="15" fill="rgb(176,176,50)" fg:x="5801" fg:w="10"/><text x="99.2263%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="99.0957%" y="341" width="0.0512%" height="15" fill="rgb(177,177,50)" fg:x="5808" fg:w="3"/><text x="99.3457%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.1298%" y="325" width="0.0171%" height="15" fill="rgb(179,179,51)" fg:x="5810" fg:w="1"/><text x="99.3798%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="99.1469%" y="293" width="0.1194%" height="15" fill="rgb(191,91,0)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (7 samples, 0.12%)</title><rect x="99.1469%" y="277" width="0.1194%" height="15" fill="rgb(194,94,0)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (7 samples, 0.12%)</title><rect x="99.1469%" y="261" width="0.1194%" height="15" fill="rgb(238,138,0)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (7 samples, 0.12%)</title><rect x="99.1469%" y="245" width="0.1194%" height="15" fill="rgb(218,118,0)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (7 samples, 0.12%)</title><rect x="99.1469%" y="229" width="0.1194%" height="15" fill="rgb(212,112,0)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="99.1469%" y="213" width="0.1194%" height="15" fill="rgb(195,95,0)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.12%)</title><rect x="99.1469%" y="197" width="0.1194%" height="15" fill="rgb(206,106,0)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.12%)</title><rect x="99.1469%" y="181" width="0.1194%" height="15" fill="rgb(216,116,0)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="191.50"></text></g><g><title>cfree (7 samples, 0.12%)</title><rect x="99.1469%" y="165" width="0.1194%" height="15" fill="rgb(216,216,65)" fg:x="5811" fg:w="7"/><text x="99.3969%" y="175.50"></text></g><g><title>[libc.so.6] (3 samples, 0.05%)</title><rect x="99.2152%" y="149" width="0.0512%" height="15" fill="rgb(192,192,56)" fg:x="5815" fg:w="3"/><text x="99.4652%" y="159.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (8 samples, 0.14%)</title><rect x="99.1469%" y="357" width="0.1365%" height="15" fill="rgb(82,194,194)" fg:x="5811" fg:w="8"/><text x="99.3969%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (8 samples, 0.14%)</title><rect x="99.1469%" y="341" width="0.1365%" height="15" fill="rgb(238,138,0)" fg:x="5811" fg:w="8"/><text x="99.3969%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (8 samples, 0.14%)</title><rect x="99.1469%" y="325" width="0.1365%" height="15" fill="rgb(222,122,0)" fg:x="5811" fg:w="8"/><text x="99.3969%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (8 samples, 0.14%)</title><rect x="99.1469%" y="309" width="0.1365%" height="15" fill="rgb(202,102,0)" fg:x="5811" fg:w="8"/><text x="99.3969%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="99.2663%" y="293" width="0.0171%" height="15" fill="rgb(198,98,0)" fg:x="5818" fg:w="1"/><text x="99.5163%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.2663%" y="277" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="5818" fg:w="1"/><text x="99.5163%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="99.2663%" y="261" width="0.0171%" height="15" fill="rgb(254,154,0)" fg:x="5818" fg:w="1"/><text x="99.5163%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="99.2663%" y="245" width="0.0171%" height="15" fill="rgb(247,147,0)" fg:x="5818" fg:w="1"/><text x="99.5163%" y="255.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="99.2663%" y="229" width="0.0171%" height="15" fill="rgb(228,228,69)" fg:x="5818" fg:w="1"/><text x="99.5163%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.2663%" y="213" width="0.0171%" height="15" fill="rgb(178,178,51)" fg:x="5818" fg:w="1"/><text x="99.5163%" y="223.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::take_best_layouts (9 samples, 0.15%)</title><rect x="99.1469%" y="549" width="0.1536%" height="15" fill="rgb(76,189,189)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)&gt;&gt; (9 samples, 0.15%)</title><rect x="99.1469%" y="533" width="0.1536%" height="15" fill="rgb(219,119,0)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.15%)</title><rect x="99.1469%" y="517" width="0.1536%" height="15" fill="rgb(252,152,0)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)]&gt; (9 samples, 0.15%)</title><rect x="99.1469%" y="501" width="0.1536%" height="15" fill="rgb(234,134,0)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)&gt; (9 samples, 0.15%)</title><rect x="99.1469%" y="485" width="0.1536%" height="15" fill="rgb(192,92,0)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (9 samples, 0.15%)</title><rect x="99.1469%" y="469" width="0.1536%" height="15" fill="rgb(210,110,0)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (9 samples, 0.15%)</title><rect x="99.1469%" y="453" width="0.1536%" height="15" fill="rgb(212,112,0)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (9 samples, 0.15%)</title><rect x="99.1469%" y="437" width="0.1536%" height="15" fill="rgb(192,92,0)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (9 samples, 0.15%)</title><rect x="99.1469%" y="421" width="0.1536%" height="15" fill="rgb(228,128,0)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.15%)</title><rect x="99.1469%" y="405" width="0.1536%" height="15" fill="rgb(83,195,195)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (9 samples, 0.15%)</title><rect x="99.1469%" y="389" width="0.1536%" height="15" fill="rgb(61,175,175)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (9 samples, 0.15%)</title><rect x="99.1469%" y="373" width="0.1536%" height="15" fill="rgb(64,178,178)" fg:x="5811" fg:w="9"/><text x="99.3969%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1 samples, 0.02%)</title><rect x="99.2834%" y="357" width="0.0171%" height="15" fill="rgb(60,174,174)" fg:x="5819" fg:w="1"/><text x="99.5334%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="99.2834%" y="341" width="0.0171%" height="15" fill="rgb(70,183,183)" fg:x="5819" fg:w="1"/><text x="99.5334%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.02%)</title><rect x="99.2834%" y="325" width="0.0171%" height="15" fill="rgb(77,190,190)" fg:x="5819" fg:w="1"/><text x="99.5334%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.02%)</title><rect x="99.2834%" y="309" width="0.0171%" height="15" fill="rgb(227,127,0)" fg:x="5819" fg:w="1"/><text x="99.5334%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3005%" y="485" width="0.0171%" height="15" fill="rgb(211,111,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.3005%" y="469" width="0.0171%" height="15" fill="rgb(228,128,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (1 samples, 0.02%)</title><rect x="99.3005%" y="453" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3005%" y="437" width="0.0171%" height="15" fill="rgb(231,131,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3005%" y="421" width="0.0171%" height="15" fill="rgb(205,105,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3005%" y="405" width="0.0171%" height="15" fill="rgb(246,146,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3005%" y="389" width="0.0171%" height="15" fill="rgb(235,135,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.3005%" y="373" width="0.0171%" height="15" fill="rgb(231,131,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="99.3005%" y="357" width="0.0171%" height="15" fill="rgb(203,103,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="99.3005%" y="341" width="0.0171%" height="15" fill="rgb(228,128,0)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="351.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="99.3005%" y="325" width="0.0171%" height="15" fill="rgb(229,229,69)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.3005%" y="309" width="0.0171%" height="15" fill="rgb(211,211,63)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.3005%" y="293" width="0.0171%" height="15" fill="rgb(191,191,56)" fg:x="5820" fg:w="1"/><text x="99.5505%" y="303.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="99.3346%" y="197" width="0.0171%" height="15" fill="rgb(208,208,62)" fg:x="5822" fg:w="1"/><text x="99.5846%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.10%)</title><rect x="99.3175%" y="325" width="0.1024%" height="15" fill="rgb(205,105,0)" fg:x="5821" fg:w="6"/><text x="99.5675%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (6 samples, 0.10%)</title><rect x="99.3175%" y="309" width="0.1024%" height="15" fill="rgb(227,127,0)" fg:x="5821" fg:w="6"/><text x="99.5675%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (6 samples, 0.10%)</title><rect x="99.3175%" y="293" width="0.1024%" height="15" fill="rgb(220,120,0)" fg:x="5821" fg:w="6"/><text x="99.5675%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.10%)</title><rect x="99.3175%" y="277" width="0.1024%" height="15" fill="rgb(196,96,0)" fg:x="5821" fg:w="6"/><text x="99.5675%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.10%)</title><rect x="99.3175%" y="261" width="0.1024%" height="15" fill="rgb(229,129,0)" fg:x="5821" fg:w="6"/><text x="99.5675%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.10%)</title><rect x="99.3175%" y="245" width="0.1024%" height="15" fill="rgb(213,113,0)" fg:x="5821" fg:w="6"/><text x="99.5675%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="99.3346%" y="229" width="0.0853%" height="15" fill="rgb(219,119,0)" fg:x="5822" fg:w="5"/><text x="99.5846%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.09%)</title><rect x="99.3346%" y="213" width="0.0853%" height="15" fill="rgb(243,143,0)" fg:x="5822" fg:w="5"/><text x="99.5846%" y="223.50"></text></g><g><title>cfree (4 samples, 0.07%)</title><rect x="99.3516%" y="197" width="0.0682%" height="15" fill="rgb(208,208,62)" fg:x="5823" fg:w="4"/><text x="99.6016%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (8 samples, 0.14%)</title><rect x="99.3005%" y="549" width="0.1365%" height="15" fill="rgb(234,134,0)" fg:x="5820" fg:w="8"/><text x="99.5505%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.14%)</title><rect x="99.3005%" y="533" width="0.1365%" height="15" fill="rgb(253,153,0)" fg:x="5820" fg:w="8"/><text x="99.5505%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;]&gt; (8 samples, 0.14%)</title><rect x="99.3005%" y="517" width="0.1365%" height="15" fill="rgb(205,105,0)" fg:x="5820" fg:w="8"/><text x="99.5505%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (8 samples, 0.14%)</title><rect x="99.3005%" y="501" width="0.1365%" height="15" fill="rgb(204,104,0)" fg:x="5820" fg:w="8"/><text x="99.5505%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (7 samples, 0.12%)</title><rect x="99.3175%" y="485" width="0.1194%" height="15" fill="rgb(221,121,0)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (7 samples, 0.12%)</title><rect x="99.3175%" y="469" width="0.1194%" height="15" fill="rgb(233,133,0)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (7 samples, 0.12%)</title><rect x="99.3175%" y="453" width="0.1194%" height="15" fill="rgb(209,109,0)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="99.3175%" y="437" width="0.1194%" height="15" fill="rgb(78,190,190)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (7 samples, 0.12%)</title><rect x="99.3175%" y="421" width="0.1194%" height="15" fill="rgb(84,196,196)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (7 samples, 0.12%)</title><rect x="99.3175%" y="405" width="0.1194%" height="15" fill="rgb(69,182,182)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 0.12%)</title><rect x="99.3175%" y="389" width="0.1194%" height="15" fill="rgb(65,178,178)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7 samples, 0.12%)</title><rect x="99.3175%" y="373" width="0.1194%" height="15" fill="rgb(253,153,0)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (7 samples, 0.12%)</title><rect x="99.3175%" y="357" width="0.1194%" height="15" fill="rgb(201,101,0)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (7 samples, 0.12%)</title><rect x="99.3175%" y="341" width="0.1194%" height="15" fill="rgb(210,110,0)" fg:x="5821" fg:w="7"/><text x="99.5675%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="99.4199%" y="325" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="5827" fg:w="1"/><text x="99.6699%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.4199%" y="309" width="0.0171%" height="15" fill="rgb(201,101,0)" fg:x="5827" fg:w="1"/><text x="99.6699%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="99.4199%" y="293" width="0.0171%" height="15" fill="rgb(214,114,0)" fg:x="5827" fg:w="1"/><text x="99.6699%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="99.4199%" y="277" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="5827" fg:w="1"/><text x="99.6699%" y="287.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="99.4199%" y="261" width="0.0171%" height="15" fill="rgb(221,221,67)" fg:x="5827" fg:w="1"/><text x="99.6699%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.4199%" y="245" width="0.0171%" height="15" fill="rgb(185,185,53)" fg:x="5827" fg:w="1"/><text x="99.6699%" y="255.50"></text></g><g><title>_start (4,786 samples, 81.66%)</title><rect x="17.7956%" y="837" width="81.6584%" height="15" fill="rgb(190,190,55)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="847.50">_start</text></g><g><title>__libc_start_main (4,786 samples, 81.66%)</title><rect x="17.7956%" y="821" width="81.6584%" height="15" fill="rgb(206,206,61)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="831.50">__libc_start_main</text></g><g><title>[libc.so.6] (4,786 samples, 81.66%)</title><rect x="17.7956%" y="805" width="81.6584%" height="15" fill="rgb(223,223,67)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="815.50">[libc.so.6]</text></g><g><title>main (4,786 samples, 81.66%)</title><rect x="17.7956%" y="789" width="81.6584%" height="15" fill="rgb(198,198,58)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (4,786 samples, 81.66%)</title><rect x="17.7956%" y="773" width="81.6584%" height="15" fill="rgb(233,133,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="783.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (4,786 samples, 81.66%)</title><rect x="17.7956%" y="757" width="81.6584%" height="15" fill="rgb(218,118,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,786 samples, 81.66%)</title><rect x="17.7956%" y="741" width="81.6584%" height="15" fill="rgb(205,105,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,786 samples, 81.66%)</title><rect x="17.7956%" y="725" width="81.6584%" height="15" fill="rgb(207,107,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="735.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (4,786 samples, 81.66%)</title><rect x="17.7956%" y="709" width="81.6584%" height="15" fill="rgb(204,104,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="719.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (4,786 samples, 81.66%)</title><rect x="17.7956%" y="693" width="81.6584%" height="15" fill="rgb(236,136,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,786 samples, 81.66%)</title><rect x="17.7956%" y="677" width="81.6584%" height="15" fill="rgb(226,126,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,786 samples, 81.66%)</title><rect x="17.7956%" y="661" width="81.6584%" height="15" fill="rgb(219,119,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="671.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4,786 samples, 81.66%)</title><rect x="17.7956%" y="645" width="81.6584%" height="15" fill="rgb(249,149,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="655.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (4,786 samples, 81.66%)</title><rect x="17.7956%" y="629" width="81.6584%" height="15" fill="rgb(205,105,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="639.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,786 samples, 81.66%)</title><rect x="17.7956%" y="613" width="81.6584%" height="15" fill="rgb(233,133,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="623.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,786 samples, 81.66%)</title><rect x="17.7956%" y="597" width="81.6584%" height="15" fill="rgb(203,103,0)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="607.50">core::ops::function::FnOnce::call_once</text></g><g><title>alc::main (4,786 samples, 81.66%)</title><rect x="17.7956%" y="581" width="81.6584%" height="15" fill="rgb(54,169,169)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="591.50">alc::main</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize (4,786 samples, 81.66%)</title><rect x="17.7956%" y="565" width="81.6584%" height="15" fill="rgb(96,207,207)" fg:x="1043" fg:w="4786"/><text x="18.0456%" y="575.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize</text></g><g><title>std::io::stdio::_print (1 samples, 0.02%)</title><rect x="99.4370%" y="549" width="0.0171%" height="15" fill="rgb(211,111,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="559.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.02%)</title><rect x="99.4370%" y="533" width="0.0171%" height="15" fill="rgb(216,116,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="543.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="517" width="0.0171%" height="15" fill="rgb(233,133,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="527.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="501" width="0.0171%" height="15" fill="rgb(53,167,167)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="485" width="0.0171%" height="15" fill="rgb(237,137,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="99.4370%" y="469" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="479.50"></text></g><g><title>core::fmt::run (1 samples, 0.02%)</title><rect x="99.4370%" y="453" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="437" width="0.0171%" height="15" fill="rgb(198,98,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="447.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="421" width="0.0171%" height="15" fill="rgb(107,217,217)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="99.4370%" y="405" width="0.0171%" height="15" fill="rgb(208,108,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="389" width="0.0171%" height="15" fill="rgb(224,124,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="373" width="0.0171%" height="15" fill="rgb(90,202,202)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="383.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,alc::keyboard::key::KeycodeKey&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="357" width="0.0171%" height="15" fill="rgb(57,171,171)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="99.4370%" y="341" width="0.0171%" height="15" fill="rgb(201,101,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="325" width="0.0171%" height="15" fill="rgb(216,116,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="335.50"></text></g><g><title>&lt;alc::keyboard::key::KeycodeKey as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="309" width="0.0171%" height="15" fill="rgb(91,203,203)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="99.4370%" y="293" width="0.0171%" height="15" fill="rgb(236,136,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="303.50"></text></g><g><title>core::fmt::run (1 samples, 0.02%)</title><rect x="99.4370%" y="277" width="0.0171%" height="15" fill="rgb(215,115,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.02%)</title><rect x="99.4370%" y="261" width="0.0171%" height="15" fill="rgb(237,137,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="99.4370%" y="245" width="0.0171%" height="15" fill="rgb(212,112,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="255.50"></text></g><g><title>core::fmt::Formatter::padding (1 samples, 0.02%)</title><rect x="99.4370%" y="229" width="0.0171%" height="15" fill="rgb(222,122,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="239.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.02%)</title><rect x="99.4370%" y="213" width="0.0171%" height="15" fill="rgb(204,104,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="223.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="99.4370%" y="197" width="0.0171%" height="15" fill="rgb(209,109,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="207.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.4370%" y="181" width="0.0171%" height="15" fill="rgb(240,140,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="191.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.4370%" y="165" width="0.0171%" height="15" fill="rgb(226,126,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="175.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.4370%" y="149" width="0.0171%" height="15" fill="rgb(220,120,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="159.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.02%)</title><rect x="99.4370%" y="133" width="0.0171%" height="15" fill="rgb(204,104,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="143.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.02%)</title><rect x="99.4370%" y="117" width="0.0171%" height="15" fill="rgb(206,106,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="127.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.02%)</title><rect x="99.4370%" y="101" width="0.0171%" height="15" fill="rgb(245,145,0)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.4370%" y="85" width="0.0171%" height="15" fill="rgb(208,208,62)" fg:x="5828" fg:w="1"/><text x="99.6870%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="99.4540%" y="837" width="0.0171%" height="15" fill="rgb(221,121,0)" fg:x="5829" fg:w="1"/><text x="99.7040%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="99.4540%" y="821" width="0.0171%" height="15" fill="rgb(244,144,0)" fg:x="5829" fg:w="1"/><text x="99.7040%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="99.4540%" y="805" width="0.0171%" height="15" fill="rgb(210,110,0)" fg:x="5829" fg:w="1"/><text x="99.7040%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="99.4540%" y="789" width="0.0171%" height="15" fill="rgb(226,126,0)" fg:x="5829" fg:w="1"/><text x="99.7040%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.29%)</title><rect x="99.4711%" y="837" width="0.2901%" height="15" fill="rgb(240,140,0)" fg:x="5830" fg:w="17"/><text x="99.7211%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.20%)</title><rect x="99.5564%" y="821" width="0.2047%" height="15" fill="rgb(210,110,0)" fg:x="5835" fg:w="12"/><text x="99.8064%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.20%)</title><rect x="99.5564%" y="805" width="0.2047%" height="15" fill="rgb(249,149,0)" fg:x="5835" fg:w="12"/><text x="99.8064%" y="815.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.20%)</title><rect x="99.5564%" y="789" width="0.2047%" height="15" fill="rgb(232,132,0)" fg:x="5835" fg:w="12"/><text x="99.8064%" y="799.50"></text></g><g><title>malloc (13 samples, 0.22%)</title><rect x="99.7611%" y="837" width="0.2218%" height="15" fill="rgb(205,205,61)" fg:x="5847" fg:w="13"/><text x="100.0111%" y="847.50"></text></g><g><title>all (5,861 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(200,200,59)" fg:x="0" fg:w="5861"/><text x="0.2500%" y="879.50"></text></g><g><title>alc (5,861 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(182,182,52)" fg:x="0" fg:w="5861"/><text x="0.2500%" y="863.50">alc</text></g><g><title>rand::rng::Rng::gen_range (1 samples, 0.02%)</title><rect x="99.9829%" y="837" width="0.0171%" height="15" fill="rgb(50,165,165)" fg:x="5860" fg:w="1"/><text x="100.2329%" y="847.50"></text></g></svg></svg>