<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="821.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="389"><g><title>&lt;alc::text_processor::ngram::Ngram as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.26%)</title><rect x="0.0000%" y="757" width="0.2571%" height="15" fill="rgb(50,165,165)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="0.2571%" y="757" width="0.2571%" height="15" fill="rgb(190,90,0)" fg:x="1" fg:w="1"/><text x="0.5071%" y="767.50"></text></g><g><title>[libc.so.6] (7 samples, 1.80%)</title><rect x="0.5141%" y="741" width="1.7995%" height="15" fill="rgb(221,221,66)" fg:x="2" fg:w="7"/><text x="0.7641%" y="751.50">[..</text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (1 samples, 0.26%)</title><rect x="2.3136%" y="741" width="0.2571%" height="15" fill="rgb(105,215,215)" fg:x="9" fg:w="1"/><text x="2.5636%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.26%)</title><rect x="2.3136%" y="725" width="0.2571%" height="15" fill="rgb(209,109,0)" fg:x="9" fg:w="1"/><text x="2.5636%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.26%)</title><rect x="2.5707%" y="741" width="0.2571%" height="15" fill="rgb(226,126,0)" fg:x="10" fg:w="1"/><text x="2.8207%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.26%)</title><rect x="2.5707%" y="725" width="0.2571%" height="15" fill="rgb(235,135,0)" fg:x="10" fg:w="1"/><text x="2.8207%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.26%)</title><rect x="2.5707%" y="709" width="0.2571%" height="15" fill="rgb(56,170,170)" fg:x="10" fg:w="1"/><text x="2.8207%" y="719.50"></text></g><g><title>cfree (2 samples, 0.51%)</title><rect x="2.8278%" y="741" width="0.5141%" height="15" fill="rgb(182,182,52)" fg:x="11" fg:w="2"/><text x="3.0778%" y="751.50"></text></g><g><title>[[heap]] (13 samples, 3.34%)</title><rect x="0.5141%" y="757" width="3.3419%" height="15" fill="rgb(204,204,60)" fg:x="2" fg:w="13"/><text x="0.7641%" y="767.50">[[h..</text></g><g><title>malloc (2 samples, 0.51%)</title><rect x="3.3419%" y="741" width="0.5141%" height="15" fill="rgb(229,229,69)" fg:x="13" fg:w="2"/><text x="3.5919%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="3.8560%" y="741" width="0.2571%" height="15" fill="rgb(221,221,66)" fg:x="15" fg:w="1"/><text x="4.1060%" y="751.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (1 samples, 0.26%)</title><rect x="4.1131%" y="741" width="0.2571%" height="15" fill="rgb(55,169,169)" fg:x="16" fg:w="1"/><text x="4.3631%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (1 samples, 0.26%)</title><rect x="4.1131%" y="725" width="0.2571%" height="15" fill="rgb(243,143,0)" fg:x="16" fg:w="1"/><text x="4.3631%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (1 samples, 0.26%)</title><rect x="4.1131%" y="709" width="0.2571%" height="15" fill="rgb(248,148,0)" fg:x="16" fg:w="1"/><text x="4.3631%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (1 samples, 0.26%)</title><rect x="4.1131%" y="693" width="0.2571%" height="15" fill="rgb(210,110,0)" fg:x="16" fg:w="1"/><text x="4.3631%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="4.1131%" y="677" width="0.2571%" height="15" fill="rgb(55,169,169)" fg:x="16" fg:w="1"/><text x="4.3631%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.26%)</title><rect x="4.1131%" y="661" width="0.2571%" height="15" fill="rgb(58,172,172)" fg:x="16" fg:w="1"/><text x="4.3631%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.26%)</title><rect x="4.1131%" y="645" width="0.2571%" height="15" fill="rgb(102,212,212)" fg:x="16" fg:w="1"/><text x="4.3631%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="4.1131%" y="629" width="0.2571%" height="15" fill="rgb(197,97,0)" fg:x="16" fg:w="1"/><text x="4.3631%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="4.1131%" y="613" width="0.2571%" height="15" fill="rgb(199,99,0)" fg:x="16" fg:w="1"/><text x="4.3631%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.26%)</title><rect x="4.3702%" y="741" width="0.2571%" height="15" fill="rgb(241,141,0)" fg:x="17" fg:w="1"/><text x="4.6202%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="4.3702%" y="725" width="0.2571%" height="15" fill="rgb(191,91,0)" fg:x="17" fg:w="1"/><text x="4.6202%" y="735.50"></text></g><g><title>malloc (1 samples, 0.26%)</title><rect x="4.6272%" y="741" width="0.2571%" height="15" fill="rgb(179,179,51)" fg:x="18" fg:w="1"/><text x="4.8772%" y="751.50"></text></g><g><title>[[stack]] (7 samples, 1.80%)</title><rect x="3.8560%" y="757" width="1.7995%" height="15" fill="rgb(206,206,61)" fg:x="15" fg:w="7"/><text x="4.1060%" y="767.50">[..</text></g><g><title>realloc (3 samples, 0.77%)</title><rect x="4.8843%" y="741" width="0.7712%" height="15" fill="rgb(182,182,52)" fg:x="19" fg:w="3"/><text x="5.1343%" y="751.50"></text></g><g><title>[alc] (2 samples, 0.51%)</title><rect x="5.6555%" y="757" width="0.5141%" height="15" fill="rgb(201,201,59)" fg:x="22" fg:w="2"/><text x="5.9055%" y="767.50"></text></g><g><title>[libc.so.6] (2 samples, 0.51%)</title><rect x="5.6555%" y="741" width="0.5141%" height="15" fill="rgb(213,213,63)" fg:x="22" fg:w="2"/><text x="5.9055%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.51%)</title><rect x="6.1697%" y="757" width="0.5141%" height="15" fill="rgb(210,210,62)" fg:x="24" fg:w="2"/><text x="6.4197%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.26%)</title><rect x="6.4267%" y="741" width="0.2571%" height="15" fill="rgb(183,183,53)" fg:x="25" fg:w="1"/><text x="6.6767%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.26%)</title><rect x="6.4267%" y="725" width="0.2571%" height="15" fill="rgb(199,199,58)" fg:x="25" fg:w="1"/><text x="6.6767%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.26%)</title><rect x="6.4267%" y="709" width="0.2571%" height="15" fill="rgb(196,196,57)" fg:x="25" fg:w="1"/><text x="6.6767%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.26%)</title><rect x="6.4267%" y="693" width="0.2571%" height="15" fill="rgb(218,218,65)" fg:x="25" fg:w="1"/><text x="6.6767%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.26%)</title><rect x="6.4267%" y="677" width="0.2571%" height="15" fill="rgb(220,220,66)" fg:x="25" fg:w="1"/><text x="6.6767%" y="687.50"></text></g><g><title>[libc.so.6] (8 samples, 2.06%)</title><rect x="6.6838%" y="757" width="2.0566%" height="15" fill="rgb(195,195,57)" fg:x="26" fg:w="8"/><text x="6.9338%" y="767.50">[..</text></g><g><title>[libc.so.6] (3 samples, 0.77%)</title><rect x="7.9692%" y="741" width="0.7712%" height="15" fill="rgb(183,183,53)" fg:x="31" fg:w="3"/><text x="8.2192%" y="751.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.26%)</title><rect x="9.7686%" y="741" width="0.2571%" height="15" fill="rgb(50,165,165)" fg:x="38" fg:w="1"/><text x="10.0186%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="10.5398%" y="597" width="0.2571%" height="15" fill="rgb(244,144,0)" fg:x="41" fg:w="1"/><text x="10.7898%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="10.5398%" y="581" width="0.2571%" height="15" fill="rgb(237,137,0)" fg:x="41" fg:w="1"/><text x="10.7898%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.26%)</title><rect x="10.5398%" y="565" width="0.2571%" height="15" fill="rgb(241,141,0)" fg:x="41" fg:w="1"/><text x="10.7898%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="10.5398%" y="549" width="0.2571%" height="15" fill="rgb(207,107,0)" fg:x="41" fg:w="1"/><text x="10.7898%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="10.5398%" y="533" width="0.2571%" height="15" fill="rgb(209,109,0)" fg:x="41" fg:w="1"/><text x="10.7898%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="10.5398%" y="517" width="0.2571%" height="15" fill="rgb(216,116,0)" fg:x="41" fg:w="1"/><text x="10.7898%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 1.03%)</title><rect x="10.0257%" y="741" width="1.0283%" height="15" fill="rgb(222,122,0)" fg:x="39" fg:w="4"/><text x="10.2757%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.51%)</title><rect x="10.5398%" y="725" width="0.5141%" height="15" fill="rgb(248,148,0)" fg:x="41" fg:w="2"/><text x="10.7898%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.51%)</title><rect x="10.5398%" y="709" width="0.5141%" height="15" fill="rgb(217,117,0)" fg:x="41" fg:w="2"/><text x="10.7898%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.51%)</title><rect x="10.5398%" y="693" width="0.5141%" height="15" fill="rgb(86,198,198)" fg:x="41" fg:w="2"/><text x="10.7898%" y="703.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.51%)</title><rect x="10.5398%" y="677" width="0.5141%" height="15" fill="rgb(99,210,210)" fg:x="41" fg:w="2"/><text x="10.7898%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.51%)</title><rect x="10.5398%" y="661" width="0.5141%" height="15" fill="rgb(207,107,0)" fg:x="41" fg:w="2"/><text x="10.7898%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.51%)</title><rect x="10.5398%" y="645" width="0.5141%" height="15" fill="rgb(197,97,0)" fg:x="41" fg:w="2"/><text x="10.7898%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.51%)</title><rect x="10.5398%" y="629" width="0.5141%" height="15" fill="rgb(200,100,0)" fg:x="41" fg:w="2"/><text x="10.7898%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.51%)</title><rect x="10.5398%" y="613" width="0.5141%" height="15" fill="rgb(105,216,216)" fg:x="41" fg:w="2"/><text x="10.7898%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.26%)</title><rect x="10.7969%" y="597" width="0.2571%" height="15" fill="rgb(224,124,0)" fg:x="42" fg:w="1"/><text x="11.0469%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.26%)</title><rect x="10.7969%" y="581" width="0.2571%" height="15" fill="rgb(229,129,0)" fg:x="42" fg:w="1"/><text x="11.0469%" y="591.50"></text></g><g><title>[libc.so.6] (9 samples, 2.31%)</title><rect x="11.0540%" y="741" width="2.3136%" height="15" fill="rgb(209,209,62)" fg:x="43" fg:w="9"/><text x="11.3040%" y="751.50">[..</text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="13.6247%" y="725" width="0.2571%" height="15" fill="rgb(80,193,193)" fg:x="53" fg:w="1"/><text x="13.8747%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="13.6247%" y="709" width="0.2571%" height="15" fill="rgb(231,131,0)" fg:x="53" fg:w="1"/><text x="13.8747%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.26%)</title><rect x="13.6247%" y="693" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="53" fg:w="1"/><text x="13.8747%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.26%)</title><rect x="13.6247%" y="677" width="0.2571%" height="15" fill="rgb(193,93,0)" fg:x="53" fg:w="1"/><text x="13.8747%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.26%)</title><rect x="13.6247%" y="661" width="0.2571%" height="15" fill="rgb(50,165,165)" fg:x="53" fg:w="1"/><text x="13.8747%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.26%)</title><rect x="13.6247%" y="645" width="0.2571%" height="15" fill="rgb(203,103,0)" fg:x="53" fg:w="1"/><text x="13.8747%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.26%)</title><rect x="13.6247%" y="629" width="0.2571%" height="15" fill="rgb(193,93,0)" fg:x="53" fg:w="1"/><text x="13.8747%" y="639.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="13.8817%" y="725" width="0.2571%" height="15" fill="rgb(109,219,219)" fg:x="54" fg:w="1"/><text x="14.1317%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="13.8817%" y="709" width="0.2571%" height="15" fill="rgb(231,131,0)" fg:x="54" fg:w="1"/><text x="14.1317%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.26%)</title><rect x="13.8817%" y="693" width="0.2571%" height="15" fill="rgb(209,109,0)" fg:x="54" fg:w="1"/><text x="14.1317%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.26%)</title><rect x="13.8817%" y="677" width="0.2571%" height="15" fill="rgb(217,117,0)" fg:x="54" fg:w="1"/><text x="14.1317%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.26%)</title><rect x="13.8817%" y="661" width="0.2571%" height="15" fill="rgb(86,198,198)" fg:x="54" fg:w="1"/><text x="14.1317%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.26%)</title><rect x="13.8817%" y="645" width="0.2571%" height="15" fill="rgb(212,112,0)" fg:x="54" fg:w="1"/><text x="14.1317%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.26%)</title><rect x="13.8817%" y="629" width="0.2571%" height="15" fill="rgb(240,140,0)" fg:x="54" fg:w="1"/><text x="14.1317%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.26%)</title><rect x="14.1388%" y="725" width="0.2571%" height="15" fill="rgb(207,107,0)" fg:x="55" fg:w="1"/><text x="14.3888%" y="735.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (5 samples, 1.29%)</title><rect x="13.3676%" y="741" width="1.2853%" height="15" fill="rgb(90,201,201)" fg:x="52" fg:w="5"/><text x="13.6176%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.26%)</title><rect x="14.3959%" y="725" width="0.2571%" height="15" fill="rgb(200,100,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="14.3959%" y="709" width="0.2571%" height="15" fill="rgb(222,122,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.26%)</title><rect x="14.3959%" y="693" width="0.2571%" height="15" fill="rgb(205,105,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.26%)</title><rect x="14.3959%" y="677" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.26%)</title><rect x="14.3959%" y="661" width="0.2571%" height="15" fill="rgb(223,123,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.26%)</title><rect x="14.3959%" y="645" width="0.2571%" height="15" fill="rgb(202,102,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="14.3959%" y="629" width="0.2571%" height="15" fill="rgb(200,100,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="14.3959%" y="613" width="0.2571%" height="15" fill="rgb(249,149,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="14.3959%" y="597" width="0.2571%" height="15" fill="rgb(212,112,0)" fg:x="56" fg:w="1"/><text x="14.6459%" y="607.50"></text></g><g><title>cfree (6 samples, 1.54%)</title><rect x="14.6530%" y="741" width="1.5424%" height="15" fill="rgb(198,198,58)" fg:x="57" fg:w="6"/><text x="14.9030%" y="751.50"></text></g><g><title>malloc (3 samples, 0.77%)</title><rect x="16.1954%" y="741" width="0.7712%" height="15" fill="rgb(226,226,68)" fg:x="63" fg:w="3"/><text x="16.4454%" y="751.50"></text></g><g><title>[unknown] (33 samples, 8.48%)</title><rect x="8.7404%" y="757" width="8.4833%" height="15" fill="rgb(194,194,57)" fg:x="34" fg:w="33"/><text x="8.9904%" y="767.50">[unknown]</text></g><g><title>realloc (1 samples, 0.26%)</title><rect x="16.9666%" y="741" width="0.2571%" height="15" fill="rgb(220,220,66)" fg:x="66" fg:w="1"/><text x="17.2166%" y="751.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::combine_with (1 samples, 0.26%)</title><rect x="17.2237%" y="437" width="0.2571%" height="15" fill="rgb(105,215,215)" fg:x="67" fg:w="1"/><text x="17.4737%" y="447.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::add_from_key_value (1 samples, 0.26%)</title><rect x="17.2237%" y="421" width="0.2571%" height="15" fill="rgb(81,194,194)" fg:x="67" fg:w="1"/><text x="17.4737%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.26%)</title><rect x="17.2237%" y="405" width="0.2571%" height="15" fill="rgb(251,151,0)" fg:x="67" fg:w="1"/><text x="17.4737%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.26%)</title><rect x="17.2237%" y="389" width="0.2571%" height="15" fill="rgb(67,181,181)" fg:x="67" fg:w="1"/><text x="17.4737%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.26%)</title><rect x="17.2237%" y="373" width="0.2571%" height="15" fill="rgb(54,169,169)" fg:x="67" fg:w="1"/><text x="17.4737%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.26%)</title><rect x="17.2237%" y="357" width="0.2571%" height="15" fill="rgb(82,194,194)" fg:x="67" fg:w="1"/><text x="17.4737%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.26%)</title><rect x="17.2237%" y="341" width="0.2571%" height="15" fill="rgb(94,205,205)" fg:x="67" fg:w="1"/><text x="17.4737%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.26%)</title><rect x="17.2237%" y="325" width="0.2571%" height="15" fill="rgb(93,204,204)" fg:x="67" fg:w="1"/><text x="17.4737%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.26%)</title><rect x="17.2237%" y="309" width="0.2571%" height="15" fill="rgb(106,216,216)" fg:x="67" fg:w="1"/><text x="17.4737%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.26%)</title><rect x="17.2237%" y="293" width="0.2571%" height="15" fill="rgb(80,192,192)" fg:x="67" fg:w="1"/><text x="17.4737%" y="303.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.26%)</title><rect x="17.2237%" y="277" width="0.2571%" height="15" fill="rgb(76,188,188)" fg:x="67" fg:w="1"/><text x="17.4737%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.26%)</title><rect x="17.2237%" y="261" width="0.2571%" height="15" fill="rgb(52,167,167)" fg:x="67" fg:w="1"/><text x="17.4737%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.26%)</title><rect x="17.2237%" y="245" width="0.2571%" height="15" fill="rgb(230,130,0)" fg:x="67" fg:w="1"/><text x="17.4737%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.26%)</title><rect x="17.2237%" y="229" width="0.2571%" height="15" fill="rgb(217,117,0)" fg:x="67" fg:w="1"/><text x="17.4737%" y="239.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (1 samples, 0.26%)</title><rect x="17.2237%" y="213" width="0.2571%" height="15" fill="rgb(104,214,214)" fg:x="67" fg:w="1"/><text x="17.4737%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.26%)</title><rect x="17.2237%" y="197" width="0.2571%" height="15" fill="rgb(236,136,0)" fg:x="67" fg:w="1"/><text x="17.4737%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.26%)</title><rect x="17.2237%" y="181" width="0.2571%" height="15" fill="rgb(226,126,0)" fg:x="67" fg:w="1"/><text x="17.4737%" y="191.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.26%)</title><rect x="17.2237%" y="165" width="0.2571%" height="15" fill="rgb(195,95,0)" fg:x="67" fg:w="1"/><text x="17.4737%" y="175.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.26%)</title><rect x="17.2237%" y="149" width="0.2571%" height="15" fill="rgb(77,190,190)" fg:x="67" fg:w="1"/><text x="17.4737%" y="159.50"></text></g><g><title>&lt;alc::optimizer::LayoutOptimizer&lt;4_usize,12_usize,alc::objective::scoring::SimpleScoreFunction&gt; as core::default::Default&gt;::default (2 samples, 0.51%)</title><rect x="17.2237%" y="485" width="0.5141%" height="15" fill="rgb(57,171,171)" fg:x="67" fg:w="2"/><text x="17.4737%" y="495.50"></text></g><g><title>alc::text_processor::dataset::FrequencyDataset&lt;u32&gt;::try_from_dir (2 samples, 0.51%)</title><rect x="17.2237%" y="469" width="0.5141%" height="15" fill="rgb(108,218,218)" fg:x="67" fg:w="2"/><text x="17.4737%" y="479.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_file (2 samples, 0.51%)</title><rect x="17.2237%" y="453" width="0.5141%" height="15" fill="rgb(55,170,170)" fg:x="67" fg:w="2"/><text x="17.4737%" y="463.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_string (1 samples, 0.26%)</title><rect x="17.4807%" y="437" width="0.2571%" height="15" fill="rgb(56,170,170)" fg:x="68" fg:w="1"/><text x="17.7307%" y="447.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (1 samples, 0.26%)</title><rect x="17.4807%" y="421" width="0.2571%" height="15" fill="rgb(51,166,166)" fg:x="68" fg:w="1"/><text x="17.7307%" y="431.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_char (1 samples, 0.26%)</title><rect x="17.4807%" y="405" width="0.2571%" height="15" fill="rgb(71,184,184)" fg:x="68" fg:w="1"/><text x="17.7307%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="17.4807%" y="389" width="0.2571%" height="15" fill="rgb(210,110,0)" fg:x="68" fg:w="1"/><text x="17.7307%" y="399.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="17.4807%" y="373" width="0.2571%" height="15" fill="rgb(67,181,181)" fg:x="68" fg:w="1"/><text x="17.7307%" y="383.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="17.4807%" y="357" width="0.2571%" height="15" fill="rgb(98,209,209)" fg:x="68" fg:w="1"/><text x="17.7307%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="17.4807%" y="341" width="0.2571%" height="15" fill="rgb(79,192,192)" fg:x="68" fg:w="1"/><text x="17.7307%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="17.4807%" y="325" width="0.2571%" height="15" fill="rgb(100,211,211)" fg:x="68" fg:w="1"/><text x="17.7307%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.26%)</title><rect x="17.4807%" y="309" width="0.2571%" height="15" fill="rgb(78,190,190)" fg:x="68" fg:w="1"/><text x="17.7307%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.26%)</title><rect x="17.4807%" y="293" width="0.2571%" height="15" fill="rgb(95,206,206)" fg:x="68" fg:w="1"/><text x="17.7307%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.26%)</title><rect x="17.4807%" y="277" width="0.2571%" height="15" fill="rgb(222,122,0)" fg:x="68" fg:w="1"/><text x="17.7307%" y="287.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="17.7378%" y="469" width="0.2571%" height="15" fill="rgb(91,203,203)" fg:x="69" fg:w="1"/><text x="17.9878%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="17.7378%" y="453" width="0.2571%" height="15" fill="rgb(238,138,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="17.7378%" y="437" width="0.2571%" height="15" fill="rgb(56,170,170)" fg:x="69" fg:w="1"/><text x="17.9878%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="17.7378%" y="421" width="0.2571%" height="15" fill="rgb(80,193,193)" fg:x="69" fg:w="1"/><text x="17.9878%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.26%)</title><rect x="17.7378%" y="405" width="0.2571%" height="15" fill="rgb(69,182,182)" fg:x="69" fg:w="1"/><text x="17.9878%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.26%)</title><rect x="17.7378%" y="389" width="0.2571%" height="15" fill="rgb(68,181,181)" fg:x="69" fg:w="1"/><text x="17.9878%" y="399.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.26%)</title><rect x="17.7378%" y="373" width="0.2571%" height="15" fill="rgb(225,125,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="17.7378%" y="357" width="0.2571%" height="15" fill="rgb(200,100,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.26%)</title><rect x="17.7378%" y="341" width="0.2571%" height="15" fill="rgb(224,124,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.26%)</title><rect x="17.7378%" y="325" width="0.2571%" height="15" fill="rgb(193,93,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.26%)</title><rect x="17.7378%" y="309" width="0.2571%" height="15" fill="rgb(84,196,196)" fg:x="69" fg:w="1"/><text x="17.9878%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="17.7378%" y="293" width="0.2571%" height="15" fill="rgb(204,104,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="17.7378%" y="277" width="0.2571%" height="15" fill="rgb(241,141,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.26%)</title><rect x="17.7378%" y="261" width="0.2571%" height="15" fill="rgb(194,94,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="17.7378%" y="245" width="0.2571%" height="15" fill="rgb(254,154,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="17.7378%" y="229" width="0.2571%" height="15" fill="rgb(205,105,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="17.7378%" y="213" width="0.2571%" height="15" fill="rgb(192,92,0)" fg:x="69" fg:w="1"/><text x="17.9878%" y="223.50"></text></g><g><title>malloc (1 samples, 0.26%)</title><rect x="17.7378%" y="197" width="0.2571%" height="15" fill="rgb(189,189,55)" fg:x="69" fg:w="1"/><text x="17.9878%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="17.7378%" y="181" width="0.2571%" height="15" fill="rgb(204,204,60)" fg:x="69" fg:w="1"/><text x="17.9878%" y="191.50"></text></g><g><title>&lt;tqdm::Tqdm&lt;Iter&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="17.9949%" y="469" width="0.2571%" height="15" fill="rgb(78,191,191)" fg:x="70" fg:w="1"/><text x="18.2449%" y="479.50"></text></g><g><title>tqdm::Pbar::update (1 samples, 0.26%)</title><rect x="17.9949%" y="453" width="0.2571%" height="15" fill="rgb(54,169,169)" fg:x="70" fg:w="1"/><text x="18.2449%" y="463.50"></text></g><g><title>tqdm::refresh (1 samples, 0.26%)</title><rect x="17.9949%" y="437" width="0.2571%" height="15" fill="rgb(60,174,174)" fg:x="70" fg:w="1"/><text x="18.2449%" y="447.50"></text></g><g><title>tqdm::Info::format (1 samples, 0.26%)</title><rect x="17.9949%" y="421" width="0.2571%" height="15" fill="rgb(82,194,194)" fg:x="70" fg:w="1"/><text x="18.2449%" y="431.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.26%)</title><rect x="17.9949%" y="405" width="0.2571%" height="15" fill="rgb(225,125,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.26%)</title><rect x="17.9949%" y="389" width="0.2571%" height="15" fill="rgb(217,117,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="399.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.26%)</title><rect x="17.9949%" y="373" width="0.2571%" height="15" fill="rgb(242,142,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.26%)</title><rect x="17.9949%" y="357" width="0.2571%" height="15" fill="rgb(248,148,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.26%)</title><rect x="17.9949%" y="341" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.26%)</title><rect x="17.9949%" y="325" width="0.2571%" height="15" fill="rgb(102,213,213)" fg:x="70" fg:w="1"/><text x="18.2449%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.26%)</title><rect x="17.9949%" y="309" width="0.2571%" height="15" fill="rgb(203,103,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.26%)</title><rect x="17.9949%" y="293" width="0.2571%" height="15" fill="rgb(199,99,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.26%)</title><rect x="17.9949%" y="277" width="0.2571%" height="15" fill="rgb(199,99,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="287.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.26%)</title><rect x="17.9949%" y="261" width="0.2571%" height="15" fill="rgb(247,147,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.26%)</title><rect x="17.9949%" y="245" width="0.2571%" height="15" fill="rgb(218,118,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.26%)</title><rect x="17.9949%" y="229" width="0.2571%" height="15" fill="rgb(221,121,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.26%)</title><rect x="17.9949%" y="213" width="0.2571%" height="15" fill="rgb(210,110,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.26%)</title><rect x="17.9949%" y="197" width="0.2571%" height="15" fill="rgb(218,118,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.26%)</title><rect x="17.9949%" y="181" width="0.2571%" height="15" fill="rgb(196,96,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.26%)</title><rect x="17.9949%" y="165" width="0.2571%" height="15" fill="rgb(236,136,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="17.9949%" y="149" width="0.2571%" height="15" fill="rgb(197,97,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.26%)</title><rect x="17.9949%" y="133" width="0.2571%" height="15" fill="rgb(219,119,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.26%)</title><rect x="17.9949%" y="117" width="0.2571%" height="15" fill="rgb(201,101,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.26%)</title><rect x="17.9949%" y="101" width="0.2571%" height="15" fill="rgb(209,109,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.26%)</title><rect x="17.9949%" y="85" width="0.2571%" height="15" fill="rgb(192,92,0)" fg:x="70" fg:w="1"/><text x="18.2449%" y="95.50"></text></g><g><title>realloc (1 samples, 0.26%)</title><rect x="17.9949%" y="69" width="0.2571%" height="15" fill="rgb(179,179,51)" fg:x="70" fg:w="1"/><text x="18.2449%" y="79.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="17.9949%" y="53" width="0.2571%" height="15" fill="rgb(194,194,57)" fg:x="70" fg:w="1"/><text x="18.2449%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="17.9949%" y="37" width="0.2571%" height="15" fill="rgb(181,181,52)" fg:x="70" fg:w="1"/><text x="18.2449%" y="47.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::randomize (1 samples, 0.26%)</title><rect x="18.2519%" y="453" width="0.2571%" height="15" fill="rgb(98,209,209)" fg:x="71" fg:w="1"/><text x="18.5019%" y="463.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (1 samples, 0.26%)</title><rect x="18.2519%" y="437" width="0.2571%" height="15" fill="rgb(95,206,206)" fg:x="71" fg:w="1"/><text x="18.5019%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.26%)</title><rect x="18.2519%" y="421" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="71" fg:w="1"/><text x="18.5019%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.26%)</title><rect x="18.2519%" y="405" width="0.2571%" height="15" fill="rgb(212,112,0)" fg:x="71" fg:w="1"/><text x="18.5019%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="18.2519%" y="389" width="0.2571%" height="15" fill="rgb(226,126,0)" fg:x="71" fg:w="1"/><text x="18.5019%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.26%)</title><rect x="18.2519%" y="373" width="0.2571%" height="15" fill="rgb(204,104,0)" fg:x="71" fg:w="1"/><text x="18.5019%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.26%)</title><rect x="18.2519%" y="357" width="0.2571%" height="15" fill="rgb(208,108,0)" fg:x="71" fg:w="1"/><text x="18.5019%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.26%)</title><rect x="18.2519%" y="341" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="71" fg:w="1"/><text x="18.5019%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.26%)</title><rect x="18.2519%" y="325" width="0.2571%" height="15" fill="rgb(202,102,0)" fg:x="71" fg:w="1"/><text x="18.5019%" y="335.50"></text></g><g><title>realloc (1 samples, 0.26%)</title><rect x="18.2519%" y="309" width="0.2571%" height="15" fill="rgb(212,212,63)" fg:x="71" fg:w="1"/><text x="18.5019%" y="319.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (1 samples, 0.26%)</title><rect x="18.7661%" y="421" width="0.2571%" height="15" fill="rgb(64,178,178)" fg:x="73" fg:w="1"/><text x="19.0161%" y="431.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (1 samples, 0.26%)</title><rect x="19.0231%" y="405" width="0.2571%" height="15" fill="rgb(50,165,165)" fg:x="74" fg:w="1"/><text x="19.2731%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.26%)</title><rect x="19.0231%" y="389" width="0.2571%" height="15" fill="rgb(198,98,0)" fg:x="74" fg:w="1"/><text x="19.2731%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.26%)</title><rect x="19.0231%" y="373" width="0.2571%" height="15" fill="rgb(70,183,183)" fg:x="74" fg:w="1"/><text x="19.2731%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.26%)</title><rect x="19.0231%" y="357" width="0.2571%" height="15" fill="rgb(88,199,199)" fg:x="74" fg:w="1"/><text x="19.2731%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.26%)</title><rect x="19.0231%" y="341" width="0.2571%" height="15" fill="rgb(55,170,170)" fg:x="74" fg:w="1"/><text x="19.2731%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.26%)</title><rect x="19.0231%" y="325" width="0.2571%" height="15" fill="rgb(93,205,205)" fg:x="74" fg:w="1"/><text x="19.2731%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.26%)</title><rect x="19.0231%" y="309" width="0.2571%" height="15" fill="rgb(90,202,202)" fg:x="74" fg:w="1"/><text x="19.2731%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.26%)</title><rect x="19.0231%" y="293" width="0.2571%" height="15" fill="rgb(106,216,216)" fg:x="74" fg:w="1"/><text x="19.2731%" y="303.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (2 samples, 0.51%)</title><rect x="19.0231%" y="421" width="0.5141%" height="15" fill="rgb(51,166,166)" fg:x="74" fg:w="2"/><text x="19.2731%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.26%)</title><rect x="19.2802%" y="405" width="0.2571%" height="15" fill="rgb(219,119,0)" fg:x="75" fg:w="1"/><text x="19.5302%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.26%)</title><rect x="19.2802%" y="389" width="0.2571%" height="15" fill="rgb(217,117,0)" fg:x="75" fg:w="1"/><text x="19.5302%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.26%)</title><rect x="19.2802%" y="373" width="0.2571%" height="15" fill="rgb(232,132,0)" fg:x="75" fg:w="1"/><text x="19.5302%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="19.2802%" y="357" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="75" fg:w="1"/><text x="19.5302%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="19.2802%" y="341" width="0.2571%" height="15" fill="rgb(196,96,0)" fg:x="75" fg:w="1"/><text x="19.5302%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="19.2802%" y="325" width="0.2571%" height="15" fill="rgb(205,105,0)" fg:x="75" fg:w="1"/><text x="19.5302%" y="335.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="19.2802%" y="309" width="0.2571%" height="15" fill="rgb(181,181,52)" fg:x="75" fg:w="1"/><text x="19.5302%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="19.2802%" y="293" width="0.2571%" height="15" fill="rgb(184,184,53)" fg:x="75" fg:w="1"/><text x="19.5302%" y="303.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_and_score_initial_population (6 samples, 1.54%)</title><rect x="18.2519%" y="469" width="1.5424%" height="15" fill="rgb(107,217,217)" fg:x="71" fg:w="6"/><text x="18.5019%" y="479.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (5 samples, 1.29%)</title><rect x="18.5090%" y="453" width="1.2853%" height="15" fill="rgb(57,171,171)" fg:x="72" fg:w="5"/><text x="18.7590%" y="463.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (5 samples, 1.29%)</title><rect x="18.5090%" y="437" width="1.2853%" height="15" fill="rgb(64,178,178)" fg:x="72" fg:w="5"/><text x="18.7590%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.26%)</title><rect x="19.5373%" y="421" width="0.2571%" height="15" fill="rgb(226,126,0)" fg:x="76" fg:w="1"/><text x="19.7873%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 3.08%)</title><rect x="19.7943%" y="437" width="3.0848%" height="15" fill="rgb(249,149,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="447.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 3.08%)</title><rect x="19.7943%" y="421" width="3.0848%" height="15" fill="rgb(199,99,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="431.50">all..</text></g><g><title>alloc::slice::hack::to_vec (12 samples, 3.08%)</title><rect x="19.7943%" y="405" width="3.0848%" height="15" fill="rgb(232,132,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="415.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 3.08%)</title><rect x="19.7943%" y="389" width="3.0848%" height="15" fill="rgb(90,202,202)" fg:x="77" fg:w="12"/><text x="20.0443%" y="399.50">&lt;T ..</text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (12 samples, 3.08%)</title><rect x="19.7943%" y="373" width="3.0848%" height="15" fill="rgb(100,211,211)" fg:x="77" fg:w="12"/><text x="20.0443%" y="383.50">&lt;al..</text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 3.08%)</title><rect x="19.7943%" y="357" width="3.0848%" height="15" fill="rgb(85,197,197)" fg:x="77" fg:w="12"/><text x="20.0443%" y="367.50">&lt;ar..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 3.08%)</title><rect x="19.7943%" y="341" width="3.0848%" height="15" fill="rgb(203,103,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="351.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 3.08%)</title><rect x="19.7943%" y="325" width="3.0848%" height="15" fill="rgb(201,101,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="335.50">all..</text></g><g><title>alloc::slice::hack::to_vec (12 samples, 3.08%)</title><rect x="19.7943%" y="309" width="3.0848%" height="15" fill="rgb(193,93,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="319.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 3.08%)</title><rect x="19.7943%" y="293" width="3.0848%" height="15" fill="rgb(97,208,208)" fg:x="77" fg:w="12"/><text x="20.0443%" y="303.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 3.08%)</title><rect x="19.7943%" y="277" width="3.0848%" height="15" fill="rgb(238,138,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="287.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 3.08%)</title><rect x="19.7943%" y="261" width="3.0848%" height="15" fill="rgb(190,90,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="271.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 3.08%)</title><rect x="19.7943%" y="245" width="3.0848%" height="15" fill="rgb(225,125,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="255.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 3.08%)</title><rect x="19.7943%" y="229" width="3.0848%" height="15" fill="rgb(196,96,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="239.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 3.08%)</title><rect x="19.7943%" y="213" width="3.0848%" height="15" fill="rgb(246,146,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="223.50">all..</text></g><g><title>alloc::alloc::alloc (12 samples, 3.08%)</title><rect x="19.7943%" y="197" width="3.0848%" height="15" fill="rgb(207,107,0)" fg:x="77" fg:w="12"/><text x="20.0443%" y="207.50">all..</text></g><g><title>malloc (12 samples, 3.08%)</title><rect x="19.7943%" y="181" width="3.0848%" height="15" fill="rgb(224,224,68)" fg:x="77" fg:w="12"/><text x="20.0443%" y="191.50">mal..</text></g><g><title>[libc.so.6] (12 samples, 3.08%)</title><rect x="19.7943%" y="165" width="3.0848%" height="15" fill="rgb(188,188,54)" fg:x="77" fg:w="12"/><text x="20.0443%" y="175.50">[li..</text></g><g><title>[libc.so.6] (5 samples, 1.29%)</title><rect x="21.5938%" y="149" width="1.2853%" height="15" fill="rgb(193,193,56)" fg:x="84" fg:w="5"/><text x="21.8438%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.77%)</title><rect x="23.1362%" y="197" width="0.7712%" height="15" fill="rgb(225,125,0)" fg:x="90" fg:w="3"/><text x="23.3862%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.77%)</title><rect x="23.1362%" y="181" width="0.7712%" height="15" fill="rgb(245,145,0)" fg:x="90" fg:w="3"/><text x="23.3862%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.77%)</title><rect x="23.1362%" y="165" width="0.7712%" height="15" fill="rgb(239,139,0)" fg:x="90" fg:w="3"/><text x="23.3862%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.77%)</title><rect x="23.1362%" y="149" width="0.7712%" height="15" fill="rgb(246,146,0)" fg:x="90" fg:w="3"/><text x="23.3862%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.77%)</title><rect x="23.1362%" y="133" width="0.7712%" height="15" fill="rgb(206,106,0)" fg:x="90" fg:w="3"/><text x="23.3862%" y="143.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.77%)</title><rect x="23.1362%" y="117" width="0.7712%" height="15" fill="rgb(240,140,0)" fg:x="90" fg:w="3"/><text x="23.3862%" y="127.50"></text></g><g><title>malloc (3 samples, 0.77%)</title><rect x="23.1362%" y="101" width="0.7712%" height="15" fill="rgb(225,225,68)" fg:x="90" fg:w="3"/><text x="23.3862%" y="111.50"></text></g><g><title>[libc.so.6] (3 samples, 0.77%)</title><rect x="23.1362%" y="85" width="0.7712%" height="15" fill="rgb(205,205,61)" fg:x="90" fg:w="3"/><text x="23.3862%" y="95.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (4 samples, 1.03%)</title><rect x="23.1362%" y="277" width="1.0283%" height="15" fill="rgb(93,204,204)" fg:x="90" fg:w="4"/><text x="23.3862%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 1.03%)</title><rect x="23.1362%" y="261" width="1.0283%" height="15" fill="rgb(237,137,0)" fg:x="90" fg:w="4"/><text x="23.3862%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 1.03%)</title><rect x="23.1362%" y="245" width="1.0283%" height="15" fill="rgb(230,130,0)" fg:x="90" fg:w="4"/><text x="23.3862%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 1.03%)</title><rect x="23.1362%" y="229" width="1.0283%" height="15" fill="rgb(232,132,0)" fg:x="90" fg:w="4"/><text x="23.3862%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 1.03%)</title><rect x="23.1362%" y="213" width="1.0283%" height="15" fill="rgb(59,173,173)" fg:x="90" fg:w="4"/><text x="23.3862%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.26%)</title><rect x="23.9075%" y="197" width="0.2571%" height="15" fill="rgb(215,115,0)" fg:x="93" fg:w="1"/><text x="24.1575%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.26%)</title><rect x="23.9075%" y="181" width="0.2571%" height="15" fill="rgb(250,150,0)" fg:x="93" fg:w="1"/><text x="24.1575%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="23.9075%" y="165" width="0.2571%" height="15" fill="rgb(208,208,62)" fg:x="93" fg:w="1"/><text x="24.1575%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.77%)</title><rect x="24.1645%" y="277" width="0.7712%" height="15" fill="rgb(237,137,0)" fg:x="94" fg:w="3"/><text x="24.4145%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.77%)</title><rect x="24.1645%" y="261" width="0.7712%" height="15" fill="rgb(251,151,0)" fg:x="94" fg:w="3"/><text x="24.4145%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.77%)</title><rect x="24.1645%" y="245" width="0.7712%" height="15" fill="rgb(214,114,0)" fg:x="94" fg:w="3"/><text x="24.4145%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.77%)</title><rect x="24.1645%" y="229" width="0.7712%" height="15" fill="rgb(244,144,0)" fg:x="94" fg:w="3"/><text x="24.4145%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.77%)</title><rect x="24.1645%" y="213" width="0.7712%" height="15" fill="rgb(215,115,0)" fg:x="94" fg:w="3"/><text x="24.4145%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.77%)</title><rect x="24.1645%" y="197" width="0.7712%" height="15" fill="rgb(220,120,0)" fg:x="94" fg:w="3"/><text x="24.4145%" y="207.50"></text></g><g><title>malloc (3 samples, 0.77%)</title><rect x="24.1645%" y="181" width="0.7712%" height="15" fill="rgb(192,192,56)" fg:x="94" fg:w="3"/><text x="24.4145%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.51%)</title><rect x="24.4216%" y="165" width="0.5141%" height="15" fill="rgb(208,208,62)" fg:x="95" fg:w="2"/><text x="24.6716%" y="175.50"></text></g><g><title>core::clone::Clone::clone (9 samples, 2.31%)</title><rect x="22.8792%" y="357" width="2.3136%" height="15" fill="rgb(241,141,0)" fg:x="89" fg:w="9"/><text x="23.1292%" y="367.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 2.31%)</title><rect x="22.8792%" y="341" width="2.3136%" height="15" fill="rgb(194,94,0)" fg:x="89" fg:w="9"/><text x="23.1292%" y="351.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 2.06%)</title><rect x="23.1362%" y="325" width="2.0566%" height="15" fill="rgb(192,92,0)" fg:x="90" fg:w="8"/><text x="23.3862%" y="335.50">a..</text></g><g><title>alloc::slice::hack::to_vec (8 samples, 2.06%)</title><rect x="23.1362%" y="309" width="2.0566%" height="15" fill="rgb(198,98,0)" fg:x="90" fg:w="8"/><text x="23.3862%" y="319.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 2.06%)</title><rect x="23.1362%" y="293" width="2.0566%" height="15" fill="rgb(64,178,178)" fg:x="90" fg:w="8"/><text x="23.3862%" y="303.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.26%)</title><rect x="24.9357%" y="277" width="0.2571%" height="15" fill="rgb(218,118,0)" fg:x="97" fg:w="1"/><text x="25.1857%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (10 samples, 2.57%)</title><rect x="22.8792%" y="389" width="2.5707%" height="15" fill="rgb(77,190,190)" fg:x="89" fg:w="10"/><text x="23.1292%" y="399.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (10 samples, 2.57%)</title><rect x="22.8792%" y="373" width="2.5707%" height="15" fill="rgb(62,176,176)" fg:x="89" fg:w="10"/><text x="23.1292%" y="383.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.26%)</title><rect x="25.1928%" y="357" width="0.2571%" height="15" fill="rgb(84,196,196)" fg:x="98" fg:w="1"/><text x="25.4428%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.26%)</title><rect x="25.1928%" y="341" width="0.2571%" height="15" fill="rgb(198,98,0)" fg:x="98" fg:w="1"/><text x="25.4428%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.26%)</title><rect x="25.1928%" y="325" width="0.2571%" height="15" fill="rgb(211,111,0)" fg:x="98" fg:w="1"/><text x="25.4428%" y="335.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (23 samples, 5.91%)</title><rect x="19.7943%" y="453" width="5.9126%" height="15" fill="rgb(76,188,188)" fg:x="77" fg:w="23"/><text x="20.0443%" y="463.50">&lt;alc::ke..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (11 samples, 2.83%)</title><rect x="22.8792%" y="437" width="2.8278%" height="15" fill="rgb(209,109,0)" fg:x="89" fg:w="11"/><text x="23.1292%" y="447.50">&lt;s..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (11 samples, 2.83%)</title><rect x="22.8792%" y="421" width="2.8278%" height="15" fill="rgb(84,196,196)" fg:x="89" fg:w="11"/><text x="23.1292%" y="431.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 2.83%)</title><rect x="22.8792%" y="405" width="2.8278%" height="15" fill="rgb(62,176,176)" fg:x="89" fg:w="11"/><text x="23.1292%" y="415.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.26%)</title><rect x="25.4499%" y="389" width="0.2571%" height="15" fill="rgb(98,209,209)" fg:x="99" fg:w="1"/><text x="25.6999%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.26%)</title><rect x="25.4499%" y="373" width="0.2571%" height="15" fill="rgb(85,197,197)" fg:x="99" fg:w="1"/><text x="25.6999%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.26%)</title><rect x="25.4499%" y="357" width="0.2571%" height="15" fill="rgb(86,198,198)" fg:x="99" fg:w="1"/><text x="25.6999%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="25.4499%" y="341" width="0.2571%" height="15" fill="rgb(204,104,0)" fg:x="99" fg:w="1"/><text x="25.6999%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="25.4499%" y="325" width="0.2571%" height="15" fill="rgb(252,152,0)" fg:x="99" fg:w="1"/><text x="25.6999%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="25.4499%" y="309" width="0.2571%" height="15" fill="rgb(252,152,0)" fg:x="99" fg:w="1"/><text x="25.6999%" y="319.50"></text></g><g><title>malloc (1 samples, 0.26%)</title><rect x="25.4499%" y="293" width="0.2571%" height="15" fill="rgb(213,213,64)" fg:x="99" fg:w="1"/><text x="25.6999%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="25.4499%" y="277" width="0.2571%" height="15" fill="rgb(197,197,58)" fg:x="99" fg:w="1"/><text x="25.6999%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="25.7069%" y="421" width="0.2571%" height="15" fill="rgb(209,109,0)" fg:x="100" fg:w="1"/><text x="25.9569%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="25.7069%" y="405" width="0.2571%" height="15" fill="rgb(72,185,185)" fg:x="100" fg:w="1"/><text x="25.9569%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="25.7069%" y="389" width="0.2571%" height="15" fill="rgb(89,201,201)" fg:x="100" fg:w="1"/><text x="25.9569%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.26%)</title><rect x="25.7069%" y="373" width="0.2571%" height="15" fill="rgb(106,216,216)" fg:x="100" fg:w="1"/><text x="25.9569%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.26%)</title><rect x="25.7069%" y="357" width="0.2571%" height="15" fill="rgb(107,217,217)" fg:x="100" fg:w="1"/><text x="25.9569%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.26%)</title><rect x="25.7069%" y="341" width="0.2571%" height="15" fill="rgb(84,196,196)" fg:x="100" fg:w="1"/><text x="25.9569%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.26%)</title><rect x="25.7069%" y="325" width="0.2571%" height="15" fill="rgb(244,144,0)" fg:x="100" fg:w="1"/><text x="25.9569%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.26%)</title><rect x="25.7069%" y="309" width="0.2571%" height="15" fill="rgb(226,126,0)" fg:x="100" fg:w="1"/><text x="25.9569%" y="319.50"></text></g><g><title>__rdl_realloc (1 samples, 0.26%)</title><rect x="26.2211%" y="293" width="0.2571%" height="15" fill="rgb(202,202,59)" fg:x="102" fg:w="1"/><text x="26.4711%" y="303.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (3 samples, 0.77%)</title><rect x="25.9640%" y="421" width="0.7712%" height="15" fill="rgb(108,218,218)" fg:x="101" fg:w="3"/><text x="26.2140%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.77%)</title><rect x="25.9640%" y="405" width="0.7712%" height="15" fill="rgb(253,153,0)" fg:x="101" fg:w="3"/><text x="26.2140%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.77%)</title><rect x="25.9640%" y="389" width="0.7712%" height="15" fill="rgb(220,120,0)" fg:x="101" fg:w="3"/><text x="26.2140%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.77%)</title><rect x="25.9640%" y="373" width="0.7712%" height="15" fill="rgb(248,148,0)" fg:x="101" fg:w="3"/><text x="26.2140%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.77%)</title><rect x="25.9640%" y="357" width="0.7712%" height="15" fill="rgb(202,102,0)" fg:x="101" fg:w="3"/><text x="26.2140%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.51%)</title><rect x="26.2211%" y="341" width="0.5141%" height="15" fill="rgb(225,125,0)" fg:x="102" fg:w="2"/><text x="26.4711%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.51%)</title><rect x="26.2211%" y="325" width="0.5141%" height="15" fill="rgb(245,145,0)" fg:x="102" fg:w="2"/><text x="26.4711%" y="335.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.51%)</title><rect x="26.2211%" y="309" width="0.5141%" height="15" fill="rgb(212,112,0)" fg:x="102" fg:w="2"/><text x="26.4711%" y="319.50"></text></g><g><title>realloc (1 samples, 0.26%)</title><rect x="26.4781%" y="293" width="0.2571%" height="15" fill="rgb(190,190,55)" fg:x="103" fg:w="1"/><text x="26.7281%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="26.4781%" y="277" width="0.2571%" height="15" fill="rgb(186,186,54)" fg:x="103" fg:w="1"/><text x="26.7281%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="26.4781%" y="261" width="0.2571%" height="15" fill="rgb(182,182,52)" fg:x="103" fg:w="1"/><text x="26.7281%" y="271.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.26%)</title><rect x="26.7352%" y="421" width="0.2571%" height="15" fill="rgb(229,129,0)" fg:x="104" fg:w="1"/><text x="26.9852%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="26.7352%" y="405" width="0.2571%" height="15" fill="rgb(235,135,0)" fg:x="104" fg:w="1"/><text x="26.9852%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="26.7352%" y="389" width="0.2571%" height="15" fill="rgb(252,152,0)" fg:x="104" fg:w="1"/><text x="26.9852%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="26.7352%" y="373" width="0.2571%" height="15" fill="rgb(251,151,0)" fg:x="104" fg:w="1"/><text x="26.9852%" y="383.50"></text></g><g><title>__rust_alloc (1 samples, 0.26%)</title><rect x="26.7352%" y="357" width="0.2571%" height="15" fill="rgb(217,217,65)" fg:x="104" fg:w="1"/><text x="26.9852%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="26.9923%" y="261" width="0.2571%" height="15" fill="rgb(228,128,0)" fg:x="105" fg:w="1"/><text x="27.2423%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.26%)</title><rect x="26.9923%" y="245" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="105" fg:w="1"/><text x="27.2423%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.26%)</title><rect x="26.9923%" y="229" width="0.2571%" height="15" fill="rgb(252,152,0)" fg:x="105" fg:w="1"/><text x="27.2423%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.26%)</title><rect x="26.9923%" y="213" width="0.2571%" height="15" fill="rgb(242,142,0)" fg:x="105" fg:w="1"/><text x="27.2423%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.26%)</title><rect x="26.9923%" y="197" width="0.2571%" height="15" fill="rgb(247,147,0)" fg:x="105" fg:w="1"/><text x="27.2423%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="26.9923%" y="181" width="0.2571%" height="15" fill="rgb(254,154,0)" fg:x="105" fg:w="1"/><text x="27.2423%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.26%)</title><rect x="26.9923%" y="165" width="0.2571%" height="15" fill="rgb(239,139,0)" fg:x="105" fg:w="1"/><text x="27.2423%" y="175.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::replace (7 samples, 1.80%)</title><rect x="25.7069%" y="453" width="1.7995%" height="15" fill="rgb(58,173,173)" fg:x="100" fg:w="7"/><text x="25.9569%" y="463.50">a..</text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (7 samples, 1.80%)</title><rect x="25.7069%" y="437" width="1.7995%" height="15" fill="rgb(65,178,178)" fg:x="100" fg:w="7"/><text x="25.9569%" y="447.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (2 samples, 0.51%)</title><rect x="26.9923%" y="421" width="0.5141%" height="15" fill="rgb(209,109,0)" fg:x="105" fg:w="2"/><text x="27.2423%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (2 samples, 0.51%)</title><rect x="26.9923%" y="405" width="0.5141%" height="15" fill="rgb(254,154,0)" fg:x="105" fg:w="2"/><text x="27.2423%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (2 samples, 0.51%)</title><rect x="26.9923%" y="389" width="0.5141%" height="15" fill="rgb(198,98,0)" fg:x="105" fg:w="2"/><text x="27.2423%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.51%)</title><rect x="26.9923%" y="373" width="0.5141%" height="15" fill="rgb(91,203,203)" fg:x="105" fg:w="2"/><text x="27.2423%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.51%)</title><rect x="26.9923%" y="357" width="0.5141%" height="15" fill="rgb(90,202,202)" fg:x="105" fg:w="2"/><text x="27.2423%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.51%)</title><rect x="26.9923%" y="341" width="0.5141%" height="15" fill="rgb(50,165,165)" fg:x="105" fg:w="2"/><text x="27.2423%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.51%)</title><rect x="26.9923%" y="325" width="0.5141%" height="15" fill="rgb(96,207,207)" fg:x="105" fg:w="2"/><text x="27.2423%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.51%)</title><rect x="26.9923%" y="309" width="0.5141%" height="15" fill="rgb(196,96,0)" fg:x="105" fg:w="2"/><text x="27.2423%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (2 samples, 0.51%)</title><rect x="26.9923%" y="293" width="0.5141%" height="15" fill="rgb(193,93,0)" fg:x="105" fg:w="2"/><text x="27.2423%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.51%)</title><rect x="26.9923%" y="277" width="0.5141%" height="15" fill="rgb(252,152,0)" fg:x="105" fg:w="2"/><text x="27.2423%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.26%)</title><rect x="27.2494%" y="261" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="106" fg:w="1"/><text x="27.4994%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="27.2494%" y="245" width="0.2571%" height="15" fill="rgb(218,118,0)" fg:x="106" fg:w="1"/><text x="27.4994%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="27.2494%" y="229" width="0.2571%" height="15" fill="rgb(221,121,0)" fg:x="106" fg:w="1"/><text x="27.4994%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="27.2494%" y="213" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="106" fg:w="1"/><text x="27.4994%" y="223.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="27.2494%" y="197" width="0.2571%" height="15" fill="rgb(210,210,63)" fg:x="106" fg:w="1"/><text x="27.4994%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="27.2494%" y="181" width="0.2571%" height="15" fill="rgb(183,183,53)" fg:x="106" fg:w="1"/><text x="27.4994%" y="191.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="27.5064%" y="261" width="0.2571%" height="15" fill="rgb(70,184,184)" fg:x="107" fg:w="1"/><text x="27.7564%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="27.5064%" y="245" width="0.2571%" height="15" fill="rgb(253,153,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.26%)</title><rect x="27.5064%" y="229" width="0.2571%" height="15" fill="rgb(228,128,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.26%)</title><rect x="27.5064%" y="213" width="0.2571%" height="15" fill="rgb(199,99,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.26%)</title><rect x="27.5064%" y="197" width="0.2571%" height="15" fill="rgb(85,197,197)" fg:x="107" fg:w="1"/><text x="27.7564%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="27.5064%" y="181" width="0.2571%" height="15" fill="rgb(214,114,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="27.5064%" y="165" width="0.2571%" height="15" fill="rgb(240,140,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.26%)</title><rect x="27.5064%" y="149" width="0.2571%" height="15" fill="rgb(208,108,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="27.5064%" y="133" width="0.2571%" height="15" fill="rgb(200,100,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="27.5064%" y="117" width="0.2571%" height="15" fill="rgb(208,108,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="27.5064%" y="101" width="0.2571%" height="15" fill="rgb(211,111,0)" fg:x="107" fg:w="1"/><text x="27.7564%" y="111.50"></text></g><g><title>malloc (1 samples, 0.26%)</title><rect x="27.5064%" y="85" width="0.2571%" height="15" fill="rgb(196,196,57)" fg:x="107" fg:w="1"/><text x="27.7564%" y="95.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="27.5064%" y="69" width="0.2571%" height="15" fill="rgb(223,223,67)" fg:x="107" fg:w="1"/><text x="27.7564%" y="79.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.51%)</title><rect x="27.5064%" y="341" width="0.5141%" height="15" fill="rgb(212,112,0)" fg:x="107" fg:w="2"/><text x="27.7564%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.51%)</title><rect x="27.5064%" y="325" width="0.5141%" height="15" fill="rgb(211,111,0)" fg:x="107" fg:w="2"/><text x="27.7564%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.51%)</title><rect x="27.5064%" y="309" width="0.5141%" height="15" fill="rgb(229,129,0)" fg:x="107" fg:w="2"/><text x="27.7564%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.51%)</title><rect x="27.5064%" y="293" width="0.5141%" height="15" fill="rgb(228,128,0)" fg:x="107" fg:w="2"/><text x="27.7564%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.51%)</title><rect x="27.5064%" y="277" width="0.5141%" height="15" fill="rgb(57,171,171)" fg:x="107" fg:w="2"/><text x="27.7564%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="27.7635%" y="261" width="0.2571%" height="15" fill="rgb(236,136,0)" fg:x="108" fg:w="1"/><text x="28.0135%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="27.7635%" y="245" width="0.2571%" height="15" fill="rgb(238,138,0)" fg:x="108" fg:w="1"/><text x="28.0135%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.26%)</title><rect x="27.7635%" y="229" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="108" fg:w="1"/><text x="28.0135%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="27.7635%" y="213" width="0.2571%" height="15" fill="rgb(204,104,0)" fg:x="108" fg:w="1"/><text x="28.0135%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="27.7635%" y="197" width="0.2571%" height="15" fill="rgb(195,95,0)" fg:x="108" fg:w="1"/><text x="28.0135%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="27.7635%" y="181" width="0.2571%" height="15" fill="rgb(212,112,0)" fg:x="108" fg:w="1"/><text x="28.0135%" y="191.50"></text></g><g><title>malloc (1 samples, 0.26%)</title><rect x="27.7635%" y="165" width="0.2571%" height="15" fill="rgb(222,222,67)" fg:x="108" fg:w="1"/><text x="28.0135%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="27.7635%" y="149" width="0.2571%" height="15" fill="rgb(220,220,66)" fg:x="108" fg:w="1"/><text x="28.0135%" y="159.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (3 samples, 0.77%)</title><rect x="27.5064%" y="437" width="0.7712%" height="15" fill="rgb(105,215,215)" fg:x="107" fg:w="3"/><text x="27.7564%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.77%)</title><rect x="27.5064%" y="421" width="0.7712%" height="15" fill="rgb(235,135,0)" fg:x="107" fg:w="3"/><text x="27.7564%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.77%)</title><rect x="27.5064%" y="405" width="0.7712%" height="15" fill="rgb(109,219,219)" fg:x="107" fg:w="3"/><text x="27.7564%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.77%)</title><rect x="27.5064%" y="389" width="0.7712%" height="15" fill="rgb(72,185,185)" fg:x="107" fg:w="3"/><text x="27.7564%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3 samples, 0.77%)</title><rect x="27.5064%" y="373" width="0.7712%" height="15" fill="rgb(61,175,175)" fg:x="107" fg:w="3"/><text x="27.7564%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3 samples, 0.77%)</title><rect x="27.5064%" y="357" width="0.7712%" height="15" fill="rgb(96,207,207)" fg:x="107" fg:w="3"/><text x="27.7564%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.26%)</title><rect x="28.0206%" y="341" width="0.2571%" height="15" fill="rgb(96,207,207)" fg:x="109" fg:w="1"/><text x="28.2706%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.26%)</title><rect x="28.0206%" y="325" width="0.2571%" height="15" fill="rgb(252,152,0)" fg:x="109" fg:w="1"/><text x="28.2706%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.26%)</title><rect x="28.0206%" y="309" width="0.2571%" height="15" fill="rgb(237,137,0)" fg:x="109" fg:w="1"/><text x="28.2706%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.26%)</title><rect x="28.7918%" y="85" width="0.2571%" height="15" fill="rgb(179,179,51)" fg:x="112" fg:w="1"/><text x="29.0418%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.26%)</title><rect x="28.7918%" y="69" width="0.2571%" height="15" fill="rgb(191,91,0)" fg:x="112" fg:w="1"/><text x="29.0418%" y="79.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.51%)</title><rect x="28.7918%" y="133" width="0.5141%" height="15" fill="rgb(231,131,0)" fg:x="112" fg:w="2"/><text x="29.0418%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.51%)</title><rect x="28.7918%" y="117" width="0.5141%" height="15" fill="rgb(226,126,0)" fg:x="112" fg:w="2"/><text x="29.0418%" y="127.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.51%)</title><rect x="28.7918%" y="101" width="0.5141%" height="15" fill="rgb(191,91,0)" fg:x="112" fg:w="2"/><text x="29.0418%" y="111.50"></text></g><g><title>malloc (1 samples, 0.26%)</title><rect x="29.0488%" y="85" width="0.2571%" height="15" fill="rgb(198,198,58)" fg:x="113" fg:w="1"/><text x="29.2988%" y="95.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (3 samples, 0.77%)</title><rect x="28.7918%" y="261" width="0.7712%" height="15" fill="rgb(50,165,165)" fg:x="112" fg:w="3"/><text x="29.0418%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.77%)</title><rect x="28.7918%" y="245" width="0.7712%" height="15" fill="rgb(249,149,0)" fg:x="112" fg:w="3"/><text x="29.0418%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.77%)</title><rect x="28.7918%" y="229" width="0.7712%" height="15" fill="rgb(228,128,0)" fg:x="112" fg:w="3"/><text x="29.0418%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.77%)</title><rect x="28.7918%" y="213" width="0.7712%" height="15" fill="rgb(228,128,0)" fg:x="112" fg:w="3"/><text x="29.0418%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.77%)</title><rect x="28.7918%" y="197" width="0.7712%" height="15" fill="rgb(54,169,169)" fg:x="112" fg:w="3"/><text x="29.0418%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.77%)</title><rect x="28.7918%" y="181" width="0.7712%" height="15" fill="rgb(242,142,0)" fg:x="112" fg:w="3"/><text x="29.0418%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.77%)</title><rect x="28.7918%" y="165" width="0.7712%" height="15" fill="rgb(251,151,0)" fg:x="112" fg:w="3"/><text x="29.0418%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.77%)</title><rect x="28.7918%" y="149" width="0.7712%" height="15" fill="rgb(241,141,0)" fg:x="112" fg:w="3"/><text x="29.0418%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.26%)</title><rect x="29.3059%" y="133" width="0.2571%" height="15" fill="rgb(206,106,0)" fg:x="114" fg:w="1"/><text x="29.5559%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.26%)</title><rect x="29.3059%" y="117" width="0.2571%" height="15" fill="rgb(218,118,0)" fg:x="114" fg:w="1"/><text x="29.5559%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="29.5630%" y="261" width="0.2571%" height="15" fill="rgb(249,149,0)" fg:x="115" fg:w="1"/><text x="29.8130%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="29.5630%" y="245" width="0.2571%" height="15" fill="rgb(192,92,0)" fg:x="115" fg:w="1"/><text x="29.8130%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.26%)</title><rect x="29.5630%" y="229" width="0.2571%" height="15" fill="rgb(247,147,0)" fg:x="115" fg:w="1"/><text x="29.8130%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="29.5630%" y="213" width="0.2571%" height="15" fill="rgb(248,148,0)" fg:x="115" fg:w="1"/><text x="29.8130%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="29.5630%" y="197" width="0.2571%" height="15" fill="rgb(206,106,0)" fg:x="115" fg:w="1"/><text x="29.8130%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="29.5630%" y="181" width="0.2571%" height="15" fill="rgb(242,142,0)" fg:x="115" fg:w="1"/><text x="29.8130%" y="191.50"></text></g><g><title>malloc (1 samples, 0.26%)</title><rect x="29.5630%" y="165" width="0.2571%" height="15" fill="rgb(201,201,59)" fg:x="115" fg:w="1"/><text x="29.8130%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5 samples, 1.29%)</title><rect x="28.7918%" y="373" width="1.2853%" height="15" fill="rgb(88,200,200)" fg:x="112" fg:w="5"/><text x="29.0418%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5 samples, 1.29%)</title><rect x="28.7918%" y="357" width="1.2853%" height="15" fill="rgb(103,214,214)" fg:x="112" fg:w="5"/><text x="29.0418%" y="367.50"></text></g><g><title>core::clone::Clone::clone (5 samples, 1.29%)</title><rect x="28.7918%" y="341" width="1.2853%" height="15" fill="rgb(233,133,0)" fg:x="112" fg:w="5"/><text x="29.0418%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 1.29%)</title><rect x="28.7918%" y="325" width="1.2853%" height="15" fill="rgb(233,133,0)" fg:x="112" fg:w="5"/><text x="29.0418%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 1.29%)</title><rect x="28.7918%" y="309" width="1.2853%" height="15" fill="rgb(229,129,0)" fg:x="112" fg:w="5"/><text x="29.0418%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 1.29%)</title><rect x="28.7918%" y="293" width="1.2853%" height="15" fill="rgb(208,108,0)" fg:x="112" fg:w="5"/><text x="29.0418%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 1.29%)</title><rect x="28.7918%" y="277" width="1.2853%" height="15" fill="rgb(62,176,176)" fg:x="112" fg:w="5"/><text x="29.0418%" y="287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.26%)</title><rect x="29.8201%" y="261" width="0.2571%" height="15" fill="rgb(211,111,0)" fg:x="116" fg:w="1"/><text x="30.0701%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (8 samples, 2.06%)</title><rect x="28.2776%" y="421" width="2.0566%" height="15" fill="rgb(202,102,0)" fg:x="110" fg:w="8"/><text x="28.5276%" y="431.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (8 samples, 2.06%)</title><rect x="28.2776%" y="405" width="2.0566%" height="15" fill="rgb(89,200,200)" fg:x="110" fg:w="8"/><text x="28.5276%" y="415.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 1.80%)</title><rect x="28.5347%" y="389" width="1.7995%" height="15" fill="rgb(57,171,171)" fg:x="111" fg:w="7"/><text x="28.7847%" y="399.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.26%)</title><rect x="30.0771%" y="373" width="0.2571%" height="15" fill="rgb(83,196,196)" fg:x="117" fg:w="1"/><text x="30.3271%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.26%)</title><rect x="30.0771%" y="357" width="0.2571%" height="15" fill="rgb(67,181,181)" fg:x="117" fg:w="1"/><text x="30.3271%" y="367.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.26%)</title><rect x="30.0771%" y="341" width="0.2571%" height="15" fill="rgb(67,181,181)" fg:x="117" fg:w="1"/><text x="30.3271%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.26%)</title><rect x="30.8483%" y="197" width="0.2571%" height="15" fill="rgb(230,130,0)" fg:x="120" fg:w="1"/><text x="31.0983%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (4 samples, 1.03%)</title><rect x="30.3342%" y="421" width="1.0283%" height="15" fill="rgb(197,97,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 1.03%)</title><rect x="30.3342%" y="405" width="1.0283%" height="15" fill="rgb(223,123,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 1.03%)</title><rect x="30.3342%" y="389" width="1.0283%" height="15" fill="rgb(75,188,188)" fg:x="118" fg:w="4"/><text x="30.5842%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 1.03%)</title><rect x="30.3342%" y="373" width="1.0283%" height="15" fill="rgb(57,171,171)" fg:x="118" fg:w="4"/><text x="30.5842%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 1.03%)</title><rect x="30.3342%" y="357" width="1.0283%" height="15" fill="rgb(87,199,199)" fg:x="118" fg:w="4"/><text x="30.5842%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 1.03%)</title><rect x="30.3342%" y="341" width="1.0283%" height="15" fill="rgb(214,114,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 1.03%)</title><rect x="30.3342%" y="325" width="1.0283%" height="15" fill="rgb(214,114,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (4 samples, 1.03%)</title><rect x="30.3342%" y="309" width="1.0283%" height="15" fill="rgb(103,214,214)" fg:x="118" fg:w="4"/><text x="30.5842%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (4 samples, 1.03%)</title><rect x="30.3342%" y="293" width="1.0283%" height="15" fill="rgb(246,146,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="303.50"></text></g><g><title>core::hash::Hasher::write_isize (4 samples, 1.03%)</title><rect x="30.3342%" y="277" width="1.0283%" height="15" fill="rgb(206,106,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 1.03%)</title><rect x="30.3342%" y="261" width="1.0283%" height="15" fill="rgb(240,140,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 1.03%)</title><rect x="30.3342%" y="245" width="1.0283%" height="15" fill="rgb(194,94,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 1.03%)</title><rect x="30.3342%" y="229" width="1.0283%" height="15" fill="rgb(197,97,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 1.03%)</title><rect x="30.3342%" y="213" width="1.0283%" height="15" fill="rgb(200,100,0)" fg:x="118" fg:w="4"/><text x="30.5842%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.26%)</title><rect x="31.1054%" y="197" width="0.2571%" height="15" fill="rgb(209,109,0)" fg:x="121" fg:w="1"/><text x="31.3554%" y="207.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (3 samples, 0.77%)</title><rect x="31.3625%" y="421" width="0.7712%" height="15" fill="rgb(81,193,193)" fg:x="122" fg:w="3"/><text x="31.6125%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.77%)</title><rect x="31.3625%" y="405" width="0.7712%" height="15" fill="rgb(217,117,0)" fg:x="122" fg:w="3"/><text x="31.6125%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.77%)</title><rect x="31.3625%" y="389" width="0.7712%" height="15" fill="rgb(192,92,0)" fg:x="122" fg:w="3"/><text x="31.6125%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.77%)</title><rect x="31.3625%" y="373" width="0.7712%" height="15" fill="rgb(217,117,0)" fg:x="122" fg:w="3"/><text x="31.6125%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.77%)</title><rect x="31.3625%" y="357" width="0.7712%" height="15" fill="rgb(191,91,0)" fg:x="122" fg:w="3"/><text x="31.6125%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.77%)</title><rect x="31.3625%" y="341" width="0.7712%" height="15" fill="rgb(243,143,0)" fg:x="122" fg:w="3"/><text x="31.6125%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.77%)</title><rect x="31.3625%" y="325" width="0.7712%" height="15" fill="rgb(214,114,0)" fg:x="122" fg:w="3"/><text x="31.6125%" y="335.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.77%)</title><rect x="31.3625%" y="309" width="0.7712%" height="15" fill="rgb(218,118,0)" fg:x="122" fg:w="3"/><text x="31.6125%" y="319.50"></text></g><g><title>realloc (3 samples, 0.77%)</title><rect x="31.3625%" y="293" width="0.7712%" height="15" fill="rgb(215,215,64)" fg:x="122" fg:w="3"/><text x="31.6125%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="31.8766%" y="277" width="0.2571%" height="15" fill="rgb(202,202,59)" fg:x="124" fg:w="1"/><text x="32.1266%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="31.8766%" y="261" width="0.2571%" height="15" fill="rgb(219,219,66)" fg:x="124" fg:w="1"/><text x="32.1266%" y="271.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.26%)</title><rect x="32.1337%" y="421" width="0.2571%" height="15" fill="rgb(216,116,0)" fg:x="125" fg:w="1"/><text x="32.3837%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="32.1337%" y="405" width="0.2571%" height="15" fill="rgb(243,143,0)" fg:x="125" fg:w="1"/><text x="32.3837%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="32.1337%" y="389" width="0.2571%" height="15" fill="rgb(233,133,0)" fg:x="125" fg:w="1"/><text x="32.3837%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="32.1337%" y="373" width="0.2571%" height="15" fill="rgb(196,96,0)" fg:x="125" fg:w="1"/><text x="32.3837%" y="383.50"></text></g><g><title>__rust_alloc (1 samples, 0.26%)</title><rect x="32.1337%" y="357" width="0.2571%" height="15" fill="rgb(225,225,68)" fg:x="125" fg:w="1"/><text x="32.3837%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.26%)</title><rect x="33.1620%" y="357" width="0.2571%" height="15" fill="rgb(229,129,0)" fg:x="129" fg:w="1"/><text x="33.4120%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.26%)</title><rect x="33.1620%" y="341" width="0.2571%" height="15" fill="rgb(216,116,0)" fg:x="129" fg:w="1"/><text x="33.4120%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.26%)</title><rect x="33.1620%" y="325" width="0.2571%" height="15" fill="rgb(240,140,0)" fg:x="129" fg:w="1"/><text x="33.4120%" y="335.50"></text></g><g><title>realloc (1 samples, 0.26%)</title><rect x="33.1620%" y="309" width="0.2571%" height="15" fill="rgb(214,214,64)" fg:x="129" fg:w="1"/><text x="33.4120%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="33.1620%" y="293" width="0.2571%" height="15" fill="rgb(183,183,53)" fg:x="129" fg:w="1"/><text x="33.4120%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="33.1620%" y="277" width="0.2571%" height="15" fill="rgb(214,214,64)" fg:x="129" fg:w="1"/><text x="33.4120%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 1.54%)</title><rect x="32.3907%" y="405" width="1.5424%" height="15" fill="rgb(248,148,0)" fg:x="126" fg:w="6"/><text x="32.6407%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 1.54%)</title><rect x="32.3907%" y="389" width="1.5424%" height="15" fill="rgb(223,123,0)" fg:x="126" fg:w="6"/><text x="32.6407%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 1.29%)</title><rect x="32.6478%" y="373" width="1.2853%" height="15" fill="rgb(220,120,0)" fg:x="127" fg:w="5"/><text x="32.8978%" y="383.50"></text></g><g><title>malloc (2 samples, 0.51%)</title><rect x="33.4190%" y="357" width="0.5141%" height="15" fill="rgb(208,208,62)" fg:x="130" fg:w="2"/><text x="33.6690%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="33.6761%" y="341" width="0.2571%" height="15" fill="rgb(195,195,57)" fg:x="131" fg:w="1"/><text x="33.9261%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 1.80%)</title><rect x="32.3907%" y="421" width="1.7995%" height="15" fill="rgb(243,143,0)" fg:x="126" fg:w="7"/><text x="32.6407%" y="431.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.26%)</title><rect x="33.9332%" y="405" width="0.2571%" height="15" fill="rgb(221,121,0)" fg:x="132" fg:w="1"/><text x="34.1832%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.26%)</title><rect x="34.1902%" y="421" width="0.2571%" height="15" fill="rgb(214,114,0)" fg:x="133" fg:w="1"/><text x="34.4402%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.26%)</title><rect x="34.1902%" y="405" width="0.2571%" height="15" fill="rgb(245,145,0)" fg:x="133" fg:w="1"/><text x="34.4402%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.26%)</title><rect x="34.1902%" y="389" width="0.2571%" height="15" fill="rgb(198,98,0)" fg:x="133" fg:w="1"/><text x="34.4402%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="34.1902%" y="373" width="0.2571%" height="15" fill="rgb(205,105,0)" fg:x="133" fg:w="1"/><text x="34.4402%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="34.1902%" y="357" width="0.2571%" height="15" fill="rgb(251,151,0)" fg:x="133" fg:w="1"/><text x="34.4402%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="34.1902%" y="341" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="133" fg:w="1"/><text x="34.4402%" y="351.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="34.1902%" y="325" width="0.2571%" height="15" fill="rgb(202,202,60)" fg:x="133" fg:w="1"/><text x="34.4402%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="34.1902%" y="309" width="0.2571%" height="15" fill="rgb(192,192,56)" fg:x="133" fg:w="1"/><text x="34.4402%" y="319.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.26%)</title><rect x="34.4473%" y="133" width="0.2571%" height="15" fill="rgb(208,208,62)" fg:x="134" fg:w="1"/><text x="34.6973%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.26%)</title><rect x="34.4473%" y="117" width="0.2571%" height="15" fill="rgb(195,95,0)" fg:x="134" fg:w="1"/><text x="34.6973%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.51%)</title><rect x="34.4473%" y="261" width="0.5141%" height="15" fill="rgb(246,146,0)" fg:x="134" fg:w="2"/><text x="34.6973%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.51%)</title><rect x="34.4473%" y="245" width="0.5141%" height="15" fill="rgb(221,121,0)" fg:x="134" fg:w="2"/><text x="34.6973%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.51%)</title><rect x="34.4473%" y="229" width="0.5141%" height="15" fill="rgb(224,124,0)" fg:x="134" fg:w="2"/><text x="34.6973%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.51%)</title><rect x="34.4473%" y="213" width="0.5141%" height="15" fill="rgb(215,115,0)" fg:x="134" fg:w="2"/><text x="34.6973%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.51%)</title><rect x="34.4473%" y="197" width="0.5141%" height="15" fill="rgb(233,133,0)" fg:x="134" fg:w="2"/><text x="34.6973%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.51%)</title><rect x="34.4473%" y="181" width="0.5141%" height="15" fill="rgb(232,132,0)" fg:x="134" fg:w="2"/><text x="34.6973%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.51%)</title><rect x="34.4473%" y="165" width="0.5141%" height="15" fill="rgb(235,135,0)" fg:x="134" fg:w="2"/><text x="34.6973%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.51%)</title><rect x="34.4473%" y="149" width="0.5141%" height="15" fill="rgb(204,104,0)" fg:x="134" fg:w="2"/><text x="34.6973%" y="159.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="34.7044%" y="133" width="0.2571%" height="15" fill="rgb(207,207,61)" fg:x="135" fg:w="1"/><text x="34.9544%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="34.7044%" y="117" width="0.2571%" height="15" fill="rgb(194,194,56)" fg:x="135" fg:w="1"/><text x="34.9544%" y="127.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.26%)</title><rect x="34.9614%" y="197" width="0.2571%" height="15" fill="rgb(200,200,59)" fg:x="136" fg:w="1"/><text x="35.2114%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.26%)</title><rect x="34.9614%" y="181" width="0.2571%" height="15" fill="rgb(240,140,0)" fg:x="136" fg:w="1"/><text x="35.2114%" y="191.50"></text></g><g><title>__rust_dealloc (1 samples, 0.26%)</title><rect x="35.2185%" y="197" width="0.2571%" height="15" fill="rgb(177,177,50)" fg:x="137" fg:w="1"/><text x="35.4685%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (7 samples, 1.80%)</title><rect x="34.4473%" y="421" width="1.7995%" height="15" fill="rgb(220,120,0)" fg:x="134" fg:w="7"/><text x="34.6973%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (7 samples, 1.80%)</title><rect x="34.4473%" y="405" width="1.7995%" height="15" fill="rgb(252,152,0)" fg:x="134" fg:w="7"/><text x="34.6973%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (7 samples, 1.80%)</title><rect x="34.4473%" y="389" width="1.7995%" height="15" fill="rgb(204,104,0)" fg:x="134" fg:w="7"/><text x="34.6973%" y="399.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 1.80%)</title><rect x="34.4473%" y="373" width="1.7995%" height="15" fill="rgb(90,202,202)" fg:x="134" fg:w="7"/><text x="34.6973%" y="383.50">&lt;..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (7 samples, 1.80%)</title><rect x="34.4473%" y="357" width="1.7995%" height="15" fill="rgb(55,170,170)" fg:x="134" fg:w="7"/><text x="34.6973%" y="367.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (7 samples, 1.80%)</title><rect x="34.4473%" y="341" width="1.7995%" height="15" fill="rgb(55,169,169)" fg:x="134" fg:w="7"/><text x="34.6973%" y="351.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 1.80%)</title><rect x="34.4473%" y="325" width="1.7995%" height="15" fill="rgb(61,175,175)" fg:x="134" fg:w="7"/><text x="34.6973%" y="335.50">h..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7 samples, 1.80%)</title><rect x="34.4473%" y="309" width="1.7995%" height="15" fill="rgb(219,119,0)" fg:x="134" fg:w="7"/><text x="34.6973%" y="319.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (7 samples, 1.80%)</title><rect x="34.4473%" y="293" width="1.7995%" height="15" fill="rgb(213,113,0)" fg:x="134" fg:w="7"/><text x="34.6973%" y="303.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (7 samples, 1.80%)</title><rect x="34.4473%" y="277" width="1.7995%" height="15" fill="rgb(199,99,0)" fg:x="134" fg:w="7"/><text x="34.6973%" y="287.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (5 samples, 1.29%)</title><rect x="34.9614%" y="261" width="1.2853%" height="15" fill="rgb(249,149,0)" fg:x="136" fg:w="5"/><text x="35.2114%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 1.29%)</title><rect x="34.9614%" y="245" width="1.2853%" height="15" fill="rgb(233,133,0)" fg:x="136" fg:w="5"/><text x="35.2114%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 1.29%)</title><rect x="34.9614%" y="229" width="1.2853%" height="15" fill="rgb(208,108,0)" fg:x="136" fg:w="5"/><text x="35.2114%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 1.29%)</title><rect x="34.9614%" y="213" width="1.2853%" height="15" fill="rgb(235,135,0)" fg:x="136" fg:w="5"/><text x="35.2114%" y="223.50"></text></g><g><title>cfree (3 samples, 0.77%)</title><rect x="35.4756%" y="197" width="0.7712%" height="15" fill="rgb(208,208,62)" fg:x="138" fg:w="3"/><text x="35.7256%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.51%)</title><rect x="35.7326%" y="181" width="0.5141%" height="15" fill="rgb(229,229,69)" fg:x="139" fg:w="2"/><text x="35.9826%" y="191.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.26%)</title><rect x="36.2468%" y="293" width="0.2571%" height="15" fill="rgb(104,215,215)" fg:x="141" fg:w="1"/><text x="36.4968%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.26%)</title><rect x="36.2468%" y="277" width="0.2571%" height="15" fill="rgb(92,204,204)" fg:x="141" fg:w="1"/><text x="36.4968%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.26%)</title><rect x="36.2468%" y="261" width="0.2571%" height="15" fill="rgb(194,94,0)" fg:x="141" fg:w="1"/><text x="36.4968%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.26%)</title><rect x="36.2468%" y="245" width="0.2571%" height="15" fill="rgb(200,100,0)" fg:x="141" fg:w="1"/><text x="36.4968%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.26%)</title><rect x="36.2468%" y="229" width="0.2571%" height="15" fill="rgb(241,141,0)" fg:x="141" fg:w="1"/><text x="36.4968%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.26%)</title><rect x="36.2468%" y="213" width="0.2571%" height="15" fill="rgb(201,101,0)" fg:x="141" fg:w="1"/><text x="36.4968%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.26%)</title><rect x="36.2468%" y="197" width="0.2571%" height="15" fill="rgb(221,121,0)" fg:x="141" fg:w="1"/><text x="36.4968%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.26%)</title><rect x="36.2468%" y="181" width="0.2571%" height="15" fill="rgb(245,145,0)" fg:x="141" fg:w="1"/><text x="36.4968%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (2 samples, 0.51%)</title><rect x="36.2468%" y="309" width="0.5141%" height="15" fill="rgb(77,190,190)" fg:x="141" fg:w="2"/><text x="36.4968%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.26%)</title><rect x="36.5039%" y="293" width="0.2571%" height="15" fill="rgb(108,218,218)" fg:x="142" fg:w="1"/><text x="36.7539%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.26%)</title><rect x="36.5039%" y="277" width="0.2571%" height="15" fill="rgb(109,219,219)" fg:x="142" fg:w="1"/><text x="36.7539%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.26%)</title><rect x="36.5039%" y="261" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="142" fg:w="1"/><text x="36.7539%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.26%)</title><rect x="36.5039%" y="245" width="0.2571%" height="15" fill="rgb(249,149,0)" fg:x="142" fg:w="1"/><text x="36.7539%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.77%)</title><rect x="36.2468%" y="389" width="0.7712%" height="15" fill="rgb(101,211,211)" fg:x="141" fg:w="3"/><text x="36.4968%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.77%)</title><rect x="36.2468%" y="373" width="0.7712%" height="15" fill="rgb(74,187,187)" fg:x="141" fg:w="3"/><text x="36.4968%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.77%)</title><rect x="36.2468%" y="357" width="0.7712%" height="15" fill="rgb(60,174,174)" fg:x="141" fg:w="3"/><text x="36.4968%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.77%)</title><rect x="36.2468%" y="341" width="0.7712%" height="15" fill="rgb(79,191,191)" fg:x="141" fg:w="3"/><text x="36.4968%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.77%)</title><rect x="36.2468%" y="325" width="0.7712%" height="15" fill="rgb(88,200,200)" fg:x="141" fg:w="3"/><text x="36.4968%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.26%)</title><rect x="36.7609%" y="309" width="0.2571%" height="15" fill="rgb(57,172,172)" fg:x="143" fg:w="1"/><text x="37.0109%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.26%)</title><rect x="36.7609%" y="293" width="0.2571%" height="15" fill="rgb(69,182,182)" fg:x="143" fg:w="1"/><text x="37.0109%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.26%)</title><rect x="36.7609%" y="277" width="0.2571%" height="15" fill="rgb(106,216,216)" fg:x="143" fg:w="1"/><text x="37.0109%" y="287.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (35 samples, 9.00%)</title><rect x="28.2776%" y="437" width="8.9974%" height="15" fill="rgb(79,191,191)" fg:x="110" fg:w="35"/><text x="28.5276%" y="447.50">alc::keyboard..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (4 samples, 1.03%)</title><rect x="36.2468%" y="421" width="1.0283%" height="15" fill="rgb(196,96,0)" fg:x="141" fg:w="4"/><text x="36.4968%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 1.03%)</title><rect x="36.2468%" y="405" width="1.0283%" height="15" fill="rgb(86,198,198)" fg:x="141" fg:w="4"/><text x="36.4968%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.26%)</title><rect x="37.0180%" y="389" width="0.2571%" height="15" fill="rgb(94,205,205)" fg:x="144" fg:w="1"/><text x="37.2680%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.26%)</title><rect x="37.0180%" y="373" width="0.2571%" height="15" fill="rgb(223,123,0)" fg:x="144" fg:w="1"/><text x="37.2680%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.26%)</title><rect x="37.0180%" y="357" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="144" fg:w="1"/><text x="37.2680%" y="367.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.26%)</title><rect x="37.0180%" y="341" width="0.2571%" height="15" fill="rgb(60,174,174)" fg:x="144" fg:w="1"/><text x="37.2680%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.26%)</title><rect x="37.0180%" y="325" width="0.2571%" height="15" fill="rgb(223,123,0)" fg:x="144" fg:w="1"/><text x="37.2680%" y="335.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.26%)</title><rect x="37.0180%" y="309" width="0.2571%" height="15" fill="rgb(236,136,0)" fg:x="144" fg:w="1"/><text x="37.2680%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.26%)</title><rect x="37.0180%" y="293" width="0.2571%" height="15" fill="rgb(222,122,0)" fg:x="144" fg:w="1"/><text x="37.2680%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.26%)</title><rect x="37.0180%" y="277" width="0.2571%" height="15" fill="rgb(192,92,0)" fg:x="144" fg:w="1"/><text x="37.2680%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.26%)</title><rect x="37.0180%" y="261" width="0.2571%" height="15" fill="rgb(199,99,0)" fg:x="144" fg:w="1"/><text x="37.2680%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.26%)</title><rect x="37.0180%" y="245" width="0.2571%" height="15" fill="rgb(215,115,0)" fg:x="144" fg:w="1"/><text x="37.2680%" y="255.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::swap (40 samples, 10.28%)</title><rect x="27.5064%" y="453" width="10.2828%" height="15" fill="rgb(104,214,214)" fg:x="107" fg:w="40"/><text x="27.7564%" y="463.50">alc::keyboard::..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (2 samples, 0.51%)</title><rect x="37.2751%" y="437" width="0.5141%" height="15" fill="rgb(234,134,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (2 samples, 0.51%)</title><rect x="37.2751%" y="421" width="0.5141%" height="15" fill="rgb(244,144,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (2 samples, 0.51%)</title><rect x="37.2751%" y="405" width="0.5141%" height="15" fill="rgb(221,121,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (2 samples, 0.51%)</title><rect x="37.2751%" y="389" width="0.5141%" height="15" fill="rgb(209,109,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.51%)</title><rect x="37.2751%" y="373" width="0.5141%" height="15" fill="rgb(57,171,171)" fg:x="145" fg:w="2"/><text x="37.5251%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.51%)</title><rect x="37.2751%" y="357" width="0.5141%" height="15" fill="rgb(77,190,190)" fg:x="145" fg:w="2"/><text x="37.5251%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.51%)</title><rect x="37.2751%" y="341" width="0.5141%" height="15" fill="rgb(107,218,218)" fg:x="145" fg:w="2"/><text x="37.5251%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.51%)</title><rect x="37.2751%" y="325" width="0.5141%" height="15" fill="rgb(96,207,207)" fg:x="145" fg:w="2"/><text x="37.5251%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.51%)</title><rect x="37.2751%" y="309" width="0.5141%" height="15" fill="rgb(196,96,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (2 samples, 0.51%)</title><rect x="37.2751%" y="293" width="0.5141%" height="15" fill="rgb(203,103,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.51%)</title><rect x="37.2751%" y="277" width="0.5141%" height="15" fill="rgb(245,145,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.51%)</title><rect x="37.2751%" y="261" width="0.5141%" height="15" fill="rgb(233,133,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.51%)</title><rect x="37.2751%" y="245" width="0.5141%" height="15" fill="rgb(232,132,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.51%)</title><rect x="37.2751%" y="229" width="0.5141%" height="15" fill="rgb(247,147,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.51%)</title><rect x="37.2751%" y="213" width="0.5141%" height="15" fill="rgb(231,131,0)" fg:x="145" fg:w="2"/><text x="37.5251%" y="223.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="37.5321%" y="197" width="0.2571%" height="15" fill="rgb(206,206,61)" fg:x="146" fg:w="1"/><text x="37.7821%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="37.5321%" y="181" width="0.2571%" height="15" fill="rgb(195,195,57)" fg:x="146" fg:w="1"/><text x="37.7821%" y="191.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_new_layouts (71 samples, 18.25%)</title><rect x="19.7943%" y="469" width="18.2519%" height="15" fill="rgb(109,219,219)" fg:x="77" fg:w="71"/><text x="20.0443%" y="479.50">alc::optimizer::LayoutOptimi..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.26%)</title><rect x="37.7892%" y="453" width="0.2571%" height="15" fill="rgb(239,139,0)" fg:x="147" fg:w="1"/><text x="38.0392%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.26%)</title><rect x="37.7892%" y="437" width="0.2571%" height="15" fill="rgb(237,137,0)" fg:x="147" fg:w="1"/><text x="38.0392%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="37.7892%" y="421" width="0.2571%" height="15" fill="rgb(238,138,0)" fg:x="147" fg:w="1"/><text x="38.0392%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.26%)</title><rect x="37.7892%" y="405" width="0.2571%" height="15" fill="rgb(230,130,0)" fg:x="147" fg:w="1"/><text x="38.0392%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.26%)</title><rect x="37.7892%" y="389" width="0.2571%" height="15" fill="rgb(242,142,0)" fg:x="147" fg:w="1"/><text x="38.0392%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.26%)</title><rect x="37.7892%" y="373" width="0.2571%" height="15" fill="rgb(208,108,0)" fg:x="147" fg:w="1"/><text x="38.0392%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.26%)</title><rect x="37.7892%" y="357" width="0.2571%" height="15" fill="rgb(251,151,0)" fg:x="147" fg:w="1"/><text x="38.0392%" y="367.50"></text></g><g><title>realloc (1 samples, 0.26%)</title><rect x="37.7892%" y="341" width="0.2571%" height="15" fill="rgb(220,220,66)" fg:x="147" fg:w="1"/><text x="38.0392%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="37.7892%" y="325" width="0.2571%" height="15" fill="rgb(194,194,56)" fg:x="147" fg:w="1"/><text x="38.0392%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="37.7892%" y="309" width="0.2571%" height="15" fill="rgb(177,177,50)" fg:x="147" fg:w="1"/><text x="38.0392%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="37.7892%" y="293" width="0.2571%" height="15" fill="rgb(220,220,66)" fg:x="147" fg:w="1"/><text x="38.0392%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.51%)</title><rect x="38.0463%" y="197" width="0.5141%" height="15" fill="rgb(200,100,0)" fg:x="148" fg:w="2"/><text x="38.2963%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.51%)</title><rect x="38.0463%" y="181" width="0.5141%" height="15" fill="rgb(192,92,0)" fg:x="148" fg:w="2"/><text x="38.2963%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.51%)</title><rect x="38.0463%" y="165" width="0.5141%" height="15" fill="rgb(220,120,0)" fg:x="148" fg:w="2"/><text x="38.2963%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.51%)</title><rect x="38.0463%" y="149" width="0.5141%" height="15" fill="rgb(230,130,0)" fg:x="148" fg:w="2"/><text x="38.2963%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.51%)</title><rect x="38.0463%" y="133" width="0.5141%" height="15" fill="rgb(193,93,0)" fg:x="148" fg:w="2"/><text x="38.2963%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.51%)</title><rect x="38.0463%" y="117" width="0.5141%" height="15" fill="rgb(220,120,0)" fg:x="148" fg:w="2"/><text x="38.2963%" y="127.50"></text></g><g><title>malloc (2 samples, 0.51%)</title><rect x="38.0463%" y="101" width="0.5141%" height="15" fill="rgb(207,207,61)" fg:x="148" fg:w="2"/><text x="38.2963%" y="111.50"></text></g><g><title>[libc.so.6] (2 samples, 0.51%)</title><rect x="38.0463%" y="85" width="0.5141%" height="15" fill="rgb(224,224,67)" fg:x="148" fg:w="2"/><text x="38.2963%" y="95.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (4 samples, 1.03%)</title><rect x="38.0463%" y="277" width="1.0283%" height="15" fill="rgb(70,184,184)" fg:x="148" fg:w="4"/><text x="38.2963%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 1.03%)</title><rect x="38.0463%" y="261" width="1.0283%" height="15" fill="rgb(235,135,0)" fg:x="148" fg:w="4"/><text x="38.2963%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 1.03%)</title><rect x="38.0463%" y="245" width="1.0283%" height="15" fill="rgb(193,93,0)" fg:x="148" fg:w="4"/><text x="38.2963%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 1.03%)</title><rect x="38.0463%" y="229" width="1.0283%" height="15" fill="rgb(224,124,0)" fg:x="148" fg:w="4"/><text x="38.2963%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 1.03%)</title><rect x="38.0463%" y="213" width="1.0283%" height="15" fill="rgb(88,200,200)" fg:x="148" fg:w="4"/><text x="38.2963%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.51%)</title><rect x="38.5604%" y="197" width="0.5141%" height="15" fill="rgb(240,140,0)" fg:x="150" fg:w="2"/><text x="38.8104%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.51%)</title><rect x="38.5604%" y="181" width="0.5141%" height="15" fill="rgb(240,140,0)" fg:x="150" fg:w="2"/><text x="38.8104%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.51%)</title><rect x="38.5604%" y="165" width="0.5141%" height="15" fill="rgb(191,191,56)" fg:x="150" fg:w="2"/><text x="38.8104%" y="175.50"></text></g><g><title>core::clone::Clone::clone (8 samples, 2.06%)</title><rect x="38.0463%" y="357" width="2.0566%" height="15" fill="rgb(228,128,0)" fg:x="148" fg:w="8"/><text x="38.2963%" y="367.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 2.06%)</title><rect x="38.0463%" y="341" width="2.0566%" height="15" fill="rgb(208,108,0)" fg:x="148" fg:w="8"/><text x="38.2963%" y="351.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 2.06%)</title><rect x="38.0463%" y="325" width="2.0566%" height="15" fill="rgb(243,143,0)" fg:x="148" fg:w="8"/><text x="38.2963%" y="335.50">a..</text></g><g><title>alloc::slice::hack::to_vec (8 samples, 2.06%)</title><rect x="38.0463%" y="309" width="2.0566%" height="15" fill="rgb(231,131,0)" fg:x="148" fg:w="8"/><text x="38.2963%" y="319.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 2.06%)</title><rect x="38.0463%" y="293" width="2.0566%" height="15" fill="rgb(57,172,172)" fg:x="148" fg:w="8"/><text x="38.2963%" y="303.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 1.03%)</title><rect x="39.0746%" y="277" width="1.0283%" height="15" fill="rgb(243,143,0)" fg:x="152" fg:w="4"/><text x="39.3246%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 1.03%)</title><rect x="39.0746%" y="261" width="1.0283%" height="15" fill="rgb(200,100,0)" fg:x="152" fg:w="4"/><text x="39.3246%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 1.03%)</title><rect x="39.0746%" y="245" width="1.0283%" height="15" fill="rgb(215,115,0)" fg:x="152" fg:w="4"/><text x="39.3246%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 1.03%)</title><rect x="39.0746%" y="229" width="1.0283%" height="15" fill="rgb(208,108,0)" fg:x="152" fg:w="4"/><text x="39.3246%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 1.03%)</title><rect x="39.0746%" y="213" width="1.0283%" height="15" fill="rgb(193,93,0)" fg:x="152" fg:w="4"/><text x="39.3246%" y="223.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 1.03%)</title><rect x="39.0746%" y="197" width="1.0283%" height="15" fill="rgb(209,109,0)" fg:x="152" fg:w="4"/><text x="39.3246%" y="207.50"></text></g><g><title>malloc (4 samples, 1.03%)</title><rect x="39.0746%" y="181" width="1.0283%" height="15" fill="rgb(210,210,62)" fg:x="152" fg:w="4"/><text x="39.3246%" y="191.50"></text></g><g><title>[libc.so.6] (4 samples, 1.03%)</title><rect x="39.0746%" y="165" width="1.0283%" height="15" fill="rgb(182,182,52)" fg:x="152" fg:w="4"/><text x="39.3246%" y="175.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (10 samples, 2.57%)</title><rect x="38.0463%" y="453" width="2.5707%" height="15" fill="rgb(104,214,214)" fg:x="148" fg:w="10"/><text x="38.2963%" y="463.50">&lt;a..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (10 samples, 2.57%)</title><rect x="38.0463%" y="437" width="2.5707%" height="15" fill="rgb(205,105,0)" fg:x="148" fg:w="10"/><text x="38.2963%" y="447.50">&lt;s..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (10 samples, 2.57%)</title><rect x="38.0463%" y="421" width="2.5707%" height="15" fill="rgb(69,183,183)" fg:x="148" fg:w="10"/><text x="38.2963%" y="431.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 2.57%)</title><rect x="38.0463%" y="405" width="2.5707%" height="15" fill="rgb(55,170,170)" fg:x="148" fg:w="10"/><text x="38.2963%" y="415.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (10 samples, 2.57%)</title><rect x="38.0463%" y="389" width="2.5707%" height="15" fill="rgb(52,167,167)" fg:x="148" fg:w="10"/><text x="38.2963%" y="399.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (10 samples, 2.57%)</title><rect x="38.0463%" y="373" width="2.5707%" height="15" fill="rgb(76,189,189)" fg:x="148" fg:w="10"/><text x="38.2963%" y="383.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.51%)</title><rect x="40.1028%" y="357" width="0.5141%" height="15" fill="rgb(56,171,171)" fg:x="156" fg:w="2"/><text x="40.3528%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.51%)</title><rect x="40.1028%" y="341" width="0.5141%" height="15" fill="rgb(236,136,0)" fg:x="156" fg:w="2"/><text x="40.3528%" y="351.50"></text></g><g><title>core::ptr::write (2 samples, 0.51%)</title><rect x="40.1028%" y="325" width="0.5141%" height="15" fill="rgb(247,147,0)" fg:x="156" fg:w="2"/><text x="40.3528%" y="335.50"></text></g><g><title>core::clone::Clone::clone (7 samples, 1.80%)</title><rect x="40.6170%" y="341" width="1.7995%" height="15" fill="rgb(251,151,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="351.50">c..</text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (7 samples, 1.80%)</title><rect x="40.6170%" y="325" width="1.7995%" height="15" fill="rgb(58,172,172)" fg:x="158" fg:w="7"/><text x="40.8670%" y="335.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 1.80%)</title><rect x="40.6170%" y="309" width="1.7995%" height="15" fill="rgb(226,126,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="319.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 1.80%)</title><rect x="40.6170%" y="293" width="1.7995%" height="15" fill="rgb(228,128,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="303.50">a..</text></g><g><title>alloc::slice::hack::to_vec (7 samples, 1.80%)</title><rect x="40.6170%" y="277" width="1.7995%" height="15" fill="rgb(209,109,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="287.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 1.80%)</title><rect x="40.6170%" y="261" width="1.7995%" height="15" fill="rgb(69,183,183)" fg:x="158" fg:w="7"/><text x="40.8670%" y="271.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 1.80%)</title><rect x="40.6170%" y="245" width="1.7995%" height="15" fill="rgb(208,108,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="255.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 1.80%)</title><rect x="40.6170%" y="229" width="1.7995%" height="15" fill="rgb(235,135,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="239.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 1.80%)</title><rect x="40.6170%" y="213" width="1.7995%" height="15" fill="rgb(235,135,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="223.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 1.80%)</title><rect x="40.6170%" y="197" width="1.7995%" height="15" fill="rgb(237,137,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="207.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 1.80%)</title><rect x="40.6170%" y="181" width="1.7995%" height="15" fill="rgb(252,152,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="191.50">a..</text></g><g><title>alloc::alloc::alloc (7 samples, 1.80%)</title><rect x="40.6170%" y="165" width="1.7995%" height="15" fill="rgb(249,149,0)" fg:x="158" fg:w="7"/><text x="40.8670%" y="175.50">a..</text></g><g><title>malloc (7 samples, 1.80%)</title><rect x="40.6170%" y="149" width="1.7995%" height="15" fill="rgb(185,185,53)" fg:x="158" fg:w="7"/><text x="40.8670%" y="159.50">m..</text></g><g><title>[libc.so.6] (6 samples, 1.54%)</title><rect x="40.8740%" y="133" width="1.5424%" height="15" fill="rgb(213,213,63)" fg:x="159" fg:w="6"/><text x="41.1240%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="42.1594%" y="117" width="0.2571%" height="15" fill="rgb(193,193,56)" fg:x="164" fg:w="1"/><text x="42.4094%" y="127.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (8 samples, 2.06%)</title><rect x="40.6170%" y="373" width="2.0566%" height="15" fill="rgb(68,181,181)" fg:x="158" fg:w="8"/><text x="40.8670%" y="383.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (8 samples, 2.06%)</title><rect x="40.6170%" y="357" width="2.0566%" height="15" fill="rgb(72,185,185)" fg:x="158" fg:w="8"/><text x="40.8670%" y="367.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.26%)</title><rect x="42.4165%" y="341" width="0.2571%" height="15" fill="rgb(79,192,192)" fg:x="165" fg:w="1"/><text x="42.6665%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.26%)</title><rect x="42.4165%" y="325" width="0.2571%" height="15" fill="rgb(207,107,0)" fg:x="165" fg:w="1"/><text x="42.6665%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.26%)</title><rect x="42.4165%" y="309" width="0.2571%" height="15" fill="rgb(204,104,0)" fg:x="165" fg:w="1"/><text x="42.6665%" y="319.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 4.63%)</title><rect x="40.6170%" y="437" width="4.6272%" height="15" fill="rgb(65,178,178)" fg:x="158" fg:w="18"/><text x="40.8670%" y="447.50">&lt;alc:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (18 samples, 4.63%)</title><rect x="40.6170%" y="421" width="4.6272%" height="15" fill="rgb(222,122,0)" fg:x="158" fg:w="18"/><text x="40.8670%" y="431.50">&lt;std:..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (18 samples, 4.63%)</title><rect x="40.6170%" y="405" width="4.6272%" height="15" fill="rgb(89,201,201)" fg:x="158" fg:w="18"/><text x="40.8670%" y="415.50">&lt;hash..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 4.63%)</title><rect x="40.6170%" y="389" width="4.6272%" height="15" fill="rgb(62,176,176)" fg:x="158" fg:w="18"/><text x="40.8670%" y="399.50">&lt;hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (10 samples, 2.57%)</title><rect x="42.6735%" y="373" width="2.5707%" height="15" fill="rgb(76,189,189)" fg:x="166" fg:w="10"/><text x="42.9235%" y="383.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (10 samples, 2.57%)</title><rect x="42.6735%" y="357" width="2.5707%" height="15" fill="rgb(58,172,172)" fg:x="166" fg:w="10"/><text x="42.9235%" y="367.50">ha..</text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10 samples, 2.57%)</title><rect x="42.6735%" y="341" width="2.5707%" height="15" fill="rgb(80,193,193)" fg:x="166" fg:w="10"/><text x="42.9235%" y="351.50">ha..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 2.57%)</title><rect x="42.6735%" y="325" width="2.5707%" height="15" fill="rgb(195,95,0)" fg:x="166" fg:w="10"/><text x="42.9235%" y="335.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 2.57%)</title><rect x="42.6735%" y="309" width="2.5707%" height="15" fill="rgb(227,127,0)" fg:x="166" fg:w="10"/><text x="42.9235%" y="319.50">al..</text></g><g><title>alloc::alloc::alloc (10 samples, 2.57%)</title><rect x="42.6735%" y="293" width="2.5707%" height="15" fill="rgb(191,91,0)" fg:x="166" fg:w="10"/><text x="42.9235%" y="303.50">al..</text></g><g><title>malloc (10 samples, 2.57%)</title><rect x="42.6735%" y="277" width="2.5707%" height="15" fill="rgb(175,175,50)" fg:x="166" fg:w="10"/><text x="42.9235%" y="287.50">ma..</text></g><g><title>[libc.so.6] (10 samples, 2.57%)</title><rect x="42.6735%" y="261" width="2.5707%" height="15" fill="rgb(195,195,57)" fg:x="166" fg:w="10"/><text x="42.9235%" y="271.50">[l..</text></g><g><title>[libc.so.6] (9 samples, 2.31%)</title><rect x="42.9306%" y="245" width="2.3136%" height="15" fill="rgb(201,201,59)" fg:x="167" fg:w="9"/><text x="43.1806%" y="255.50">[..</text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="44.9871%" y="229" width="0.2571%" height="15" fill="rgb(186,186,54)" fg:x="175" fg:w="1"/><text x="45.2371%" y="239.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.26%)</title><rect x="45.7584%" y="405" width="0.2571%" height="15" fill="rgb(91,203,203)" fg:x="178" fg:w="1"/><text x="46.0084%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.26%)</title><rect x="45.7584%" y="389" width="0.2571%" height="15" fill="rgb(249,149,0)" fg:x="178" fg:w="1"/><text x="46.0084%" y="399.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (2 samples, 0.51%)</title><rect x="46.0154%" y="405" width="0.5141%" height="15" fill="rgb(65,179,179)" fg:x="179" fg:w="2"/><text x="46.2654%" y="415.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (2 samples, 0.51%)</title><rect x="46.0154%" y="389" width="0.5141%" height="15" fill="rgb(71,184,184)" fg:x="179" fg:w="2"/><text x="46.2654%" y="399.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (2 samples, 0.51%)</title><rect x="46.0154%" y="373" width="0.5141%" height="15" fill="rgb(92,204,204)" fg:x="179" fg:w="2"/><text x="46.2654%" y="383.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (2 samples, 0.51%)</title><rect x="46.0154%" y="357" width="0.5141%" height="15" fill="rgb(62,176,176)" fg:x="179" fg:w="2"/><text x="46.2654%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.03%)</title><rect x="46.5296%" y="405" width="1.0283%" height="15" fill="rgb(226,126,0)" fg:x="181" fg:w="4"/><text x="46.7796%" y="415.50"></text></g><g><title>core::ptr::read (1 samples, 0.26%)</title><rect x="47.3008%" y="389" width="0.2571%" height="15" fill="rgb(243,143,0)" fg:x="184" fg:w="1"/><text x="47.5508%" y="399.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (18 samples, 4.63%)</title><rect x="45.5013%" y="421" width="4.6272%" height="15" fill="rgb(86,198,198)" fg:x="177" fg:w="18"/><text x="45.7513%" y="431.50">&lt;alc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (10 samples, 2.57%)</title><rect x="47.5578%" y="405" width="2.5707%" height="15" fill="rgb(196,96,0)" fg:x="185" fg:w="10"/><text x="47.8078%" y="415.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 2.57%)</title><rect x="47.5578%" y="389" width="2.5707%" height="15" fill="rgb(193,93,0)" fg:x="185" fg:w="10"/><text x="47.8078%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (10 samples, 2.57%)</title><rect x="47.5578%" y="373" width="2.5707%" height="15" fill="rgb(253,153,0)" fg:x="185" fg:w="10"/><text x="47.8078%" y="383.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 2.57%)</title><rect x="47.5578%" y="357" width="2.5707%" height="15" fill="rgb(82,194,194)" fg:x="185" fg:w="10"/><text x="47.8078%" y="367.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (10 samples, 2.57%)</title><rect x="47.5578%" y="341" width="2.5707%" height="15" fill="rgb(209,109,0)" fg:x="185" fg:w="10"/><text x="47.8078%" y="351.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 2.57%)</title><rect x="47.5578%" y="325" width="2.5707%" height="15" fill="rgb(225,125,0)" fg:x="185" fg:w="10"/><text x="47.8078%" y="335.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 2.57%)</title><rect x="47.5578%" y="309" width="2.5707%" height="15" fill="rgb(217,117,0)" fg:x="185" fg:w="10"/><text x="47.8078%" y="319.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (10 samples, 2.57%)</title><rect x="47.5578%" y="293" width="2.5707%" height="15" fill="rgb(218,118,0)" fg:x="185" fg:w="10"/><text x="47.8078%" y="303.50">al..</text></g><g><title>cfree (7 samples, 1.80%)</title><rect x="48.3290%" y="277" width="1.7995%" height="15" fill="rgb(199,199,59)" fg:x="188" fg:w="7"/><text x="48.5790%" y="287.50">c..</text></g><g><title>[libc.so.6] (5 samples, 1.29%)</title><rect x="48.8432%" y="261" width="1.2853%" height="15" fill="rgb(221,221,66)" fg:x="190" fg:w="5"/><text x="49.0932%" y="271.50"></text></g><g><title>[libc.so.6] (3 samples, 0.77%)</title><rect x="49.3573%" y="245" width="0.7712%" height="15" fill="rgb(227,227,68)" fg:x="192" fg:w="3"/><text x="49.6073%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="49.8715%" y="229" width="0.2571%" height="15" fill="rgb(209,209,62)" fg:x="194" fg:w="1"/><text x="50.1215%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.26%)</title><rect x="50.1285%" y="421" width="0.2571%" height="15" fill="rgb(193,93,0)" fg:x="195" fg:w="1"/><text x="50.3785%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.26%)</title><rect x="50.1285%" y="405" width="0.2571%" height="15" fill="rgb(214,114,0)" fg:x="195" fg:w="1"/><text x="50.3785%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.26%)</title><rect x="50.1285%" y="389" width="0.2571%" height="15" fill="rgb(218,118,0)" fg:x="195" fg:w="1"/><text x="50.3785%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.51%)</title><rect x="50.3856%" y="421" width="0.5141%" height="15" fill="rgb(218,118,0)" fg:x="196" fg:w="2"/><text x="50.6356%" y="431.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.51%)</title><rect x="50.3856%" y="405" width="0.5141%" height="15" fill="rgb(93,205,205)" fg:x="196" fg:w="2"/><text x="50.6356%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.51%)</title><rect x="50.3856%" y="389" width="0.5141%" height="15" fill="rgb(60,174,174)" fg:x="196" fg:w="2"/><text x="50.6356%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.26%)</title><rect x="53.4704%" y="229" width="0.2571%" height="15" fill="rgb(218,218,65)" fg:x="208" fg:w="1"/><text x="53.7204%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.26%)</title><rect x="53.4704%" y="213" width="0.2571%" height="15" fill="rgb(240,140,0)" fg:x="208" fg:w="1"/><text x="53.7204%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 1.03%)</title><rect x="53.4704%" y="277" width="1.0283%" height="15" fill="rgb(229,129,0)" fg:x="208" fg:w="4"/><text x="53.7204%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 1.03%)</title><rect x="53.4704%" y="261" width="1.0283%" height="15" fill="rgb(247,147,0)" fg:x="208" fg:w="4"/><text x="53.7204%" y="271.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 1.03%)</title><rect x="53.4704%" y="245" width="1.0283%" height="15" fill="rgb(203,103,0)" fg:x="208" fg:w="4"/><text x="53.7204%" y="255.50"></text></g><g><title>malloc (3 samples, 0.77%)</title><rect x="53.7275%" y="229" width="0.7712%" height="15" fill="rgb(180,180,52)" fg:x="209" fg:w="3"/><text x="53.9775%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="54.2416%" y="213" width="0.2571%" height="15" fill="rgb(177,177,50)" fg:x="211" fg:w="1"/><text x="54.4916%" y="223.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (6 samples, 1.54%)</title><rect x="53.4704%" y="405" width="1.5424%" height="15" fill="rgb(94,206,206)" fg:x="208" fg:w="6"/><text x="53.7204%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 1.54%)</title><rect x="53.4704%" y="389" width="1.5424%" height="15" fill="rgb(238,138,0)" fg:x="208" fg:w="6"/><text x="53.7204%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 1.54%)</title><rect x="53.4704%" y="373" width="1.5424%" height="15" fill="rgb(210,110,0)" fg:x="208" fg:w="6"/><text x="53.7204%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 1.54%)</title><rect x="53.4704%" y="357" width="1.5424%" height="15" fill="rgb(238,138,0)" fg:x="208" fg:w="6"/><text x="53.7204%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 1.54%)</title><rect x="53.4704%" y="341" width="1.5424%" height="15" fill="rgb(73,186,186)" fg:x="208" fg:w="6"/><text x="53.7204%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 1.54%)</title><rect x="53.4704%" y="325" width="1.5424%" height="15" fill="rgb(249,149,0)" fg:x="208" fg:w="6"/><text x="53.7204%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 1.54%)</title><rect x="53.4704%" y="309" width="1.5424%" height="15" fill="rgb(202,102,0)" fg:x="208" fg:w="6"/><text x="53.7204%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 1.54%)</title><rect x="53.4704%" y="293" width="1.5424%" height="15" fill="rgb(193,93,0)" fg:x="208" fg:w="6"/><text x="53.7204%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.51%)</title><rect x="54.4987%" y="277" width="0.5141%" height="15" fill="rgb(246,146,0)" fg:x="212" fg:w="2"/><text x="54.7487%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.51%)</title><rect x="54.4987%" y="261" width="0.5141%" height="15" fill="rgb(215,115,0)" fg:x="212" fg:w="2"/><text x="54.7487%" y="271.50"></text></g><g><title>__rust_alloc (1 samples, 0.26%)</title><rect x="55.0129%" y="229" width="0.2571%" height="15" fill="rgb(218,218,65)" fg:x="214" fg:w="1"/><text x="55.2629%" y="239.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.26%)</title><rect x="55.2699%" y="229" width="0.2571%" height="15" fill="rgb(230,130,0)" fg:x="215" fg:w="1"/><text x="55.5199%" y="239.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (5 samples, 1.29%)</title><rect x="55.0129%" y="405" width="1.2853%" height="15" fill="rgb(66,180,180)" fg:x="214" fg:w="5"/><text x="55.2629%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 1.29%)</title><rect x="55.0129%" y="389" width="1.2853%" height="15" fill="rgb(220,120,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 1.29%)</title><rect x="55.0129%" y="373" width="1.2853%" height="15" fill="rgb(223,123,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 1.29%)</title><rect x="55.0129%" y="357" width="1.2853%" height="15" fill="rgb(197,97,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 1.29%)</title><rect x="55.0129%" y="341" width="1.2853%" height="15" fill="rgb(74,187,187)" fg:x="214" fg:w="5"/><text x="55.2629%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 1.29%)</title><rect x="55.0129%" y="325" width="1.2853%" height="15" fill="rgb(249,149,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 1.29%)</title><rect x="55.0129%" y="309" width="1.2853%" height="15" fill="rgb(209,109,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 1.29%)</title><rect x="55.0129%" y="293" width="1.2853%" height="15" fill="rgb(231,131,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 1.29%)</title><rect x="55.0129%" y="277" width="1.2853%" height="15" fill="rgb(222,122,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 1.29%)</title><rect x="55.0129%" y="261" width="1.2853%" height="15" fill="rgb(191,91,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="271.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 1.29%)</title><rect x="55.0129%" y="245" width="1.2853%" height="15" fill="rgb(235,135,0)" fg:x="214" fg:w="5"/><text x="55.2629%" y="255.50"></text></g><g><title>malloc (3 samples, 0.77%)</title><rect x="55.5270%" y="229" width="0.7712%" height="15" fill="rgb(192,192,56)" fg:x="216" fg:w="3"/><text x="55.7770%" y="239.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.26%)</title><rect x="56.2982%" y="405" width="0.2571%" height="15" fill="rgb(80,193,193)" fg:x="219" fg:w="1"/><text x="56.5482%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.26%)</title><rect x="56.2982%" y="389" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="219" fg:w="1"/><text x="56.5482%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.26%)</title><rect x="58.0977%" y="165" width="0.2571%" height="15" fill="rgb(175,175,50)" fg:x="226" fg:w="1"/><text x="58.3477%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.26%)</title><rect x="58.0977%" y="149" width="0.2571%" height="15" fill="rgb(233,133,0)" fg:x="226" fg:w="1"/><text x="58.3477%" y="159.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.26%)</title><rect x="58.3548%" y="165" width="0.2571%" height="15" fill="rgb(198,98,0)" fg:x="227" fg:w="1"/><text x="58.6048%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 2.83%)</title><rect x="57.8406%" y="213" width="2.8278%" height="15" fill="rgb(216,116,0)" fg:x="225" fg:w="11"/><text x="58.0906%" y="223.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 2.83%)</title><rect x="57.8406%" y="197" width="2.8278%" height="15" fill="rgb(221,121,0)" fg:x="225" fg:w="11"/><text x="58.0906%" y="207.50">al..</text></g><g><title>alloc::alloc::alloc (11 samples, 2.83%)</title><rect x="57.8406%" y="181" width="2.8278%" height="15" fill="rgb(190,90,0)" fg:x="225" fg:w="11"/><text x="58.0906%" y="191.50">al..</text></g><g><title>malloc (8 samples, 2.06%)</title><rect x="58.6118%" y="165" width="2.0566%" height="15" fill="rgb(224,224,68)" fg:x="228" fg:w="8"/><text x="58.8618%" y="175.50">m..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 3.08%)</title><rect x="57.8406%" y="261" width="3.0848%" height="15" fill="rgb(249,149,0)" fg:x="225" fg:w="12"/><text x="58.0906%" y="271.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 3.08%)</title><rect x="57.8406%" y="245" width="3.0848%" height="15" fill="rgb(213,113,0)" fg:x="225" fg:w="12"/><text x="58.0906%" y="255.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 3.08%)</title><rect x="57.8406%" y="229" width="3.0848%" height="15" fill="rgb(236,136,0)" fg:x="225" fg:w="12"/><text x="58.0906%" y="239.50">all..</text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.26%)</title><rect x="60.6684%" y="213" width="0.2571%" height="15" fill="rgb(242,142,0)" fg:x="236" fg:w="1"/><text x="60.9184%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.26%)</title><rect x="60.6684%" y="197" width="0.2571%" height="15" fill="rgb(207,107,0)" fg:x="236" fg:w="1"/><text x="60.9184%" y="207.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (17 samples, 4.37%)</title><rect x="57.8406%" y="341" width="4.3702%" height="15" fill="rgb(69,183,183)" fg:x="225" fg:w="17"/><text x="58.0906%" y="351.50">&lt;alc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 4.37%)</title><rect x="57.8406%" y="325" width="4.3702%" height="15" fill="rgb(219,119,0)" fg:x="225" fg:w="17"/><text x="58.0906%" y="335.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 4.37%)</title><rect x="57.8406%" y="309" width="4.3702%" height="15" fill="rgb(245,145,0)" fg:x="225" fg:w="17"/><text x="58.0906%" y="319.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (17 samples, 4.37%)</title><rect x="57.8406%" y="293" width="4.3702%" height="15" fill="rgb(233,133,0)" fg:x="225" fg:w="17"/><text x="58.0906%" y="303.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 4.37%)</title><rect x="57.8406%" y="277" width="4.3702%" height="15" fill="rgb(79,192,192)" fg:x="225" fg:w="17"/><text x="58.0906%" y="287.50">&lt;T as..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 1.29%)</title><rect x="60.9254%" y="261" width="1.2853%" height="15" fill="rgb(230,130,0)" fg:x="237" fg:w="5"/><text x="61.1754%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 1.29%)</title><rect x="60.9254%" y="245" width="1.2853%" height="15" fill="rgb(221,121,0)" fg:x="237" fg:w="5"/><text x="61.1754%" y="255.50"></text></g><g><title>[libc.so.6] (5 samples, 1.29%)</title><rect x="60.9254%" y="229" width="1.2853%" height="15" fill="rgb(198,198,58)" fg:x="237" fg:w="5"/><text x="61.1754%" y="239.50"></text></g><g><title>__rdl_alloc (3 samples, 0.77%)</title><rect x="62.2108%" y="245" width="0.7712%" height="15" fill="rgb(217,217,65)" fg:x="242" fg:w="3"/><text x="62.4608%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.51%)</title><rect x="62.4679%" y="229" width="0.5141%" height="15" fill="rgb(211,111,0)" fg:x="243" fg:w="2"/><text x="62.7179%" y="239.50"></text></g><g><title>__rust_alloc (1 samples, 0.26%)</title><rect x="62.9820%" y="245" width="0.2571%" height="15" fill="rgb(191,191,55)" fg:x="245" fg:w="1"/><text x="63.2320%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 2.57%)</title><rect x="62.2108%" y="341" width="2.5707%" height="15" fill="rgb(216,116,0)" fg:x="242" fg:w="10"/><text x="62.4608%" y="351.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 2.57%)</title><rect x="62.2108%" y="325" width="2.5707%" height="15" fill="rgb(232,132,0)" fg:x="242" fg:w="10"/><text x="62.4608%" y="335.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 2.57%)</title><rect x="62.2108%" y="309" width="2.5707%" height="15" fill="rgb(205,105,0)" fg:x="242" fg:w="10"/><text x="62.4608%" y="319.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 2.57%)</title><rect x="62.2108%" y="293" width="2.5707%" height="15" fill="rgb(240,140,0)" fg:x="242" fg:w="10"/><text x="62.4608%" y="303.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 2.57%)</title><rect x="62.2108%" y="277" width="2.5707%" height="15" fill="rgb(237,137,0)" fg:x="242" fg:w="10"/><text x="62.4608%" y="287.50">al..</text></g><g><title>alloc::alloc::alloc (10 samples, 2.57%)</title><rect x="62.2108%" y="261" width="2.5707%" height="15" fill="rgb(210,110,0)" fg:x="242" fg:w="10"/><text x="62.4608%" y="271.50">al..</text></g><g><title>malloc (6 samples, 1.54%)</title><rect x="63.2391%" y="245" width="1.5424%" height="15" fill="rgb(223,223,67)" fg:x="246" fg:w="6"/><text x="63.4891%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 9.25%)</title><rect x="56.5553%" y="405" width="9.2545%" height="15" fill="rgb(245,145,0)" fg:x="220" fg:w="36"/><text x="56.8053%" y="415.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 9.00%)</title><rect x="56.8123%" y="389" width="8.9974%" height="15" fill="rgb(218,118,0)" fg:x="221" fg:w="35"/><text x="57.0623%" y="399.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (35 samples, 9.00%)</title><rect x="56.8123%" y="373" width="8.9974%" height="15" fill="rgb(225,125,0)" fg:x="221" fg:w="35"/><text x="57.0623%" y="383.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 9.00%)</title><rect x="56.8123%" y="357" width="8.9974%" height="15" fill="rgb(98,209,209)" fg:x="221" fg:w="35"/><text x="57.0623%" y="367.50">&lt;T as alloc::..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 1.03%)</title><rect x="64.7815%" y="341" width="1.0283%" height="15" fill="rgb(228,128,0)" fg:x="252" fg:w="4"/><text x="65.0315%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.77%)</title><rect x="65.8098%" y="405" width="0.7712%" height="15" fill="rgb(250,150,0)" fg:x="256" fg:w="3"/><text x="66.0598%" y="415.50"></text></g><g><title>core::ptr::read (3 samples, 0.77%)</title><rect x="65.8098%" y="389" width="0.7712%" height="15" fill="rgb(222,122,0)" fg:x="256" fg:w="3"/><text x="66.0598%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.26%)</title><rect x="67.0951%" y="325" width="0.2571%" height="15" fill="rgb(253,153,0)" fg:x="261" fg:w="1"/><text x="67.3451%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.26%)</title><rect x="67.0951%" y="309" width="0.2571%" height="15" fill="rgb(225,125,0)" fg:x="261" fg:w="1"/><text x="67.3451%" y="319.50"></text></g><g><title>__rust_realloc (1 samples, 0.26%)</title><rect x="67.3522%" y="229" width="0.2571%" height="15" fill="rgb(190,190,55)" fg:x="262" fg:w="1"/><text x="67.6022%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 8.74%)</title><rect x="67.3522%" y="293" width="8.7404%" height="15" fill="rgb(217,117,0)" fg:x="262" fg:w="34"/><text x="67.6022%" y="303.50">alloc::raw_v..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 8.74%)</title><rect x="67.3522%" y="277" width="8.7404%" height="15" fill="rgb(250,150,0)" fg:x="262" fg:w="34"/><text x="67.6022%" y="287.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 8.74%)</title><rect x="67.3522%" y="261" width="8.7404%" height="15" fill="rgb(238,138,0)" fg:x="262" fg:w="34"/><text x="67.6022%" y="271.50">alloc::alloc..</text></g><g><title>alloc::alloc::realloc (34 samples, 8.74%)</title><rect x="67.3522%" y="245" width="8.7404%" height="15" fill="rgb(199,99,0)" fg:x="262" fg:w="34"/><text x="67.6022%" y="255.50">alloc::alloc..</text></g><g><title>realloc (33 samples, 8.48%)</title><rect x="67.6093%" y="229" width="8.4833%" height="15" fill="rgb(216,216,65)" fg:x="263" fg:w="33"/><text x="67.8593%" y="239.50">realloc</text></g><g><title>[libc.so.6] (26 samples, 6.68%)</title><rect x="69.4087%" y="213" width="6.6838%" height="15" fill="rgb(183,183,53)" fg:x="270" fg:w="26"/><text x="69.6587%" y="223.50">[libc.so...</text></g><g><title>[libc.so.6] (19 samples, 4.88%)</title><rect x="71.2082%" y="197" width="4.8843%" height="15" fill="rgb(177,177,50)" fg:x="277" fg:w="19"/><text x="71.4582%" y="207.50">[libc...</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 9.77%)</title><rect x="66.5810%" y="357" width="9.7686%" height="15" fill="rgb(251,151,0)" fg:x="259" fg:w="38"/><text x="66.8310%" y="367.50">alloc::vec::Ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (38 samples, 9.77%)</title><rect x="66.5810%" y="341" width="9.7686%" height="15" fill="rgb(223,123,0)" fg:x="259" fg:w="38"/><text x="66.8310%" y="351.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 9.00%)</title><rect x="67.3522%" y="325" width="8.9974%" height="15" fill="rgb(217,117,0)" fg:x="262" fg:w="35"/><text x="67.6022%" y="335.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 9.00%)</title><rect x="67.3522%" y="309" width="8.9974%" height="15" fill="rgb(206,106,0)" fg:x="262" fg:w="35"/><text x="67.6022%" y="319.50">alloc::raw_ve..</text></g><g><title>core::cmp::max (1 samples, 0.26%)</title><rect x="76.0925%" y="293" width="0.2571%" height="15" fill="rgb(216,116,0)" fg:x="296" fg:w="1"/><text x="76.3425%" y="303.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.26%)</title><rect x="76.0925%" y="277" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="296" fg:w="1"/><text x="76.3425%" y="287.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.26%)</title><rect x="76.0925%" y="261" width="0.2571%" height="15" fill="rgb(224,124,0)" fg:x="296" fg:w="1"/><text x="76.3425%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (39 samples, 10.03%)</title><rect x="66.5810%" y="373" width="10.0257%" height="15" fill="rgb(203,103,0)" fg:x="259" fg:w="39"/><text x="66.8310%" y="383.50">alloc::vec::Ve..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.26%)</title><rect x="76.3496%" y="357" width="0.2571%" height="15" fill="rgb(251,151,0)" fg:x="297" fg:w="1"/><text x="76.5996%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="76.3496%" y="341" width="0.2571%" height="15" fill="rgb(181,181,52)" fg:x="297" fg:w="1"/><text x="76.5996%" y="351.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (40 samples, 10.28%)</title><rect x="66.5810%" y="405" width="10.2828%" height="15" fill="rgb(62,176,176)" fg:x="259" fg:w="40"/><text x="66.8310%" y="415.50">alc::keyboard::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (40 samples, 10.28%)</title><rect x="66.5810%" y="389" width="10.2828%" height="15" fill="rgb(235,135,0)" fg:x="259" fg:w="40"/><text x="66.8310%" y="399.50">alloc::vec::Vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.26%)</title><rect x="76.6067%" y="373" width="0.2571%" height="15" fill="rgb(209,109,0)" fg:x="298" fg:w="1"/><text x="76.8567%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.26%)</title><rect x="76.6067%" y="357" width="0.2571%" height="15" fill="rgb(241,141,0)" fg:x="298" fg:w="1"/><text x="76.8567%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.26%)</title><rect x="76.6067%" y="341" width="0.2571%" height="15" fill="rgb(225,125,0)" fg:x="298" fg:w="1"/><text x="76.8567%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.26%)</title><rect x="76.6067%" y="325" width="0.2571%" height="15" fill="rgb(247,147,0)" fg:x="298" fg:w="1"/><text x="76.8567%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 1.03%)</title><rect x="76.8638%" y="341" width="1.0283%" height="15" fill="rgb(86,198,198)" fg:x="299" fg:w="4"/><text x="77.1138%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 1.03%)</title><rect x="76.8638%" y="325" width="1.0283%" height="15" fill="rgb(234,134,0)" fg:x="299" fg:w="4"/><text x="77.1138%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 1.03%)</title><rect x="76.8638%" y="309" width="1.0283%" height="15" fill="rgb(249,149,0)" fg:x="299" fg:w="4"/><text x="77.1138%" y="319.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (4 samples, 1.03%)</title><rect x="76.8638%" y="293" width="1.0283%" height="15" fill="rgb(80,192,192)" fg:x="299" fg:w="4"/><text x="77.1138%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (4 samples, 1.03%)</title><rect x="76.8638%" y="277" width="1.0283%" height="15" fill="rgb(192,92,0)" fg:x="299" fg:w="4"/><text x="77.1138%" y="287.50"></text></g><g><title>core::hash::Hasher::write_isize (4 samples, 1.03%)</title><rect x="76.8638%" y="261" width="1.0283%" height="15" fill="rgb(210,110,0)" fg:x="299" fg:w="4"/><text x="77.1138%" y="271.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 1.03%)</title><rect x="76.8638%" y="245" width="1.0283%" height="15" fill="rgb(235,135,0)" fg:x="299" fg:w="4"/><text x="77.1138%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 1.03%)</title><rect x="76.8638%" y="229" width="1.0283%" height="15" fill="rgb(201,101,0)" fg:x="299" fg:w="4"/><text x="77.1138%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 1.03%)</title><rect x="76.8638%" y="213" width="1.0283%" height="15" fill="rgb(244,144,0)" fg:x="299" fg:w="4"/><text x="77.1138%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 1.03%)</title><rect x="76.8638%" y="197" width="1.0283%" height="15" fill="rgb(195,95,0)" fg:x="299" fg:w="4"/><text x="77.1138%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.26%)</title><rect x="77.6350%" y="181" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="302" fg:w="1"/><text x="77.8850%" y="191.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.51%)</title><rect x="78.4062%" y="277" width="0.5141%" height="15" fill="rgb(66,180,180)" fg:x="305" fg:w="2"/><text x="78.6562%" y="287.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.51%)</title><rect x="78.4062%" y="261" width="0.5141%" height="15" fill="rgb(64,178,178)" fg:x="305" fg:w="2"/><text x="78.6562%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.51%)</title><rect x="78.4062%" y="245" width="0.5141%" height="15" fill="rgb(218,118,0)" fg:x="305" fg:w="2"/><text x="78.6562%" y="255.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (2 samples, 0.51%)</title><rect x="78.4062%" y="229" width="0.5141%" height="15" fill="rgb(61,175,175)" fg:x="305" fg:w="2"/><text x="78.6562%" y="239.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (9 samples, 2.31%)</title><rect x="76.8638%" y="405" width="2.3136%" height="15" fill="rgb(102,213,213)" fg:x="299" fg:w="9"/><text x="77.1138%" y="415.50">a..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 2.31%)</title><rect x="76.8638%" y="389" width="2.3136%" height="15" fill="rgb(199,99,0)" fg:x="299" fg:w="9"/><text x="77.1138%" y="399.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 2.31%)</title><rect x="76.8638%" y="373" width="2.3136%" height="15" fill="rgb(58,172,172)" fg:x="299" fg:w="9"/><text x="77.1138%" y="383.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 2.31%)</title><rect x="76.8638%" y="357" width="2.3136%" height="15" fill="rgb(101,212,212)" fg:x="299" fg:w="9"/><text x="77.1138%" y="367.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 1.29%)</title><rect x="77.8920%" y="341" width="1.2853%" height="15" fill="rgb(55,170,170)" fg:x="303" fg:w="5"/><text x="78.1420%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 1.29%)</title><rect x="77.8920%" y="325" width="1.2853%" height="15" fill="rgb(50,165,165)" fg:x="303" fg:w="5"/><text x="78.1420%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 1.29%)</title><rect x="77.8920%" y="309" width="1.2853%" height="15" fill="rgb(56,170,170)" fg:x="303" fg:w="5"/><text x="78.1420%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.77%)</title><rect x="78.4062%" y="293" width="0.7712%" height="15" fill="rgb(73,186,186)" fg:x="305" fg:w="3"/><text x="78.6562%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.26%)</title><rect x="78.9203%" y="277" width="0.2571%" height="15" fill="rgb(83,195,195)" fg:x="307" fg:w="1"/><text x="79.1703%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.26%)</title><rect x="78.9203%" y="261" width="0.2571%" height="15" fill="rgb(87,199,199)" fg:x="307" fg:w="1"/><text x="79.1703%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.26%)</title><rect x="78.9203%" y="245" width="0.2571%" height="15" fill="rgb(223,123,0)" fg:x="307" fg:w="1"/><text x="79.1703%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.26%)</title><rect x="78.9203%" y="229" width="0.2571%" height="15" fill="rgb(215,115,0)" fg:x="307" fg:w="1"/><text x="79.1703%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.51%)</title><rect x="79.1774%" y="405" width="0.5141%" height="15" fill="rgb(236,136,0)" fg:x="308" fg:w="2"/><text x="79.4274%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.77%)</title><rect x="80.7198%" y="341" width="0.7712%" height="15" fill="rgb(208,108,0)" fg:x="314" fg:w="3"/><text x="80.9698%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.77%)</title><rect x="80.7198%" y="325" width="0.7712%" height="15" fill="rgb(218,118,0)" fg:x="314" fg:w="3"/><text x="80.9698%" y="335.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.77%)</title><rect x="80.7198%" y="309" width="0.7712%" height="15" fill="rgb(225,125,0)" fg:x="314" fg:w="3"/><text x="80.9698%" y="319.50"></text></g><g><title>realloc (3 samples, 0.77%)</title><rect x="80.7198%" y="293" width="0.7712%" height="15" fill="rgb(216,216,65)" fg:x="314" fg:w="3"/><text x="80.9698%" y="303.50"></text></g><g><title>[libc.so.6] (3 samples, 0.77%)</title><rect x="80.7198%" y="277" width="0.7712%" height="15" fill="rgb(176,176,50)" fg:x="314" fg:w="3"/><text x="80.9698%" y="287.50"></text></g><g><title>[libc.so.6] (3 samples, 0.77%)</title><rect x="80.7198%" y="261" width="0.7712%" height="15" fill="rgb(186,186,54)" fg:x="314" fg:w="3"/><text x="80.9698%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="81.2339%" y="245" width="0.2571%" height="15" fill="rgb(226,226,68)" fg:x="316" fg:w="1"/><text x="81.4839%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 2.06%)</title><rect x="79.6915%" y="405" width="2.0566%" height="15" fill="rgb(219,119,0)" fg:x="310" fg:w="8"/><text x="79.9415%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 1.54%)</title><rect x="80.2057%" y="389" width="1.5424%" height="15" fill="rgb(234,134,0)" fg:x="312" fg:w="6"/><text x="80.4557%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 1.54%)</title><rect x="80.2057%" y="373" width="1.5424%" height="15" fill="rgb(248,148,0)" fg:x="312" fg:w="6"/><text x="80.4557%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 1.54%)</title><rect x="80.2057%" y="357" width="1.5424%" height="15" fill="rgb(201,101,0)" fg:x="312" fg:w="6"/><text x="80.4557%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.26%)</title><rect x="81.4910%" y="341" width="0.2571%" height="15" fill="rgb(188,188,54)" fg:x="317" fg:w="1"/><text x="81.7410%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.26%)</title><rect x="81.4910%" y="325" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="317" fg:w="1"/><text x="81.7410%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (6 samples, 1.54%)</title><rect x="81.7481%" y="405" width="1.5424%" height="15" fill="rgb(218,118,0)" fg:x="318" fg:w="6"/><text x="81.9981%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 1.54%)</title><rect x="81.7481%" y="389" width="1.5424%" height="15" fill="rgb(249,149,0)" fg:x="318" fg:w="6"/><text x="81.9981%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 1.54%)</title><rect x="81.7481%" y="373" width="1.5424%" height="15" fill="rgb(219,119,0)" fg:x="318" fg:w="6"/><text x="81.9981%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 1.54%)</title><rect x="81.7481%" y="357" width="1.5424%" height="15" fill="rgb(210,110,0)" fg:x="318" fg:w="6"/><text x="81.9981%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 1.54%)</title><rect x="81.7481%" y="341" width="1.5424%" height="15" fill="rgb(251,151,0)" fg:x="318" fg:w="6"/><text x="81.9981%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 1.54%)</title><rect x="81.7481%" y="325" width="1.5424%" height="15" fill="rgb(237,137,0)" fg:x="318" fg:w="6"/><text x="81.9981%" y="335.50"></text></g><g><title>cfree (6 samples, 1.54%)</title><rect x="81.7481%" y="309" width="1.5424%" height="15" fill="rgb(196,196,57)" fg:x="318" fg:w="6"/><text x="81.9981%" y="319.50"></text></g><g><title>[libc.so.6] (5 samples, 1.29%)</title><rect x="82.0051%" y="293" width="1.2853%" height="15" fill="rgb(206,206,61)" fg:x="319" fg:w="5"/><text x="82.2551%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 1.03%)</title><rect x="83.2905%" y="389" width="1.0283%" height="15" fill="rgb(245,145,0)" fg:x="324" fg:w="4"/><text x="83.5405%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (4 samples, 1.03%)</title><rect x="83.2905%" y="373" width="1.0283%" height="15" fill="rgb(230,130,0)" fg:x="324" fg:w="4"/><text x="83.5405%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (4 samples, 1.03%)</title><rect x="83.2905%" y="357" width="1.0283%" height="15" fill="rgb(221,121,0)" fg:x="324" fg:w="4"/><text x="83.5405%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 1.03%)</title><rect x="83.2905%" y="341" width="1.0283%" height="15" fill="rgb(225,125,0)" fg:x="324" fg:w="4"/><text x="83.5405%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 1.03%)</title><rect x="83.2905%" y="325" width="1.0283%" height="15" fill="rgb(203,103,0)" fg:x="324" fg:w="4"/><text x="83.5405%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 1.03%)</title><rect x="83.2905%" y="309" width="1.0283%" height="15" fill="rgb(242,142,0)" fg:x="324" fg:w="4"/><text x="83.5405%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 1.03%)</title><rect x="83.2905%" y="293" width="1.0283%" height="15" fill="rgb(190,90,0)" fg:x="324" fg:w="4"/><text x="83.5405%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 1.03%)</title><rect x="83.2905%" y="277" width="1.0283%" height="15" fill="rgb(223,123,0)" fg:x="324" fg:w="4"/><text x="83.5405%" y="287.50"></text></g><g><title>cfree (4 samples, 1.03%)</title><rect x="83.2905%" y="261" width="1.0283%" height="15" fill="rgb(197,197,58)" fg:x="324" fg:w="4"/><text x="83.5405%" y="271.50"></text></g><g><title>[libc.so.6] (4 samples, 1.03%)</title><rect x="83.2905%" y="245" width="1.0283%" height="15" fill="rgb(186,186,54)" fg:x="324" fg:w="4"/><text x="83.5405%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="84.0617%" y="229" width="0.2571%" height="15" fill="rgb(202,202,59)" fg:x="327" fg:w="1"/><text x="84.3117%" y="239.50"></text></g><g><title>__rust_dealloc (1 samples, 0.26%)</title><rect x="84.3188%" y="325" width="0.2571%" height="15" fill="rgb(205,205,61)" fg:x="328" fg:w="1"/><text x="84.5688%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (9 samples, 2.31%)</title><rect x="83.2905%" y="405" width="2.3136%" height="15" fill="rgb(235,135,0)" fg:x="324" fg:w="9"/><text x="83.5405%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (5 samples, 1.29%)</title><rect x="84.3188%" y="389" width="1.2853%" height="15" fill="rgb(193,93,0)" fg:x="328" fg:w="5"/><text x="84.5688%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 1.29%)</title><rect x="84.3188%" y="373" width="1.2853%" height="15" fill="rgb(252,152,0)" fg:x="328" fg:w="5"/><text x="84.5688%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 1.29%)</title><rect x="84.3188%" y="357" width="1.2853%" height="15" fill="rgb(248,148,0)" fg:x="328" fg:w="5"/><text x="84.5688%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 1.29%)</title><rect x="84.3188%" y="341" width="1.2853%" height="15" fill="rgb(239,139,0)" fg:x="328" fg:w="5"/><text x="84.5688%" y="351.50"></text></g><g><title>cfree (4 samples, 1.03%)</title><rect x="84.5758%" y="325" width="1.0283%" height="15" fill="rgb(187,187,54)" fg:x="329" fg:w="4"/><text x="84.8258%" y="335.50"></text></g><g><title>[libc.so.6] (4 samples, 1.03%)</title><rect x="84.5758%" y="309" width="1.0283%" height="15" fill="rgb(208,208,62)" fg:x="329" fg:w="4"/><text x="84.8258%" y="319.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.26%)</title><rect x="85.6041%" y="373" width="0.2571%" height="15" fill="rgb(196,96,0)" fg:x="333" fg:w="1"/><text x="85.8541%" y="383.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.26%)</title><rect x="85.6041%" y="357" width="0.2571%" height="15" fill="rgb(66,179,179)" fg:x="333" fg:w="1"/><text x="85.8541%" y="367.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.26%)</title><rect x="85.6041%" y="341" width="0.2571%" height="15" fill="rgb(254,154,0)" fg:x="333" fg:w="1"/><text x="85.8541%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.26%)</title><rect x="85.6041%" y="325" width="0.2571%" height="15" fill="rgb(252,152,0)" fg:x="333" fg:w="1"/><text x="85.8541%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.26%)</title><rect x="85.6041%" y="309" width="0.2571%" height="15" fill="rgb(239,139,0)" fg:x="333" fg:w="1"/><text x="85.8541%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (5 samples, 1.29%)</title><rect x="85.6041%" y="405" width="1.2853%" height="15" fill="rgb(213,113,0)" fg:x="333" fg:w="5"/><text x="85.8541%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 1.29%)</title><rect x="85.6041%" y="389" width="1.2853%" height="15" fill="rgb(245,145,0)" fg:x="333" fg:w="5"/><text x="85.8541%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (4 samples, 1.03%)</title><rect x="85.8612%" y="373" width="1.0283%" height="15" fill="rgb(244,144,0)" fg:x="334" fg:w="4"/><text x="86.1112%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 1.03%)</title><rect x="85.8612%" y="357" width="1.0283%" height="15" fill="rgb(82,194,194)" fg:x="334" fg:w="4"/><text x="86.1112%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 1.03%)</title><rect x="85.8612%" y="341" width="1.0283%" height="15" fill="rgb(199,99,0)" fg:x="334" fg:w="4"/><text x="86.1112%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 1.03%)</title><rect x="85.8612%" y="325" width="1.0283%" height="15" fill="rgb(249,149,0)" fg:x="334" fg:w="4"/><text x="86.1112%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 1.03%)</title><rect x="85.8612%" y="309" width="1.0283%" height="15" fill="rgb(193,93,0)" fg:x="334" fg:w="4"/><text x="86.1112%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 1.03%)</title><rect x="85.8612%" y="293" width="1.0283%" height="15" fill="rgb(218,118,0)" fg:x="334" fg:w="4"/><text x="86.1112%" y="303.50"></text></g><g><title>cfree (4 samples, 1.03%)</title><rect x="85.8612%" y="277" width="1.0283%" height="15" fill="rgb(197,197,58)" fg:x="334" fg:w="4"/><text x="86.1112%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.51%)</title><rect x="86.3753%" y="261" width="0.5141%" height="15" fill="rgb(201,201,59)" fg:x="336" fg:w="2"/><text x="86.6253%" y="271.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (142 samples, 36.50%)</title><rect x="50.8997%" y="421" width="36.5039%" height="15" fill="rgb(99,210,210)" fg:x="198" fg:w="142"/><text x="51.1497%" y="431.50">alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (2 samples, 0.51%)</title><rect x="86.8895%" y="405" width="0.5141%" height="15" fill="rgb(238,138,0)" fg:x="338" fg:w="2"/><text x="87.1395%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.51%)</title><rect x="86.8895%" y="389" width="0.5141%" height="15" fill="rgb(207,107,0)" fg:x="338" fg:w="2"/><text x="87.1395%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (2 samples, 0.51%)</title><rect x="86.8895%" y="373" width="0.5141%" height="15" fill="rgb(222,122,0)" fg:x="338" fg:w="2"/><text x="87.1395%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.51%)</title><rect x="86.8895%" y="357" width="0.5141%" height="15" fill="rgb(80,193,193)" fg:x="338" fg:w="2"/><text x="87.1395%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (2 samples, 0.51%)</title><rect x="86.8895%" y="341" width="0.5141%" height="15" fill="rgb(223,123,0)" fg:x="338" fg:w="2"/><text x="87.1395%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.51%)</title><rect x="86.8895%" y="325" width="0.5141%" height="15" fill="rgb(240,140,0)" fg:x="338" fg:w="2"/><text x="87.1395%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.51%)</title><rect x="86.8895%" y="309" width="0.5141%" height="15" fill="rgb(249,149,0)" fg:x="338" fg:w="2"/><text x="87.1395%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.51%)</title><rect x="86.8895%" y="293" width="0.5141%" height="15" fill="rgb(208,108,0)" fg:x="338" fg:w="2"/><text x="87.1395%" y="303.50"></text></g><g><title>cfree (2 samples, 0.51%)</title><rect x="86.8895%" y="277" width="0.5141%" height="15" fill="rgb(228,228,69)" fg:x="338" fg:w="2"/><text x="87.1395%" y="287.50"></text></g><g><title>[alc] (1 samples, 0.26%)</title><rect x="87.1465%" y="261" width="0.2571%" height="15" fill="rgb(207,207,61)" fg:x="339" fg:w="1"/><text x="87.3965%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="87.1465%" y="245" width="0.2571%" height="15" fill="rgb(199,199,58)" fg:x="339" fg:w="1"/><text x="87.3965%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.51%)</title><rect x="87.9177%" y="357" width="0.5141%" height="15" fill="rgb(220,120,0)" fg:x="342" fg:w="2"/><text x="88.1677%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.51%)</title><rect x="87.9177%" y="341" width="0.5141%" height="15" fill="rgb(218,118,0)" fg:x="342" fg:w="2"/><text x="88.1677%" y="351.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.51%)</title><rect x="87.9177%" y="325" width="0.5141%" height="15" fill="rgb(231,131,0)" fg:x="342" fg:w="2"/><text x="88.1677%" y="335.50"></text></g><g><title>realloc (2 samples, 0.51%)</title><rect x="87.9177%" y="309" width="0.5141%" height="15" fill="rgb(177,177,50)" fg:x="342" fg:w="2"/><text x="88.1677%" y="319.50"></text></g><g><title>[libc.so.6] (2 samples, 0.51%)</title><rect x="87.9177%" y="293" width="0.5141%" height="15" fill="rgb(207,207,61)" fg:x="342" fg:w="2"/><text x="88.1677%" y="303.50"></text></g><g><title>[libc.so.6] (2 samples, 0.51%)</title><rect x="87.9177%" y="277" width="0.5141%" height="15" fill="rgb(221,221,66)" fg:x="342" fg:w="2"/><text x="88.1677%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 1.54%)</title><rect x="87.4036%" y="421" width="1.5424%" height="15" fill="rgb(227,127,0)" fg:x="340" fg:w="6"/><text x="87.6536%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 1.54%)</title><rect x="87.4036%" y="405" width="1.5424%" height="15" fill="rgb(218,118,0)" fg:x="340" fg:w="6"/><text x="87.6536%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 1.54%)</title><rect x="87.4036%" y="389" width="1.5424%" height="15" fill="rgb(242,142,0)" fg:x="340" fg:w="6"/><text x="87.6536%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 1.54%)</title><rect x="87.4036%" y="373" width="1.5424%" height="15" fill="rgb(229,129,0)" fg:x="340" fg:w="6"/><text x="87.6536%" y="383.50"></text></g><g><title>malloc (2 samples, 0.51%)</title><rect x="88.4319%" y="357" width="0.5141%" height="15" fill="rgb(226,226,68)" fg:x="344" fg:w="2"/><text x="88.6819%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.26%)</title><rect x="88.9460%" y="421" width="0.2571%" height="15" fill="rgb(216,116,0)" fg:x="346" fg:w="1"/><text x="89.1960%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2 samples, 0.51%)</title><rect x="89.2031%" y="421" width="0.5141%" height="15" fill="rgb(241,141,0)" fg:x="347" fg:w="2"/><text x="89.4531%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2 samples, 0.51%)</title><rect x="89.2031%" y="405" width="0.5141%" height="15" fill="rgb(242,142,0)" fg:x="347" fg:w="2"/><text x="89.4531%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.51%)</title><rect x="89.2031%" y="389" width="0.5141%" height="15" fill="rgb(251,151,0)" fg:x="347" fg:w="2"/><text x="89.4531%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (2 samples, 0.51%)</title><rect x="89.2031%" y="373" width="0.5141%" height="15" fill="rgb(240,140,0)" fg:x="347" fg:w="2"/><text x="89.4531%" y="383.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.51%)</title><rect x="89.2031%" y="357" width="0.5141%" height="15" fill="rgb(193,93,0)" fg:x="347" fg:w="2"/><text x="89.4531%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.51%)</title><rect x="89.2031%" y="341" width="0.5141%" height="15" fill="rgb(204,104,0)" fg:x="347" fg:w="2"/><text x="89.4531%" y="351.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams::_{{closure}} (2 samples, 0.51%)</title><rect x="89.2031%" y="325" width="0.5141%" height="15" fill="rgb(82,195,195)" fg:x="347" fg:w="2"/><text x="89.4531%" y="335.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::total_cmp (1 samples, 0.26%)</title><rect x="89.4602%" y="309" width="0.2571%" height="15" fill="rgb(247,147,0)" fg:x="348" fg:w="1"/><text x="89.7102%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (1 samples, 0.26%)</title><rect x="89.7172%" y="421" width="0.2571%" height="15" fill="rgb(245,145,0)" fg:x="349" fg:w="1"/><text x="89.9672%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.26%)</title><rect x="89.7172%" y="405" width="0.2571%" height="15" fill="rgb(224,124,0)" fg:x="349" fg:w="1"/><text x="89.9672%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.26%)</title><rect x="89.7172%" y="389" width="0.2571%" height="15" fill="rgb(246,146,0)" fg:x="349" fg:w="1"/><text x="89.9672%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="89.7172%" y="373" width="0.2571%" height="15" fill="rgb(207,107,0)" fg:x="349" fg:w="1"/><text x="89.9672%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="89.7172%" y="357" width="0.2571%" height="15" fill="rgb(200,100,0)" fg:x="349" fg:w="1"/><text x="89.9672%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="89.7172%" y="341" width="0.2571%" height="15" fill="rgb(208,108,0)" fg:x="349" fg:w="1"/><text x="89.9672%" y="351.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="89.7172%" y="325" width="0.2571%" height="15" fill="rgb(212,212,63)" fg:x="349" fg:w="1"/><text x="89.9672%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (1 samples, 0.26%)</title><rect x="89.9743%" y="421" width="0.2571%" height="15" fill="rgb(190,90,0)" fg:x="350" fg:w="1"/><text x="90.2243%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.26%)</title><rect x="89.9743%" y="405" width="0.2571%" height="15" fill="rgb(230,130,0)" fg:x="350" fg:w="1"/><text x="90.2243%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="89.9743%" y="389" width="0.2571%" height="15" fill="rgb(197,97,0)" fg:x="350" fg:w="1"/><text x="90.2243%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="89.9743%" y="373" width="0.2571%" height="15" fill="rgb(233,133,0)" fg:x="350" fg:w="1"/><text x="90.2243%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="89.9743%" y="357" width="0.2571%" height="15" fill="rgb(211,111,0)" fg:x="350" fg:w="1"/><text x="90.2243%" y="367.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="89.9743%" y="341" width="0.2571%" height="15" fill="rgb(176,176,50)" fg:x="350" fg:w="1"/><text x="90.2243%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="89.9743%" y="325" width="0.2571%" height="15" fill="rgb(229,229,69)" fg:x="350" fg:w="1"/><text x="90.2243%" y="335.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population (206 samples, 52.96%)</title><rect x="38.0463%" y="469" width="52.9563%" height="15" fill="rgb(104,214,214)" fg:x="148" fg:w="206"/><text x="38.2963%" y="479.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (196 samples, 50.39%)</title><rect x="40.6170%" y="453" width="50.3856%" height="15" fill="rgb(80,192,192)" fg:x="158" fg:w="196"/><text x="40.8670%" y="463.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (178 samples, 45.76%)</title><rect x="45.2442%" y="437" width="45.7584%" height="15" fill="rgb(100,210,210)" fg:x="176" fg:w="178"/><text x="45.4942%" y="447.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.77%)</title><rect x="90.2314%" y="421" width="0.7712%" height="15" fill="rgb(254,154,0)" fg:x="351" fg:w="3"/><text x="90.4814%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.77%)</title><rect x="90.2314%" y="405" width="0.7712%" height="15" fill="rgb(212,112,0)" fg:x="351" fg:w="3"/><text x="90.4814%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (3 samples, 0.77%)</title><rect x="90.2314%" y="389" width="0.7712%" height="15" fill="rgb(254,154,0)" fg:x="351" fg:w="3"/><text x="90.4814%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.77%)</title><rect x="90.2314%" y="373" width="0.7712%" height="15" fill="rgb(100,211,211)" fg:x="351" fg:w="3"/><text x="90.4814%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.77%)</title><rect x="90.2314%" y="357" width="0.7712%" height="15" fill="rgb(247,147,0)" fg:x="351" fg:w="3"/><text x="90.4814%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.77%)</title><rect x="90.2314%" y="341" width="0.7712%" height="15" fill="rgb(226,126,0)" fg:x="351" fg:w="3"/><text x="90.4814%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.77%)</title><rect x="90.2314%" y="325" width="0.7712%" height="15" fill="rgb(247,147,0)" fg:x="351" fg:w="3"/><text x="90.4814%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.77%)</title><rect x="90.2314%" y="309" width="0.7712%" height="15" fill="rgb(219,119,0)" fg:x="351" fg:w="3"/><text x="90.4814%" y="319.50"></text></g><g><title>cfree (3 samples, 0.77%)</title><rect x="90.2314%" y="293" width="0.7712%" height="15" fill="rgb(177,177,50)" fg:x="351" fg:w="3"/><text x="90.4814%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="90.7455%" y="277" width="0.2571%" height="15" fill="rgb(226,226,68)" fg:x="353" fg:w="1"/><text x="90.9955%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (12 samples, 3.08%)</title><rect x="91.0026%" y="453" width="3.0848%" height="15" fill="rgb(246,146,0)" fg:x="354" fg:w="12"/><text x="91.2526%" y="463.50">cor..</text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (12 samples, 3.08%)</title><rect x="91.0026%" y="437" width="3.0848%" height="15" fill="rgb(72,185,185)" fg:x="354" fg:w="12"/><text x="91.2526%" y="447.50">&lt;(E..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_reserve (12 samples, 3.08%)</title><rect x="91.0026%" y="421" width="3.0848%" height="15" fill="rgb(220,120,0)" fg:x="354" fg:w="12"/><text x="91.2526%" y="431.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 3.08%)</title><rect x="91.0026%" y="405" width="3.0848%" height="15" fill="rgb(249,149,0)" fg:x="354" fg:w="12"/><text x="91.2526%" y="415.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 3.08%)</title><rect x="91.0026%" y="389" width="3.0848%" height="15" fill="rgb(193,93,0)" fg:x="354" fg:w="12"/><text x="91.2526%" y="399.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 3.08%)</title><rect x="91.0026%" y="373" width="3.0848%" height="15" fill="rgb(207,107,0)" fg:x="354" fg:w="12"/><text x="91.2526%" y="383.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 3.08%)</title><rect x="91.0026%" y="357" width="3.0848%" height="15" fill="rgb(238,138,0)" fg:x="354" fg:w="12"/><text x="91.2526%" y="367.50">all..</text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 3.08%)</title><rect x="91.0026%" y="341" width="3.0848%" height="15" fill="rgb(247,147,0)" fg:x="354" fg:w="12"/><text x="91.2526%" y="351.50">all..</text></g><g><title>malloc (12 samples, 3.08%)</title><rect x="91.0026%" y="325" width="3.0848%" height="15" fill="rgb(224,224,68)" fg:x="354" fg:w="12"/><text x="91.2526%" y="335.50">mal..</text></g><g><title>[libc.so.6] (12 samples, 3.08%)</title><rect x="91.0026%" y="309" width="3.0848%" height="15" fill="rgb(182,182,52)" fg:x="354" fg:w="12"/><text x="91.2526%" y="319.50">[li..</text></g><g><title>[libc.so.6] (12 samples, 3.08%)</title><rect x="91.0026%" y="293" width="3.0848%" height="15" fill="rgb(178,178,51)" fg:x="354" fg:w="12"/><text x="91.2526%" y="303.50">[li..</text></g><g><title>[libc.so.6] (3 samples, 0.77%)</title><rect x="93.3162%" y="277" width="0.7712%" height="15" fill="rgb(226,226,68)" fg:x="363" fg:w="3"/><text x="93.5662%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (1 samples, 0.26%)</title><rect x="94.0874%" y="373" width="0.2571%" height="15" fill="rgb(252,152,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="94.0874%" y="357" width="0.2571%" height="15" fill="rgb(236,136,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (1 samples, 0.26%)</title><rect x="94.0874%" y="341" width="0.2571%" height="15" fill="rgb(227,127,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.26%)</title><rect x="94.0874%" y="325" width="0.2571%" height="15" fill="rgb(205,105,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.26%)</title><rect x="94.0874%" y="309" width="0.2571%" height="15" fill="rgb(239,139,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.26%)</title><rect x="94.0874%" y="293" width="0.2571%" height="15" fill="rgb(243,143,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.26%)</title><rect x="94.0874%" y="277" width="0.2571%" height="15" fill="rgb(218,118,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="94.0874%" y="261" width="0.2571%" height="15" fill="rgb(243,143,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="94.0874%" y="245" width="0.2571%" height="15" fill="rgb(254,154,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="94.0874%" y="229" width="0.2571%" height="15" fill="rgb(200,100,0)" fg:x="366" fg:w="1"/><text x="94.3374%" y="239.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="94.0874%" y="213" width="0.2571%" height="15" fill="rgb(200,200,59)" fg:x="366" fg:w="1"/><text x="94.3374%" y="223.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::take_best_layouts (16 samples, 4.11%)</title><rect x="91.0026%" y="469" width="4.1131%" height="15" fill="rgb(73,186,186)" fg:x="354" fg:w="16"/><text x="91.2526%" y="479.50">alc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt;&gt; (4 samples, 1.03%)</title><rect x="94.0874%" y="453" width="1.0283%" height="15" fill="rgb(192,92,0)" fg:x="366" fg:w="4"/><text x="94.3374%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 1.03%)</title><rect x="94.0874%" y="437" width="1.0283%" height="15" fill="rgb(228,128,0)" fg:x="366" fg:w="4"/><text x="94.3374%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)]&gt; (4 samples, 1.03%)</title><rect x="94.0874%" y="421" width="1.0283%" height="15" fill="rgb(252,152,0)" fg:x="366" fg:w="4"/><text x="94.3374%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt; (4 samples, 1.03%)</title><rect x="94.0874%" y="405" width="1.0283%" height="15" fill="rgb(217,117,0)" fg:x="366" fg:w="4"/><text x="94.3374%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (4 samples, 1.03%)</title><rect x="94.0874%" y="389" width="1.0283%" height="15" fill="rgb(254,154,0)" fg:x="366" fg:w="4"/><text x="94.3374%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="373" width="0.7712%" height="15" fill="rgb(208,108,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="357" width="0.7712%" height="15" fill="rgb(228,128,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="341" width="0.7712%" height="15" fill="rgb(240,140,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.77%)</title><rect x="94.3445%" y="325" width="0.7712%" height="15" fill="rgb(91,203,203)" fg:x="367" fg:w="3"/><text x="94.5945%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.77%)</title><rect x="94.3445%" y="309" width="0.7712%" height="15" fill="rgb(72,185,185)" fg:x="367" fg:w="3"/><text x="94.5945%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.77%)</title><rect x="94.3445%" y="293" width="0.7712%" height="15" fill="rgb(82,195,195)" fg:x="367" fg:w="3"/><text x="94.5945%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.77%)</title><rect x="94.3445%" y="277" width="0.7712%" height="15" fill="rgb(64,178,178)" fg:x="367" fg:w="3"/><text x="94.5945%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.77%)</title><rect x="94.3445%" y="261" width="0.7712%" height="15" fill="rgb(247,147,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="245" width="0.7712%" height="15" fill="rgb(206,106,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="229" width="0.7712%" height="15" fill="rgb(244,144,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.77%)</title><rect x="94.3445%" y="213" width="0.7712%" height="15" fill="rgb(194,94,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="197" width="0.7712%" height="15" fill="rgb(190,90,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="181" width="0.7712%" height="15" fill="rgb(226,126,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="165" width="0.7712%" height="15" fill="rgb(251,151,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.77%)</title><rect x="94.3445%" y="149" width="0.7712%" height="15" fill="rgb(203,103,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.77%)</title><rect x="94.3445%" y="133" width="0.7712%" height="15" fill="rgb(241,141,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.77%)</title><rect x="94.3445%" y="117" width="0.7712%" height="15" fill="rgb(251,151,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.77%)</title><rect x="94.3445%" y="101" width="0.7712%" height="15" fill="rgb(207,107,0)" fg:x="367" fg:w="3"/><text x="94.5945%" y="111.50"></text></g><g><title>cfree (3 samples, 0.77%)</title><rect x="94.3445%" y="85" width="0.7712%" height="15" fill="rgb(225,225,68)" fg:x="367" fg:w="3"/><text x="94.5945%" y="95.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="94.8586%" y="69" width="0.2571%" height="15" fill="rgb(193,193,56)" fg:x="369" fg:w="1"/><text x="95.1086%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 2.31%)</title><rect x="95.1157%" y="245" width="2.3136%" height="15" fill="rgb(218,118,0)" fg:x="370" fg:w="9"/><text x="95.3657%" y="255.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (9 samples, 2.31%)</title><rect x="95.1157%" y="229" width="2.3136%" height="15" fill="rgb(246,146,0)" fg:x="370" fg:w="9"/><text x="95.3657%" y="239.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (9 samples, 2.31%)</title><rect x="95.1157%" y="213" width="2.3136%" height="15" fill="rgb(217,117,0)" fg:x="370" fg:w="9"/><text x="95.3657%" y="223.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (9 samples, 2.31%)</title><rect x="95.1157%" y="197" width="2.3136%" height="15" fill="rgb(214,114,0)" fg:x="370" fg:w="9"/><text x="95.3657%" y="207.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (9 samples, 2.31%)</title><rect x="95.1157%" y="181" width="2.3136%" height="15" fill="rgb(239,139,0)" fg:x="370" fg:w="9"/><text x="95.3657%" y="191.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 2.31%)</title><rect x="95.1157%" y="165" width="2.3136%" height="15" fill="rgb(210,110,0)" fg:x="370" fg:w="9"/><text x="95.3657%" y="175.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 2.06%)</title><rect x="95.3728%" y="149" width="2.0566%" height="15" fill="rgb(208,108,0)" fg:x="371" fg:w="8"/><text x="95.6228%" y="159.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (8 samples, 2.06%)</title><rect x="95.3728%" y="133" width="2.0566%" height="15" fill="rgb(212,112,0)" fg:x="371" fg:w="8"/><text x="95.6228%" y="143.50">a..</text></g><g><title>cfree (7 samples, 1.80%)</title><rect x="95.6298%" y="117" width="1.7995%" height="15" fill="rgb(200,200,59)" fg:x="372" fg:w="7"/><text x="95.8798%" y="127.50">c..</text></g><g><title>[libc.so.6] (4 samples, 1.03%)</title><rect x="96.4010%" y="101" width="1.0283%" height="15" fill="rgb(175,175,50)" fg:x="375" fg:w="4"/><text x="96.6510%" y="111.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 2.57%)</title><rect x="95.1157%" y="357" width="2.5707%" height="15" fill="rgb(75,188,188)" fg:x="370" fg:w="10"/><text x="95.3657%" y="367.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (10 samples, 2.57%)</title><rect x="95.1157%" y="341" width="2.5707%" height="15" fill="rgb(79,191,191)" fg:x="370" fg:w="10"/><text x="95.3657%" y="351.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (10 samples, 2.57%)</title><rect x="95.1157%" y="325" width="2.5707%" height="15" fill="rgb(64,178,178)" fg:x="370" fg:w="10"/><text x="95.3657%" y="335.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (10 samples, 2.57%)</title><rect x="95.1157%" y="309" width="2.5707%" height="15" fill="rgb(62,176,176)" fg:x="370" fg:w="10"/><text x="95.3657%" y="319.50">ha..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (10 samples, 2.57%)</title><rect x="95.1157%" y="293" width="2.5707%" height="15" fill="rgb(195,95,0)" fg:x="370" fg:w="10"/><text x="95.3657%" y="303.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (10 samples, 2.57%)</title><rect x="95.1157%" y="277" width="2.5707%" height="15" fill="rgb(247,147,0)" fg:x="370" fg:w="10"/><text x="95.3657%" y="287.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (10 samples, 2.57%)</title><rect x="95.1157%" y="261" width="2.5707%" height="15" fill="rgb(230,130,0)" fg:x="370" fg:w="10"/><text x="95.3657%" y="271.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.26%)</title><rect x="97.4293%" y="245" width="0.2571%" height="15" fill="rgb(220,120,0)" fg:x="379" fg:w="1"/><text x="97.6793%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="97.4293%" y="229" width="0.2571%" height="15" fill="rgb(213,113,0)" fg:x="379" fg:w="1"/><text x="97.6793%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="97.4293%" y="213" width="0.2571%" height="15" fill="rgb(215,115,0)" fg:x="379" fg:w="1"/><text x="97.6793%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="97.4293%" y="197" width="0.2571%" height="15" fill="rgb(191,91,0)" fg:x="379" fg:w="1"/><text x="97.6793%" y="207.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="97.4293%" y="181" width="0.2571%" height="15" fill="rgb(228,228,69)" fg:x="379" fg:w="1"/><text x="97.6793%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="97.4293%" y="165" width="0.2571%" height="15" fill="rgb(204,204,60)" fg:x="379" fg:w="1"/><text x="97.6793%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="97.4293%" y="149" width="0.2571%" height="15" fill="rgb(215,215,64)" fg:x="379" fg:w="1"/><text x="97.6793%" y="159.50"></text></g><g><title>_start (316 samples, 81.23%)</title><rect x="17.2237%" y="757" width="81.2339%" height="15" fill="rgb(186,186,54)" fg:x="67" fg:w="316"/><text x="17.4737%" y="767.50">_start</text></g><g><title>__libc_start_main (316 samples, 81.23%)</title><rect x="17.2237%" y="741" width="81.2339%" height="15" fill="rgb(226,226,68)" fg:x="67" fg:w="316"/><text x="17.4737%" y="751.50">__libc_start_main</text></g><g><title>[libc.so.6] (316 samples, 81.23%)</title><rect x="17.2237%" y="725" width="81.2339%" height="15" fill="rgb(209,209,62)" fg:x="67" fg:w="316"/><text x="17.4737%" y="735.50">[libc.so.6]</text></g><g><title>main (316 samples, 81.23%)</title><rect x="17.2237%" y="709" width="81.2339%" height="15" fill="rgb(195,195,57)" fg:x="67" fg:w="316"/><text x="17.4737%" y="719.50">main</text></g><g><title>std::rt::lang_start_internal (316 samples, 81.23%)</title><rect x="17.2237%" y="693" width="81.2339%" height="15" fill="rgb(195,95,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="703.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (316 samples, 81.23%)</title><rect x="17.2237%" y="677" width="81.2339%" height="15" fill="rgb(215,115,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="687.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (316 samples, 81.23%)</title><rect x="17.2237%" y="661" width="81.2339%" height="15" fill="rgb(193,93,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="671.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (316 samples, 81.23%)</title><rect x="17.2237%" y="645" width="81.2339%" height="15" fill="rgb(208,108,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="655.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (316 samples, 81.23%)</title><rect x="17.2237%" y="629" width="81.2339%" height="15" fill="rgb(201,101,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="639.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (316 samples, 81.23%)</title><rect x="17.2237%" y="613" width="81.2339%" height="15" fill="rgb(234,134,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (316 samples, 81.23%)</title><rect x="17.2237%" y="597" width="81.2339%" height="15" fill="rgb(216,116,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (316 samples, 81.23%)</title><rect x="17.2237%" y="581" width="81.2339%" height="15" fill="rgb(221,121,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="591.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (316 samples, 81.23%)</title><rect x="17.2237%" y="565" width="81.2339%" height="15" fill="rgb(228,128,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="575.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (316 samples, 81.23%)</title><rect x="17.2237%" y="549" width="81.2339%" height="15" fill="rgb(218,118,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="559.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (316 samples, 81.23%)</title><rect x="17.2237%" y="533" width="81.2339%" height="15" fill="rgb(198,98,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (316 samples, 81.23%)</title><rect x="17.2237%" y="517" width="81.2339%" height="15" fill="rgb(209,109,0)" fg:x="67" fg:w="316"/><text x="17.4737%" y="527.50">core::ops::function::FnOnce::call_once</text></g><g><title>alc::main (316 samples, 81.23%)</title><rect x="17.2237%" y="501" width="81.2339%" height="15" fill="rgb(52,167,167)" fg:x="67" fg:w="316"/><text x="17.4737%" y="511.50">alc::main</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize (314 samples, 80.72%)</title><rect x="17.7378%" y="485" width="80.7198%" height="15" fill="rgb(103,213,213)" fg:x="69" fg:w="314"/><text x="17.9878%" y="495.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (13 samples, 3.34%)</title><rect x="95.1157%" y="469" width="3.3419%" height="15" fill="rgb(233,133,0)" fg:x="370" fg:w="13"/><text x="95.3657%" y="479.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 3.34%)</title><rect x="95.1157%" y="453" width="3.3419%" height="15" fill="rgb(192,92,0)" fg:x="370" fg:w="13"/><text x="95.3657%" y="463.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;]&gt; (13 samples, 3.34%)</title><rect x="95.1157%" y="437" width="3.3419%" height="15" fill="rgb(249,149,0)" fg:x="370" fg:w="13"/><text x="95.3657%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (13 samples, 3.34%)</title><rect x="95.1157%" y="421" width="3.3419%" height="15" fill="rgb(254,154,0)" fg:x="370" fg:w="13"/><text x="95.3657%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (13 samples, 3.34%)</title><rect x="95.1157%" y="405" width="3.3419%" height="15" fill="rgb(216,116,0)" fg:x="370" fg:w="13"/><text x="95.3657%" y="415.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (13 samples, 3.34%)</title><rect x="95.1157%" y="389" width="3.3419%" height="15" fill="rgb(192,92,0)" fg:x="370" fg:w="13"/><text x="95.3657%" y="399.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (13 samples, 3.34%)</title><rect x="95.1157%" y="373" width="3.3419%" height="15" fill="rgb(249,149,0)" fg:x="370" fg:w="13"/><text x="95.3657%" y="383.50">cor..</text></g><g><title>cfree (3 samples, 0.77%)</title><rect x="97.6864%" y="357" width="0.7712%" height="15" fill="rgb(211,211,63)" fg:x="380" fg:w="3"/><text x="97.9364%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.77%)</title><rect x="97.6864%" y="341" width="0.7712%" height="15" fill="rgb(215,215,64)" fg:x="380" fg:w="3"/><text x="97.9364%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.77%)</title><rect x="97.6864%" y="325" width="0.7712%" height="15" fill="rgb(205,205,61)" fg:x="380" fg:w="3"/><text x="97.9364%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="98.2005%" y="309" width="0.2571%" height="15" fill="rgb(193,193,56)" fg:x="382" fg:w="1"/><text x="98.4505%" y="319.50"></text></g><g><title>cfree (1 samples, 0.26%)</title><rect x="98.4576%" y="757" width="0.2571%" height="15" fill="rgb(219,219,66)" fg:x="383" fg:w="1"/><text x="98.7076%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.26%)</title><rect x="98.7147%" y="757" width="0.2571%" height="15" fill="rgb(223,123,0)" fg:x="384" fg:w="1"/><text x="98.9647%" y="767.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.26%)</title><rect x="98.9717%" y="757" width="0.2571%" height="15" fill="rgb(244,144,0)" fg:x="385" fg:w="1"/><text x="99.2217%" y="767.50"></text></g><g><title>all (389 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(222,222,67)" fg:x="0" fg:w="389"/><text x="0.2500%" y="799.50"></text></g><g><title>alc (389 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(193,193,56)" fg:x="0" fg:w="389"/><text x="0.2500%" y="783.50">alc</text></g><g><title>malloc (3 samples, 0.77%)</title><rect x="99.2288%" y="757" width="0.7712%" height="15" fill="rgb(180,180,51)" fg:x="386" fg:w="3"/><text x="99.4788%" y="767.50"></text></g></svg></svg>