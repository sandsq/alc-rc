<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="4621"><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.04%)</title><rect x="0.0000%" y="853" width="0.0433%" height="15" fill="rgb(50,165,165)" fg:x="0" fg:w="2"/><text x="0.2500%" y="863.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::ops::index::Index&lt;usize&gt;&gt;::index (1 samples, 0.02%)</title><rect x="0.0433%" y="853" width="0.0216%" height="15" fill="rgb(50,165,165)" fg:x="2" fg:w="1"/><text x="0.2933%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.19%)</title><rect x="0.2813%" y="741" width="0.1948%" height="15" fill="rgb(244,144,0)" fg:x="13" fg:w="9"/><text x="0.5313%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.19%)</title><rect x="0.2813%" y="725" width="0.1948%" height="15" fill="rgb(250,150,0)" fg:x="13" fg:w="9"/><text x="0.5313%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.19%)</title><rect x="0.2813%" y="709" width="0.1948%" height="15" fill="rgb(209,109,0)" fg:x="13" fg:w="9"/><text x="0.5313%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.19%)</title><rect x="0.2813%" y="693" width="0.1948%" height="15" fill="rgb(226,126,0)" fg:x="13" fg:w="9"/><text x="0.5313%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.19%)</title><rect x="0.2813%" y="677" width="0.1948%" height="15" fill="rgb(235,135,0)" fg:x="13" fg:w="9"/><text x="0.5313%" y="687.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.19%)</title><rect x="0.2813%" y="661" width="0.1948%" height="15" fill="rgb(196,96,0)" fg:x="13" fg:w="9"/><text x="0.5313%" y="671.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (16 samples, 0.35%)</title><rect x="0.2813%" y="821" width="0.3462%" height="15" fill="rgb(58,172,172)" fg:x="13" fg:w="16"/><text x="0.5313%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.35%)</title><rect x="0.2813%" y="805" width="0.3462%" height="15" fill="rgb(224,124,0)" fg:x="13" fg:w="16"/><text x="0.5313%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.35%)</title><rect x="0.2813%" y="789" width="0.3462%" height="15" fill="rgb(254,154,0)" fg:x="13" fg:w="16"/><text x="0.5313%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.35%)</title><rect x="0.2813%" y="773" width="0.3462%" height="15" fill="rgb(244,144,0)" fg:x="13" fg:w="16"/><text x="0.5313%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.35%)</title><rect x="0.2813%" y="757" width="0.3462%" height="15" fill="rgb(55,169,169)" fg:x="13" fg:w="16"/><text x="0.5313%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (7 samples, 0.15%)</title><rect x="0.4761%" y="741" width="0.1515%" height="15" fill="rgb(243,143,0)" fg:x="22" fg:w="7"/><text x="0.7261%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.15%)</title><rect x="0.4761%" y="725" width="0.1515%" height="15" fill="rgb(248,148,0)" fg:x="22" fg:w="7"/><text x="0.7261%" y="735.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_small (3 samples, 0.06%)</title><rect x="0.6276%" y="821" width="0.0649%" height="15" fill="rgb(69,182,182)" fg:x="29" fg:w="3"/><text x="0.8776%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (3 samples, 0.06%)</title><rect x="0.6276%" y="805" width="0.0649%" height="15" fill="rgb(195,95,0)" fg:x="29" fg:w="3"/><text x="0.8776%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.06%)</title><rect x="0.6276%" y="789" width="0.0649%" height="15" fill="rgb(198,98,0)" fg:x="29" fg:w="3"/><text x="0.8776%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.06%)</title><rect x="0.6276%" y="773" width="0.0649%" height="15" fill="rgb(246,146,0)" fg:x="29" fg:w="3"/><text x="0.8776%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="0.6276%" y="757" width="0.0649%" height="15" fill="rgb(197,97,0)" fg:x="29" fg:w="3"/><text x="0.8776%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="0.6276%" y="741" width="0.0649%" height="15" fill="rgb(199,99,0)" fg:x="29" fg:w="3"/><text x="0.8776%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="0.6276%" y="725" width="0.0649%" height="15" fill="rgb(241,141,0)" fg:x="29" fg:w="3"/><text x="0.8776%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.28%)</title><rect x="0.6925%" y="821" width="0.2813%" height="15" fill="rgb(191,91,0)" fg:x="32" fg:w="13"/><text x="0.9425%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (6 samples, 0.13%)</title><rect x="0.9738%" y="821" width="0.1298%" height="15" fill="rgb(195,95,0)" fg:x="45" fg:w="6"/><text x="1.2238%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.13%)</title><rect x="0.9738%" y="805" width="0.1298%" height="15" fill="rgb(227,127,0)" fg:x="45" fg:w="6"/><text x="1.2238%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.13%)</title><rect x="0.9738%" y="789" width="0.1298%" height="15" fill="rgb(198,98,0)" fg:x="45" fg:w="6"/><text x="1.2238%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="0.9738%" y="773" width="0.1298%" height="15" fill="rgb(221,121,0)" fg:x="45" fg:w="6"/><text x="1.2238%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.13%)</title><rect x="0.9738%" y="757" width="0.1298%" height="15" fill="rgb(235,135,0)" fg:x="45" fg:w="6"/><text x="1.2238%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.13%)</title><rect x="0.9738%" y="741" width="0.1298%" height="15" fill="rgb(231,131,0)" fg:x="45" fg:w="6"/><text x="1.2238%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (10 samples, 0.22%)</title><rect x="1.1037%" y="821" width="0.2164%" height="15" fill="rgb(200,100,0)" fg:x="51" fg:w="10"/><text x="1.3537%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (10 samples, 0.22%)</title><rect x="1.1037%" y="805" width="0.2164%" height="15" fill="rgb(219,119,0)" fg:x="51" fg:w="10"/><text x="1.3537%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.22%)</title><rect x="1.1037%" y="789" width="0.2164%" height="15" fill="rgb(214,114,0)" fg:x="51" fg:w="10"/><text x="1.3537%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.22%)</title><rect x="1.1037%" y="773" width="0.2164%" height="15" fill="rgb(241,141,0)" fg:x="51" fg:w="10"/><text x="1.3537%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.22%)</title><rect x="1.1037%" y="757" width="0.2164%" height="15" fill="rgb(244,144,0)" fg:x="51" fg:w="10"/><text x="1.3537%" y="767.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (59 samples, 1.28%)</title><rect x="0.0649%" y="837" width="1.2768%" height="15" fill="rgb(71,185,185)" fg:x="3" fg:w="59"/><text x="0.3149%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="1.3201%" y="821" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="61" fg:w="1"/><text x="1.5701%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="1.3201%" y="805" width="0.0216%" height="15" fill="rgb(191,91,0)" fg:x="61" fg:w="1"/><text x="1.5701%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.3201%" y="789" width="0.0216%" height="15" fill="rgb(244,144,0)" fg:x="61" fg:w="1"/><text x="1.5701%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="1.3201%" y="773" width="0.0216%" height="15" fill="rgb(237,137,0)" fg:x="61" fg:w="1"/><text x="1.5701%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.3201%" y="757" width="0.0216%" height="15" fill="rgb(97,208,208)" fg:x="61" fg:w="1"/><text x="1.5701%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="1.3201%" y="741" width="0.0216%" height="15" fill="rgb(207,107,0)" fg:x="61" fg:w="1"/><text x="1.5701%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.3201%" y="725" width="0.0216%" height="15" fill="rgb(209,109,0)" fg:x="61" fg:w="1"/><text x="1.5701%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="1.3201%" y="709" width="0.0216%" height="15" fill="rgb(216,116,0)" fg:x="61" fg:w="1"/><text x="1.5701%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="1.3201%" y="693" width="0.0216%" height="15" fill="rgb(222,122,0)" fg:x="61" fg:w="1"/><text x="1.5701%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.3417%" y="837" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="62" fg:w="1"/><text x="1.5917%" y="847.50"></text></g><g><title>[libc.so.6] (93 samples, 2.01%)</title><rect x="1.3633%" y="837" width="2.0126%" height="15" fill="rgb(198,198,58)" fg:x="63" fg:w="93"/><text x="1.6133%" y="847.50">[..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.35%)</title><rect x="3.5057%" y="789" width="0.3462%" height="15" fill="rgb(229,129,0)" fg:x="162" fg:w="16"/><text x="3.7557%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.35%)</title><rect x="3.5057%" y="773" width="0.3462%" height="15" fill="rgb(244,144,0)" fg:x="162" fg:w="16"/><text x="3.7557%" y="783.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (32 samples, 0.69%)</title><rect x="3.3759%" y="837" width="0.6925%" height="15" fill="rgb(65,179,179)" fg:x="156" fg:w="32"/><text x="3.6259%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (26 samples, 0.56%)</title><rect x="3.5057%" y="821" width="0.5626%" height="15" fill="rgb(197,97,0)" fg:x="162" fg:w="26"/><text x="3.7557%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.56%)</title><rect x="3.5057%" y="805" width="0.5626%" height="15" fill="rgb(200,100,0)" fg:x="162" fg:w="26"/><text x="3.7557%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.22%)</title><rect x="3.8520%" y="789" width="0.2164%" height="15" fill="rgb(250,150,0)" fg:x="178" fg:w="10"/><text x="4.1020%" y="799.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (3 samples, 0.06%)</title><rect x="4.0684%" y="837" width="0.0649%" height="15" fill="rgb(82,194,194)" fg:x="188" fg:w="3"/><text x="4.3184%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.02%)</title><rect x="4.1117%" y="821" width="0.0216%" height="15" fill="rgb(229,129,0)" fg:x="190" fg:w="1"/><text x="4.3617%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="4.1117%" y="805" width="0.0216%" height="15" fill="rgb(231,131,0)" fg:x="190" fg:w="1"/><text x="4.3617%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="4.1117%" y="789" width="0.0216%" height="15" fill="rgb(80,193,193)" fg:x="190" fg:w="1"/><text x="4.3617%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="4.1117%" y="773" width="0.0216%" height="15" fill="rgb(88,200,200)" fg:x="190" fg:w="1"/><text x="4.3617%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="4.1117%" y="757" width="0.0216%" height="15" fill="rgb(71,184,184)" fg:x="190" fg:w="1"/><text x="4.3617%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.15%)</title><rect x="4.2415%" y="741" width="0.1515%" height="15" fill="rgb(193,93,0)" fg:x="196" fg:w="7"/><text x="4.4915%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.15%)</title><rect x="4.2415%" y="725" width="0.1515%" height="15" fill="rgb(190,90,0)" fg:x="196" fg:w="7"/><text x="4.4915%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.15%)</title><rect x="4.2415%" y="709" width="0.1515%" height="15" fill="rgb(203,103,0)" fg:x="196" fg:w="7"/><text x="4.4915%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.15%)</title><rect x="4.2415%" y="693" width="0.1515%" height="15" fill="rgb(193,93,0)" fg:x="196" fg:w="7"/><text x="4.4915%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.15%)</title><rect x="4.2415%" y="677" width="0.1515%" height="15" fill="rgb(254,154,0)" fg:x="196" fg:w="7"/><text x="4.4915%" y="687.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.15%)</title><rect x="4.2415%" y="661" width="0.1515%" height="15" fill="rgb(231,131,0)" fg:x="196" fg:w="7"/><text x="4.4915%" y="671.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (17 samples, 0.37%)</title><rect x="4.2415%" y="821" width="0.3679%" height="15" fill="rgb(67,181,181)" fg:x="196" fg:w="17"/><text x="4.4915%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.37%)</title><rect x="4.2415%" y="805" width="0.3679%" height="15" fill="rgb(217,117,0)" fg:x="196" fg:w="17"/><text x="4.4915%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.37%)</title><rect x="4.2415%" y="789" width="0.3679%" height="15" fill="rgb(229,129,0)" fg:x="196" fg:w="17"/><text x="4.4915%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.37%)</title><rect x="4.2415%" y="773" width="0.3679%" height="15" fill="rgb(212,112,0)" fg:x="196" fg:w="17"/><text x="4.4915%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.37%)</title><rect x="4.2415%" y="757" width="0.3679%" height="15" fill="rgb(96,207,207)" fg:x="196" fg:w="17"/><text x="4.4915%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (10 samples, 0.22%)</title><rect x="4.3930%" y="741" width="0.2164%" height="15" fill="rgb(207,107,0)" fg:x="203" fg:w="10"/><text x="4.6430%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.22%)</title><rect x="4.3930%" y="725" width="0.2164%" height="15" fill="rgb(233,133,0)" fg:x="203" fg:w="10"/><text x="4.6430%" y="735.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (2 samples, 0.04%)</title><rect x="4.6094%" y="821" width="0.0433%" height="15" fill="rgb(59,173,173)" fg:x="213" fg:w="2"/><text x="4.8594%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.04%)</title><rect x="4.6094%" y="805" width="0.0433%" height="15" fill="rgb(222,122,0)" fg:x="213" fg:w="2"/><text x="4.8594%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.04%)</title><rect x="4.6094%" y="789" width="0.0433%" height="15" fill="rgb(64,177,177)" fg:x="213" fg:w="2"/><text x="4.8594%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.04%)</title><rect x="4.6094%" y="773" width="0.0433%" height="15" fill="rgb(71,185,185)" fg:x="213" fg:w="2"/><text x="4.8594%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="4.6094%" y="757" width="0.0433%" height="15" fill="rgb(80,193,193)" fg:x="213" fg:w="2"/><text x="4.8594%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (5 samples, 0.11%)</title><rect x="4.6527%" y="821" width="0.1082%" height="15" fill="rgb(202,102,0)" fg:x="215" fg:w="5"/><text x="4.9027%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.11%)</title><rect x="4.6527%" y="805" width="0.1082%" height="15" fill="rgb(200,100,0)" fg:x="215" fg:w="5"/><text x="4.9027%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.11%)</title><rect x="4.6527%" y="789" width="0.1082%" height="15" fill="rgb(249,149,0)" fg:x="215" fg:w="5"/><text x="4.9027%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="4.6527%" y="773" width="0.1082%" height="15" fill="rgb(212,112,0)" fg:x="215" fg:w="5"/><text x="4.9027%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.11%)</title><rect x="4.6527%" y="757" width="0.1082%" height="15" fill="rgb(217,117,0)" fg:x="215" fg:w="5"/><text x="4.9027%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.11%)</title><rect x="4.6527%" y="741" width="0.1082%" height="15" fill="rgb(250,150,0)" fg:x="215" fg:w="5"/><text x="4.9027%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="4.7609%" y="805" width="0.0433%" height="15" fill="rgb(213,113,0)" fg:x="220" fg:w="2"/><text x="5.0109%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.04%)</title><rect x="4.7609%" y="789" width="0.0433%" height="15" fill="rgb(243,143,0)" fg:x="220" fg:w="2"/><text x="5.0109%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.04%)</title><rect x="4.7609%" y="773" width="0.0433%" height="15" fill="rgb(250,150,0)" fg:x="220" fg:w="2"/><text x="5.0109%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.04%)</title><rect x="4.7609%" y="757" width="0.0433%" height="15" fill="rgb(224,124,0)" fg:x="220" fg:w="2"/><text x="5.0109%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.04%)</title><rect x="4.7609%" y="741" width="0.0433%" height="15" fill="rgb(251,151,0)" fg:x="220" fg:w="2"/><text x="5.0109%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="4.7609%" y="725" width="0.0433%" height="15" fill="rgb(209,109,0)" fg:x="220" fg:w="2"/><text x="5.0109%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="4.7609%" y="709" width="0.0433%" height="15" fill="rgb(194,94,0)" fg:x="220" fg:w="2"/><text x="5.0109%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="4.7609%" y="693" width="0.0433%" height="15" fill="rgb(225,125,0)" fg:x="220" fg:w="2"/><text x="5.0109%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.09%)</title><rect x="4.7609%" y="821" width="0.0866%" height="15" fill="rgb(237,137,0)" fg:x="220" fg:w="4"/><text x="5.0109%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.04%)</title><rect x="4.8042%" y="805" width="0.0433%" height="15" fill="rgb(236,136,0)" fg:x="222" fg:w="2"/><text x="5.0542%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="4.8042%" y="789" width="0.0433%" height="15" fill="rgb(251,151,0)" fg:x="222" fg:w="2"/><text x="5.0542%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="4.8042%" y="773" width="0.0433%" height="15" fill="rgb(222,122,0)" fg:x="222" fg:w="2"/><text x="5.0542%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="4.8042%" y="757" width="0.0433%" height="15" fill="rgb(218,118,0)" fg:x="222" fg:w="2"/><text x="5.0542%" y="767.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (34 samples, 0.74%)</title><rect x="4.1333%" y="837" width="0.7358%" height="15" fill="rgb(52,167,167)" fg:x="191" fg:w="34"/><text x="4.3833%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="4.8474%" y="821" width="0.0216%" height="15" fill="rgb(230,130,0)" fg:x="224" fg:w="1"/><text x="5.0974%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="4.8474%" y="805" width="0.0216%" height="15" fill="rgb(217,117,0)" fg:x="224" fg:w="1"/><text x="5.0974%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="4.8474%" y="789" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="224" fg:w="1"/><text x="5.0974%" y="799.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="4.8474%" y="773" width="0.0216%" height="15" fill="rgb(93,204,204)" fg:x="224" fg:w="1"/><text x="5.0974%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="4.8474%" y="757" width="0.0216%" height="15" fill="rgb(226,126,0)" fg:x="224" fg:w="1"/><text x="5.0974%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="4.8474%" y="741" width="0.0216%" height="15" fill="rgb(195,95,0)" fg:x="224" fg:w="1"/><text x="5.0974%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="4.8474%" y="725" width="0.0216%" height="15" fill="rgb(220,120,0)" fg:x="224" fg:w="1"/><text x="5.0974%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="4.8474%" y="709" width="0.0216%" height="15" fill="rgb(198,98,0)" fg:x="224" fg:w="1"/><text x="5.0974%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.17%)</title><rect x="4.8691%" y="837" width="0.1731%" height="15" fill="rgb(253,153,0)" fg:x="225" fg:w="8"/><text x="5.1191%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="5.0422%" y="837" width="0.0649%" height="15" fill="rgb(195,95,0)" fg:x="233" fg:w="3"/><text x="5.2922%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="5.0855%" y="821" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="235" fg:w="1"/><text x="5.3355%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="5.0855%" y="805" width="0.0216%" height="15" fill="rgb(191,91,0)" fg:x="235" fg:w="1"/><text x="5.3355%" y="815.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="5.0855%" y="789" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="235" fg:w="1"/><text x="5.3355%" y="799.50"></text></g><g><title>cfree (4 samples, 0.09%)</title><rect x="5.1071%" y="837" width="0.0866%" height="15" fill="rgb(191,191,56)" fg:x="236" fg:w="4"/><text x="5.3571%" y="847.50"></text></g><g><title>malloc (14 samples, 0.30%)</title><rect x="5.1937%" y="837" width="0.3030%" height="15" fill="rgb(191,191,55)" fg:x="240" fg:w="14"/><text x="5.4437%" y="847.50"></text></g><g><title>[[heap]] (254 samples, 5.50%)</title><rect x="0.0649%" y="853" width="5.4966%" height="15" fill="rgb(219,219,66)" fg:x="3" fg:w="254"/><text x="0.3149%" y="863.50">[[heap]]</text></g><g><title>pow (3 samples, 0.06%)</title><rect x="5.4966%" y="837" width="0.0649%" height="15" fill="rgb(202,202,59)" fg:x="254" fg:w="3"/><text x="5.7466%" y="847.50"></text></g><g><title>[libc.so.6] (8 samples, 0.17%)</title><rect x="5.5616%" y="837" width="0.1731%" height="15" fill="rgb(221,221,66)" fg:x="257" fg:w="8"/><text x="5.8116%" y="847.50"></text></g><g><title>__rdl_realloc (7 samples, 0.15%)</title><rect x="5.7347%" y="837" width="0.1515%" height="15" fill="rgb(200,200,59)" fg:x="265" fg:w="7"/><text x="5.9847%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.15%)</title><rect x="5.7347%" y="821" width="0.1515%" height="15" fill="rgb(239,139,0)" fg:x="265" fg:w="7"/><text x="5.9847%" y="831.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (3 samples, 0.06%)</title><rect x="5.8862%" y="837" width="0.0649%" height="15" fill="rgb(79,192,192)" fg:x="272" fg:w="3"/><text x="6.1362%" y="847.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (3 samples, 0.06%)</title><rect x="5.8862%" y="821" width="0.0649%" height="15" fill="rgb(91,203,203)" fg:x="272" fg:w="3"/><text x="6.1362%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="5.9295%" y="805" width="0.0216%" height="15" fill="rgb(238,138,0)" fg:x="274" fg:w="1"/><text x="6.1795%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.9295%" y="789" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="274" fg:w="1"/><text x="6.1795%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="5.9295%" y="773" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="274" fg:w="1"/><text x="6.1795%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.9295%" y="757" width="0.0216%" height="15" fill="rgb(69,182,182)" fg:x="274" fg:w="1"/><text x="6.1795%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="5.9295%" y="741" width="0.0216%" height="15" fill="rgb(209,109,0)" fg:x="274" fg:w="1"/><text x="6.1795%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.9295%" y="725" width="0.0216%" height="15" fill="rgb(225,125,0)" fg:x="274" fg:w="1"/><text x="6.1795%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="5.9295%" y="709" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="274" fg:w="1"/><text x="6.1795%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="5.9295%" y="693" width="0.0216%" height="15" fill="rgb(224,124,0)" fg:x="274" fg:w="1"/><text x="6.1795%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.17%)</title><rect x="5.9511%" y="837" width="0.1731%" height="15" fill="rgb(193,93,0)" fg:x="275" fg:w="8"/><text x="6.2011%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.17%)</title><rect x="5.9511%" y="821" width="0.1731%" height="15" fill="rgb(227,127,0)" fg:x="275" fg:w="8"/><text x="6.2011%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="6.1242%" y="837" width="0.0216%" height="15" fill="rgb(204,104,0)" fg:x="283" fg:w="1"/><text x="6.3742%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="6.1459%" y="837" width="0.0216%" height="15" fill="rgb(241,141,0)" fg:x="284" fg:w="1"/><text x="6.3959%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="6.1459%" y="821" width="0.0216%" height="15" fill="rgb(194,94,0)" fg:x="284" fg:w="1"/><text x="6.3959%" y="831.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="6.1459%" y="805" width="0.0216%" height="15" fill="rgb(109,219,219)" fg:x="284" fg:w="1"/><text x="6.3959%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="6.1459%" y="789" width="0.0216%" height="15" fill="rgb(205,105,0)" fg:x="284" fg:w="1"/><text x="6.3959%" y="799.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="6.1459%" y="773" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="284" fg:w="1"/><text x="6.3959%" y="783.50"></text></g><g><title>malloc (26 samples, 0.56%)</title><rect x="6.1675%" y="837" width="0.5626%" height="15" fill="rgb(189,189,55)" fg:x="285" fg:w="26"/><text x="6.4175%" y="847.50"></text></g><g><title>[[stack]] (79 samples, 1.71%)</title><rect x="5.5616%" y="853" width="1.7096%" height="15" fill="rgb(204,204,60)" fg:x="257" fg:w="79"/><text x="5.8116%" y="863.50"></text></g><g><title>realloc (25 samples, 0.54%)</title><rect x="6.7301%" y="837" width="0.5410%" height="15" fill="rgb(201,201,59)" fg:x="311" fg:w="25"/><text x="6.9801%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.09%)</title><rect x="7.2712%" y="837" width="0.0866%" height="15" fill="rgb(195,95,0)" fg:x="336" fg:w="4"/><text x="7.5212%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.09%)</title><rect x="7.2712%" y="821" width="0.0866%" height="15" fill="rgb(201,101,0)" fg:x="336" fg:w="4"/><text x="7.5212%" y="831.50"></text></g><g><title>[alc] (11 samples, 0.24%)</title><rect x="7.2712%" y="853" width="0.2380%" height="15" fill="rgb(204,204,60)" fg:x="336" fg:w="11"/><text x="7.5212%" y="863.50"></text></g><g><title>cfree (7 samples, 0.15%)</title><rect x="7.3577%" y="837" width="0.1515%" height="15" fill="rgb(204,204,60)" fg:x="340" fg:w="7"/><text x="7.6077%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.06%)</title><rect x="7.5092%" y="853" width="0.0649%" height="15" fill="rgb(198,198,58)" fg:x="347" fg:w="3"/><text x="7.7592%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.04%)</title><rect x="7.5308%" y="837" width="0.0433%" height="15" fill="rgb(219,219,66)" fg:x="348" fg:w="2"/><text x="7.7808%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="7.5525%" y="821" width="0.0216%" height="15" fill="rgb(224,224,68)" fg:x="349" fg:w="1"/><text x="7.8025%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="7.5525%" y="805" width="0.0216%" height="15" fill="rgb(222,222,67)" fg:x="349" fg:w="1"/><text x="7.8025%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="7.5525%" y="789" width="0.0216%" height="15" fill="rgb(223,223,67)" fg:x="349" fg:w="1"/><text x="7.8025%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="7.5525%" y="773" width="0.0216%" height="15" fill="rgb(186,186,54)" fg:x="349" fg:w="1"/><text x="7.8025%" y="783.50"></text></g><g><title>[libc.so.6] (54 samples, 1.17%)</title><rect x="7.5741%" y="853" width="1.1686%" height="15" fill="rgb(183,183,53)" fg:x="350" fg:w="54"/><text x="7.8241%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="8.7211%" y="837" width="0.0216%" height="15" fill="rgb(182,182,52)" fg:x="403" fg:w="1"/><text x="8.9711%" y="847.50"></text></g><g><title>[libm.so.6] (4 samples, 0.09%)</title><rect x="8.7427%" y="853" width="0.0866%" height="15" fill="rgb(223,223,67)" fg:x="404" fg:w="4"/><text x="8.9927%" y="863.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.06%)</title><rect x="8.8942%" y="837" width="0.0649%" height="15" fill="rgb(76,189,189)" fg:x="411" fg:w="3"/><text x="9.1442%" y="847.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (3 samples, 0.06%)</title><rect x="8.9591%" y="837" width="0.0649%" height="15" fill="rgb(78,191,191)" fg:x="414" fg:w="3"/><text x="9.2091%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="9.0457%" y="821" width="0.0433%" height="15" fill="rgb(210,110,0)" fg:x="418" fg:w="2"/><text x="9.2957%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.26%)</title><rect x="9.0889%" y="693" width="0.2597%" height="15" fill="rgb(218,118,0)" fg:x="420" fg:w="12"/><text x="9.3389%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.26%)</title><rect x="9.0889%" y="677" width="0.2597%" height="15" fill="rgb(196,96,0)" fg:x="420" fg:w="12"/><text x="9.3389%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.26%)</title><rect x="9.0889%" y="661" width="0.2597%" height="15" fill="rgb(236,136,0)" fg:x="420" fg:w="12"/><text x="9.3389%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.26%)</title><rect x="9.0889%" y="645" width="0.2597%" height="15" fill="rgb(197,97,0)" fg:x="420" fg:w="12"/><text x="9.3389%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.26%)</title><rect x="9.0889%" y="629" width="0.2597%" height="15" fill="rgb(219,119,0)" fg:x="420" fg:w="12"/><text x="9.3389%" y="639.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.26%)</title><rect x="9.0889%" y="613" width="0.2597%" height="15" fill="rgb(201,101,0)" fg:x="420" fg:w="12"/><text x="9.3389%" y="623.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (21 samples, 0.45%)</title><rect x="9.0889%" y="773" width="0.4544%" height="15" fill="rgb(67,181,181)" fg:x="420" fg:w="21"/><text x="9.3389%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.45%)</title><rect x="9.0889%" y="757" width="0.4544%" height="15" fill="rgb(192,92,0)" fg:x="420" fg:w="21"/><text x="9.3389%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.45%)</title><rect x="9.0889%" y="741" width="0.4544%" height="15" fill="rgb(195,95,0)" fg:x="420" fg:w="21"/><text x="9.3389%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.45%)</title><rect x="9.0889%" y="725" width="0.4544%" height="15" fill="rgb(213,113,0)" fg:x="420" fg:w="21"/><text x="9.3389%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.45%)</title><rect x="9.0889%" y="709" width="0.4544%" height="15" fill="rgb(57,171,171)" fg:x="420" fg:w="21"/><text x="9.3389%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.19%)</title><rect x="9.3486%" y="693" width="0.1948%" height="15" fill="rgb(242,142,0)" fg:x="432" fg:w="9"/><text x="9.5986%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.19%)</title><rect x="9.3486%" y="677" width="0.1948%" height="15" fill="rgb(239,139,0)" fg:x="432" fg:w="9"/><text x="9.5986%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.65%)</title><rect x="9.0240%" y="837" width="0.6492%" height="15" fill="rgb(246,146,0)" fg:x="417" fg:w="30"/><text x="9.2740%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.58%)</title><rect x="9.0889%" y="821" width="0.5843%" height="15" fill="rgb(212,112,0)" fg:x="420" fg:w="27"/><text x="9.3389%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.58%)</title><rect x="9.0889%" y="805" width="0.5843%" height="15" fill="rgb(226,126,0)" fg:x="420" fg:w="27"/><text x="9.3389%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.58%)</title><rect x="9.0889%" y="789" width="0.5843%" height="15" fill="rgb(62,176,176)" fg:x="420" fg:w="27"/><text x="9.3389%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="9.5434%" y="773" width="0.1298%" height="15" fill="rgb(208,108,0)" fg:x="441" fg:w="6"/><text x="9.7934%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="9.5434%" y="757" width="0.1298%" height="15" fill="rgb(213,113,0)" fg:x="441" fg:w="6"/><text x="9.7934%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.13%)</title><rect x="9.5434%" y="741" width="0.1298%" height="15" fill="rgb(202,102,0)" fg:x="441" fg:w="6"/><text x="9.7934%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.13%)</title><rect x="9.5434%" y="725" width="0.1298%" height="15" fill="rgb(233,133,0)" fg:x="441" fg:w="6"/><text x="9.7934%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.13%)</title><rect x="9.5434%" y="709" width="0.1298%" height="15" fill="rgb(206,106,0)" fg:x="441" fg:w="6"/><text x="9.7934%" y="719.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.13%)</title><rect x="9.5434%" y="693" width="0.1298%" height="15" fill="rgb(190,90,0)" fg:x="441" fg:w="6"/><text x="9.7934%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="9.6732%" y="837" width="0.0216%" height="15" fill="rgb(57,172,172)" fg:x="447" fg:w="1"/><text x="9.9232%" y="847.50"></text></g><g><title>[libc.so.6] (163 samples, 3.53%)</title><rect x="9.6949%" y="837" width="3.5274%" height="15" fill="rgb(193,193,56)" fg:x="448" fg:w="163"/><text x="9.9449%" y="847.50">[li..</text></g><g><title>__rdl_realloc (5 samples, 0.11%)</title><rect x="13.2222%" y="837" width="0.1082%" height="15" fill="rgb(209,209,62)" fg:x="611" fg:w="5"/><text x="13.4722%" y="847.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (10 samples, 0.22%)</title><rect x="13.3304%" y="837" width="0.2164%" height="15" fill="rgb(55,170,170)" fg:x="616" fg:w="10"/><text x="13.5804%" y="847.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (1 samples, 0.02%)</title><rect x="13.5469%" y="837" width="0.0216%" height="15" fill="rgb(93,205,205)" fg:x="626" fg:w="1"/><text x="13.7969%" y="847.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (5 samples, 0.11%)</title><rect x="13.5685%" y="837" width="0.1082%" height="15" fill="rgb(90,202,202)" fg:x="627" fg:w="5"/><text x="13.8185%" y="847.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (4 samples, 0.09%)</title><rect x="13.5901%" y="821" width="0.0866%" height="15" fill="rgb(250,150,0)" fg:x="628" fg:w="4"/><text x="13.8401%" y="831.50"></text></g><g><title>alc::optimizer::arg_min (1 samples, 0.02%)</title><rect x="13.6767%" y="837" width="0.0216%" height="15" fill="rgb(51,166,166)" fg:x="632" fg:w="1"/><text x="13.9267%" y="847.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (1 samples, 0.02%)</title><rect x="13.6983%" y="837" width="0.0216%" height="15" fill="rgb(76,189,189)" fg:x="633" fg:w="1"/><text x="13.9483%" y="847.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_char (1 samples, 0.02%)</title><rect x="13.6983%" y="821" width="0.0216%" height="15" fill="rgb(75,188,188)" fg:x="633" fg:w="1"/><text x="13.9483%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="13.6983%" y="805" width="0.0216%" height="15" fill="rgb(232,132,0)" fg:x="633" fg:w="1"/><text x="13.9483%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="13.6983%" y="789" width="0.0216%" height="15" fill="rgb(246,146,0)" fg:x="633" fg:w="1"/><text x="13.9483%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="13.6983%" y="773" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="633" fg:w="1"/><text x="13.9483%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.6983%" y="757" width="0.0216%" height="15" fill="rgb(205,105,0)" fg:x="633" fg:w="1"/><text x="13.9483%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="13.6983%" y="741" width="0.0216%" height="15" fill="rgb(197,97,0)" fg:x="633" fg:w="1"/><text x="13.9483%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="13.6983%" y="725" width="0.0216%" height="15" fill="rgb(201,101,0)" fg:x="633" fg:w="1"/><text x="13.9483%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.30%)</title><rect x="13.7200%" y="837" width="0.3030%" height="15" fill="rgb(252,152,0)" fg:x="634" fg:w="14"/><text x="13.9700%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.15%)</title><rect x="13.8715%" y="821" width="0.1515%" height="15" fill="rgb(198,98,0)" fg:x="641" fg:w="7"/><text x="14.1215%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.06%)</title><rect x="13.9580%" y="805" width="0.0649%" height="15" fill="rgb(205,105,0)" fg:x="645" fg:w="3"/><text x="14.2080%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.06%)</title><rect x="13.9580%" y="789" width="0.0649%" height="15" fill="rgb(226,126,0)" fg:x="645" fg:w="3"/><text x="14.2080%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 0.95%)</title><rect x="14.0229%" y="837" width="0.9522%" height="15" fill="rgb(249,149,0)" fg:x="648" fg:w="44"/><text x="14.2729%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.24%)</title><rect x="14.7371%" y="821" width="0.2380%" height="15" fill="rgb(199,99,0)" fg:x="681" fg:w="11"/><text x="14.9871%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.24%)</title><rect x="14.7371%" y="805" width="0.2380%" height="15" fill="rgb(232,132,0)" fg:x="681" fg:w="11"/><text x="14.9871%" y="815.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.24%)</title><rect x="14.7371%" y="789" width="0.2380%" height="15" fill="rgb(234,134,0)" fg:x="681" fg:w="11"/><text x="14.9871%" y="799.50"></text></g><g><title>cfree (45 samples, 0.97%)</title><rect x="14.9751%" y="837" width="0.9738%" height="15" fill="rgb(221,221,66)" fg:x="692" fg:w="45"/><text x="15.2251%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="15.9489%" y="837" width="0.0433%" height="15" fill="rgb(228,128,0)" fg:x="737" fg:w="2"/><text x="16.1989%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.04%)</title><rect x="15.9489%" y="821" width="0.0433%" height="15" fill="rgb(203,103,0)" fg:x="737" fg:w="2"/><text x="16.1989%" y="831.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.04%)</title><rect x="15.9489%" y="805" width="0.0433%" height="15" fill="rgb(61,175,175)" fg:x="737" fg:w="2"/><text x="16.1989%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.04%)</title><rect x="15.9489%" y="789" width="0.0433%" height="15" fill="rgb(193,93,0)" fg:x="737" fg:w="2"/><text x="16.1989%" y="799.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.04%)</title><rect x="15.9489%" y="773" width="0.0433%" height="15" fill="rgb(241,141,0)" fg:x="737" fg:w="2"/><text x="16.1989%" y="783.50"></text></g><g><title>malloc (29 samples, 0.63%)</title><rect x="15.9922%" y="837" width="0.6276%" height="15" fill="rgb(216,216,65)" fg:x="739" fg:w="29"/><text x="16.2422%" y="847.50"></text></g><g><title>pow (3 samples, 0.06%)</title><rect x="16.6198%" y="837" width="0.0649%" height="15" fill="rgb(175,175,50)" fg:x="768" fg:w="3"/><text x="16.8698%" y="847.50"></text></g><g><title>[unknown] (392 samples, 8.48%)</title><rect x="8.8293%" y="853" width="8.4830%" height="15" fill="rgb(204,204,60)" fg:x="408" fg:w="392"/><text x="9.0793%" y="863.50">[unknown]</text></g><g><title>realloc (29 samples, 0.63%)</title><rect x="16.6847%" y="837" width="0.6276%" height="15" fill="rgb(180,180,51)" fg:x="771" fg:w="29"/><text x="16.9347%" y="847.50"></text></g><g><title>&lt;tqdm::Tqdm&lt;Iter&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="17.3123%" y="565" width="0.0216%" height="15" fill="rgb(102,213,213)" fg:x="800" fg:w="1"/><text x="17.5623%" y="575.50"></text></g><g><title>tqdm::Pbar::update (1 samples, 0.02%)</title><rect x="17.3123%" y="549" width="0.0216%" height="15" fill="rgb(66,179,179)" fg:x="800" fg:w="1"/><text x="17.5623%" y="559.50"></text></g><g><title>tqdm::refresh (1 samples, 0.02%)</title><rect x="17.3123%" y="533" width="0.0216%" height="15" fill="rgb(104,214,214)" fg:x="800" fg:w="1"/><text x="17.5623%" y="543.50"></text></g><g><title>&lt;T as crossterm::command::QueueableCommand&gt;::queue (1 samples, 0.02%)</title><rect x="17.3123%" y="517" width="0.0216%" height="15" fill="rgb(64,178,178)" fg:x="800" fg:w="1"/><text x="17.5623%" y="527.50"></text></g><g><title>crossterm::command::write_command_ansi (1 samples, 0.02%)</title><rect x="17.3123%" y="501" width="0.0216%" height="15" fill="rgb(69,183,183)" fg:x="800" fg:w="1"/><text x="17.5623%" y="511.50"></text></g><g><title>&lt;crossterm::cursor::Hide as crossterm::command::Command&gt;::write_ansi (1 samples, 0.02%)</title><rect x="17.3123%" y="485" width="0.0216%" height="15" fill="rgb(82,194,194)" fg:x="800" fg:w="1"/><text x="17.5623%" y="495.50"></text></g><g><title>&lt;crossterm::command::write_command_ansi::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="17.3123%" y="469" width="0.0216%" height="15" fill="rgb(100,211,211)" fg:x="800" fg:w="1"/><text x="17.5623%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="17.3123%" y="453" width="0.0216%" height="15" fill="rgb(239,139,0)" fg:x="800" fg:w="1"/><text x="17.5623%" y="463.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="17.3123%" y="437" width="0.0216%" height="15" fill="rgb(246,146,0)" fg:x="800" fg:w="1"/><text x="17.5623%" y="447.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="17.3123%" y="421" width="0.0216%" height="15" fill="rgb(65,178,178)" fg:x="800" fg:w="1"/><text x="17.5623%" y="431.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="17.3123%" y="405" width="0.0216%" height="15" fill="rgb(240,140,0)" fg:x="800" fg:w="1"/><text x="17.5623%" y="415.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="17.3123%" y="389" width="0.0216%" height="15" fill="rgb(249,149,0)" fg:x="800" fg:w="1"/><text x="17.5623%" y="399.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1 samples, 0.02%)</title><rect x="17.3339%" y="309" width="0.0216%" height="15" fill="rgb(226,126,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="319.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (1 samples, 0.02%)</title><rect x="17.3339%" y="293" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (1 samples, 0.02%)</title><rect x="17.3339%" y="277" width="0.0216%" height="15" fill="rgb(93,205,205)" fg:x="801" fg:w="1"/><text x="17.5839%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::rustc_entry::RustcOccupiedEntry&lt;alc::text_processor::ngram::Ngram,u32&gt;&gt; (1 samples, 0.02%)</title><rect x="17.3339%" y="261" width="0.0216%" height="15" fill="rgb(230,130,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alc::text_processor::ngram::Ngram&gt;&gt; (1 samples, 0.02%)</title><rect x="17.3339%" y="245" width="0.0216%" height="15" fill="rgb(232,132,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (1 samples, 0.02%)</title><rect x="17.3339%" y="229" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.02%)</title><rect x="17.3339%" y="213" width="0.0216%" height="15" fill="rgb(215,115,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.02%)</title><rect x="17.3339%" y="197" width="0.0216%" height="15" fill="rgb(250,150,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="17.3339%" y="181" width="0.0216%" height="15" fill="rgb(229,129,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="17.3339%" y="165" width="0.0216%" height="15" fill="rgb(237,137,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="17.3339%" y="149" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="801" fg:w="1"/><text x="17.5839%" y="159.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="17.3339%" y="133" width="0.0216%" height="15" fill="rgb(196,196,57)" fg:x="801" fg:w="1"/><text x="17.5839%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="17.3339%" y="117" width="0.0216%" height="15" fill="rgb(221,221,66)" fg:x="801" fg:w="1"/><text x="17.5839%" y="127.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="17.3556%" y="277" width="0.0216%" height="15" fill="rgb(73,186,186)" fg:x="802" fg:w="1"/><text x="17.6056%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="17.3556%" y="261" width="0.0216%" height="15" fill="rgb(220,120,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="17.3556%" y="245" width="0.0216%" height="15" fill="rgb(210,110,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="255.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="17.3556%" y="229" width="0.0216%" height="15" fill="rgb(86,198,198)" fg:x="802" fg:w="1"/><text x="17.6056%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="17.3556%" y="213" width="0.0216%" height="15" fill="rgb(241,141,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.02%)</title><rect x="17.3556%" y="197" width="0.0216%" height="15" fill="rgb(194,94,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="207.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.02%)</title><rect x="17.3556%" y="181" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="191.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="17.3556%" y="165" width="0.0216%" height="15" fill="rgb(58,172,172)" fg:x="802" fg:w="1"/><text x="17.6056%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="17.3556%" y="149" width="0.0216%" height="15" fill="rgb(205,105,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="159.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="17.3556%" y="133" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="143.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="17.3556%" y="117" width="0.0216%" height="15" fill="rgb(220,120,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="17.3556%" y="101" width="0.0216%" height="15" fill="rgb(203,103,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="17.3556%" y="85" width="0.0216%" height="15" fill="rgb(227,127,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="17.3556%" y="69" width="0.0216%" height="15" fill="rgb(198,98,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="17.3556%" y="53" width="0.0216%" height="15" fill="rgb(211,111,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="63.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="17.3556%" y="37" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="802" fg:w="1"/><text x="17.6056%" y="47.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::combine_with (3 samples, 0.06%)</title><rect x="17.3339%" y="341" width="0.0649%" height="15" fill="rgb(67,181,181)" fg:x="801" fg:w="3"/><text x="17.5839%" y="351.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::add_from_key_value (3 samples, 0.06%)</title><rect x="17.3339%" y="325" width="0.0649%" height="15" fill="rgb(84,196,196)" fg:x="801" fg:w="3"/><text x="17.5839%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.04%)</title><rect x="17.3556%" y="309" width="0.0433%" height="15" fill="rgb(203,103,0)" fg:x="802" fg:w="2"/><text x="17.6056%" y="319.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.04%)</title><rect x="17.3556%" y="293" width="0.0433%" height="15" fill="rgb(98,209,209)" fg:x="802" fg:w="2"/><text x="17.6056%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="17.3772%" y="277" width="0.0216%" height="15" fill="rgb(85,197,197)" fg:x="803" fg:w="1"/><text x="17.6272%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="17.3772%" y="261" width="0.0216%" height="15" fill="rgb(86,198,198)" fg:x="803" fg:w="1"/><text x="17.6272%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="17.3772%" y="245" width="0.0216%" height="15" fill="rgb(63,177,177)" fg:x="803" fg:w="1"/><text x="17.6272%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="17.3772%" y="229" width="0.0216%" height="15" fill="rgb(252,152,0)" fg:x="803" fg:w="1"/><text x="17.6272%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="17.3772%" y="213" width="0.0216%" height="15" fill="rgb(252,152,0)" fg:x="803" fg:w="1"/><text x="17.6272%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.09%)</title><rect x="17.3988%" y="293" width="0.0866%" height="15" fill="rgb(235,135,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.09%)</title><rect x="17.3988%" y="277" width="0.0866%" height="15" fill="rgb(216,116,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.09%)</title><rect x="17.3988%" y="261" width="0.0866%" height="15" fill="rgb(209,109,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.09%)</title><rect x="17.3988%" y="245" width="0.0866%" height="15" fill="rgb(72,185,185)" fg:x="804" fg:w="4"/><text x="17.6488%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.09%)</title><rect x="17.3988%" y="229" width="0.0866%" height="15" fill="rgb(232,132,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.09%)</title><rect x="17.3988%" y="213" width="0.0866%" height="15" fill="rgb(250,150,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.09%)</title><rect x="17.3988%" y="197" width="0.0866%" height="15" fill="rgb(252,152,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.09%)</title><rect x="17.3988%" y="181" width="0.0866%" height="15" fill="rgb(227,127,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.09%)</title><rect x="17.3988%" y="165" width="0.0866%" height="15" fill="rgb(244,144,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="175.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.09%)</title><rect x="17.3988%" y="149" width="0.0866%" height="15" fill="rgb(226,126,0)" fg:x="804" fg:w="4"/><text x="17.6488%" y="159.50"></text></g><g><title>malloc (4 samples, 0.09%)</title><rect x="17.3988%" y="133" width="0.0866%" height="15" fill="rgb(202,202,59)" fg:x="804" fg:w="4"/><text x="17.6488%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="17.4854%" y="293" width="0.0216%" height="15" fill="rgb(253,153,0)" fg:x="808" fg:w="1"/><text x="17.7354%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="17.4854%" y="277" width="0.0216%" height="15" fill="rgb(253,153,0)" fg:x="808" fg:w="1"/><text x="17.7354%" y="287.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="17.5070%" y="197" width="0.0216%" height="15" fill="rgb(201,201,59)" fg:x="809" fg:w="1"/><text x="17.7570%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="17.5070%" y="181" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="809" fg:w="1"/><text x="17.7570%" y="191.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="17.5287%" y="197" width="0.0216%" height="15" fill="rgb(185,185,53)" fg:x="810" fg:w="1"/><text x="17.7787%" y="207.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_char (9 samples, 0.19%)</title><rect x="17.3988%" y="309" width="0.1948%" height="15" fill="rgb(82,194,194)" fg:x="804" fg:w="9"/><text x="17.6488%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.09%)</title><rect x="17.5070%" y="293" width="0.0866%" height="15" fill="rgb(245,145,0)" fg:x="809" fg:w="4"/><text x="17.7570%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.09%)</title><rect x="17.5070%" y="277" width="0.0866%" height="15" fill="rgb(212,112,0)" fg:x="809" fg:w="4"/><text x="17.7570%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.09%)</title><rect x="17.5070%" y="261" width="0.0866%" height="15" fill="rgb(208,108,0)" fg:x="809" fg:w="4"/><text x="17.7570%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="17.5070%" y="245" width="0.0866%" height="15" fill="rgb(204,104,0)" fg:x="809" fg:w="4"/><text x="17.7570%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.09%)</title><rect x="17.5070%" y="229" width="0.0866%" height="15" fill="rgb(199,99,0)" fg:x="809" fg:w="4"/><text x="17.7570%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.09%)</title><rect x="17.5070%" y="213" width="0.0866%" height="15" fill="rgb(229,129,0)" fg:x="809" fg:w="4"/><text x="17.7570%" y="223.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="17.5503%" y="197" width="0.0433%" height="15" fill="rgb(213,213,63)" fg:x="811" fg:w="2"/><text x="17.8003%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="17.5503%" y="181" width="0.0433%" height="15" fill="rgb(228,228,69)" fg:x="811" fg:w="2"/><text x="17.8003%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="17.5936%" y="245" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="813" fg:w="1"/><text x="17.8436%" y="255.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_datasets (15 samples, 0.32%)</title><rect x="17.3339%" y="565" width="0.3246%" height="15" fill="rgb(96,207,207)" fg:x="801" fg:w="15"/><text x="17.5839%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.32%)</title><rect x="17.3339%" y="549" width="0.3246%" height="15" fill="rgb(228,128,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.32%)</title><rect x="17.3339%" y="533" width="0.3246%" height="15" fill="rgb(246,146,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.32%)</title><rect x="17.3339%" y="517" width="0.3246%" height="15" fill="rgb(252,152,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.32%)</title><rect x="17.3339%" y="501" width="0.3246%" height="15" fill="rgb(242,142,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.32%)</title><rect x="17.3339%" y="485" width="0.3246%" height="15" fill="rgb(247,147,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (15 samples, 0.32%)</title><rect x="17.3339%" y="469" width="0.3246%" height="15" fill="rgb(254,154,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.32%)</title><rect x="17.3339%" y="453" width="0.3246%" height="15" fill="rgb(239,139,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.32%)</title><rect x="17.3339%" y="437" width="0.3246%" height="15" fill="rgb(199,99,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.32%)</title><rect x="17.3339%" y="421" width="0.3246%" height="15" fill="rgb(206,106,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (15 samples, 0.32%)</title><rect x="17.3339%" y="405" width="0.3246%" height="15" fill="rgb(209,109,0)" fg:x="801" fg:w="15"/><text x="17.5839%" y="415.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::compute_datasets::_{{closure}} (15 samples, 0.32%)</title><rect x="17.3339%" y="389" width="0.3246%" height="15" fill="rgb(109,219,219)" fg:x="801" fg:w="15"/><text x="17.5839%" y="399.50"></text></g><g><title>alc::text_processor::dataset::FrequencyDataset&lt;u32&gt;::try_from_dir (15 samples, 0.32%)</title><rect x="17.3339%" y="373" width="0.3246%" height="15" fill="rgb(57,172,172)" fg:x="801" fg:w="15"/><text x="17.5839%" y="383.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_file (15 samples, 0.32%)</title><rect x="17.3339%" y="357" width="0.3246%" height="15" fill="rgb(91,203,203)" fg:x="801" fg:w="15"/><text x="17.5839%" y="367.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_string (12 samples, 0.26%)</title><rect x="17.3988%" y="341" width="0.2597%" height="15" fill="rgb(90,202,202)" fg:x="804" fg:w="12"/><text x="17.6488%" y="351.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (12 samples, 0.26%)</title><rect x="17.3988%" y="325" width="0.2597%" height="15" fill="rgb(50,165,165)" fg:x="804" fg:w="12"/><text x="17.6488%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.06%)</title><rect x="17.5936%" y="309" width="0.0649%" height="15" fill="rgb(240,140,0)" fg:x="813" fg:w="3"/><text x="17.8436%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.06%)</title><rect x="17.5936%" y="293" width="0.0649%" height="15" fill="rgb(196,96,0)" fg:x="813" fg:w="3"/><text x="17.8436%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="17.5936%" y="277" width="0.0649%" height="15" fill="rgb(193,93,0)" fg:x="813" fg:w="3"/><text x="17.8436%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="17.5936%" y="261" width="0.0649%" height="15" fill="rgb(252,152,0)" fg:x="813" fg:w="3"/><text x="17.8436%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.04%)</title><rect x="17.6152%" y="245" width="0.0433%" height="15" fill="rgb(246,146,0)" fg:x="814" fg:w="2"/><text x="17.8652%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="17.6152%" y="229" width="0.0433%" height="15" fill="rgb(218,118,0)" fg:x="814" fg:w="2"/><text x="17.8652%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="17.6152%" y="213" width="0.0433%" height="15" fill="rgb(221,121,0)" fg:x="814" fg:w="2"/><text x="17.8652%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="17.6152%" y="197" width="0.0433%" height="15" fill="rgb(213,113,0)" fg:x="814" fg:w="2"/><text x="17.8652%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="17.6152%" y="181" width="0.0433%" height="15" fill="rgb(232,132,0)" fg:x="814" fg:w="2"/><text x="17.8652%" y="191.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="17.6152%" y="165" width="0.0433%" height="15" fill="rgb(200,100,0)" fg:x="814" fg:w="2"/><text x="17.8652%" y="175.50"></text></g><g><title>realloc (2 samples, 0.04%)</title><rect x="17.6152%" y="149" width="0.0433%" height="15" fill="rgb(194,194,56)" fg:x="814" fg:w="2"/><text x="17.8652%" y="159.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="17.6152%" y="133" width="0.0433%" height="15" fill="rgb(228,228,69)" fg:x="814" fg:w="2"/><text x="17.8652%" y="143.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="17.6152%" y="117" width="0.0433%" height="15" fill="rgb(207,207,61)" fg:x="814" fg:w="2"/><text x="17.8652%" y="127.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::randomize (1 samples, 0.02%)</title><rect x="17.6585%" y="549" width="0.0216%" height="15" fill="rgb(58,172,172)" fg:x="816" fg:w="1"/><text x="17.9085%" y="559.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::shuffle (1 samples, 0.02%)</title><rect x="17.6585%" y="533" width="0.0216%" height="15" fill="rgb(85,197,197)" fg:x="816" fg:w="1"/><text x="17.9085%" y="543.50"></text></g><g><title>rand::seq::gen_index (1 samples, 0.02%)</title><rect x="17.6585%" y="517" width="0.0216%" height="15" fill="rgb(72,185,185)" fg:x="816" fg:w="1"/><text x="17.9085%" y="527.50"></text></g><g><title>rand::rng::Rng::gen_range (1 samples, 0.02%)</title><rect x="17.6585%" y="501" width="0.0216%" height="15" fill="rgb(96,207,207)" fg:x="816" fg:w="1"/><text x="17.9085%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (1 samples, 0.02%)</title><rect x="17.6585%" y="485" width="0.0216%" height="15" fill="rgb(208,108,0)" fg:x="816" fg:w="1"/><text x="17.9085%" y="495.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.02%)</title><rect x="17.6585%" y="469" width="0.0216%" height="15" fill="rgb(59,173,173)" fg:x="816" fg:w="1"/><text x="17.9085%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (1 samples, 0.02%)</title><rect x="17.6585%" y="453" width="0.0216%" height="15" fill="rgb(66,180,180)" fg:x="816" fg:w="1"/><text x="17.9085%" y="463.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="17.6585%" y="437" width="0.0216%" height="15" fill="rgb(69,182,182)" fg:x="816" fg:w="1"/><text x="17.9085%" y="447.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="17.6585%" y="421" width="0.0216%" height="15" fill="rgb(73,186,186)" fg:x="816" fg:w="1"/><text x="17.9085%" y="431.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha8Rng as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="17.6585%" y="405" width="0.0216%" height="15" fill="rgb(103,213,213)" fg:x="816" fg:w="1"/><text x="17.9085%" y="415.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="17.6585%" y="389" width="0.0216%" height="15" fill="rgb(70,183,183)" fg:x="816" fg:w="1"/><text x="17.9085%" y="399.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.02%)</title><rect x="17.6585%" y="373" width="0.0216%" height="15" fill="rgb(70,183,183)" fg:x="816" fg:w="1"/><text x="17.9085%" y="383.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha8Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="17.6585%" y="357" width="0.0216%" height="15" fill="rgb(86,198,198)" fg:x="816" fg:w="1"/><text x="17.9085%" y="367.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.02%)</title><rect x="17.6585%" y="341" width="0.0216%" height="15" fill="rgb(85,197,197)" fg:x="816" fg:w="1"/><text x="17.9085%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="17.6585%" y="325" width="0.0216%" height="15" fill="rgb(57,171,171)" fg:x="816" fg:w="1"/><text x="17.9085%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.02%)</title><rect x="17.6585%" y="309" width="0.0216%" height="15" fill="rgb(92,204,204)" fg:x="816" fg:w="1"/><text x="17.9085%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.02%)</title><rect x="17.6585%" y="293" width="0.0216%" height="15" fill="rgb(94,205,205)" fg:x="816" fg:w="1"/><text x="17.9085%" y="303.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.02%)</title><rect x="17.6585%" y="277" width="0.0216%" height="15" fill="rgb(72,185,185)" fg:x="816" fg:w="1"/><text x="17.9085%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.02%)</title><rect x="17.6585%" y="261" width="0.0216%" height="15" fill="rgb(62,176,176)" fg:x="816" fg:w="1"/><text x="17.9085%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.02%)</title><rect x="17.6585%" y="245" width="0.0216%" height="15" fill="rgb(54,169,169)" fg:x="816" fg:w="1"/><text x="17.9085%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="17.6585%" y="229" width="0.0216%" height="15" fill="rgb(71,184,184)" fg:x="816" fg:w="1"/><text x="17.9085%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="17.6585%" y="213" width="0.0216%" height="15" fill="rgb(246,146,0)" fg:x="816" fg:w="1"/><text x="17.9085%" y="223.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="17.9831%" y="389" width="0.0216%" height="15" fill="rgb(220,220,66)" fg:x="831" fg:w="1"/><text x="18.2331%" y="399.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_small (2 samples, 0.04%)</title><rect x="17.9831%" y="501" width="0.0433%" height="15" fill="rgb(105,215,215)" fg:x="831" fg:w="2"/><text x="18.2331%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.04%)</title><rect x="17.9831%" y="485" width="0.0433%" height="15" fill="rgb(235,135,0)" fg:x="831" fg:w="2"/><text x="18.2331%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.04%)</title><rect x="17.9831%" y="469" width="0.0433%" height="15" fill="rgb(254,154,0)" fg:x="831" fg:w="2"/><text x="18.2331%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.04%)</title><rect x="17.9831%" y="453" width="0.0433%" height="15" fill="rgb(214,114,0)" fg:x="831" fg:w="2"/><text x="18.2331%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="17.9831%" y="437" width="0.0433%" height="15" fill="rgb(202,102,0)" fg:x="831" fg:w="2"/><text x="18.2331%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="17.9831%" y="421" width="0.0433%" height="15" fill="rgb(240,140,0)" fg:x="831" fg:w="2"/><text x="18.2331%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="17.9831%" y="405" width="0.0433%" height="15" fill="rgb(240,140,0)" fg:x="831" fg:w="2"/><text x="18.2331%" y="415.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="18.0048%" y="389" width="0.0216%" height="15" fill="rgb(227,227,69)" fg:x="832" fg:w="1"/><text x="18.2548%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.0048%" y="373" width="0.0216%" height="15" fill="rgb(215,215,64)" fg:x="832" fg:w="1"/><text x="18.2548%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.0264%" y="501" width="0.0216%" height="15" fill="rgb(195,95,0)" fg:x="833" fg:w="1"/><text x="18.2764%" y="511.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (2 samples, 0.04%)</title><rect x="18.0480%" y="501" width="0.0433%" height="15" fill="rgb(51,166,166)" fg:x="834" fg:w="2"/><text x="18.2980%" y="511.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (2 samples, 0.04%)</title><rect x="18.0480%" y="485" width="0.0433%" height="15" fill="rgb(231,131,0)" fg:x="834" fg:w="2"/><text x="18.2980%" y="495.50"></text></g><g><title>pow (2 samples, 0.04%)</title><rect x="18.0480%" y="469" width="0.0433%" height="15" fill="rgb(206,206,61)" fg:x="834" fg:w="2"/><text x="18.2980%" y="479.50"></text></g><g><title>[libm.so.6] (2 samples, 0.04%)</title><rect x="18.0480%" y="453" width="0.0433%" height="15" fill="rgb(176,176,50)" fg:x="834" fg:w="2"/><text x="18.2980%" y="463.50"></text></g><g><title>alc::objective::scoring::same_hand_and_finger (1 samples, 0.02%)</title><rect x="18.0913%" y="501" width="0.0216%" height="15" fill="rgb(75,188,188)" fg:x="836" fg:w="1"/><text x="18.3413%" y="511.50"></text></g><g><title>&lt;alc::keyboard::key::Hand as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="18.0913%" y="485" width="0.0216%" height="15" fill="rgb(50,165,165)" fg:x="836" fg:w="1"/><text x="18.3413%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="18.1346%" y="485" width="0.0433%" height="15" fill="rgb(249,149,0)" fg:x="838" fg:w="2"/><text x="18.3846%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="18.1346%" y="469" width="0.0433%" height="15" fill="rgb(228,128,0)" fg:x="838" fg:w="2"/><text x="18.3846%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="18.1346%" y="453" width="0.0433%" height="15" fill="rgb(228,128,0)" fg:x="838" fg:w="2"/><text x="18.3846%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="18.1346%" y="437" width="0.0433%" height="15" fill="rgb(195,95,0)" fg:x="838" fg:w="2"/><text x="18.3846%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="18.1346%" y="421" width="0.0433%" height="15" fill="rgb(242,142,0)" fg:x="838" fg:w="2"/><text x="18.3846%" y="431.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="18.1346%" y="405" width="0.0433%" height="15" fill="rgb(251,151,0)" fg:x="838" fg:w="2"/><text x="18.3846%" y="415.50"></text></g><g><title>realloc (2 samples, 0.04%)</title><rect x="18.1346%" y="389" width="0.0433%" height="15" fill="rgb(218,218,65)" fg:x="838" fg:w="2"/><text x="18.3846%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="18.1346%" y="373" width="0.0433%" height="15" fill="rgb(188,188,54)" fg:x="838" fg:w="2"/><text x="18.3846%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="18.1346%" y="357" width="0.0433%" height="15" fill="rgb(198,198,58)" fg:x="838" fg:w="2"/><text x="18.3846%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.09%)</title><rect x="18.1130%" y="501" width="0.0866%" height="15" fill="rgb(249,149,0)" fg:x="837" fg:w="4"/><text x="18.3630%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="18.1779%" y="485" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="840" fg:w="1"/><text x="18.4279%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.02%)</title><rect x="18.1995%" y="501" width="0.0216%" height="15" fill="rgb(247,147,0)" fg:x="841" fg:w="1"/><text x="18.4495%" y="511.50"></text></g><g><title>&lt;alc::keyboard::key::Finger as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="18.1995%" y="485" width="0.0216%" height="15" fill="rgb(103,214,214)" fg:x="841" fg:w="1"/><text x="18.4495%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.04%)</title><rect x="18.2212%" y="501" width="0.0433%" height="15" fill="rgb(206,106,0)" fg:x="842" fg:w="2"/><text x="18.4712%" y="511.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&lt;&amp;f64&gt;&gt;::sum (2 samples, 0.04%)</title><rect x="18.2212%" y="485" width="0.0433%" height="15" fill="rgb(98,209,209)" fg:x="842" fg:w="2"/><text x="18.4712%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="18.2212%" y="469" width="0.0433%" height="15" fill="rgb(221,121,0)" fg:x="842" fg:w="2"/><text x="18.4712%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="18.2212%" y="453" width="0.0433%" height="15" fill="rgb(232,132,0)" fg:x="842" fg:w="2"/><text x="18.4712%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (1 samples, 0.02%)</title><rect x="18.2644%" y="501" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="844" fg:w="1"/><text x="18.5144%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (1 samples, 0.02%)</title><rect x="18.2644%" y="485" width="0.0216%" height="15" fill="rgb(233,133,0)" fg:x="844" fg:w="1"/><text x="18.5144%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.2644%" y="469" width="0.0216%" height="15" fill="rgb(233,133,0)" fg:x="844" fg:w="1"/><text x="18.5144%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="18.2644%" y="453" width="0.0216%" height="15" fill="rgb(229,129,0)" fg:x="844" fg:w="1"/><text x="18.5144%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="18.2644%" y="437" width="0.0216%" height="15" fill="rgb(208,108,0)" fg:x="844" fg:w="1"/><text x="18.5144%" y="447.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="18.2644%" y="421" width="0.0216%" height="15" fill="rgb(186,186,54)" fg:x="844" fg:w="1"/><text x="18.5144%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.2644%" y="405" width="0.0216%" height="15" fill="rgb(192,192,56)" fg:x="844" fg:w="1"/><text x="18.5144%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (2 samples, 0.04%)</title><rect x="18.2861%" y="501" width="0.0433%" height="15" fill="rgb(202,102,0)" fg:x="845" fg:w="2"/><text x="18.5361%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (2 samples, 0.04%)</title><rect x="18.2861%" y="485" width="0.0433%" height="15" fill="rgb(232,132,0)" fg:x="845" fg:w="2"/><text x="18.5361%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="18.2861%" y="469" width="0.0433%" height="15" fill="rgb(198,98,0)" fg:x="845" fg:w="2"/><text x="18.5361%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="18.2861%" y="453" width="0.0433%" height="15" fill="rgb(226,126,0)" fg:x="845" fg:w="2"/><text x="18.5361%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="18.2861%" y="437" width="0.0433%" height="15" fill="rgb(209,109,0)" fg:x="845" fg:w="2"/><text x="18.5361%" y="447.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="18.2861%" y="421" width="0.0433%" height="15" fill="rgb(191,191,55)" fg:x="845" fg:w="2"/><text x="18.5361%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="18.2861%" y="405" width="0.0433%" height="15" fill="rgb(209,209,62)" fg:x="845" fg:w="2"/><text x="18.5361%" y="415.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (30 samples, 0.65%)</title><rect x="17.7018%" y="517" width="0.6492%" height="15" fill="rgb(56,171,171)" fg:x="818" fg:w="30"/><text x="17.9518%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="18.3294%" y="501" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="847" fg:w="1"/><text x="18.5794%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="18.3294%" y="485" width="0.0216%" height="15" fill="rgb(75,188,188)" fg:x="847" fg:w="1"/><text x="18.5794%" y="495.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (3 samples, 0.06%)</title><rect x="18.3510%" y="501" width="0.0649%" height="15" fill="rgb(57,171,171)" fg:x="848" fg:w="3"/><text x="18.6010%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.06%)</title><rect x="18.3510%" y="485" width="0.0649%" height="15" fill="rgb(230,130,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.06%)</title><rect x="18.3510%" y="469" width="0.0649%" height="15" fill="rgb(214,114,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="18.3510%" y="453" width="0.0649%" height="15" fill="rgb(214,114,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="18.3510%" y="437" width="0.0649%" height="15" fill="rgb(248,148,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.06%)</title><rect x="18.3510%" y="421" width="0.0649%" height="15" fill="rgb(246,146,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="18.3510%" y="405" width="0.0649%" height="15" fill="rgb(206,106,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="18.3510%" y="389" width="0.0649%" height="15" fill="rgb(240,140,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.06%)</title><rect x="18.3510%" y="373" width="0.0649%" height="15" fill="rgb(194,94,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.06%)</title><rect x="18.3510%" y="357" width="0.0649%" height="15" fill="rgb(197,97,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="367.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.06%)</title><rect x="18.3510%" y="341" width="0.0649%" height="15" fill="rgb(200,100,0)" fg:x="848" fg:w="3"/><text x="18.6010%" y="351.50"></text></g><g><title>realloc (3 samples, 0.06%)</title><rect x="18.3510%" y="325" width="0.0649%" height="15" fill="rgb(191,191,55)" fg:x="848" fg:w="3"/><text x="18.6010%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.3943%" y="309" width="0.0216%" height="15" fill="rgb(203,203,60)" fg:x="850" fg:w="1"/><text x="18.6443%" y="319.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (1 samples, 0.02%)</title><rect x="18.4159%" y="501" width="0.0216%" height="15" fill="rgb(75,188,188)" fg:x="851" fg:w="1"/><text x="18.6659%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="18.4159%" y="485" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="18.4159%" y="469" width="0.0216%" height="15" fill="rgb(75,188,188)" fg:x="851" fg:w="1"/><text x="18.6659%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="18.4159%" y="453" width="0.0216%" height="15" fill="rgb(51,166,166)" fg:x="851" fg:w="1"/><text x="18.6659%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="18.4159%" y="437" width="0.0216%" height="15" fill="rgb(99,210,210)" fg:x="851" fg:w="1"/><text x="18.6659%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="18.4159%" y="421" width="0.0216%" height="15" fill="rgb(214,114,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="18.4159%" y="405" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="18.4159%" y="389" width="0.0216%" height="15" fill="rgb(93,205,205)" fg:x="851" fg:w="1"/><text x="18.6659%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="18.4159%" y="373" width="0.0216%" height="15" fill="rgb(222,122,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="18.4159%" y="357" width="0.0216%" height="15" fill="rgb(242,142,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="18.4159%" y="341" width="0.0216%" height="15" fill="rgb(216,116,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.4159%" y="325" width="0.0216%" height="15" fill="rgb(243,143,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.4159%" y="309" width="0.0216%" height="15" fill="rgb(233,133,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.4159%" y="293" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="851" fg:w="1"/><text x="18.6659%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="18.4376%" y="453" width="0.0216%" height="15" fill="rgb(249,149,0)" fg:x="852" fg:w="1"/><text x="18.6876%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="18.4376%" y="501" width="0.0433%" height="15" fill="rgb(229,129,0)" fg:x="852" fg:w="2"/><text x="18.6876%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="18.4376%" y="485" width="0.0433%" height="15" fill="rgb(216,116,0)" fg:x="852" fg:w="2"/><text x="18.6876%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="18.4376%" y="469" width="0.0433%" height="15" fill="rgb(240,140,0)" fg:x="852" fg:w="2"/><text x="18.6876%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="18.4592%" y="453" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="853" fg:w="1"/><text x="18.7092%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="18.4592%" y="437" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="853" fg:w="1"/><text x="18.7092%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="18.4592%" y="421" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="853" fg:w="1"/><text x="18.7092%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="18.4592%" y="405" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="853" fg:w="1"/><text x="18.7092%" y="415.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="18.4592%" y="389" width="0.0216%" height="15" fill="rgb(203,203,60)" fg:x="853" fg:w="1"/><text x="18.7092%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.4592%" y="373" width="0.0216%" height="15" fill="rgb(200,200,59)" fg:x="853" fg:w="1"/><text x="18.7092%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.4592%" y="357" width="0.0216%" height="15" fill="rgb(208,208,62)" fg:x="853" fg:w="1"/><text x="18.7092%" y="367.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (7 samples, 0.15%)</title><rect x="18.3510%" y="517" width="0.1515%" height="15" fill="rgb(71,185,185)" fg:x="848" fg:w="7"/><text x="18.6010%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="18.4808%" y="501" width="0.0216%" height="15" fill="rgb(243,143,0)" fg:x="854" fg:w="1"/><text x="18.7308%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.4808%" y="485" width="0.0216%" height="15" fill="rgb(221,121,0)" fg:x="854" fg:w="1"/><text x="18.7308%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="18.4808%" y="469" width="0.0216%" height="15" fill="rgb(214,114,0)" fg:x="854" fg:w="1"/><text x="18.7308%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.4808%" y="453" width="0.0216%" height="15" fill="rgb(100,211,211)" fg:x="854" fg:w="1"/><text x="18.7308%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="18.4808%" y="437" width="0.0216%" height="15" fill="rgb(198,98,0)" fg:x="854" fg:w="1"/><text x="18.7308%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.4808%" y="421" width="0.0216%" height="15" fill="rgb(205,105,0)" fg:x="854" fg:w="1"/><text x="18.7308%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="18.4808%" y="405" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="854" fg:w="1"/><text x="18.7308%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="18.4808%" y="389" width="0.0216%" height="15" fill="rgb(246,146,0)" fg:x="854" fg:w="1"/><text x="18.7308%" y="399.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="18.4808%" y="373" width="0.0216%" height="15" fill="rgb(202,202,60)" fg:x="854" fg:w="1"/><text x="18.7308%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.4808%" y="357" width="0.0216%" height="15" fill="rgb(192,192,56)" fg:x="854" fg:w="1"/><text x="18.7308%" y="367.50"></text></g><g><title>alc::optimizer::arg_min (1 samples, 0.02%)</title><rect x="18.5025%" y="517" width="0.0216%" height="15" fill="rgb(86,198,198)" fg:x="855" fg:w="1"/><text x="18.7525%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1 samples, 0.02%)</title><rect x="18.5025%" y="501" width="0.0216%" height="15" fill="rgb(195,95,0)" fg:x="855" fg:w="1"/><text x="18.7525%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.02%)</title><rect x="18.5025%" y="485" width="0.0216%" height="15" fill="rgb(246,146,0)" fg:x="855" fg:w="1"/><text x="18.7525%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="18.5025%" y="469" width="0.0216%" height="15" fill="rgb(221,121,0)" fg:x="855" fg:w="1"/><text x="18.7525%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="18.5025%" y="453" width="0.0216%" height="15" fill="rgb(224,124,0)" fg:x="855" fg:w="1"/><text x="18.7525%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="18.5241%" y="501" width="0.0216%" height="15" fill="rgb(215,115,0)" fg:x="856" fg:w="1"/><text x="18.7741%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="18.5241%" y="485" width="0.0216%" height="15" fill="rgb(233,133,0)" fg:x="856" fg:w="1"/><text x="18.7741%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="18.5241%" y="469" width="0.0216%" height="15" fill="rgb(232,132,0)" fg:x="856" fg:w="1"/><text x="18.7741%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="18.5241%" y="453" width="0.0216%" height="15" fill="rgb(235,135,0)" fg:x="856" fg:w="1"/><text x="18.7741%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="18.5241%" y="437" width="0.0216%" height="15" fill="rgb(204,104,0)" fg:x="856" fg:w="1"/><text x="18.7741%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="18.5241%" y="421" width="0.0216%" height="15" fill="rgb(228,128,0)" fg:x="856" fg:w="1"/><text x="18.7741%" y="431.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="18.5241%" y="405" width="0.0216%" height="15" fill="rgb(194,194,56)" fg:x="856" fg:w="1"/><text x="18.7741%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.5241%" y="389" width="0.0216%" height="15" fill="rgb(200,200,59)" fg:x="856" fg:w="1"/><text x="18.7741%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.5241%" y="373" width="0.0216%" height="15" fill="rgb(217,217,65)" fg:x="856" fg:w="1"/><text x="18.7741%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="18.5241%" y="517" width="0.0433%" height="15" fill="rgb(192,92,0)" fg:x="856" fg:w="2"/><text x="18.7741%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="18.5458%" y="501" width="0.0216%" height="15" fill="rgb(220,120,0)" fg:x="857" fg:w="1"/><text x="18.7958%" y="511.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_and_score_initial_population (43 samples, 0.93%)</title><rect x="17.6585%" y="565" width="0.9305%" height="15" fill="rgb(107,217,217)" fg:x="816" fg:w="43"/><text x="17.9085%" y="575.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (42 samples, 0.91%)</title><rect x="17.6802%" y="549" width="0.9089%" height="15" fill="rgb(63,177,177)" fg:x="817" fg:w="42"/><text x="17.9302%" y="559.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (42 samples, 0.91%)</title><rect x="17.6802%" y="533" width="0.9089%" height="15" fill="rgb(90,202,202)" fg:x="817" fg:w="42"/><text x="17.9302%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (1 samples, 0.02%)</title><rect x="18.5674%" y="517" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="858" fg:w="1"/><text x="18.8174%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.02%)</title><rect x="18.5674%" y="501" width="0.0216%" height="15" fill="rgb(195,95,0)" fg:x="858" fg:w="1"/><text x="18.8174%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.02%)</title><rect x="18.5674%" y="485" width="0.0216%" height="15" fill="rgb(202,102,0)" fg:x="858" fg:w="1"/><text x="18.8174%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.5674%" y="469" width="0.0216%" height="15" fill="rgb(219,119,0)" fg:x="858" fg:w="1"/><text x="18.8174%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="18.5674%" y="453" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="858" fg:w="1"/><text x="18.8174%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="18.5674%" y="437" width="0.0216%" height="15" fill="rgb(199,99,0)" fg:x="858" fg:w="1"/><text x="18.8174%" y="447.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="18.5674%" y="421" width="0.0216%" height="15" fill="rgb(225,225,68)" fg:x="858" fg:w="1"/><text x="18.8174%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.5674%" y="405" width="0.0216%" height="15" fill="rgb(211,211,63)" fg:x="858" fg:w="1"/><text x="18.8174%" y="415.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::choose (1 samples, 0.02%)</title><rect x="18.5890%" y="549" width="0.0216%" height="15" fill="rgb(66,180,180)" fg:x="859" fg:w="1"/><text x="18.8390%" y="559.50"></text></g><g><title>rand::seq::gen_index (1 samples, 0.02%)</title><rect x="18.5890%" y="533" width="0.0216%" height="15" fill="rgb(92,203,203)" fg:x="859" fg:w="1"/><text x="18.8390%" y="543.50"></text></g><g><title>rand::rng::Rng::gen_range (1 samples, 0.02%)</title><rect x="18.5890%" y="517" width="0.0216%" height="15" fill="rgb(86,198,198)" fg:x="859" fg:w="1"/><text x="18.8390%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (1 samples, 0.02%)</title><rect x="18.5890%" y="501" width="0.0216%" height="15" fill="rgb(254,154,0)" fg:x="859" fg:w="1"/><text x="18.8390%" y="511.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.02%)</title><rect x="18.5890%" y="485" width="0.0216%" height="15" fill="rgb(104,215,215)" fg:x="859" fg:w="1"/><text x="18.8390%" y="495.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (1 samples, 0.02%)</title><rect x="18.5890%" y="469" width="0.0216%" height="15" fill="rgb(92,204,204)" fg:x="859" fg:w="1"/><text x="18.8390%" y="479.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="18.5890%" y="453" width="0.0216%" height="15" fill="rgb(53,168,168)" fg:x="859" fg:w="1"/><text x="18.8390%" y="463.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="18.5890%" y="437" width="0.0216%" height="15" fill="rgb(59,173,173)" fg:x="859" fg:w="1"/><text x="18.8390%" y="447.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha8Rng as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="18.5890%" y="421" width="0.0216%" height="15" fill="rgb(97,208,208)" fg:x="859" fg:w="1"/><text x="18.8390%" y="431.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.02%)</title><rect x="18.5890%" y="405" width="0.0216%" height="15" fill="rgb(60,174,174)" fg:x="859" fg:w="1"/><text x="18.8390%" y="415.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="18.6107%" y="469" width="0.1731%" height="15" fill="rgb(78,191,191)" fg:x="860" fg:w="8"/><text x="18.8607%" y="479.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="18.6107%" y="453" width="0.1731%" height="15" fill="rgb(100,211,211)" fg:x="860" fg:w="8"/><text x="18.8607%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="18.6107%" y="437" width="0.1731%" height="15" fill="rgb(219,119,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.17%)</title><rect x="18.6107%" y="421" width="0.1731%" height="15" fill="rgb(253,153,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.17%)</title><rect x="18.6107%" y="405" width="0.1731%" height="15" fill="rgb(254,154,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.17%)</title><rect x="18.6107%" y="389" width="0.1731%" height="15" fill="rgb(101,212,212)" fg:x="860" fg:w="8"/><text x="18.8607%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.17%)</title><rect x="18.6107%" y="373" width="0.1731%" height="15" fill="rgb(249,149,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.17%)</title><rect x="18.6107%" y="357" width="0.1731%" height="15" fill="rgb(245,145,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.17%)</title><rect x="18.6107%" y="341" width="0.1731%" height="15" fill="rgb(216,116,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.17%)</title><rect x="18.6107%" y="325" width="0.1731%" height="15" fill="rgb(201,101,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.17%)</title><rect x="18.6107%" y="309" width="0.1731%" height="15" fill="rgb(221,121,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="319.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.17%)</title><rect x="18.6107%" y="293" width="0.1731%" height="15" fill="rgb(231,131,0)" fg:x="860" fg:w="8"/><text x="18.8607%" y="303.50"></text></g><g><title>malloc (8 samples, 0.17%)</title><rect x="18.6107%" y="277" width="0.1731%" height="15" fill="rgb(182,182,52)" fg:x="860" fg:w="8"/><text x="18.8607%" y="287.50"></text></g><g><title>[libc.so.6] (8 samples, 0.17%)</title><rect x="18.6107%" y="261" width="0.1731%" height="15" fill="rgb(192,192,56)" fg:x="860" fg:w="8"/><text x="18.8607%" y="271.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="18.6973%" y="245" width="0.0866%" height="15" fill="rgb(226,226,68)" fg:x="864" fg:w="4"/><text x="18.9473%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.19%)</title><rect x="18.6107%" y="533" width="0.1948%" height="15" fill="rgb(221,121,0)" fg:x="860" fg:w="9"/><text x="18.8607%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.19%)</title><rect x="18.6107%" y="517" width="0.1948%" height="15" fill="rgb(196,96,0)" fg:x="860" fg:w="9"/><text x="18.8607%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.19%)</title><rect x="18.6107%" y="501" width="0.1948%" height="15" fill="rgb(229,129,0)" fg:x="860" fg:w="9"/><text x="18.8607%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.19%)</title><rect x="18.6107%" y="485" width="0.1948%" height="15" fill="rgb(94,205,205)" fg:x="860" fg:w="9"/><text x="18.8607%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.7838%" y="469" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="868" fg:w="1"/><text x="19.0338%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.7838%" y="453" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="868" fg:w="1"/><text x="19.0338%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.7838%" y="437" width="0.0216%" height="15" fill="rgb(201,101,0)" fg:x="868" fg:w="1"/><text x="19.0338%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="18.7838%" y="421" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="868" fg:w="1"/><text x="19.0338%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="18.7838%" y="405" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="868" fg:w="1"/><text x="19.0338%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="18.8055%" y="197" width="0.0216%" height="15" fill="rgb(202,202,59)" fg:x="869" fg:w="1"/><text x="19.0555%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="18.8055%" y="181" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="869" fg:w="1"/><text x="19.0555%" y="191.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (3 samples, 0.06%)</title><rect x="18.8055%" y="373" width="0.0649%" height="15" fill="rgb(58,172,172)" fg:x="869" fg:w="3"/><text x="19.0555%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.06%)</title><rect x="18.8055%" y="357" width="0.0649%" height="15" fill="rgb(215,115,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="18.8055%" y="341" width="0.0649%" height="15" fill="rgb(248,148,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="18.8055%" y="325" width="0.0649%" height="15" fill="rgb(234,134,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect x="18.8055%" y="309" width="0.0649%" height="15" fill="rgb(100,211,211)" fg:x="869" fg:w="3"/><text x="19.0555%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.06%)</title><rect x="18.8055%" y="293" width="0.0649%" height="15" fill="rgb(221,121,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.06%)</title><rect x="18.8055%" y="277" width="0.0649%" height="15" fill="rgb(209,109,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.06%)</title><rect x="18.8055%" y="261" width="0.0649%" height="15" fill="rgb(197,97,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="18.8055%" y="245" width="0.0649%" height="15" fill="rgb(219,119,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.06%)</title><rect x="18.8055%" y="229" width="0.0649%" height="15" fill="rgb(252,152,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="239.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="18.8055%" y="213" width="0.0649%" height="15" fill="rgb(240,140,0)" fg:x="869" fg:w="3"/><text x="19.0555%" y="223.50"></text></g><g><title>malloc (2 samples, 0.04%)</title><rect x="18.8271%" y="197" width="0.0433%" height="15" fill="rgb(180,180,52)" fg:x="870" fg:w="2"/><text x="19.0771%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="18.8271%" y="181" width="0.0433%" height="15" fill="rgb(186,186,54)" fg:x="870" fg:w="2"/><text x="19.0771%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4 samples, 0.09%)</title><rect x="18.8055%" y="485" width="0.0866%" height="15" fill="rgb(101,211,211)" fg:x="869" fg:w="4"/><text x="19.0555%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4 samples, 0.09%)</title><rect x="18.8055%" y="469" width="0.0866%" height="15" fill="rgb(89,201,201)" fg:x="869" fg:w="4"/><text x="19.0555%" y="479.50"></text></g><g><title>core::clone::Clone::clone (4 samples, 0.09%)</title><rect x="18.8055%" y="453" width="0.0866%" height="15" fill="rgb(232,132,0)" fg:x="869" fg:w="4"/><text x="19.0555%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.09%)</title><rect x="18.8055%" y="437" width="0.0866%" height="15" fill="rgb(247,147,0)" fg:x="869" fg:w="4"/><text x="19.0555%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.09%)</title><rect x="18.8055%" y="421" width="0.0866%" height="15" fill="rgb(231,131,0)" fg:x="869" fg:w="4"/><text x="19.0555%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.09%)</title><rect x="18.8055%" y="405" width="0.0866%" height="15" fill="rgb(226,126,0)" fg:x="869" fg:w="4"/><text x="19.0555%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.09%)</title><rect x="18.8055%" y="389" width="0.0866%" height="15" fill="rgb(72,185,185)" fg:x="869" fg:w="4"/><text x="19.0555%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.8704%" y="373" width="0.0216%" height="15" fill="rgb(254,154,0)" fg:x="872" fg:w="1"/><text x="19.1204%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.8704%" y="357" width="0.0216%" height="15" fill="rgb(239,139,0)" fg:x="872" fg:w="1"/><text x="19.1204%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="18.8704%" y="341" width="0.0216%" height="15" fill="rgb(237,137,0)" fg:x="872" fg:w="1"/><text x="19.1204%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="18.8704%" y="325" width="0.0216%" height="15" fill="rgb(238,138,0)" fg:x="872" fg:w="1"/><text x="19.1204%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="18.8704%" y="309" width="0.0216%" height="15" fill="rgb(230,130,0)" fg:x="872" fg:w="1"/><text x="19.1204%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="18.8704%" y="293" width="0.0216%" height="15" fill="rgb(242,142,0)" fg:x="872" fg:w="1"/><text x="19.1204%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="18.8704%" y="277" width="0.0216%" height="15" fill="rgb(190,190,55)" fg:x="872" fg:w="1"/><text x="19.1204%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="18.8704%" y="261" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="872" fg:w="1"/><text x="19.1204%" y="271.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (14 samples, 0.30%)</title><rect x="18.6107%" y="549" width="0.3030%" height="15" fill="rgb(99,210,210)" fg:x="860" fg:w="14"/><text x="18.8607%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="18.8055%" y="533" width="0.1082%" height="15" fill="rgb(212,112,0)" fg:x="869" fg:w="5"/><text x="19.0555%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="18.8055%" y="517" width="0.1082%" height="15" fill="rgb(52,167,167)" fg:x="869" fg:w="5"/><text x="19.0555%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="18.8055%" y="501" width="0.1082%" height="15" fill="rgb(100,210,210)" fg:x="869" fg:w="5"/><text x="19.0555%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="18.8920%" y="485" width="0.0216%" height="15" fill="rgb(59,173,173)" fg:x="873" fg:w="1"/><text x="19.1420%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.02%)</title><rect x="18.8920%" y="469" width="0.0216%" height="15" fill="rgb(52,167,167)" fg:x="873" fg:w="1"/><text x="19.1420%" y="479.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="18.8920%" y="453" width="0.0216%" height="15" fill="rgb(77,190,190)" fg:x="873" fg:w="1"/><text x="19.1420%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="18.8920%" y="437" width="0.0216%" height="15" fill="rgb(230,130,0)" fg:x="873" fg:w="1"/><text x="19.1420%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="18.8920%" y="421" width="0.0216%" height="15" fill="rgb(193,93,0)" fg:x="873" fg:w="1"/><text x="19.1420%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="18.8920%" y="405" width="0.0216%" height="15" fill="rgb(220,120,0)" fg:x="873" fg:w="1"/><text x="19.1420%" y="415.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="18.8920%" y="389" width="0.0216%" height="15" fill="rgb(207,207,61)" fg:x="873" fg:w="1"/><text x="19.1420%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="18.8920%" y="373" width="0.0216%" height="15" fill="rgb(224,224,67)" fg:x="873" fg:w="1"/><text x="19.1420%" y="383.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_valid_swap (1 samples, 0.02%)</title><rect x="18.9137%" y="549" width="0.0216%" height="15" fill="rgb(70,184,184)" fg:x="874" fg:w="1"/><text x="19.1637%" y="559.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_moveable_position (1 samples, 0.02%)</title><rect x="18.9137%" y="533" width="0.0216%" height="15" fill="rgb(91,203,203)" fg:x="874" fg:w="1"/><text x="19.1637%" y="543.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_position (1 samples, 0.02%)</title><rect x="18.9137%" y="517" width="0.0216%" height="15" fill="rgb(53,168,168)" fg:x="874" fg:w="1"/><text x="19.1637%" y="527.50"></text></g><g><title>rand::rng::Rng::gen_range (1 samples, 0.02%)</title><rect x="18.9137%" y="501" width="0.0216%" height="15" fill="rgb(82,194,194)" fg:x="874" fg:w="1"/><text x="19.1637%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (1 samples, 0.02%)</title><rect x="18.9137%" y="485" width="0.0216%" height="15" fill="rgb(231,131,0)" fg:x="874" fg:w="1"/><text x="19.1637%" y="495.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.02%)</title><rect x="18.9137%" y="469" width="0.0216%" height="15" fill="rgb(96,207,207)" fg:x="874" fg:w="1"/><text x="19.1637%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (1 samples, 0.02%)</title><rect x="18.9137%" y="453" width="0.0216%" height="15" fill="rgb(96,207,207)" fg:x="874" fg:w="1"/><text x="19.1637%" y="463.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.02%)</title><rect x="18.9137%" y="437" width="0.0216%" height="15" fill="rgb(68,181,181)" fg:x="874" fg:w="1"/><text x="19.1637%" y="447.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.02%)</title><rect x="18.9137%" y="421" width="0.0216%" height="15" fill="rgb(85,197,197)" fg:x="874" fg:w="1"/><text x="19.1637%" y="431.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha8Rng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.02%)</title><rect x="18.9137%" y="405" width="0.0216%" height="15" fill="rgb(67,181,181)" fg:x="874" fg:w="1"/><text x="19.1637%" y="415.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.02%)</title><rect x="18.9137%" y="389" width="0.0216%" height="15" fill="rgb(99,210,210)" fg:x="874" fg:w="1"/><text x="19.1637%" y="399.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.9353%" y="517" width="0.0216%" height="15" fill="rgb(88,200,200)" fg:x="875" fg:w="1"/><text x="19.1853%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.9353%" y="501" width="0.0216%" height="15" fill="rgb(198,98,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="18.9353%" y="485" width="0.0216%" height="15" fill="rgb(243,143,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="18.9353%" y="469" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="18.9353%" y="453" width="0.0216%" height="15" fill="rgb(73,186,186)" fg:x="875" fg:w="1"/><text x="19.1853%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.9353%" y="437" width="0.0216%" height="15" fill="rgb(208,108,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.9353%" y="421" width="0.0216%" height="15" fill="rgb(193,93,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="18.9353%" y="405" width="0.0216%" height="15" fill="rgb(209,109,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="18.9353%" y="389" width="0.0216%" height="15" fill="rgb(231,131,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="18.9353%" y="373" width="0.0216%" height="15" fill="rgb(198,98,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="18.9353%" y="357" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="875" fg:w="1"/><text x="19.1853%" y="367.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="18.9353%" y="341" width="0.0216%" height="15" fill="rgb(188,188,54)" fg:x="875" fg:w="1"/><text x="19.1853%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.9569%" y="437" width="0.0216%" height="15" fill="rgb(69,183,183)" fg:x="876" fg:w="1"/><text x="19.2069%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="18.9569%" y="421" width="0.0216%" height="15" fill="rgb(55,170,170)" fg:x="876" fg:w="1"/><text x="19.2069%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="18.9569%" y="405" width="0.0216%" height="15" fill="rgb(52,167,167)" fg:x="876" fg:w="1"/><text x="19.2069%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="18.9569%" y="389" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="876" fg:w="1"/><text x="19.2069%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="18.9569%" y="373" width="0.0216%" height="15" fill="rgb(197,97,0)" fg:x="876" fg:w="1"/><text x="19.2069%" y="383.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.02%)</title><rect x="18.9786%" y="437" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.9786%" y="421" width="0.0216%" height="15" fill="rgb(247,147,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="18.9786%" y="405" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="18.9786%" y="389" width="0.0216%" height="15" fill="rgb(199,99,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="18.9786%" y="373" width="0.0216%" height="15" fill="rgb(83,195,195)" fg:x="877" fg:w="1"/><text x="19.2286%" y="383.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.9786%" y="357" width="0.0216%" height="15" fill="rgb(85,197,197)" fg:x="877" fg:w="1"/><text x="19.2286%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.9786%" y="341" width="0.0216%" height="15" fill="rgb(209,109,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="18.9786%" y="325" width="0.0216%" height="15" fill="rgb(211,111,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="18.9786%" y="309" width="0.0216%" height="15" fill="rgb(208,108,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="18.9786%" y="293" width="0.0216%" height="15" fill="rgb(92,203,203)" fg:x="877" fg:w="1"/><text x="19.2286%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.9786%" y="277" width="0.0216%" height="15" fill="rgb(235,135,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="18.9786%" y="261" width="0.0216%" height="15" fill="rgb(237,137,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="18.9786%" y="245" width="0.0216%" height="15" fill="rgb(252,152,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="18.9786%" y="229" width="0.0216%" height="15" fill="rgb(249,149,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="18.9786%" y="213" width="0.0216%" height="15" fill="rgb(202,102,0)" fg:x="877" fg:w="1"/><text x="19.2286%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3 samples, 0.06%)</title><rect x="18.9569%" y="469" width="0.0649%" height="15" fill="rgb(91,203,203)" fg:x="876" fg:w="3"/><text x="19.2069%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3 samples, 0.06%)</title><rect x="18.9569%" y="453" width="0.0649%" height="15" fill="rgb(70,183,183)" fg:x="876" fg:w="3"/><text x="19.2069%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="19.0002%" y="437" width="0.0216%" height="15" fill="rgb(68,181,181)" fg:x="878" fg:w="1"/><text x="19.2502%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="19.0002%" y="421" width="0.0216%" height="15" fill="rgb(214,114,0)" fg:x="878" fg:w="1"/><text x="19.2502%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="19.0002%" y="405" width="0.0216%" height="15" fill="rgb(222,122,0)" fg:x="878" fg:w="1"/><text x="19.2502%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="18.9569%" y="517" width="0.1082%" height="15" fill="rgb(207,107,0)" fg:x="876" fg:w="5"/><text x="19.2069%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="18.9569%" y="501" width="0.1082%" height="15" fill="rgb(63,177,177)" fg:x="876" fg:w="5"/><text x="19.2069%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="18.9569%" y="485" width="0.1082%" height="15" fill="rgb(65,178,178)" fg:x="876" fg:w="5"/><text x="19.2069%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.04%)</title><rect x="19.0219%" y="469" width="0.0433%" height="15" fill="rgb(80,192,192)" fg:x="879" fg:w="2"/><text x="19.2719%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.04%)</title><rect x="19.0219%" y="453" width="0.0433%" height="15" fill="rgb(89,201,201)" fg:x="879" fg:w="2"/><text x="19.2719%" y="463.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="19.0435%" y="437" width="0.0216%" height="15" fill="rgb(62,176,176)" fg:x="880" fg:w="1"/><text x="19.2935%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.0435%" y="421" width="0.0216%" height="15" fill="rgb(219,119,0)" fg:x="880" fg:w="1"/><text x="19.2935%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.0435%" y="405" width="0.0216%" height="15" fill="rgb(198,98,0)" fg:x="880" fg:w="1"/><text x="19.2935%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.0435%" y="389" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="880" fg:w="1"/><text x="19.2935%" y="399.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.0435%" y="373" width="0.0216%" height="15" fill="rgb(179,179,51)" fg:x="880" fg:w="1"/><text x="19.2935%" y="383.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (1 samples, 0.02%)</title><rect x="19.0651%" y="517" width="0.0216%" height="15" fill="rgb(84,196,196)" fg:x="881" fg:w="1"/><text x="19.3151%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="19.0651%" y="501" width="0.0216%" height="15" fill="rgb(191,91,0)" fg:x="881" fg:w="1"/><text x="19.3151%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="19.0651%" y="485" width="0.0216%" height="15" fill="rgb(190,90,0)" fg:x="881" fg:w="1"/><text x="19.3151%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="19.0651%" y="469" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="881" fg:w="1"/><text x="19.3151%" y="479.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="19.0651%" y="453" width="0.0216%" height="15" fill="rgb(221,121,0)" fg:x="881" fg:w="1"/><text x="19.3151%" y="463.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="19.0651%" y="437" width="0.0216%" height="15" fill="rgb(203,103,0)" fg:x="881" fg:w="1"/><text x="19.3151%" y="447.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="19.0651%" y="421" width="0.0216%" height="15" fill="rgb(234,134,0)" fg:x="881" fg:w="1"/><text x="19.3151%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="19.0868%" y="517" width="0.0216%" height="15" fill="rgb(249,149,0)" fg:x="882" fg:w="1"/><text x="19.3368%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.0868%" y="501" width="0.0216%" height="15" fill="rgb(206,106,0)" fg:x="882" fg:w="1"/><text x="19.3368%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.0868%" y="485" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="882" fg:w="1"/><text x="19.3368%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.0868%" y="469" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="882" fg:w="1"/><text x="19.3368%" y="479.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.0868%" y="453" width="0.0216%" height="15" fill="rgb(186,186,54)" fg:x="882" fg:w="1"/><text x="19.3368%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.0868%" y="437" width="0.0216%" height="15" fill="rgb(205,205,61)" fg:x="882" fg:w="1"/><text x="19.3368%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="19.1301%" y="453" width="0.0216%" height="15" fill="rgb(243,143,0)" fg:x="884" fg:w="1"/><text x="19.3801%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="19.1301%" y="437" width="0.0216%" height="15" fill="rgb(229,129,0)" fg:x="884" fg:w="1"/><text x="19.3801%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="19.1301%" y="421" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="884" fg:w="1"/><text x="19.3801%" y="431.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="19.1301%" y="405" width="0.0216%" height="15" fill="rgb(177,177,51)" fg:x="884" fg:w="1"/><text x="19.3801%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.1301%" y="389" width="0.0216%" height="15" fill="rgb(229,229,69)" fg:x="884" fg:w="1"/><text x="19.3801%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.1301%" y="373" width="0.0216%" height="15" fill="rgb(204,204,60)" fg:x="884" fg:w="1"/><text x="19.3801%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="19.1084%" y="517" width="0.0649%" height="15" fill="rgb(209,109,0)" fg:x="883" fg:w="3"/><text x="19.3584%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="19.1301%" y="501" width="0.0433%" height="15" fill="rgb(225,125,0)" fg:x="884" fg:w="2"/><text x="19.3801%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="19.1301%" y="485" width="0.0433%" height="15" fill="rgb(217,117,0)" fg:x="884" fg:w="2"/><text x="19.3801%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="19.1301%" y="469" width="0.0433%" height="15" fill="rgb(218,118,0)" fg:x="884" fg:w="2"/><text x="19.3801%" y="479.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.1517%" y="453" width="0.0216%" height="15" fill="rgb(199,199,59)" fg:x="885" fg:w="1"/><text x="19.4017%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.1517%" y="437" width="0.0216%" height="15" fill="rgb(221,221,66)" fg:x="885" fg:w="1"/><text x="19.4017%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.02%)</title><rect x="19.1733%" y="517" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="886" fg:w="1"/><text x="19.4233%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="19.1733%" y="501" width="0.0216%" height="15" fill="rgb(231,131,0)" fg:x="886" fg:w="1"/><text x="19.4233%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="19.1733%" y="485" width="0.0216%" height="15" fill="rgb(193,93,0)" fg:x="886" fg:w="1"/><text x="19.4233%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="19.1733%" y="469" width="0.0216%" height="15" fill="rgb(214,114,0)" fg:x="886" fg:w="1"/><text x="19.4233%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="19.1733%" y="453" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="886" fg:w="1"/><text x="19.4233%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="19.1733%" y="437" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="886" fg:w="1"/><text x="19.4233%" y="447.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="19.1733%" y="421" width="0.0216%" height="15" fill="rgb(215,215,64)" fg:x="886" fg:w="1"/><text x="19.4233%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="19.1950%" y="261" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="887" fg:w="1"/><text x="19.4450%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="19.1950%" y="245" width="0.0216%" height="15" fill="rgb(241,141,0)" fg:x="887" fg:w="1"/><text x="19.4450%" y="255.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="19.1950%" y="229" width="0.0216%" height="15" fill="rgb(217,217,65)" fg:x="887" fg:w="1"/><text x="19.4450%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.1950%" y="213" width="0.0216%" height="15" fill="rgb(208,208,62)" fg:x="887" fg:w="1"/><text x="19.4450%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="19.1950%" y="357" width="0.0433%" height="15" fill="rgb(247,147,0)" fg:x="887" fg:w="2"/><text x="19.4450%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.04%)</title><rect x="19.1950%" y="341" width="0.0433%" height="15" fill="rgb(203,103,0)" fg:x="887" fg:w="2"/><text x="19.4450%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.04%)</title><rect x="19.1950%" y="325" width="0.0433%" height="15" fill="rgb(196,96,0)" fg:x="887" fg:w="2"/><text x="19.4450%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.04%)</title><rect x="19.1950%" y="309" width="0.0433%" height="15" fill="rgb(192,92,0)" fg:x="887" fg:w="2"/><text x="19.4450%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.04%)</title><rect x="19.1950%" y="293" width="0.0433%" height="15" fill="rgb(238,138,0)" fg:x="887" fg:w="2"/><text x="19.4450%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="19.1950%" y="277" width="0.0433%" height="15" fill="rgb(238,138,0)" fg:x="887" fg:w="2"/><text x="19.4450%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="19.2166%" y="261" width="0.0216%" height="15" fill="rgb(210,110,0)" fg:x="888" fg:w="1"/><text x="19.4666%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="19.1950%" y="517" width="0.0649%" height="15" fill="rgb(238,138,0)" fg:x="887" fg:w="3"/><text x="19.4450%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (3 samples, 0.06%)</title><rect x="19.1950%" y="501" width="0.0649%" height="15" fill="rgb(214,114,0)" fg:x="887" fg:w="3"/><text x="19.4450%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (3 samples, 0.06%)</title><rect x="19.1950%" y="485" width="0.0649%" height="15" fill="rgb(249,149,0)" fg:x="887" fg:w="3"/><text x="19.4450%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="19.1950%" y="469" width="0.0649%" height="15" fill="rgb(61,175,175)" fg:x="887" fg:w="3"/><text x="19.4450%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.06%)</title><rect x="19.1950%" y="453" width="0.0649%" height="15" fill="rgb(53,168,168)" fg:x="887" fg:w="3"/><text x="19.4450%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.06%)</title><rect x="19.1950%" y="437" width="0.0649%" height="15" fill="rgb(102,212,212)" fg:x="887" fg:w="3"/><text x="19.4450%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.06%)</title><rect x="19.1950%" y="421" width="0.0649%" height="15" fill="rgb(73,186,186)" fg:x="887" fg:w="3"/><text x="19.4450%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.06%)</title><rect x="19.1950%" y="405" width="0.0649%" height="15" fill="rgb(241,141,0)" fg:x="887" fg:w="3"/><text x="19.4450%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (3 samples, 0.06%)</title><rect x="19.1950%" y="389" width="0.0649%" height="15" fill="rgb(230,130,0)" fg:x="887" fg:w="3"/><text x="19.4450%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.06%)</title><rect x="19.1950%" y="373" width="0.0649%" height="15" fill="rgb(207,107,0)" fg:x="887" fg:w="3"/><text x="19.4450%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="19.2383%" y="357" width="0.0216%" height="15" fill="rgb(220,120,0)" fg:x="889" fg:w="1"/><text x="19.4883%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="19.2383%" y="341" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="889" fg:w="1"/><text x="19.4883%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="19.2383%" y="325" width="0.0216%" height="15" fill="rgb(197,97,0)" fg:x="889" fg:w="1"/><text x="19.4883%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="19.2383%" y="309" width="0.0216%" height="15" fill="rgb(216,116,0)" fg:x="889" fg:w="1"/><text x="19.4883%" y="319.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="19.2383%" y="293" width="0.0216%" height="15" fill="rgb(225,225,68)" fg:x="889" fg:w="1"/><text x="19.4883%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="19.2383%" y="277" width="0.0216%" height="15" fill="rgb(209,109,0)" fg:x="889" fg:w="1"/><text x="19.4883%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (2 samples, 0.04%)</title><rect x="19.2599%" y="405" width="0.0433%" height="15" fill="rgb(87,199,199)" fg:x="890" fg:w="2"/><text x="19.5099%" y="415.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (2 samples, 0.04%)</title><rect x="19.2599%" y="389" width="0.0433%" height="15" fill="rgb(80,192,192)" fg:x="890" fg:w="2"/><text x="19.5099%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="19.2599%" y="373" width="0.0433%" height="15" fill="rgb(51,166,166)" fg:x="890" fg:w="2"/><text x="19.5099%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="19.2599%" y="357" width="0.0433%" height="15" fill="rgb(235,135,0)" fg:x="890" fg:w="2"/><text x="19.5099%" y="367.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="19.2815%" y="341" width="0.0216%" height="15" fill="rgb(210,110,0)" fg:x="891" fg:w="1"/><text x="19.5315%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.11%)</title><rect x="19.2599%" y="501" width="0.1082%" height="15" fill="rgb(80,193,193)" fg:x="890" fg:w="5"/><text x="19.5099%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (5 samples, 0.11%)</title><rect x="19.2599%" y="485" width="0.1082%" height="15" fill="rgb(71,185,185)" fg:x="890" fg:w="5"/><text x="19.5099%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.11%)</title><rect x="19.2599%" y="469" width="0.1082%" height="15" fill="rgb(51,165,165)" fg:x="890" fg:w="5"/><text x="19.5099%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.11%)</title><rect x="19.2599%" y="453" width="0.1082%" height="15" fill="rgb(90,202,202)" fg:x="890" fg:w="5"/><text x="19.5099%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.11%)</title><rect x="19.2599%" y="437" width="0.1082%" height="15" fill="rgb(57,171,171)" fg:x="890" fg:w="5"/><text x="19.5099%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.11%)</title><rect x="19.2599%" y="421" width="0.1082%" height="15" fill="rgb(74,187,187)" fg:x="890" fg:w="5"/><text x="19.5099%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (3 samples, 0.06%)</title><rect x="19.3032%" y="405" width="0.0649%" height="15" fill="rgb(79,192,192)" fg:x="892" fg:w="3"/><text x="19.5532%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (3 samples, 0.06%)</title><rect x="19.3032%" y="389" width="0.0649%" height="15" fill="rgb(50,165,165)" fg:x="892" fg:w="3"/><text x="19.5532%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.06%)</title><rect x="19.3032%" y="373" width="0.0649%" height="15" fill="rgb(104,214,214)" fg:x="892" fg:w="3"/><text x="19.5532%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.06%)</title><rect x="19.3032%" y="357" width="0.0649%" height="15" fill="rgb(105,215,215)" fg:x="892" fg:w="3"/><text x="19.5532%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="19.3032%" y="341" width="0.0649%" height="15" fill="rgb(213,113,0)" fg:x="892" fg:w="3"/><text x="19.5532%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.06%)</title><rect x="19.3032%" y="325" width="0.0649%" height="15" fill="rgb(236,136,0)" fg:x="892" fg:w="3"/><text x="19.5532%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="19.3032%" y="309" width="0.0649%" height="15" fill="rgb(242,142,0)" fg:x="892" fg:w="3"/><text x="19.5532%" y="319.50"></text></g><g><title>malloc (3 samples, 0.06%)</title><rect x="19.3032%" y="293" width="0.0649%" height="15" fill="rgb(189,189,55)" fg:x="892" fg:w="3"/><text x="19.5532%" y="303.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="19.3032%" y="277" width="0.0649%" height="15" fill="rgb(193,193,56)" fg:x="892" fg:w="3"/><text x="19.5532%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="19.3248%" y="261" width="0.0433%" height="15" fill="rgb(200,200,59)" fg:x="893" fg:w="2"/><text x="19.5748%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="19.3248%" y="245" width="0.0433%" height="15" fill="rgb(222,222,67)" fg:x="893" fg:w="2"/><text x="19.5748%" y="255.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::replace (22 samples, 0.48%)</title><rect x="18.9353%" y="549" width="0.4761%" height="15" fill="rgb(90,201,201)" fg:x="875" fg:w="22"/><text x="19.1853%" y="559.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (22 samples, 0.48%)</title><rect x="18.9353%" y="533" width="0.4761%" height="15" fill="rgb(79,192,192)" fg:x="875" fg:w="22"/><text x="19.1853%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.15%)</title><rect x="19.2599%" y="517" width="0.1515%" height="15" fill="rgb(230,130,0)" fg:x="890" fg:w="7"/><text x="19.5099%" y="527.50"></text></g><g><title>std::collections::hash::map::map_entry (2 samples, 0.04%)</title><rect x="19.3681%" y="501" width="0.0433%" height="15" fill="rgb(221,121,0)" fg:x="895" fg:w="2"/><text x="19.6181%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="19.4114%" y="517" width="0.1731%" height="15" fill="rgb(217,117,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.17%)</title><rect x="19.4114%" y="501" width="0.1731%" height="15" fill="rgb(240,140,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.17%)</title><rect x="19.4114%" y="485" width="0.1731%" height="15" fill="rgb(211,111,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.17%)</title><rect x="19.4114%" y="469" width="0.1731%" height="15" fill="rgb(67,181,181)" fg:x="897" fg:w="8"/><text x="19.6614%" y="479.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="19.4114%" y="453" width="0.1731%" height="15" fill="rgb(74,187,187)" fg:x="897" fg:w="8"/><text x="19.6614%" y="463.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="19.4114%" y="437" width="0.1731%" height="15" fill="rgb(89,200,200)" fg:x="897" fg:w="8"/><text x="19.6614%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="19.4114%" y="421" width="0.1731%" height="15" fill="rgb(205,105,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.17%)</title><rect x="19.4114%" y="405" width="0.1731%" height="15" fill="rgb(240,140,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.17%)</title><rect x="19.4114%" y="389" width="0.1731%" height="15" fill="rgb(237,137,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.17%)</title><rect x="19.4114%" y="373" width="0.1731%" height="15" fill="rgb(69,182,182)" fg:x="897" fg:w="8"/><text x="19.6614%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.17%)</title><rect x="19.4114%" y="357" width="0.1731%" height="15" fill="rgb(247,147,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.17%)</title><rect x="19.4114%" y="341" width="0.1731%" height="15" fill="rgb(245,145,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.17%)</title><rect x="19.4114%" y="325" width="0.1731%" height="15" fill="rgb(218,118,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.17%)</title><rect x="19.4114%" y="309" width="0.1731%" height="15" fill="rgb(225,125,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.17%)</title><rect x="19.4114%" y="293" width="0.1731%" height="15" fill="rgb(242,142,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="303.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.17%)</title><rect x="19.4114%" y="277" width="0.1731%" height="15" fill="rgb(228,128,0)" fg:x="897" fg:w="8"/><text x="19.6614%" y="287.50"></text></g><g><title>malloc (8 samples, 0.17%)</title><rect x="19.4114%" y="261" width="0.1731%" height="15" fill="rgb(226,226,68)" fg:x="897" fg:w="8"/><text x="19.6614%" y="271.50"></text></g><g><title>[libc.so.6] (8 samples, 0.17%)</title><rect x="19.4114%" y="245" width="0.1731%" height="15" fill="rgb(202,202,60)" fg:x="897" fg:w="8"/><text x="19.6614%" y="255.50"></text></g><g><title>[libc.so.6] (6 samples, 0.13%)</title><rect x="19.4547%" y="229" width="0.1298%" height="15" fill="rgb(229,229,69)" fg:x="899" fg:w="6"/><text x="19.7047%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.5629%" y="213" width="0.0216%" height="15" fill="rgb(205,205,60)" fg:x="904" fg:w="1"/><text x="19.8129%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="19.5845%" y="277" width="0.1298%" height="15" fill="rgb(208,108,0)" fg:x="905" fg:w="6"/><text x="19.8345%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="19.5845%" y="261" width="0.1298%" height="15" fill="rgb(217,117,0)" fg:x="905" fg:w="6"/><text x="19.8345%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.13%)</title><rect x="19.5845%" y="245" width="0.1298%" height="15" fill="rgb(250,150,0)" fg:x="905" fg:w="6"/><text x="19.8345%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.13%)</title><rect x="19.5845%" y="229" width="0.1298%" height="15" fill="rgb(238,138,0)" fg:x="905" fg:w="6"/><text x="19.8345%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.13%)</title><rect x="19.5845%" y="213" width="0.1298%" height="15" fill="rgb(199,99,0)" fg:x="905" fg:w="6"/><text x="19.8345%" y="223.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.13%)</title><rect x="19.5845%" y="197" width="0.1298%" height="15" fill="rgb(238,138,0)" fg:x="905" fg:w="6"/><text x="19.8345%" y="207.50"></text></g><g><title>malloc (6 samples, 0.13%)</title><rect x="19.5845%" y="181" width="0.1298%" height="15" fill="rgb(183,183,53)" fg:x="905" fg:w="6"/><text x="19.8345%" y="191.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="19.6278%" y="165" width="0.0866%" height="15" fill="rgb(177,177,50)" fg:x="907" fg:w="4"/><text x="19.8778%" y="175.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (7 samples, 0.15%)</title><rect x="19.5845%" y="357" width="0.1515%" height="15" fill="rgb(107,217,217)" fg:x="905" fg:w="7"/><text x="19.8345%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.15%)</title><rect x="19.5845%" y="341" width="0.1515%" height="15" fill="rgb(223,123,0)" fg:x="905" fg:w="7"/><text x="19.8345%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.15%)</title><rect x="19.5845%" y="325" width="0.1515%" height="15" fill="rgb(217,117,0)" fg:x="905" fg:w="7"/><text x="19.8345%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.15%)</title><rect x="19.5845%" y="309" width="0.1515%" height="15" fill="rgb(206,106,0)" fg:x="905" fg:w="7"/><text x="19.8345%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.15%)</title><rect x="19.5845%" y="293" width="0.1515%" height="15" fill="rgb(74,187,187)" fg:x="905" fg:w="7"/><text x="19.8345%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="19.7143%" y="277" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="911" fg:w="1"/><text x="19.9643%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="19.7143%" y="261" width="0.0216%" height="15" fill="rgb(224,124,0)" fg:x="911" fg:w="1"/><text x="19.9643%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.7143%" y="245" width="0.0216%" height="15" fill="rgb(186,186,54)" fg:x="911" fg:w="1"/><text x="19.9643%" y="255.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (16 samples, 0.35%)</title><rect x="19.4114%" y="533" width="0.3462%" height="15" fill="rgb(106,216,216)" fg:x="897" fg:w="16"/><text x="19.6614%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="19.5845%" y="517" width="0.1731%" height="15" fill="rgb(197,97,0)" fg:x="905" fg:w="8"/><text x="19.8345%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="19.5845%" y="501" width="0.1731%" height="15" fill="rgb(62,176,176)" fg:x="905" fg:w="8"/><text x="19.8345%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="19.5845%" y="485" width="0.1731%" height="15" fill="rgb(92,203,203)" fg:x="905" fg:w="8"/><text x="19.8345%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (8 samples, 0.17%)</title><rect x="19.5845%" y="469" width="0.1731%" height="15" fill="rgb(67,181,181)" fg:x="905" fg:w="8"/><text x="19.8345%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (8 samples, 0.17%)</title><rect x="19.5845%" y="453" width="0.1731%" height="15" fill="rgb(97,208,208)" fg:x="905" fg:w="8"/><text x="19.8345%" y="463.50"></text></g><g><title>core::clone::Clone::clone (8 samples, 0.17%)</title><rect x="19.5845%" y="437" width="0.1731%" height="15" fill="rgb(225,125,0)" fg:x="905" fg:w="8"/><text x="19.8345%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="19.5845%" y="421" width="0.1731%" height="15" fill="rgb(247,147,0)" fg:x="905" fg:w="8"/><text x="19.8345%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.17%)</title><rect x="19.5845%" y="405" width="0.1731%" height="15" fill="rgb(229,129,0)" fg:x="905" fg:w="8"/><text x="19.8345%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.17%)</title><rect x="19.5845%" y="389" width="0.1731%" height="15" fill="rgb(234,134,0)" fg:x="905" fg:w="8"/><text x="19.8345%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.17%)</title><rect x="19.5845%" y="373" width="0.1731%" height="15" fill="rgb(104,215,215)" fg:x="905" fg:w="8"/><text x="19.8345%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.7360%" y="357" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="912" fg:w="1"/><text x="19.9860%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.7360%" y="341" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="912" fg:w="1"/><text x="19.9860%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="19.7360%" y="325" width="0.0216%" height="15" fill="rgb(210,110,0)" fg:x="912" fg:w="1"/><text x="19.9860%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.7360%" y="309" width="0.0216%" height="15" fill="rgb(235,135,0)" fg:x="912" fg:w="1"/><text x="19.9860%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.7360%" y="293" width="0.0216%" height="15" fill="rgb(201,101,0)" fg:x="912" fg:w="1"/><text x="19.9860%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.7360%" y="277" width="0.0216%" height="15" fill="rgb(244,144,0)" fg:x="912" fg:w="1"/><text x="19.9860%" y="287.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.7360%" y="261" width="0.0216%" height="15" fill="rgb(179,179,51)" fg:x="912" fg:w="1"/><text x="19.9860%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.7360%" y="245" width="0.0216%" height="15" fill="rgb(195,195,57)" fg:x="912" fg:w="1"/><text x="19.9860%" y="255.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="19.7576%" y="517" width="0.0433%" height="15" fill="rgb(66,180,180)" fg:x="913" fg:w="2"/><text x="20.0076%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="19.7576%" y="501" width="0.0433%" height="15" fill="rgb(206,106,0)" fg:x="913" fg:w="2"/><text x="20.0076%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="19.7576%" y="485" width="0.0433%" height="15" fill="rgb(218,118,0)" fg:x="913" fg:w="2"/><text x="20.0076%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="19.7576%" y="469" width="0.0433%" height="15" fill="rgb(201,101,0)" fg:x="913" fg:w="2"/><text x="20.0076%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="19.7576%" y="453" width="0.0433%" height="15" fill="rgb(102,213,213)" fg:x="913" fg:w="2"/><text x="20.0076%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.7793%" y="437" width="0.0216%" height="15" fill="rgb(199,99,0)" fg:x="914" fg:w="1"/><text x="20.0293%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.7793%" y="421" width="0.0216%" height="15" fill="rgb(199,99,0)" fg:x="914" fg:w="1"/><text x="20.0293%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="19.7793%" y="405" width="0.0216%" height="15" fill="rgb(246,146,0)" fg:x="914" fg:w="1"/><text x="20.0293%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.7793%" y="389" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="914" fg:w="1"/><text x="20.0293%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.7793%" y="373" width="0.0216%" height="15" fill="rgb(190,90,0)" fg:x="914" fg:w="1"/><text x="20.0293%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.7793%" y="357" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="914" fg:w="1"/><text x="20.0293%" y="367.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="19.7793%" y="341" width="0.0216%" height="15" fill="rgb(196,196,57)" fg:x="914" fg:w="1"/><text x="20.0293%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.7793%" y="325" width="0.0216%" height="15" fill="rgb(205,205,61)" fg:x="914" fg:w="1"/><text x="20.0293%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.8442%" y="277" width="0.0216%" height="15" fill="rgb(231,131,0)" fg:x="917" fg:w="1"/><text x="20.0942%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="19.8442%" y="261" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="917" fg:w="1"/><text x="20.0942%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="19.8442%" y="245" width="0.0216%" height="15" fill="rgb(215,115,0)" fg:x="917" fg:w="1"/><text x="20.0942%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="19.8442%" y="229" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="917" fg:w="1"/><text x="20.0942%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="19.8442%" y="213" width="0.0216%" height="15" fill="rgb(208,108,0)" fg:x="917" fg:w="1"/><text x="20.0942%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="19.8442%" y="197" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="917" fg:w="1"/><text x="20.0942%" y="207.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="19.8442%" y="181" width="0.0216%" height="15" fill="rgb(205,205,60)" fg:x="917" fg:w="1"/><text x="20.0942%" y="191.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.04%)</title><rect x="19.8442%" y="437" width="0.0433%" height="15" fill="rgb(239,139,0)" fg:x="917" fg:w="2"/><text x="20.0942%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="19.8442%" y="421" width="0.0433%" height="15" fill="rgb(191,91,0)" fg:x="917" fg:w="2"/><text x="20.0942%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="19.8442%" y="405" width="0.0433%" height="15" fill="rgb(203,103,0)" fg:x="917" fg:w="2"/><text x="20.0942%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="19.8442%" y="389" width="0.0433%" height="15" fill="rgb(250,150,0)" fg:x="917" fg:w="2"/><text x="20.0942%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="19.8442%" y="373" width="0.0433%" height="15" fill="rgb(77,190,190)" fg:x="917" fg:w="2"/><text x="20.0942%" y="383.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="19.8442%" y="357" width="0.0433%" height="15" fill="rgb(91,203,203)" fg:x="917" fg:w="2"/><text x="20.0942%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="19.8442%" y="341" width="0.0433%" height="15" fill="rgb(248,148,0)" fg:x="917" fg:w="2"/><text x="20.0942%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="19.8442%" y="325" width="0.0433%" height="15" fill="rgb(201,101,0)" fg:x="917" fg:w="2"/><text x="20.0942%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="19.8442%" y="309" width="0.0433%" height="15" fill="rgb(206,106,0)" fg:x="917" fg:w="2"/><text x="20.0942%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="19.8442%" y="293" width="0.0433%" height="15" fill="rgb(102,213,213)" fg:x="917" fg:w="2"/><text x="20.0942%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="19.8658%" y="277" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="918" fg:w="1"/><text x="20.1158%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="19.8658%" y="261" width="0.0216%" height="15" fill="rgb(249,149,0)" fg:x="918" fg:w="1"/><text x="20.1158%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="19.8658%" y="245" width="0.0216%" height="15" fill="rgb(200,200,59)" fg:x="918" fg:w="1"/><text x="20.1158%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3 samples, 0.06%)</title><rect x="19.8442%" y="469" width="0.0649%" height="15" fill="rgb(69,182,182)" fg:x="917" fg:w="3"/><text x="20.0942%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3 samples, 0.06%)</title><rect x="19.8442%" y="453" width="0.0649%" height="15" fill="rgb(106,217,217)" fg:x="917" fg:w="3"/><text x="20.0942%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="19.8875%" y="437" width="0.0216%" height="15" fill="rgb(93,204,204)" fg:x="919" fg:w="1"/><text x="20.1375%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="19.8875%" y="421" width="0.0216%" height="15" fill="rgb(215,115,0)" fg:x="919" fg:w="1"/><text x="20.1375%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="19.8875%" y="405" width="0.0216%" height="15" fill="rgb(226,126,0)" fg:x="919" fg:w="1"/><text x="20.1375%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.13%)</title><rect x="19.8009%" y="517" width="0.1298%" height="15" fill="rgb(245,145,0)" fg:x="915" fg:w="6"/><text x="20.0509%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.13%)</title><rect x="19.8009%" y="501" width="0.1298%" height="15" fill="rgb(87,199,199)" fg:x="915" fg:w="6"/><text x="20.0509%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.09%)</title><rect x="19.8442%" y="485" width="0.0866%" height="15" fill="rgb(78,191,191)" fg:x="917" fg:w="4"/><text x="20.0942%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1 samples, 0.02%)</title><rect x="19.9091%" y="469" width="0.0216%" height="15" fill="rgb(82,194,194)" fg:x="920" fg:w="1"/><text x="20.1591%" y="479.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="19.9308%" y="421" width="0.0216%" height="15" fill="rgb(203,103,0)" fg:x="921" fg:w="1"/><text x="20.1808%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="19.9308%" y="405" width="0.0216%" height="15" fill="rgb(242,142,0)" fg:x="921" fg:w="1"/><text x="20.1808%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="19.9308%" y="389" width="0.0216%" height="15" fill="rgb(190,90,0)" fg:x="921" fg:w="1"/><text x="20.1808%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.04%)</title><rect x="19.9524%" y="389" width="0.0433%" height="15" fill="rgb(223,123,0)" fg:x="922" fg:w="2"/><text x="20.2024%" y="399.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.04%)</title><rect x="19.9524%" y="373" width="0.0433%" height="15" fill="rgb(216,116,0)" fg:x="922" fg:w="2"/><text x="20.2024%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.04%)</title><rect x="19.9524%" y="357" width="0.0433%" height="15" fill="rgb(203,103,0)" fg:x="922" fg:w="2"/><text x="20.2024%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="19.9524%" y="341" width="0.0433%" height="15" fill="rgb(221,121,0)" fg:x="922" fg:w="2"/><text x="20.2024%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="19.9524%" y="325" width="0.0433%" height="15" fill="rgb(226,126,0)" fg:x="922" fg:w="2"/><text x="20.2024%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="19.9524%" y="309" width="0.0433%" height="15" fill="rgb(235,135,0)" fg:x="922" fg:w="2"/><text x="20.2024%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.04%)</title><rect x="19.9524%" y="293" width="0.0433%" height="15" fill="rgb(193,93,0)" fg:x="922" fg:w="2"/><text x="20.2024%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="19.9740%" y="277" width="0.0216%" height="15" fill="rgb(252,152,0)" fg:x="923" fg:w="1"/><text x="20.2240%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (4 samples, 0.09%)</title><rect x="19.9308%" y="517" width="0.0866%" height="15" fill="rgb(248,148,0)" fg:x="921" fg:w="4"/><text x="20.1808%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.09%)</title><rect x="19.9308%" y="501" width="0.0866%" height="15" fill="rgb(239,139,0)" fg:x="921" fg:w="4"/><text x="20.1808%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.09%)</title><rect x="19.9308%" y="485" width="0.0866%" height="15" fill="rgb(63,177,177)" fg:x="921" fg:w="4"/><text x="20.1808%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.09%)</title><rect x="19.9308%" y="469" width="0.0866%" height="15" fill="rgb(86,198,198)" fg:x="921" fg:w="4"/><text x="20.1808%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.09%)</title><rect x="19.9308%" y="453" width="0.0866%" height="15" fill="rgb(55,170,170)" fg:x="921" fg:w="4"/><text x="20.1808%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.09%)</title><rect x="19.9308%" y="437" width="0.0866%" height="15" fill="rgb(207,107,0)" fg:x="921" fg:w="4"/><text x="20.1808%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.06%)</title><rect x="19.9524%" y="421" width="0.0649%" height="15" fill="rgb(254,154,0)" fg:x="922" fg:w="3"/><text x="20.2024%" y="431.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (3 samples, 0.06%)</title><rect x="19.9524%" y="405" width="0.0649%" height="15" fill="rgb(107,217,217)" fg:x="922" fg:w="3"/><text x="20.2024%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="19.9957%" y="389" width="0.0216%" height="15" fill="rgb(239,139,0)" fg:x="924" fg:w="1"/><text x="20.2457%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="19.9957%" y="373" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="924" fg:w="1"/><text x="20.2457%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.9957%" y="357" width="0.0216%" height="15" fill="rgb(245,145,0)" fg:x="924" fg:w="1"/><text x="20.2457%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.9957%" y="341" width="0.0216%" height="15" fill="rgb(244,144,0)" fg:x="924" fg:w="1"/><text x="20.2457%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.9957%" y="325" width="0.0216%" height="15" fill="rgb(225,125,0)" fg:x="924" fg:w="1"/><text x="20.2457%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="19.9957%" y="309" width="0.0216%" height="15" fill="rgb(199,99,0)" fg:x="924" fg:w="1"/><text x="20.2457%" y="319.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="20.0173%" y="389" width="0.0216%" height="15" fill="rgb(225,225,68)" fg:x="925" fg:w="1"/><text x="20.2673%" y="399.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (3 samples, 0.06%)</title><rect x="20.0173%" y="517" width="0.0649%" height="15" fill="rgb(52,167,167)" fg:x="925" fg:w="3"/><text x="20.2673%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="20.0173%" y="501" width="0.0649%" height="15" fill="rgb(218,118,0)" fg:x="925" fg:w="3"/><text x="20.2673%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="20.0173%" y="485" width="0.0649%" height="15" fill="rgb(217,117,0)" fg:x="925" fg:w="3"/><text x="20.2673%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="20.0173%" y="469" width="0.0649%" height="15" fill="rgb(220,120,0)" fg:x="925" fg:w="3"/><text x="20.2673%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="20.0173%" y="453" width="0.0649%" height="15" fill="rgb(243,143,0)" fg:x="925" fg:w="3"/><text x="20.2673%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.06%)</title><rect x="20.0173%" y="437" width="0.0649%" height="15" fill="rgb(238,138,0)" fg:x="925" fg:w="3"/><text x="20.2673%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.06%)</title><rect x="20.0173%" y="421" width="0.0649%" height="15" fill="rgb(207,107,0)" fg:x="925" fg:w="3"/><text x="20.2673%" y="431.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.06%)</title><rect x="20.0173%" y="405" width="0.0649%" height="15" fill="rgb(222,122,0)" fg:x="925" fg:w="3"/><text x="20.2673%" y="415.50"></text></g><g><title>realloc (2 samples, 0.04%)</title><rect x="20.0390%" y="389" width="0.0433%" height="15" fill="rgb(203,203,60)" fg:x="926" fg:w="2"/><text x="20.2890%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="20.0390%" y="373" width="0.0433%" height="15" fill="rgb(203,203,60)" fg:x="926" fg:w="2"/><text x="20.2890%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="20.0390%" y="357" width="0.0433%" height="15" fill="rgb(217,217,65)" fg:x="926" fg:w="2"/><text x="20.2890%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.09%)</title><rect x="20.0822%" y="517" width="0.0866%" height="15" fill="rgb(249,149,0)" fg:x="928" fg:w="4"/><text x="20.3322%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.09%)</title><rect x="20.0822%" y="501" width="0.0866%" height="15" fill="rgb(208,108,0)" fg:x="928" fg:w="4"/><text x="20.3322%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.09%)</title><rect x="20.0822%" y="485" width="0.0866%" height="15" fill="rgb(252,152,0)" fg:x="928" fg:w="4"/><text x="20.3322%" y="495.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.09%)</title><rect x="20.0822%" y="469" width="0.0866%" height="15" fill="rgb(228,128,0)" fg:x="928" fg:w="4"/><text x="20.3322%" y="479.50"></text></g><g><title>malloc (3 samples, 0.06%)</title><rect x="20.1039%" y="453" width="0.0649%" height="15" fill="rgb(199,199,58)" fg:x="929" fg:w="3"/><text x="20.3539%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="20.1255%" y="437" width="0.0433%" height="15" fill="rgb(200,200,59)" fg:x="930" fg:w="2"/><text x="20.3755%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="20.1688%" y="453" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="932" fg:w="1"/><text x="20.4188%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="20.1688%" y="437" width="0.0216%" height="15" fill="rgb(231,131,0)" fg:x="932" fg:w="1"/><text x="20.4188%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="20.1688%" y="421" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="932" fg:w="1"/><text x="20.4188%" y="431.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="20.1688%" y="405" width="0.0216%" height="15" fill="rgb(207,207,61)" fg:x="932" fg:w="1"/><text x="20.4188%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.1688%" y="389" width="0.0216%" height="15" fill="rgb(221,221,66)" fg:x="932" fg:w="1"/><text x="20.4188%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.1688%" y="373" width="0.0216%" height="15" fill="rgb(206,206,61)" fg:x="932" fg:w="1"/><text x="20.4188%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.11%)</title><rect x="20.1688%" y="517" width="0.1082%" height="15" fill="rgb(218,118,0)" fg:x="932" fg:w="5"/><text x="20.4188%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.11%)</title><rect x="20.1688%" y="501" width="0.1082%" height="15" fill="rgb(242,142,0)" fg:x="932" fg:w="5"/><text x="20.4188%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.11%)</title><rect x="20.1688%" y="485" width="0.1082%" height="15" fill="rgb(229,129,0)" fg:x="932" fg:w="5"/><text x="20.4188%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.11%)</title><rect x="20.1688%" y="469" width="0.1082%" height="15" fill="rgb(250,150,0)" fg:x="932" fg:w="5"/><text x="20.4188%" y="479.50"></text></g><g><title>malloc (4 samples, 0.09%)</title><rect x="20.1904%" y="453" width="0.0866%" height="15" fill="rgb(197,197,58)" fg:x="933" fg:w="4"/><text x="20.4404%" y="463.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="20.1904%" y="437" width="0.0866%" height="15" fill="rgb(218,218,65)" fg:x="933" fg:w="4"/><text x="20.4404%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.11%)</title><rect x="20.2770%" y="261" width="0.1082%" height="15" fill="rgb(242,142,0)" fg:x="937" fg:w="5"/><text x="20.5270%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.11%)</title><rect x="20.2770%" y="245" width="0.1082%" height="15" fill="rgb(251,151,0)" fg:x="937" fg:w="5"/><text x="20.5270%" y="255.50"></text></g><g><title>cfree (5 samples, 0.11%)</title><rect x="20.2770%" y="229" width="0.1082%" height="15" fill="rgb(217,217,65)" fg:x="937" fg:w="5"/><text x="20.5270%" y="239.50"></text></g><g><title>[libc.so.6] (5 samples, 0.11%)</title><rect x="20.2770%" y="213" width="0.1082%" height="15" fill="rgb(177,177,50)" fg:x="937" fg:w="5"/><text x="20.5270%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="20.2770%" y="357" width="0.1298%" height="15" fill="rgb(204,104,0)" fg:x="937" fg:w="6"/><text x="20.5270%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (6 samples, 0.13%)</title><rect x="20.2770%" y="341" width="0.1298%" height="15" fill="rgb(225,125,0)" fg:x="937" fg:w="6"/><text x="20.5270%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (6 samples, 0.13%)</title><rect x="20.2770%" y="325" width="0.1298%" height="15" fill="rgb(247,147,0)" fg:x="937" fg:w="6"/><text x="20.5270%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.13%)</title><rect x="20.2770%" y="309" width="0.1298%" height="15" fill="rgb(245,145,0)" fg:x="937" fg:w="6"/><text x="20.5270%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (6 samples, 0.13%)</title><rect x="20.2770%" y="293" width="0.1298%" height="15" fill="rgb(224,124,0)" fg:x="937" fg:w="6"/><text x="20.5270%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="20.2770%" y="277" width="0.1298%" height="15" fill="rgb(246,146,0)" fg:x="937" fg:w="6"/><text x="20.5270%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="20.3852%" y="261" width="0.0216%" height="15" fill="rgb(207,107,0)" fg:x="942" fg:w="1"/><text x="20.6352%" y="271.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="20.4068%" y="293" width="0.0216%" height="15" fill="rgb(183,183,53)" fg:x="943" fg:w="1"/><text x="20.6568%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (8 samples, 0.17%)</title><rect x="20.2770%" y="437" width="0.1731%" height="15" fill="rgb(67,180,180)" fg:x="937" fg:w="8"/><text x="20.5270%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (8 samples, 0.17%)</title><rect x="20.2770%" y="421" width="0.1731%" height="15" fill="rgb(91,202,202)" fg:x="937" fg:w="8"/><text x="20.5270%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (8 samples, 0.17%)</title><rect x="20.2770%" y="405" width="0.1731%" height="15" fill="rgb(190,90,0)" fg:x="937" fg:w="8"/><text x="20.5270%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (8 samples, 0.17%)</title><rect x="20.2770%" y="389" width="0.1731%" height="15" fill="rgb(230,130,0)" fg:x="937" fg:w="8"/><text x="20.5270%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (8 samples, 0.17%)</title><rect x="20.2770%" y="373" width="0.1731%" height="15" fill="rgb(197,97,0)" fg:x="937" fg:w="8"/><text x="20.5270%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.04%)</title><rect x="20.4068%" y="357" width="0.0433%" height="15" fill="rgb(233,133,0)" fg:x="943" fg:w="2"/><text x="20.6568%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="20.4068%" y="341" width="0.0433%" height="15" fill="rgb(211,111,0)" fg:x="943" fg:w="2"/><text x="20.6568%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="20.4068%" y="325" width="0.0433%" height="15" fill="rgb(191,91,0)" fg:x="943" fg:w="2"/><text x="20.6568%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="20.4068%" y="309" width="0.0433%" height="15" fill="rgb(254,154,0)" fg:x="943" fg:w="2"/><text x="20.6568%" y="319.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="20.4285%" y="293" width="0.0216%" height="15" fill="rgb(224,224,68)" fg:x="944" fg:w="1"/><text x="20.6785%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.4285%" y="277" width="0.0216%" height="15" fill="rgb(202,202,60)" fg:x="944" fg:w="1"/><text x="20.6785%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (9 samples, 0.19%)</title><rect x="20.2770%" y="517" width="0.1948%" height="15" fill="rgb(244,144,0)" fg:x="937" fg:w="9"/><text x="20.5270%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (9 samples, 0.19%)</title><rect x="20.2770%" y="501" width="0.1948%" height="15" fill="rgb(254,154,0)" fg:x="937" fg:w="9"/><text x="20.5270%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (9 samples, 0.19%)</title><rect x="20.2770%" y="485" width="0.1948%" height="15" fill="rgb(212,112,0)" fg:x="937" fg:w="9"/><text x="20.5270%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.19%)</title><rect x="20.2770%" y="469" width="0.1948%" height="15" fill="rgb(109,219,219)" fg:x="937" fg:w="9"/><text x="20.5270%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (9 samples, 0.19%)</title><rect x="20.2770%" y="453" width="0.1948%" height="15" fill="rgb(100,211,211)" fg:x="937" fg:w="9"/><text x="20.5270%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.02%)</title><rect x="20.4501%" y="437" width="0.0216%" height="15" fill="rgb(102,213,213)" fg:x="945" fg:w="1"/><text x="20.7001%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="20.4501%" y="421" width="0.0216%" height="15" fill="rgb(226,126,0)" fg:x="945" fg:w="1"/><text x="20.7001%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="20.4501%" y="405" width="0.0216%" height="15" fill="rgb(247,147,0)" fg:x="945" fg:w="1"/><text x="20.7001%" y="415.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="20.4501%" y="389" width="0.0216%" height="15" fill="rgb(200,200,59)" fg:x="945" fg:w="1"/><text x="20.7001%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.4501%" y="373" width="0.0216%" height="15" fill="rgb(177,177,50)" fg:x="945" fg:w="1"/><text x="20.7001%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::FullBucketsIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.4934%" y="405" width="0.0216%" height="15" fill="rgb(106,216,216)" fg:x="947" fg:w="1"/><text x="20.7434%" y="415.50"></text></g><g><title>hashbrown::raw::FullBucketsIndices::next_impl (1 samples, 0.02%)</title><rect x="20.4934%" y="389" width="0.0216%" height="15" fill="rgb(102,212,212)" fg:x="947" fg:w="1"/><text x="20.7434%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.4934%" y="373" width="0.0216%" height="15" fill="rgb(72,185,185)" fg:x="947" fg:w="1"/><text x="20.7434%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.02%)</title><rect x="20.5150%" y="405" width="0.0216%" height="15" fill="rgb(78,190,190)" fg:x="948" fg:w="1"/><text x="20.7650%" y="415.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.02%)</title><rect x="20.5150%" y="389" width="0.0216%" height="15" fill="rgb(104,215,215)" fg:x="948" fg:w="1"/><text x="20.7650%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="20.5150%" y="373" width="0.0216%" height="15" fill="rgb(53,168,168)" fg:x="948" fg:w="1"/><text x="20.7650%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="20.5150%" y="357" width="0.0216%" height="15" fill="rgb(207,107,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="20.5150%" y="341" width="0.0216%" height="15" fill="rgb(238,138,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="351.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="20.5150%" y="325" width="0.0216%" height="15" fill="rgb(102,213,213)" fg:x="948" fg:w="1"/><text x="20.7650%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="20.5150%" y="309" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="319.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="20.5150%" y="293" width="0.0216%" height="15" fill="rgb(198,98,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="20.5150%" y="277" width="0.0216%" height="15" fill="rgb(194,94,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.5150%" y="261" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.5150%" y="245" width="0.0216%" height="15" fill="rgb(252,152,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.5150%" y="229" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="20.5150%" y="213" width="0.0216%" height="15" fill="rgb(227,127,0)" fg:x="948" fg:w="1"/><text x="20.7650%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket_ptr (1 samples, 0.02%)</title><rect x="20.5367%" y="405" width="0.0216%" height="15" fill="rgb(64,178,178)" fg:x="949" fg:w="1"/><text x="20.7867%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (4 samples, 0.09%)</title><rect x="20.4934%" y="485" width="0.0866%" height="15" fill="rgb(95,206,206)" fg:x="947" fg:w="4"/><text x="20.7434%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.09%)</title><rect x="20.4934%" y="469" width="0.0866%" height="15" fill="rgb(99,210,210)" fg:x="947" fg:w="4"/><text x="20.7434%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.09%)</title><rect x="20.4934%" y="453" width="0.0866%" height="15" fill="rgb(76,189,189)" fg:x="947" fg:w="4"/><text x="20.7434%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4 samples, 0.09%)</title><rect x="20.4934%" y="437" width="0.0866%" height="15" fill="rgb(99,210,210)" fg:x="947" fg:w="4"/><text x="20.7434%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4 samples, 0.09%)</title><rect x="20.4934%" y="421" width="0.0866%" height="15" fill="rgb(109,219,219)" fg:x="947" fg:w="4"/><text x="20.7434%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.02%)</title><rect x="20.5583%" y="405" width="0.0216%" height="15" fill="rgb(59,173,173)" fg:x="950" fg:w="1"/><text x="20.8083%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.02%)</title><rect x="20.5583%" y="389" width="0.0216%" height="15" fill="rgb(77,190,190)" fg:x="950" fg:w="1"/><text x="20.8083%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.02%)</title><rect x="20.5583%" y="373" width="0.0216%" height="15" fill="rgb(73,186,186)" fg:x="950" fg:w="1"/><text x="20.8083%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="20.5583%" y="357" width="0.0216%" height="15" fill="rgb(52,167,167)" fg:x="950" fg:w="1"/><text x="20.8083%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="20.5583%" y="341" width="0.0216%" height="15" fill="rgb(228,128,0)" fg:x="950" fg:w="1"/><text x="20.8083%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="20.5583%" y="325" width="0.0216%" height="15" fill="rgb(252,152,0)" fg:x="950" fg:w="1"/><text x="20.8083%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="20.5583%" y="309" width="0.0216%" height="15" fill="rgb(217,117,0)" fg:x="950" fg:w="1"/><text x="20.8083%" y="319.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="20.5583%" y="293" width="0.0216%" height="15" fill="rgb(229,229,69)" fg:x="950" fg:w="1"/><text x="20.8083%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.5583%" y="277" width="0.0216%" height="15" fill="rgb(190,190,55)" fg:x="950" fg:w="1"/><text x="20.8083%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.5583%" y="261" width="0.0216%" height="15" fill="rgb(207,207,61)" fg:x="950" fg:w="1"/><text x="20.8083%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.04%)</title><rect x="20.5800%" y="453" width="0.0433%" height="15" fill="rgb(240,140,0)" fg:x="951" fg:w="2"/><text x="20.8300%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.04%)</title><rect x="20.5800%" y="437" width="0.0433%" height="15" fill="rgb(235,135,0)" fg:x="951" fg:w="2"/><text x="20.8300%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.04%)</title><rect x="20.5800%" y="421" width="0.0433%" height="15" fill="rgb(214,114,0)" fg:x="951" fg:w="2"/><text x="20.8300%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="20.6016%" y="405" width="0.0216%" height="15" fill="rgb(225,125,0)" fg:x="952" fg:w="1"/><text x="20.8516%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="20.6016%" y="389" width="0.0216%" height="15" fill="rgb(206,106,0)" fg:x="952" fg:w="1"/><text x="20.8516%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.06%)</title><rect x="20.5800%" y="485" width="0.0649%" height="15" fill="rgb(103,213,213)" fg:x="951" fg:w="3"/><text x="20.8300%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.06%)</title><rect x="20.5800%" y="469" width="0.0649%" height="15" fill="rgb(206,106,0)" fg:x="951" fg:w="3"/><text x="20.8300%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="20.6232%" y="453" width="0.0216%" height="15" fill="rgb(244,144,0)" fg:x="953" fg:w="1"/><text x="20.8732%" y="463.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="20.6232%" y="437" width="0.0216%" height="15" fill="rgb(54,168,168)" fg:x="953" fg:w="1"/><text x="20.8732%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.02%)</title><rect x="20.6232%" y="421" width="0.0216%" height="15" fill="rgb(190,90,0)" fg:x="953" fg:w="1"/><text x="20.8732%" y="431.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.02%)</title><rect x="20.6232%" y="405" width="0.0216%" height="15" fill="rgb(226,126,0)" fg:x="953" fg:w="1"/><text x="20.8732%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="20.6232%" y="389" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="953" fg:w="1"/><text x="20.8732%" y="399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.6232%" y="373" width="0.0216%" height="15" fill="rgb(203,103,0)" fg:x="953" fg:w="1"/><text x="20.8732%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.6232%" y="357" width="0.0216%" height="15" fill="rgb(241,141,0)" fg:x="953" fg:w="1"/><text x="20.8732%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.6232%" y="341" width="0.0216%" height="15" fill="rgb(251,151,0)" fg:x="953" fg:w="1"/><text x="20.8732%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="20.6232%" y="325" width="0.0216%" height="15" fill="rgb(207,107,0)" fg:x="953" fg:w="1"/><text x="20.8732%" y="335.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (42 samples, 0.91%)</title><rect x="19.7576%" y="533" width="0.9089%" height="15" fill="rgb(104,215,215)" fg:x="913" fg:w="42"/><text x="20.0076%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (9 samples, 0.19%)</title><rect x="20.4718%" y="517" width="0.1948%" height="15" fill="rgb(212,112,0)" fg:x="946" fg:w="9"/><text x="20.7218%" y="527.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.19%)</title><rect x="20.4718%" y="501" width="0.1948%" height="15" fill="rgb(76,189,189)" fg:x="946" fg:w="9"/><text x="20.7218%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="20.6449%" y="485" width="0.0216%" height="15" fill="rgb(101,212,212)" fg:x="954" fg:w="1"/><text x="20.8949%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="20.6449%" y="469" width="0.0216%" height="15" fill="rgb(75,188,188)" fg:x="954" fg:w="1"/><text x="20.8949%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="20.6449%" y="453" width="0.0216%" height="15" fill="rgb(73,186,186)" fg:x="954" fg:w="1"/><text x="20.8949%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::_{{closure}} (1 samples, 0.02%)</title><rect x="20.6449%" y="437" width="0.0216%" height="15" fill="rgb(95,207,207)" fg:x="954" fg:w="1"/><text x="20.8949%" y="447.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="20.6449%" y="421" width="0.0216%" height="15" fill="rgb(69,182,182)" fg:x="954" fg:w="1"/><text x="20.8949%" y="431.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_new_layouts (100 samples, 2.16%)</title><rect x="18.5890%" y="565" width="2.1640%" height="15" fill="rgb(66,180,180)" fg:x="859" fg:w="100"/><text x="18.8390%" y="575.50">a..</text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::swap (62 samples, 1.34%)</title><rect x="19.4114%" y="549" width="1.3417%" height="15" fill="rgb(71,184,184)" fg:x="897" fg:w="62"/><text x="19.6614%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="533" width="0.0866%" height="15" fill="rgb(220,120,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="517" width="0.0866%" height="15" fill="rgb(190,90,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="501" width="0.0866%" height="15" fill="rgb(218,118,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="485" width="0.0866%" height="15" fill="rgb(221,121,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="20.6665%" y="469" width="0.0866%" height="15" fill="rgb(64,178,178)" fg:x="955" fg:w="4"/><text x="20.9165%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (4 samples, 0.09%)</title><rect x="20.6665%" y="453" width="0.0866%" height="15" fill="rgb(62,176,176)" fg:x="955" fg:w="4"/><text x="20.9165%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (4 samples, 0.09%)</title><rect x="20.6665%" y="437" width="0.0866%" height="15" fill="rgb(55,169,169)" fg:x="955" fg:w="4"/><text x="20.9165%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.09%)</title><rect x="20.6665%" y="421" width="0.0866%" height="15" fill="rgb(103,213,213)" fg:x="955" fg:w="4"/><text x="20.9165%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (4 samples, 0.09%)</title><rect x="20.6665%" y="405" width="0.0866%" height="15" fill="rgb(230,130,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="389" width="0.0866%" height="15" fill="rgb(220,120,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="373" width="0.0866%" height="15" fill="rgb(213,113,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="20.6665%" y="357" width="0.0866%" height="15" fill="rgb(215,115,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="341" width="0.0866%" height="15" fill="rgb(191,91,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="325" width="0.0866%" height="15" fill="rgb(253,153,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="309" width="0.0866%" height="15" fill="rgb(225,125,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (4 samples, 0.09%)</title><rect x="20.6665%" y="293" width="0.0866%" height="15" fill="rgb(238,138,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="20.6665%" y="277" width="0.0866%" height="15" fill="rgb(203,103,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.09%)</title><rect x="20.6665%" y="261" width="0.0866%" height="15" fill="rgb(250,150,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.09%)</title><rect x="20.6665%" y="245" width="0.0866%" height="15" fill="rgb(230,130,0)" fg:x="955" fg:w="4"/><text x="20.9165%" y="255.50"></text></g><g><title>cfree (4 samples, 0.09%)</title><rect x="20.6665%" y="229" width="0.0866%" height="15" fill="rgb(195,195,57)" fg:x="955" fg:w="4"/><text x="20.9165%" y="239.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="20.6882%" y="213" width="0.0649%" height="15" fill="rgb(179,179,51)" fg:x="956" fg:w="3"/><text x="20.9382%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="20.7531%" y="373" width="0.0216%" height="15" fill="rgb(215,115,0)" fg:x="959" fg:w="1"/><text x="21.0031%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="20.7531%" y="357" width="0.0216%" height="15" fill="rgb(193,93,0)" fg:x="959" fg:w="1"/><text x="21.0031%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="20.7531%" y="341" width="0.0216%" height="15" fill="rgb(208,108,0)" fg:x="959" fg:w="1"/><text x="21.0031%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="20.7531%" y="325" width="0.0216%" height="15" fill="rgb(201,101,0)" fg:x="959" fg:w="1"/><text x="21.0031%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="20.7531%" y="309" width="0.0216%" height="15" fill="rgb(234,134,0)" fg:x="959" fg:w="1"/><text x="21.0031%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="20.7531%" y="293" width="0.0216%" height="15" fill="rgb(216,116,0)" fg:x="959" fg:w="1"/><text x="21.0031%" y="303.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="20.7531%" y="277" width="0.0216%" height="15" fill="rgb(202,202,59)" fg:x="959" fg:w="1"/><text x="21.0031%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.7531%" y="261" width="0.0216%" height="15" fill="rgb(207,207,61)" fg:x="959" fg:w="1"/><text x="21.0031%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="20.7531%" y="533" width="0.0433%" height="15" fill="rgb(218,118,0)" fg:x="959" fg:w="2"/><text x="21.0031%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="20.7531%" y="517" width="0.0433%" height="15" fill="rgb(198,98,0)" fg:x="959" fg:w="2"/><text x="21.0031%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="20.7531%" y="501" width="0.0433%" height="15" fill="rgb(209,109,0)" fg:x="959" fg:w="2"/><text x="21.0031%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="20.7531%" y="485" width="0.0433%" height="15" fill="rgb(52,167,167)" fg:x="959" fg:w="2"/><text x="21.0031%" y="495.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="20.7531%" y="469" width="0.0433%" height="15" fill="rgb(103,213,213)" fg:x="959" fg:w="2"/><text x="21.0031%" y="479.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="20.7531%" y="453" width="0.0433%" height="15" fill="rgb(89,201,201)" fg:x="959" fg:w="2"/><text x="21.0031%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="20.7531%" y="437" width="0.0433%" height="15" fill="rgb(192,92,0)" fg:x="959" fg:w="2"/><text x="21.0031%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="20.7531%" y="421" width="0.0433%" height="15" fill="rgb(249,149,0)" fg:x="959" fg:w="2"/><text x="21.0031%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="20.7531%" y="405" width="0.0433%" height="15" fill="rgb(254,154,0)" fg:x="959" fg:w="2"/><text x="21.0031%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="20.7531%" y="389" width="0.0433%" height="15" fill="rgb(74,187,187)" fg:x="959" fg:w="2"/><text x="21.0031%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="20.7747%" y="373" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="960" fg:w="1"/><text x="21.0247%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="20.7747%" y="357" width="0.0216%" height="15" fill="rgb(249,149,0)" fg:x="960" fg:w="1"/><text x="21.0247%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="20.7747%" y="341" width="0.0216%" height="15" fill="rgb(211,211,63)" fg:x="960" fg:w="1"/><text x="21.0247%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.7964%" y="453" width="0.0216%" height="15" fill="rgb(93,205,205)" fg:x="961" fg:w="1"/><text x="21.0464%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="20.7964%" y="437" width="0.0216%" height="15" fill="rgb(83,195,195)" fg:x="961" fg:w="1"/><text x="21.0464%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.7964%" y="421" width="0.0216%" height="15" fill="rgb(70,183,183)" fg:x="961" fg:w="1"/><text x="21.0464%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="20.8829%" y="197" width="0.0216%" height="15" fill="rgb(219,219,66)" fg:x="965" fg:w="1"/><text x="21.1329%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="20.8829%" y="181" width="0.0216%" height="15" fill="rgb(223,123,0)" fg:x="965" fg:w="1"/><text x="21.1329%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.35%)</title><rect x="20.8613%" y="293" width="0.3462%" height="15" fill="rgb(244,144,0)" fg:x="964" fg:w="16"/><text x="21.1113%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.35%)</title><rect x="20.8613%" y="277" width="0.3462%" height="15" fill="rgb(246,146,0)" fg:x="964" fg:w="16"/><text x="21.1113%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.35%)</title><rect x="20.8613%" y="261" width="0.3462%" height="15" fill="rgb(211,111,0)" fg:x="964" fg:w="16"/><text x="21.1113%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.32%)</title><rect x="20.8829%" y="245" width="0.3246%" height="15" fill="rgb(196,96,0)" fg:x="965" fg:w="15"/><text x="21.1329%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.32%)</title><rect x="20.8829%" y="229" width="0.3246%" height="15" fill="rgb(253,153,0)" fg:x="965" fg:w="15"/><text x="21.1329%" y="239.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.32%)</title><rect x="20.8829%" y="213" width="0.3246%" height="15" fill="rgb(202,102,0)" fg:x="965" fg:w="15"/><text x="21.1329%" y="223.50"></text></g><g><title>malloc (14 samples, 0.30%)</title><rect x="20.9046%" y="197" width="0.3030%" height="15" fill="rgb(183,183,52)" fg:x="966" fg:w="14"/><text x="21.1546%" y="207.50"></text></g><g><title>[libc.so.6] (10 samples, 0.22%)</title><rect x="20.9911%" y="181" width="0.2164%" height="15" fill="rgb(176,176,50)" fg:x="970" fg:w="10"/><text x="21.2411%" y="191.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (18 samples, 0.39%)</title><rect x="20.8613%" y="373" width="0.3895%" height="15" fill="rgb(56,170,170)" fg:x="964" fg:w="18"/><text x="21.1113%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.39%)</title><rect x="20.8613%" y="357" width="0.3895%" height="15" fill="rgb(242,142,0)" fg:x="964" fg:w="18"/><text x="21.1113%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.39%)</title><rect x="20.8613%" y="341" width="0.3895%" height="15" fill="rgb(239,139,0)" fg:x="964" fg:w="18"/><text x="21.1113%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.39%)</title><rect x="20.8613%" y="325" width="0.3895%" height="15" fill="rgb(244,144,0)" fg:x="964" fg:w="18"/><text x="21.1113%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.39%)</title><rect x="20.8613%" y="309" width="0.3895%" height="15" fill="rgb(85,197,197)" fg:x="964" fg:w="18"/><text x="21.1113%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.04%)</title><rect x="21.2075%" y="293" width="0.0433%" height="15" fill="rgb(254,154,0)" fg:x="980" fg:w="2"/><text x="21.4575%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="21.2075%" y="277" width="0.0433%" height="15" fill="rgb(221,121,0)" fg:x="980" fg:w="2"/><text x="21.4575%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="21.2075%" y="261" width="0.0433%" height="15" fill="rgb(184,184,53)" fg:x="980" fg:w="2"/><text x="21.4575%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (22 samples, 0.48%)</title><rect x="20.7964%" y="485" width="0.4761%" height="15" fill="rgb(78,190,190)" fg:x="961" fg:w="22"/><text x="21.0464%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (22 samples, 0.48%)</title><rect x="20.7964%" y="469" width="0.4761%" height="15" fill="rgb(74,187,187)" fg:x="961" fg:w="22"/><text x="21.0464%" y="479.50"></text></g><g><title>core::clone::Clone::clone (21 samples, 0.45%)</title><rect x="20.8180%" y="453" width="0.4544%" height="15" fill="rgb(250,150,0)" fg:x="962" fg:w="21"/><text x="21.0680%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.45%)</title><rect x="20.8180%" y="437" width="0.4544%" height="15" fill="rgb(193,93,0)" fg:x="962" fg:w="21"/><text x="21.0680%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.45%)</title><rect x="20.8180%" y="421" width="0.4544%" height="15" fill="rgb(239,139,0)" fg:x="962" fg:w="21"/><text x="21.0680%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.45%)</title><rect x="20.8180%" y="405" width="0.4544%" height="15" fill="rgb(216,116,0)" fg:x="962" fg:w="21"/><text x="21.0680%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.45%)</title><rect x="20.8180%" y="389" width="0.4544%" height="15" fill="rgb(104,215,215)" fg:x="962" fg:w="21"/><text x="21.0680%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="21.2508%" y="373" width="0.0216%" height="15" fill="rgb(191,91,0)" fg:x="982" fg:w="1"/><text x="21.5008%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="21.2508%" y="357" width="0.0216%" height="15" fill="rgb(253,153,0)" fg:x="982" fg:w="1"/><text x="21.5008%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="21.2508%" y="341" width="0.0216%" height="15" fill="rgb(225,125,0)" fg:x="982" fg:w="1"/><text x="21.5008%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="21.2508%" y="325" width="0.0216%" height="15" fill="rgb(219,119,0)" fg:x="982" fg:w="1"/><text x="21.5008%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="21.2508%" y="309" width="0.0216%" height="15" fill="rgb(190,90,0)" fg:x="982" fg:w="1"/><text x="21.5008%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="21.2508%" y="293" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="982" fg:w="1"/><text x="21.5008%" y="303.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="21.2508%" y="277" width="0.0216%" height="15" fill="rgb(225,225,68)" fg:x="982" fg:w="1"/><text x="21.5008%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="21.2508%" y="261" width="0.0216%" height="15" fill="rgb(179,179,51)" fg:x="982" fg:w="1"/><text x="21.5008%" y="271.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (25 samples, 0.54%)</title><rect x="20.7531%" y="549" width="0.5410%" height="15" fill="rgb(92,204,204)" fg:x="959" fg:w="25"/><text x="21.0031%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (23 samples, 0.50%)</title><rect x="20.7964%" y="533" width="0.4977%" height="15" fill="rgb(221,121,0)" fg:x="961" fg:w="23"/><text x="21.0464%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.50%)</title><rect x="20.7964%" y="517" width="0.4977%" height="15" fill="rgb(56,170,170)" fg:x="961" fg:w="23"/><text x="21.0464%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.50%)</title><rect x="20.7964%" y="501" width="0.4977%" height="15" fill="rgb(62,176,176)" fg:x="961" fg:w="23"/><text x="21.0464%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="21.2725%" y="485" width="0.0216%" height="15" fill="rgb(59,173,173)" fg:x="983" fg:w="1"/><text x="21.5225%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.02%)</title><rect x="21.2725%" y="469" width="0.0216%" height="15" fill="rgb(82,194,194)" fg:x="983" fg:w="1"/><text x="21.5225%" y="479.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="21.2725%" y="453" width="0.0216%" height="15" fill="rgb(106,217,217)" fg:x="983" fg:w="1"/><text x="21.5225%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="21.2725%" y="437" width="0.0216%" height="15" fill="rgb(191,91,0)" fg:x="983" fg:w="1"/><text x="21.5225%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="21.2725%" y="421" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="983" fg:w="1"/><text x="21.5225%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="21.2725%" y="405" width="0.0216%" height="15" fill="rgb(233,133,0)" fg:x="983" fg:w="1"/><text x="21.5225%" y="415.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="21.2725%" y="389" width="0.0216%" height="15" fill="rgb(213,213,63)" fg:x="983" fg:w="1"/><text x="21.5225%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="21.2725%" y="373" width="0.0216%" height="15" fill="rgb(183,183,52)" fg:x="983" fg:w="1"/><text x="21.5225%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="21.2725%" y="357" width="0.0216%" height="15" fill="rgb(198,198,58)" fg:x="983" fg:w="1"/><text x="21.5225%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.2941%" y="437" width="0.0216%" height="15" fill="rgb(68,181,181)" fg:x="984" fg:w="1"/><text x="21.5441%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="21.2941%" y="421" width="0.0216%" height="15" fill="rgb(90,202,202)" fg:x="984" fg:w="1"/><text x="21.5441%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="21.2941%" y="405" width="0.0216%" height="15" fill="rgb(98,209,209)" fg:x="984" fg:w="1"/><text x="21.5441%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="21.2941%" y="389" width="0.0216%" height="15" fill="rgb(240,140,0)" fg:x="984" fg:w="1"/><text x="21.5441%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="21.2941%" y="373" width="0.0216%" height="15" fill="rgb(240,140,0)" fg:x="984" fg:w="1"/><text x="21.5441%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.41%)</title><rect x="21.3157%" y="341" width="0.4112%" height="15" fill="rgb(202,102,0)" fg:x="985" fg:w="19"/><text x="21.5657%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.41%)</title><rect x="21.3157%" y="325" width="0.4112%" height="15" fill="rgb(240,140,0)" fg:x="985" fg:w="19"/><text x="21.5657%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.41%)</title><rect x="21.3157%" y="309" width="0.4112%" height="15" fill="rgb(220,120,0)" fg:x="985" fg:w="19"/><text x="21.5657%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.41%)</title><rect x="21.3157%" y="293" width="0.4112%" height="15" fill="rgb(241,141,0)" fg:x="985" fg:w="19"/><text x="21.5657%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.41%)</title><rect x="21.3157%" y="277" width="0.4112%" height="15" fill="rgb(211,111,0)" fg:x="985" fg:w="19"/><text x="21.5657%" y="287.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.41%)</title><rect x="21.3157%" y="261" width="0.4112%" height="15" fill="rgb(209,109,0)" fg:x="985" fg:w="19"/><text x="21.5657%" y="271.50"></text></g><g><title>malloc (19 samples, 0.41%)</title><rect x="21.3157%" y="245" width="0.4112%" height="15" fill="rgb(229,229,69)" fg:x="985" fg:w="19"/><text x="21.5657%" y="255.50"></text></g><g><title>[libc.so.6] (16 samples, 0.35%)</title><rect x="21.3807%" y="229" width="0.3462%" height="15" fill="rgb(208,208,62)" fg:x="988" fg:w="16"/><text x="21.6307%" y="239.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="21.6403%" y="213" width="0.0866%" height="15" fill="rgb(198,198,58)" fg:x="1000" fg:w="4"/><text x="21.8903%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (21 samples, 0.45%)</title><rect x="21.2941%" y="469" width="0.4544%" height="15" fill="rgb(71,184,184)" fg:x="984" fg:w="21"/><text x="21.5441%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (21 samples, 0.45%)</title><rect x="21.2941%" y="453" width="0.4544%" height="15" fill="rgb(96,207,207)" fg:x="984" fg:w="21"/><text x="21.5441%" y="463.50"></text></g><g><title>core::clone::Clone::clone (20 samples, 0.43%)</title><rect x="21.3157%" y="437" width="0.4328%" height="15" fill="rgb(243,143,0)" fg:x="985" fg:w="20"/><text x="21.5657%" y="447.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (20 samples, 0.43%)</title><rect x="21.3157%" y="421" width="0.4328%" height="15" fill="rgb(78,190,190)" fg:x="985" fg:w="20"/><text x="21.5657%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.43%)</title><rect x="21.3157%" y="405" width="0.4328%" height="15" fill="rgb(225,125,0)" fg:x="985" fg:w="20"/><text x="21.5657%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.43%)</title><rect x="21.3157%" y="389" width="0.4328%" height="15" fill="rgb(222,122,0)" fg:x="985" fg:w="20"/><text x="21.5657%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.43%)</title><rect x="21.3157%" y="373" width="0.4328%" height="15" fill="rgb(225,125,0)" fg:x="985" fg:w="20"/><text x="21.5657%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.43%)</title><rect x="21.3157%" y="357" width="0.4328%" height="15" fill="rgb(96,208,208)" fg:x="985" fg:w="20"/><text x="21.5657%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="21.7269%" y="341" width="0.0216%" height="15" fill="rgb(216,116,0)" fg:x="1004" fg:w="1"/><text x="21.9769%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="21.7269%" y="325" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="1004" fg:w="1"/><text x="21.9769%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="21.7269%" y="309" width="0.0216%" height="15" fill="rgb(200,200,59)" fg:x="1004" fg:w="1"/><text x="21.9769%" y="319.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.91%)</title><rect x="21.2941%" y="533" width="0.9089%" height="15" fill="rgb(99,210,210)" fg:x="984" fg:w="42"/><text x="21.5441%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (42 samples, 0.91%)</title><rect x="21.2941%" y="517" width="0.9089%" height="15" fill="rgb(227,127,0)" fg:x="984" fg:w="42"/><text x="21.5441%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.91%)</title><rect x="21.2941%" y="501" width="0.9089%" height="15" fill="rgb(89,201,201)" fg:x="984" fg:w="42"/><text x="21.5441%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.91%)</title><rect x="21.2941%" y="485" width="0.9089%" height="15" fill="rgb(96,207,207)" fg:x="984" fg:w="42"/><text x="21.5441%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (21 samples, 0.45%)</title><rect x="21.7485%" y="469" width="0.4544%" height="15" fill="rgb(67,181,181)" fg:x="1005" fg:w="21"/><text x="21.9985%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (21 samples, 0.45%)</title><rect x="21.7485%" y="453" width="0.4544%" height="15" fill="rgb(81,193,193)" fg:x="1005" fg:w="21"/><text x="21.9985%" y="463.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (21 samples, 0.45%)</title><rect x="21.7485%" y="437" width="0.4544%" height="15" fill="rgb(81,193,193)" fg:x="1005" fg:w="21"/><text x="21.9985%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.45%)</title><rect x="21.7485%" y="421" width="0.4544%" height="15" fill="rgb(218,118,0)" fg:x="1005" fg:w="21"/><text x="21.9985%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.45%)</title><rect x="21.7485%" y="405" width="0.4544%" height="15" fill="rgb(236,136,0)" fg:x="1005" fg:w="21"/><text x="21.9985%" y="415.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.45%)</title><rect x="21.7485%" y="389" width="0.4544%" height="15" fill="rgb(244,144,0)" fg:x="1005" fg:w="21"/><text x="21.9985%" y="399.50"></text></g><g><title>malloc (21 samples, 0.45%)</title><rect x="21.7485%" y="373" width="0.4544%" height="15" fill="rgb(184,184,53)" fg:x="1005" fg:w="21"/><text x="21.9985%" y="383.50"></text></g><g><title>[libc.so.6] (21 samples, 0.45%)</title><rect x="21.7485%" y="357" width="0.4544%" height="15" fill="rgb(182,182,52)" fg:x="1005" fg:w="21"/><text x="21.9985%" y="367.50"></text></g><g><title>[libc.so.6] (16 samples, 0.35%)</title><rect x="21.8567%" y="341" width="0.3462%" height="15" fill="rgb(179,179,51)" fg:x="1010" fg:w="16"/><text x="22.1067%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="22.1597%" y="325" width="0.0433%" height="15" fill="rgb(193,193,56)" fg:x="1024" fg:w="2"/><text x="22.4097%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="22.2030%" y="469" width="0.0216%" height="15" fill="rgb(52,167,167)" fg:x="1026" fg:w="1"/><text x="22.4530%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="22.2030%" y="453" width="0.0216%" height="15" fill="rgb(243,143,0)" fg:x="1026" fg:w="1"/><text x="22.4530%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (2 samples, 0.04%)</title><rect x="22.2030%" y="533" width="0.0433%" height="15" fill="rgb(238,138,0)" fg:x="1026" fg:w="2"/><text x="22.4530%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.04%)</title><rect x="22.2030%" y="517" width="0.0433%" height="15" fill="rgb(197,97,0)" fg:x="1026" fg:w="2"/><text x="22.4530%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.04%)</title><rect x="22.2030%" y="501" width="0.0433%" height="15" fill="rgb(102,212,212)" fg:x="1026" fg:w="2"/><text x="22.4530%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.04%)</title><rect x="22.2030%" y="485" width="0.0433%" height="15" fill="rgb(74,187,187)" fg:x="1026" fg:w="2"/><text x="22.4530%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="22.2246%" y="469" width="0.0216%" height="15" fill="rgb(72,185,185)" fg:x="1027" fg:w="1"/><text x="22.4746%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="22.2246%" y="453" width="0.0216%" height="15" fill="rgb(84,196,196)" fg:x="1027" fg:w="1"/><text x="22.4746%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.02%)</title><rect x="22.2246%" y="437" width="0.0216%" height="15" fill="rgb(56,171,171)" fg:x="1027" fg:w="1"/><text x="22.4746%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="22.2246%" y="421" width="0.0216%" height="15" fill="rgb(104,215,215)" fg:x="1027" fg:w="1"/><text x="22.4746%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="22.2246%" y="405" width="0.0216%" height="15" fill="rgb(85,197,197)" fg:x="1027" fg:w="1"/><text x="22.4746%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="30.4047%" y="469" width="0.0433%" height="15" fill="rgb(197,97,0)" fg:x="1405" fg:w="2"/><text x="30.6547%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.04%)</title><rect x="30.4047%" y="453" width="0.0433%" height="15" fill="rgb(245,145,0)" fg:x="1405" fg:w="2"/><text x="30.6547%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.04%)</title><rect x="30.4047%" y="437" width="0.0433%" height="15" fill="rgb(191,91,0)" fg:x="1405" fg:w="2"/><text x="30.6547%" y="447.50"></text></g><g><title>__rdl_alloc (10 samples, 0.22%)</title><rect x="30.6427%" y="325" width="0.2164%" height="15" fill="rgb(229,229,69)" fg:x="1416" fg:w="10"/><text x="30.8927%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.22%)</title><rect x="30.6427%" y="309" width="0.2164%" height="15" fill="rgb(191,91,0)" fg:x="1416" fg:w="10"/><text x="30.8927%" y="319.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="30.8591%" y="325" width="0.0216%" height="15" fill="rgb(210,210,63)" fg:x="1426" fg:w="1"/><text x="31.1091%" y="335.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="30.8808%" y="325" width="0.0216%" height="15" fill="rgb(203,103,0)" fg:x="1427" fg:w="1"/><text x="31.1308%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 1.26%)</title><rect x="30.5345%" y="421" width="1.2551%" height="15" fill="rgb(247,147,0)" fg:x="1411" fg:w="58"/><text x="30.7845%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58 samples, 1.26%)</title><rect x="30.5345%" y="405" width="1.2551%" height="15" fill="rgb(214,114,0)" fg:x="1411" fg:w="58"/><text x="30.7845%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 1.26%)</title><rect x="30.5345%" y="389" width="1.2551%" height="15" fill="rgb(195,95,0)" fg:x="1411" fg:w="58"/><text x="30.7845%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 1.21%)</title><rect x="30.5778%" y="373" width="1.2119%" height="15" fill="rgb(210,110,0)" fg:x="1413" fg:w="56"/><text x="30.8278%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 1.21%)</title><rect x="30.5778%" y="357" width="1.2119%" height="15" fill="rgb(203,103,0)" fg:x="1413" fg:w="56"/><text x="30.8278%" y="367.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 1.21%)</title><rect x="30.5778%" y="341" width="1.2119%" height="15" fill="rgb(204,104,0)" fg:x="1413" fg:w="56"/><text x="30.8278%" y="351.50"></text></g><g><title>malloc (41 samples, 0.89%)</title><rect x="30.9024%" y="325" width="0.8873%" height="15" fill="rgb(222,222,67)" fg:x="1428" fg:w="41"/><text x="31.1524%" y="335.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (97 samples, 2.10%)</title><rect x="30.4047%" y="501" width="2.0991%" height="15" fill="rgb(55,169,169)" fg:x="1405" fg:w="97"/><text x="30.6547%" y="511.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (97 samples, 2.10%)</title><rect x="30.4047%" y="485" width="2.0991%" height="15" fill="rgb(202,102,0)" fg:x="1405" fg:w="97"/><text x="30.6547%" y="495.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (95 samples, 2.06%)</title><rect x="30.4480%" y="469" width="2.0558%" height="15" fill="rgb(194,94,0)" fg:x="1407" fg:w="95"/><text x="30.6980%" y="479.50">a..</text></g><g><title>alloc::slice::hack::to_vec (95 samples, 2.06%)</title><rect x="30.4480%" y="453" width="2.0558%" height="15" fill="rgb(252,152,0)" fg:x="1407" fg:w="95"/><text x="30.6980%" y="463.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (95 samples, 2.06%)</title><rect x="30.4480%" y="437" width="2.0558%" height="15" fill="rgb(91,202,202)" fg:x="1407" fg:w="95"/><text x="30.6980%" y="447.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (33 samples, 0.71%)</title><rect x="31.7897%" y="421" width="0.7141%" height="15" fill="rgb(204,104,0)" fg:x="1469" fg:w="33"/><text x="32.0397%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.71%)</title><rect x="31.7897%" y="405" width="0.7141%" height="15" fill="rgb(215,115,0)" fg:x="1469" fg:w="33"/><text x="32.0397%" y="415.50"></text></g><g><title>[libc.so.6] (32 samples, 0.69%)</title><rect x="31.8113%" y="389" width="0.6925%" height="15" fill="rgb(212,212,63)" fg:x="1470" fg:w="32"/><text x="32.0613%" y="399.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.11%)</title><rect x="32.5038%" y="501" width="0.1082%" height="15" fill="rgb(78,190,190)" fg:x="1502" fg:w="5"/><text x="32.7538%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.09%)</title><rect x="32.5254%" y="485" width="0.0866%" height="15" fill="rgb(242,142,0)" fg:x="1503" fg:w="4"/><text x="32.7754%" y="495.50"></text></g><g><title>&lt;alc::keyboard::key::PhalanxKey as alc::keyboard::key::KeyValue&gt;::value (16 samples, 0.35%)</title><rect x="32.6120%" y="501" width="0.3462%" height="15" fill="rgb(85,197,197)" fg:x="1507" fg:w="16"/><text x="32.8620%" y="511.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (38 samples, 0.82%)</title><rect x="33.2828%" y="453" width="0.8223%" height="15" fill="rgb(87,199,199)" fg:x="1538" fg:w="38"/><text x="33.5328%" y="463.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (71 samples, 1.54%)</title><rect x="32.9582%" y="501" width="1.5365%" height="15" fill="rgb(69,183,183)" fg:x="1523" fg:w="71"/><text x="33.2082%" y="511.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (71 samples, 1.54%)</title><rect x="32.9582%" y="485" width="1.5365%" height="15" fill="rgb(95,206,206)" fg:x="1523" fg:w="71"/><text x="33.2082%" y="495.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (56 samples, 1.21%)</title><rect x="33.2828%" y="469" width="1.2119%" height="15" fill="rgb(78,190,190)" fg:x="1538" fg:w="56"/><text x="33.5328%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.39%)</title><rect x="34.1052%" y="453" width="0.3895%" height="15" fill="rgb(224,124,0)" fg:x="1576" fg:w="18"/><text x="34.3552%" y="463.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get::_{{closure}} (18 samples, 0.39%)</title><rect x="34.1052%" y="437" width="0.3895%" height="15" fill="rgb(62,176,176)" fg:x="1576" fg:w="18"/><text x="34.3552%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (18 samples, 0.39%)</title><rect x="34.1052%" y="421" width="0.3895%" height="15" fill="rgb(240,140,0)" fg:x="1576" fg:w="18"/><text x="34.3552%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (18 samples, 0.39%)</title><rect x="34.1052%" y="405" width="0.3895%" height="15" fill="rgb(224,124,0)" fg:x="1576" fg:w="18"/><text x="34.3552%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18 samples, 0.39%)</title><rect x="34.1052%" y="389" width="0.3895%" height="15" fill="rgb(81,193,193)" fg:x="1576" fg:w="18"/><text x="34.3552%" y="399.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::ops::index::Index&lt;usize&gt;&gt;::index (2 samples, 0.04%)</title><rect x="34.7760%" y="485" width="0.0433%" height="15" fill="rgb(92,204,204)" fg:x="1607" fg:w="2"/><text x="35.0260%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.04%)</title><rect x="34.7760%" y="469" width="0.0433%" height="15" fill="rgb(250,150,0)" fg:x="1607" fg:w="2"/><text x="35.0260%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="34.7760%" y="453" width="0.0433%" height="15" fill="rgb(214,114,0)" fg:x="1607" fg:w="2"/><text x="35.0260%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="34.7760%" y="437" width="0.0433%" height="15" fill="rgb(62,176,176)" fg:x="1607" fg:w="2"/><text x="35.0260%" y="447.50"></text></g><g><title>&lt;alc::keyboard::key::Hand as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="34.8193%" y="485" width="0.0216%" height="15" fill="rgb(56,171,171)" fg:x="1609" fg:w="1"/><text x="35.0693%" y="495.50"></text></g><g><title>&lt;alc::keyboard::key::PhalanxKey as alc::keyboard::key::KeyValue&gt;::value (2 samples, 0.04%)</title><rect x="34.8409%" y="485" width="0.0433%" height="15" fill="rgb(92,204,204)" fg:x="1610" fg:w="2"/><text x="35.0909%" y="495.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (4 samples, 0.09%)</title><rect x="34.8842%" y="485" width="0.0866%" height="15" fill="rgb(100,211,211)" fg:x="1612" fg:w="4"/><text x="35.1342%" y="495.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (4 samples, 0.09%)</title><rect x="34.8842%" y="469" width="0.0866%" height="15" fill="rgb(79,191,191)" fg:x="1612" fg:w="4"/><text x="35.1342%" y="479.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="34.9275%" y="453" width="0.0433%" height="15" fill="rgb(108,218,218)" fg:x="1614" fg:w="2"/><text x="35.1775%" y="463.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (2 samples, 0.04%)</title><rect x="34.9275%" y="437" width="0.0433%" height="15" fill="rgb(96,207,207)" fg:x="1614" fg:w="2"/><text x="35.1775%" y="447.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (10 samples, 0.22%)</title><rect x="34.9708%" y="485" width="0.2164%" height="15" fill="rgb(91,202,202)" fg:x="1616" fg:w="10"/><text x="35.2208%" y="495.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (9 samples, 0.19%)</title><rect x="34.9924%" y="469" width="0.1948%" height="15" fill="rgb(224,124,0)" fg:x="1617" fg:w="9"/><text x="35.2424%" y="479.50"></text></g><g><title>pow (9 samples, 0.19%)</title><rect x="34.9924%" y="453" width="0.1948%" height="15" fill="rgb(197,197,58)" fg:x="1617" fg:w="9"/><text x="35.2424%" y="463.50"></text></g><g><title>[libm.so.6] (9 samples, 0.19%)</title><rect x="34.9924%" y="437" width="0.1948%" height="15" fill="rgb(204,204,60)" fg:x="1617" fg:w="9"/><text x="35.2424%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.02%)</title><rect x="35.1872%" y="485" width="0.0216%" height="15" fill="rgb(217,117,0)" fg:x="1626" fg:w="1"/><text x="35.4372%" y="495.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.06%)</title><rect x="35.2521%" y="389" width="0.0649%" height="15" fill="rgb(211,211,63)" fg:x="1629" fg:w="3"/><text x="35.5021%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.06%)</title><rect x="35.2521%" y="373" width="0.0649%" height="15" fill="rgb(245,145,0)" fg:x="1629" fg:w="3"/><text x="35.5021%" y="383.50"></text></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect x="35.3170%" y="389" width="0.0649%" height="15" fill="rgb(223,223,67)" fg:x="1632" fg:w="3"/><text x="35.5670%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45 samples, 0.97%)</title><rect x="35.2521%" y="421" width="0.9738%" height="15" fill="rgb(217,117,0)" fg:x="1629" fg:w="45"/><text x="35.5021%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (45 samples, 0.97%)</title><rect x="35.2521%" y="405" width="0.9738%" height="15" fill="rgb(244,144,0)" fg:x="1629" fg:w="45"/><text x="35.5021%" y="415.50"></text></g><g><title>cfree (39 samples, 0.84%)</title><rect x="35.3820%" y="389" width="0.8440%" height="15" fill="rgb(201,201,59)" fg:x="1635" fg:w="39"/><text x="35.6320%" y="399.50"></text></g><g><title>[libc.so.6] (27 samples, 0.58%)</title><rect x="35.6416%" y="373" width="0.5843%" height="15" fill="rgb(223,223,67)" fg:x="1647" fg:w="27"/><text x="35.8916%" y="383.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_small (82 samples, 1.77%)</title><rect x="34.4947%" y="501" width="1.7745%" height="15" fill="rgb(82,194,194)" fg:x="1594" fg:w="82"/><text x="34.7447%" y="511.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (49 samples, 1.06%)</title><rect x="35.2088%" y="485" width="1.0604%" height="15" fill="rgb(248,148,0)" fg:x="1627" fg:w="49"/><text x="35.4588%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (49 samples, 1.06%)</title><rect x="35.2088%" y="469" width="1.0604%" height="15" fill="rgb(239,139,0)" fg:x="1627" fg:w="49"/><text x="35.4588%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (49 samples, 1.06%)</title><rect x="35.2088%" y="453" width="1.0604%" height="15" fill="rgb(227,127,0)" fg:x="1627" fg:w="49"/><text x="35.4588%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 1.06%)</title><rect x="35.2088%" y="437" width="1.0604%" height="15" fill="rgb(228,128,0)" fg:x="1627" fg:w="49"/><text x="35.4588%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="36.2259%" y="421" width="0.0433%" height="15" fill="rgb(199,99,0)" fg:x="1674" fg:w="2"/><text x="36.4759%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.04%)</title><rect x="36.2259%" y="405" width="0.0433%" height="15" fill="rgb(203,103,0)" fg:x="1674" fg:w="2"/><text x="36.4759%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="36.2692%" y="501" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="1676" fg:w="1"/><text x="36.5192%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="36.2908%" y="501" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="1677" fg:w="1"/><text x="36.5408%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="36.2908%" y="485" width="0.0216%" height="15" fill="rgb(218,118,0)" fg:x="1677" fg:w="1"/><text x="36.5408%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="36.2908%" y="469" width="0.0216%" height="15" fill="rgb(219,119,0)" fg:x="1677" fg:w="1"/><text x="36.5408%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 1.38%)</title><rect x="36.3125%" y="501" width="1.3850%" height="15" fill="rgb(218,118,0)" fg:x="1678" fg:w="64"/><text x="36.5625%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.65%)</title><rect x="37.0483%" y="485" width="0.6492%" height="15" fill="rgb(244,144,0)" fg:x="1712" fg:w="30"/><text x="37.2983%" y="495.50"></text></g><g><title>core::ptr::read (20 samples, 0.43%)</title><rect x="37.2647%" y="469" width="0.4328%" height="15" fill="rgb(253,153,0)" fg:x="1722" fg:w="20"/><text x="37.5147%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="37.6975%" y="501" width="0.0433%" height="15" fill="rgb(217,117,0)" fg:x="1742" fg:w="2"/><text x="37.9475%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt; as core::iter::adapters::step_by::StepByImpl&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::spec_next (2 samples, 0.04%)</title><rect x="37.6975%" y="485" width="0.0433%" height="15" fill="rgb(237,137,0)" fg:x="1742" fg:w="2"/><text x="37.9475%" y="495.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (203 samples, 4.39%)</title><rect x="37.7407%" y="501" width="4.3930%" height="15" fill="rgb(94,205,205)" fg:x="1744" fg:w="203"/><text x="37.9907%" y="511.50">alc::..</text></g><g><title>std::f64::&lt;impl f64&gt;::powf (178 samples, 3.85%)</title><rect x="38.2818%" y="485" width="3.8520%" height="15" fill="rgb(224,124,0)" fg:x="1769" fg:w="178"/><text x="38.5318%" y="495.50">std:..</text></g><g><title>pow (178 samples, 3.85%)</title><rect x="38.2818%" y="469" width="3.8520%" height="15" fill="rgb(184,184,53)" fg:x="1769" fg:w="178"/><text x="38.5318%" y="479.50">pow</text></g><g><title>[libm.so.6] (171 samples, 3.70%)</title><rect x="38.4332%" y="453" width="3.7005%" height="15" fill="rgb(195,195,57)" fg:x="1776" fg:w="171"/><text x="38.6832%" y="463.50">[lib..</text></g><g><title>alc::objective::scoring::same_hand_and_finger (24 samples, 0.52%)</title><rect x="42.1337%" y="501" width="0.5194%" height="15" fill="rgb(82,195,195)" fg:x="1947" fg:w="24"/><text x="42.3837%" y="511.50"></text></g><g><title>&lt;alc::keyboard::key::Hand as core::cmp::PartialEq&gt;::eq (10 samples, 0.22%)</title><rect x="42.4367%" y="485" width="0.2164%" height="15" fill="rgb(107,218,218)" fg:x="1961" fg:w="10"/><text x="42.6867%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (5 samples, 0.11%)</title><rect x="42.6531%" y="501" width="0.1082%" height="15" fill="rgb(201,101,0)" fg:x="1971" fg:w="5"/><text x="42.9031%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.19%)</title><rect x="44.2112%" y="453" width="0.1948%" height="15" fill="rgb(214,114,0)" fg:x="2043" fg:w="9"/><text x="44.4612%" y="463.50"></text></g><g><title>__rdl_realloc (7 samples, 0.15%)</title><rect x="45.0335%" y="389" width="0.1515%" height="15" fill="rgb(188,188,54)" fg:x="2081" fg:w="7"/><text x="45.2835%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.11%)</title><rect x="45.0768%" y="373" width="0.1082%" height="15" fill="rgb(242,142,0)" fg:x="2083" fg:w="5"/><text x="45.3268%" y="383.50"></text></g><g><title>__rust_realloc (3 samples, 0.06%)</title><rect x="45.1850%" y="389" width="0.0649%" height="15" fill="rgb(212,212,63)" fg:x="2088" fg:w="3"/><text x="45.4350%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (230 samples, 4.98%)</title><rect x="45.0335%" y="437" width="4.9773%" height="15" fill="rgb(235,135,0)" fg:x="2081" fg:w="230"/><text x="45.2835%" y="447.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (230 samples, 4.98%)</title><rect x="45.0335%" y="421" width="4.9773%" height="15" fill="rgb(247,147,0)" fg:x="2081" fg:w="230"/><text x="45.2835%" y="431.50">alloc:..</text></g><g><title>alloc::alloc::realloc (230 samples, 4.98%)</title><rect x="45.0335%" y="405" width="4.9773%" height="15" fill="rgb(194,94,0)" fg:x="2081" fg:w="230"/><text x="45.2835%" y="415.50">alloc:..</text></g><g><title>realloc (220 samples, 4.76%)</title><rect x="45.2499%" y="389" width="4.7609%" height="15" fill="rgb(201,201,59)" fg:x="2091" fg:w="220"/><text x="45.4999%" y="399.50">realloc</text></g><g><title>[libc.so.6] (176 samples, 3.81%)</title><rect x="46.2021%" y="373" width="3.8087%" height="15" fill="rgb(212,212,63)" fg:x="2135" fg:w="176"/><text x="46.4521%" y="383.50">[lib..</text></g><g><title>[libc.so.6] (139 samples, 3.01%)</title><rect x="47.0028%" y="357" width="3.0080%" height="15" fill="rgb(178,178,51)" fg:x="2172" fg:w="139"/><text x="47.2528%" y="367.50">[li..</text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="49.9459%" y="341" width="0.0649%" height="15" fill="rgb(189,189,55)" fg:x="2308" fg:w="3"/><text x="50.1959%" y="351.50"></text></g><g><title>__rdl_alloc (15 samples, 0.32%)</title><rect x="50.0108%" y="437" width="0.3246%" height="15" fill="rgb(195,195,57)" fg:x="2311" fg:w="15"/><text x="50.2608%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (15 samples, 0.32%)</title><rect x="50.0108%" y="421" width="0.3246%" height="15" fill="rgb(210,110,0)" fg:x="2311" fg:w="15"/><text x="50.2608%" y="431.50"></text></g><g><title>__rust_alloc (5 samples, 0.11%)</title><rect x="50.3354%" y="437" width="0.1082%" height="15" fill="rgb(217,217,65)" fg:x="2326" fg:w="5"/><text x="50.5854%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (18 samples, 0.39%)</title><rect x="50.4436%" y="437" width="0.3895%" height="15" fill="rgb(226,126,0)" fg:x="2331" fg:w="18"/><text x="50.6936%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (354 samples, 7.66%)</title><rect x="44.4060%" y="453" width="7.6607%" height="15" fill="rgb(223,123,0)" fg:x="2052" fg:w="354"/><text x="44.6560%" y="463.50">alloc::raw..</text></g><g><title>malloc (57 samples, 1.23%)</title><rect x="50.8332%" y="437" width="1.2335%" height="15" fill="rgb(201,201,59)" fg:x="2349" fg:w="57"/><text x="51.0832%" y="447.50"></text></g><g><title>core::cmp::max (31 samples, 0.67%)</title><rect x="52.0667%" y="453" width="0.6709%" height="15" fill="rgb(191,91,0)" fg:x="2406" fg:w="31"/><text x="52.3167%" y="463.50"></text></g><g><title>core::cmp::Ord::max (31 samples, 0.67%)</title><rect x="52.0667%" y="437" width="0.6709%" height="15" fill="rgb(199,99,0)" fg:x="2406" fg:w="31"/><text x="52.3167%" y="447.50"></text></g><g><title>core::cmp::max_by (31 samples, 0.67%)</title><rect x="52.0667%" y="421" width="0.6709%" height="15" fill="rgb(230,130,0)" fg:x="2406" fg:w="31"/><text x="52.3167%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (414 samples, 8.96%)</title><rect x="44.0164%" y="485" width="8.9591%" height="15" fill="rgb(246,146,0)" fg:x="2034" fg:w="414"/><text x="44.2664%" y="495.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (414 samples, 8.96%)</title><rect x="44.0164%" y="469" width="8.9591%" height="15" fill="rgb(233,133,0)" fg:x="2034" fg:w="414"/><text x="44.2664%" y="479.50">alloc::raw_ve..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.24%)</title><rect x="52.7375%" y="453" width="0.2380%" height="15" fill="rgb(220,120,0)" fg:x="2437" fg:w="11"/><text x="52.9875%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (11 samples, 0.24%)</title><rect x="52.7375%" y="437" width="0.2380%" height="15" fill="rgb(208,108,0)" fg:x="2437" fg:w="11"/><text x="52.9875%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.26%)</title><rect x="52.9755%" y="485" width="0.2597%" height="15" fill="rgb(206,106,0)" fg:x="2448" fg:w="12"/><text x="53.2255%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (12 samples, 0.26%)</title><rect x="52.9755%" y="469" width="0.2597%" height="15" fill="rgb(235,135,0)" fg:x="2448" fg:w="12"/><text x="53.2255%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (499 samples, 10.80%)</title><rect x="42.7613%" y="501" width="10.7985%" height="15" fill="rgb(250,150,0)" fg:x="1976" fg:w="499"/><text x="43.0113%" y="511.50">alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::write (15 samples, 0.32%)</title><rect x="53.2352%" y="485" width="0.3246%" height="15" fill="rgb(200,100,0)" fg:x="2460" fg:w="15"/><text x="53.4852%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (9 samples, 0.19%)</title><rect x="53.5598%" y="501" width="0.1948%" height="15" fill="rgb(234,134,0)" fg:x="2475" fg:w="9"/><text x="53.8098%" y="511.50"></text></g><g><title>core::cmp::PartialEq::ne (10 samples, 0.22%)</title><rect x="53.7546%" y="501" width="0.2164%" height="15" fill="rgb(232,132,0)" fg:x="2484" fg:w="10"/><text x="54.0046%" y="511.50"></text></g><g><title>&lt;alc::keyboard::key::Hand as core::cmp::PartialEq&gt;::eq (10 samples, 0.22%)</title><rect x="53.7546%" y="485" width="0.2164%" height="15" fill="rgb(72,185,185)" fg:x="2484" fg:w="10"/><text x="54.0046%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::gt (48 samples, 1.04%)</title><rect x="53.9710%" y="501" width="1.0387%" height="15" fill="rgb(209,109,0)" fg:x="2494" fg:w="48"/><text x="54.2210%" y="511.50"></text></g><g><title>&lt;alc::keyboard::key::Finger as core::cmp::PartialOrd&gt;::partial_cmp (48 samples, 1.04%)</title><rect x="53.9710%" y="485" width="1.0387%" height="15" fill="rgb(77,190,190)" fg:x="2494" fg:w="48"/><text x="54.2210%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (6 samples, 0.13%)</title><rect x="55.0097%" y="501" width="0.1298%" height="15" fill="rgb(202,102,0)" fg:x="2542" fg:w="6"/><text x="55.2597%" y="511.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (6 samples, 0.13%)</title><rect x="55.0097%" y="485" width="0.1298%" height="15" fill="rgb(191,91,0)" fg:x="2542" fg:w="6"/><text x="55.2597%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::step_by (10 samples, 0.22%)</title><rect x="55.1396%" y="501" width="0.2164%" height="15" fill="rgb(196,96,0)" fg:x="2548" fg:w="10"/><text x="55.3896%" y="511.50"></text></g><g><title>core::iter::adapters::step_by::StepBy&lt;I&gt;::new (10 samples, 0.22%)</title><rect x="55.1396%" y="485" width="0.2164%" height="15" fill="rgb(252,152,0)" fg:x="2548" fg:w="10"/><text x="55.3896%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::iter::adapters::step_by::SpecRangeSetup&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::setup (10 samples, 0.22%)</title><rect x="55.1396%" y="469" width="0.2164%" height="15" fill="rgb(207,107,0)" fg:x="2548" fg:w="10"/><text x="55.3896%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::div_ceil (10 samples, 0.22%)</title><rect x="55.1396%" y="453" width="0.2164%" height="15" fill="rgb(219,119,0)" fg:x="2548" fg:w="10"/><text x="55.3896%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="56.3731%" y="453" width="0.0433%" height="15" fill="rgb(193,93,0)" fg:x="2605" fg:w="2"/><text x="56.6231%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (75 samples, 1.62%)</title><rect x="55.3560%" y="501" width="1.6230%" height="15" fill="rgb(204,104,0)" fg:x="2558" fg:w="75"/><text x="55.6060%" y="511.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&lt;&amp;f64&gt;&gt;::sum (75 samples, 1.62%)</title><rect x="55.3560%" y="485" width="1.6230%" height="15" fill="rgb(75,188,188)" fg:x="2558" fg:w="75"/><text x="55.6060%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75 samples, 1.62%)</title><rect x="55.3560%" y="469" width="1.6230%" height="15" fill="rgb(211,111,0)" fg:x="2558" fg:w="75"/><text x="55.6060%" y="479.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&lt;&amp;f64&gt;&gt;::sum::_{{closure}} (26 samples, 0.56%)</title><rect x="56.4164%" y="453" width="0.5626%" height="15" fill="rgb(80,192,192)" fg:x="2607" fg:w="26"/><text x="56.6664%" y="463.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&lt;&amp;f64&gt;&gt;::add (26 samples, 0.56%)</title><rect x="56.4164%" y="437" width="0.5626%" height="15" fill="rgb(90,201,201)" fg:x="2607" fg:w="26"/><text x="56.6664%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (26 samples, 0.56%)</title><rect x="56.4164%" y="421" width="0.5626%" height="15" fill="rgb(61,175,175)" fg:x="2607" fg:w="26"/><text x="56.6664%" y="431.50"></text></g><g><title>core::num::&lt;impl i8&gt;::abs (8 samples, 0.17%)</title><rect x="56.9790%" y="501" width="0.1731%" height="15" fill="rgb(254,154,0)" fg:x="2633" fg:w="8"/><text x="57.2290%" y="511.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.04%)</title><rect x="57.1954%" y="405" width="0.0433%" height="15" fill="rgb(193,193,56)" fg:x="2643" fg:w="2"/><text x="57.4454%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.04%)</title><rect x="57.1954%" y="389" width="0.0433%" height="15" fill="rgb(216,116,0)" fg:x="2643" fg:w="2"/><text x="57.4454%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 0.84%)</title><rect x="57.1738%" y="437" width="0.8440%" height="15" fill="rgb(252,152,0)" fg:x="2642" fg:w="39"/><text x="57.4238%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (39 samples, 0.84%)</title><rect x="57.1738%" y="421" width="0.8440%" height="15" fill="rgb(199,99,0)" fg:x="2642" fg:w="39"/><text x="57.4238%" y="431.50"></text></g><g><title>cfree (36 samples, 0.78%)</title><rect x="57.2387%" y="405" width="0.7791%" height="15" fill="rgb(199,199,59)" fg:x="2645" fg:w="36"/><text x="57.4887%" y="415.50"></text></g><g><title>[libc.so.6] (26 samples, 0.56%)</title><rect x="57.4551%" y="389" width="0.5626%" height="15" fill="rgb(205,205,60)" fg:x="2655" fg:w="26"/><text x="57.7051%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (41 samples, 0.89%)</title><rect x="57.1521%" y="501" width="0.8873%" height="15" fill="rgb(251,151,0)" fg:x="2641" fg:w="41"/><text x="57.4021%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (41 samples, 0.89%)</title><rect x="57.1521%" y="485" width="0.8873%" height="15" fill="rgb(252,152,0)" fg:x="2641" fg:w="41"/><text x="57.4021%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (41 samples, 0.89%)</title><rect x="57.1521%" y="469" width="0.8873%" height="15" fill="rgb(251,151,0)" fg:x="2641" fg:w="41"/><text x="57.4021%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.89%)</title><rect x="57.1521%" y="453" width="0.8873%" height="15" fill="rgb(251,151,0)" fg:x="2641" fg:w="41"/><text x="57.4021%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="58.0177%" y="437" width="0.0216%" height="15" fill="rgb(236,136,0)" fg:x="2681" fg:w="1"/><text x="58.2677%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="58.0177%" y="421" width="0.0216%" height="15" fill="rgb(221,121,0)" fg:x="2681" fg:w="1"/><text x="58.2677%" y="431.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.11%)</title><rect x="58.1259%" y="421" width="0.1082%" height="15" fill="rgb(215,215,64)" fg:x="2686" fg:w="5"/><text x="58.3759%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.11%)</title><rect x="58.1259%" y="405" width="0.1082%" height="15" fill="rgb(222,122,0)" fg:x="2686" fg:w="5"/><text x="58.3759%" y="415.50"></text></g><g><title>__rust_dealloc (6 samples, 0.13%)</title><rect x="58.2341%" y="421" width="0.1298%" height="15" fill="rgb(222,222,67)" fg:x="2691" fg:w="6"/><text x="58.4841%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (97 samples, 2.10%)</title><rect x="58.1259%" y="453" width="2.0991%" height="15" fill="rgb(246,146,0)" fg:x="2686" fg:w="97"/><text x="58.3759%" y="463.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (97 samples, 2.10%)</title><rect x="58.1259%" y="437" width="2.0991%" height="15" fill="rgb(223,123,0)" fg:x="2686" fg:w="97"/><text x="58.3759%" y="447.50">a..</text></g><g><title>cfree (86 samples, 1.86%)</title><rect x="58.3640%" y="421" width="1.8611%" height="15" fill="rgb(205,205,60)" fg:x="2697" fg:w="86"/><text x="58.6140%" y="431.50">c..</text></g><g><title>[libc.so.6] (62 samples, 1.34%)</title><rect x="58.8834%" y="405" width="1.3417%" height="15" fill="rgb(198,198,58)" fg:x="2721" fg:w="62"/><text x="59.1334%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="60.1818%" y="389" width="0.0433%" height="15" fill="rgb(185,185,53)" fg:x="2781" fg:w="2"/><text x="60.4318%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (106 samples, 2.29%)</title><rect x="58.0394%" y="501" width="2.2939%" height="15" fill="rgb(252,152,0)" fg:x="2682" fg:w="106"/><text x="58.2894%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (106 samples, 2.29%)</title><rect x="58.0394%" y="485" width="2.2939%" height="15" fill="rgb(197,97,0)" fg:x="2682" fg:w="106"/><text x="58.2894%" y="495.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 2.29%)</title><rect x="58.0394%" y="469" width="2.2939%" height="15" fill="rgb(251,151,0)" fg:x="2682" fg:w="106"/><text x="58.2894%" y="479.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.11%)</title><rect x="60.2251%" y="453" width="0.1082%" height="15" fill="rgb(238,138,0)" fg:x="2783" fg:w="5"/><text x="60.4751%" y="463.50"></text></g><g><title>[alc] (1 samples, 0.02%)</title><rect x="60.3333%" y="421" width="0.0216%" height="15" fill="rgb(223,223,67)" fg:x="2788" fg:w="1"/><text x="60.5833%" y="431.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="60.3333%" y="405" width="0.0216%" height="15" fill="rgb(194,194,57)" fg:x="2788" fg:w="1"/><text x="60.5833%" y="415.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.04%)</title><rect x="60.3549%" y="421" width="0.0433%" height="15" fill="rgb(211,211,63)" fg:x="2789" fg:w="2"/><text x="60.6049%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.04%)</title><rect x="60.3549%" y="405" width="0.0433%" height="15" fill="rgb(220,120,0)" fg:x="2789" fg:w="2"/><text x="60.6049%" y="415.50"></text></g><g><title>__rust_dealloc (4 samples, 0.09%)</title><rect x="60.3982%" y="421" width="0.0866%" height="15" fill="rgb(179,179,51)" fg:x="2791" fg:w="4"/><text x="60.6482%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.82%)</title><rect x="60.3333%" y="453" width="0.8223%" height="15" fill="rgb(197,97,0)" fg:x="2788" fg:w="38"/><text x="60.5833%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.82%)</title><rect x="60.3333%" y="437" width="0.8223%" height="15" fill="rgb(190,90,0)" fg:x="2788" fg:w="38"/><text x="60.5833%" y="447.50"></text></g><g><title>cfree (31 samples, 0.67%)</title><rect x="60.4847%" y="421" width="0.6709%" height="15" fill="rgb(177,177,50)" fg:x="2795" fg:w="31"/><text x="60.7347%" y="431.50"></text></g><g><title>[libc.so.6] (23 samples, 0.50%)</title><rect x="60.6579%" y="405" width="0.4977%" height="15" fill="rgb(213,213,63)" fg:x="2803" fg:w="23"/><text x="60.9079%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (42 samples, 0.91%)</title><rect x="60.3333%" y="501" width="0.9089%" height="15" fill="rgb(239,139,0)" fg:x="2788" fg:w="42"/><text x="60.5833%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (42 samples, 0.91%)</title><rect x="60.3333%" y="485" width="0.9089%" height="15" fill="rgb(193,93,0)" fg:x="2788" fg:w="42"/><text x="60.5833%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.91%)</title><rect x="60.3333%" y="469" width="0.9089%" height="15" fill="rgb(249,149,0)" fg:x="2788" fg:w="42"/><text x="60.5833%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.09%)</title><rect x="61.1556%" y="453" width="0.0866%" height="15" fill="rgb(191,91,0)" fg:x="2826" fg:w="4"/><text x="61.4056%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.04%)</title><rect x="61.1989%" y="437" width="0.0433%" height="15" fill="rgb(192,92,0)" fg:x="2828" fg:w="2"/><text x="61.4489%" y="447.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.09%)</title><rect x="61.2422%" y="357" width="0.0866%" height="15" fill="rgb(206,206,61)" fg:x="2830" fg:w="4"/><text x="61.4922%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.09%)</title><rect x="61.2422%" y="341" width="0.0866%" height="15" fill="rgb(247,147,0)" fg:x="2830" fg:w="4"/><text x="61.4922%" y="351.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="61.3287%" y="357" width="0.0216%" height="15" fill="rgb(222,222,67)" fg:x="2834" fg:w="1"/><text x="61.5787%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (154 samples, 3.33%)</title><rect x="61.2422%" y="389" width="3.3326%" height="15" fill="rgb(193,93,0)" fg:x="2830" fg:w="154"/><text x="61.4922%" y="399.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (154 samples, 3.33%)</title><rect x="61.2422%" y="373" width="3.3326%" height="15" fill="rgb(249,149,0)" fg:x="2830" fg:w="154"/><text x="61.4922%" y="383.50">all..</text></g><g><title>cfree (149 samples, 3.22%)</title><rect x="61.3504%" y="357" width="3.2244%" height="15" fill="rgb(227,227,69)" fg:x="2835" fg:w="149"/><text x="61.6004%" y="367.50">cfr..</text></g><g><title>[libc.so.6] (127 samples, 2.75%)</title><rect x="61.8264%" y="341" width="2.7483%" height="15" fill="rgb(212,212,63)" fg:x="2857" fg:w="127"/><text x="62.0764%" y="351.50">[l..</text></g><g><title>[libc.so.6] (65 samples, 1.41%)</title><rect x="63.1681%" y="325" width="1.4066%" height="15" fill="rgb(178,178,51)" fg:x="2919" fg:w="65"/><text x="63.4181%" y="335.50"></text></g><g><title>[libc.so.6] (15 samples, 0.32%)</title><rect x="64.2502%" y="309" width="0.3246%" height="15" fill="rgb(198,198,58)" fg:x="2969" fg:w="15"/><text x="64.5002%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt;&gt; (155 samples, 3.35%)</title><rect x="61.2422%" y="501" width="3.3543%" height="15" fill="rgb(246,146,0)" fg:x="2830" fg:w="155"/><text x="61.4922%" y="511.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (155 samples, 3.35%)</title><rect x="61.2422%" y="485" width="3.3543%" height="15" fill="rgb(219,119,0)" fg:x="2830" fg:w="155"/><text x="61.4922%" y="495.50">cor..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (155 samples, 3.35%)</title><rect x="61.2422%" y="469" width="3.3543%" height="15" fill="rgb(200,100,0)" fg:x="2830" fg:w="155"/><text x="61.4922%" y="479.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (155 samples, 3.35%)</title><rect x="61.2422%" y="453" width="3.3543%" height="15" fill="rgb(193,93,0)" fg:x="2830" fg:w="155"/><text x="61.4922%" y="463.50">cor..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (155 samples, 3.35%)</title><rect x="61.2422%" y="437" width="3.3543%" height="15" fill="rgb(78,190,190)" fg:x="2830" fg:w="155"/><text x="61.4922%" y="447.50">&lt;&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (155 samples, 3.35%)</title><rect x="61.2422%" y="421" width="3.3543%" height="15" fill="rgb(237,137,0)" fg:x="2830" fg:w="155"/><text x="61.4922%" y="431.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (155 samples, 3.35%)</title><rect x="61.2422%" y="405" width="3.3543%" height="15" fill="rgb(220,120,0)" fg:x="2830" fg:w="155"/><text x="61.4922%" y="415.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="64.5748%" y="389" width="0.0216%" height="15" fill="rgb(208,108,0)" fg:x="2984" fg:w="1"/><text x="64.8248%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="64.5748%" y="373" width="0.0216%" height="15" fill="rgb(241,141,0)" fg:x="2984" fg:w="1"/><text x="64.8248%" y="383.50"></text></g><g><title>&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (1,943 samples, 42.05%)</title><rect x="22.5709%" y="517" width="42.0472%" height="15" fill="rgb(109,219,219)" fg:x="1043" fg:w="1943"/><text x="22.8209%" y="527.50">&lt;alc::objective::scoring::AdvancedScoreFunction as alc::objective::sc..</text></g><g><title>pow (1 samples, 0.02%)</title><rect x="64.5964%" y="501" width="0.0216%" height="15" fill="rgb(181,181,52)" fg:x="2985" fg:w="1"/><text x="64.8464%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="64.6180%" y="517" width="0.0866%" height="15" fill="rgb(245,145,0)" fg:x="2986" fg:w="4"/><text x="64.8680%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.11%)</title><rect x="65.2889%" y="469" width="0.1082%" height="15" fill="rgb(241,141,0)" fg:x="3017" fg:w="5"/><text x="65.5389%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.09%)</title><rect x="65.3105%" y="453" width="0.0866%" height="15" fill="rgb(215,115,0)" fg:x="3018" fg:w="4"/><text x="65.5605%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.09%)</title><rect x="65.3105%" y="437" width="0.0866%" height="15" fill="rgb(238,138,0)" fg:x="3018" fg:w="4"/><text x="65.5605%" y="447.50"></text></g><g><title>__rdl_alloc (12 samples, 0.26%)</title><rect x="65.5702%" y="325" width="0.2597%" height="15" fill="rgb(228,228,69)" fg:x="3030" fg:w="12"/><text x="65.8202%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.26%)</title><rect x="65.5702%" y="309" width="0.2597%" height="15" fill="rgb(190,90,0)" fg:x="3030" fg:w="12"/><text x="65.8202%" y="319.50"></text></g><g><title>__rust_alloc (4 samples, 0.09%)</title><rect x="65.8299%" y="325" width="0.0866%" height="15" fill="rgb(221,221,67)" fg:x="3042" fg:w="4"/><text x="66.0799%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 1.49%)</title><rect x="65.5053%" y="373" width="1.4932%" height="15" fill="rgb(221,121,0)" fg:x="3027" fg:w="69"/><text x="65.7553%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69 samples, 1.49%)</title><rect x="65.5053%" y="357" width="1.4932%" height="15" fill="rgb(215,115,0)" fg:x="3027" fg:w="69"/><text x="65.7553%" y="367.50"></text></g><g><title>alloc::alloc::alloc (69 samples, 1.49%)</title><rect x="65.5053%" y="341" width="1.4932%" height="15" fill="rgb(197,97,0)" fg:x="3027" fg:w="69"/><text x="65.7553%" y="351.50"></text></g><g><title>malloc (50 samples, 1.08%)</title><rect x="65.9165%" y="325" width="1.0820%" height="15" fill="rgb(194,194,57)" fg:x="3046" fg:w="50"/><text x="66.1665%" y="335.50"></text></g><g><title>[libc.so.6] (5 samples, 0.11%)</title><rect x="66.8903%" y="309" width="0.1082%" height="15" fill="rgb(208,208,62)" fg:x="3091" fg:w="5"/><text x="67.1403%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (72 samples, 1.56%)</title><rect x="65.4837%" y="421" width="1.5581%" height="15" fill="rgb(219,119,0)" fg:x="3026" fg:w="72"/><text x="65.7337%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (72 samples, 1.56%)</title><rect x="65.4837%" y="405" width="1.5581%" height="15" fill="rgb(196,96,0)" fg:x="3026" fg:w="72"/><text x="65.7337%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (72 samples, 1.56%)</title><rect x="65.4837%" y="389" width="1.5581%" height="15" fill="rgb(216,116,0)" fg:x="3026" fg:w="72"/><text x="65.7337%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.04%)</title><rect x="66.9985%" y="373" width="0.0433%" height="15" fill="rgb(203,103,0)" fg:x="3096" fg:w="2"/><text x="67.2485%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.04%)</title><rect x="66.9985%" y="357" width="0.0433%" height="15" fill="rgb(248,148,0)" fg:x="3096" fg:w="2"/><text x="67.2485%" y="367.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (108 samples, 2.34%)</title><rect x="65.2889%" y="501" width="2.3372%" height="15" fill="rgb(64,178,178)" fg:x="3017" fg:w="108"/><text x="65.5389%" y="511.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (108 samples, 2.34%)</title><rect x="65.2889%" y="485" width="2.3372%" height="15" fill="rgb(191,91,0)" fg:x="3017" fg:w="108"/><text x="65.5389%" y="495.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (103 samples, 2.23%)</title><rect x="65.3971%" y="469" width="2.2290%" height="15" fill="rgb(204,104,0)" fg:x="3022" fg:w="103"/><text x="65.6471%" y="479.50">a..</text></g><g><title>alloc::slice::hack::to_vec (103 samples, 2.23%)</title><rect x="65.3971%" y="453" width="2.2290%" height="15" fill="rgb(228,128,0)" fg:x="3022" fg:w="103"/><text x="65.6471%" y="463.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103 samples, 2.23%)</title><rect x="65.3971%" y="437" width="2.2290%" height="15" fill="rgb(77,190,190)" fg:x="3022" fg:w="103"/><text x="65.6471%" y="447.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27 samples, 0.58%)</title><rect x="67.0418%" y="421" width="0.5843%" height="15" fill="rgb(205,105,0)" fg:x="3098" fg:w="27"/><text x="67.2918%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.58%)</title><rect x="67.0418%" y="405" width="0.5843%" height="15" fill="rgb(190,90,0)" fg:x="3098" fg:w="27"/><text x="67.2918%" y="415.50"></text></g><g><title>[libc.so.6] (27 samples, 0.58%)</title><rect x="67.0418%" y="389" width="0.5843%" height="15" fill="rgb(225,225,68)" fg:x="3098" fg:w="27"/><text x="67.2918%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="67.6261%" y="325" width="0.0216%" height="15" fill="rgb(176,176,50)" fg:x="3125" fg:w="1"/><text x="67.8761%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="67.6261%" y="309" width="0.0216%" height="15" fill="rgb(237,137,0)" fg:x="3125" fg:w="1"/><text x="67.8761%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.11%)</title><rect x="67.6261%" y="421" width="0.1082%" height="15" fill="rgb(203,103,0)" fg:x="3125" fg:w="5"/><text x="67.8761%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.11%)</title><rect x="67.6261%" y="405" width="0.1082%" height="15" fill="rgb(218,118,0)" fg:x="3125" fg:w="5"/><text x="67.8761%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.11%)</title><rect x="67.6261%" y="389" width="0.1082%" height="15" fill="rgb(248,148,0)" fg:x="3125" fg:w="5"/><text x="67.8761%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.11%)</title><rect x="67.6261%" y="373" width="0.1082%" height="15" fill="rgb(217,117,0)" fg:x="3125" fg:w="5"/><text x="67.8761%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.11%)</title><rect x="67.6261%" y="357" width="0.1082%" height="15" fill="rgb(199,99,0)" fg:x="3125" fg:w="5"/><text x="67.8761%" y="367.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.11%)</title><rect x="67.6261%" y="341" width="0.1082%" height="15" fill="rgb(239,139,0)" fg:x="3125" fg:w="5"/><text x="67.8761%" y="351.50"></text></g><g><title>malloc (4 samples, 0.09%)</title><rect x="67.6477%" y="325" width="0.0866%" height="15" fill="rgb(208,208,62)" fg:x="3126" fg:w="4"/><text x="67.8977%" y="335.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="67.6261%" y="501" width="0.1731%" height="15" fill="rgb(96,207,207)" fg:x="3125" fg:w="8"/><text x="67.8761%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="67.6261%" y="485" width="0.1731%" height="15" fill="rgb(192,92,0)" fg:x="3125" fg:w="8"/><text x="67.8761%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.17%)</title><rect x="67.6261%" y="469" width="0.1731%" height="15" fill="rgb(228,128,0)" fg:x="3125" fg:w="8"/><text x="67.8761%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.17%)</title><rect x="67.6261%" y="453" width="0.1731%" height="15" fill="rgb(249,149,0)" fg:x="3125" fg:w="8"/><text x="67.8761%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.17%)</title><rect x="67.6261%" y="437" width="0.1731%" height="15" fill="rgb(61,175,175)" fg:x="3125" fg:w="8"/><text x="67.8761%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.06%)</title><rect x="67.7343%" y="421" width="0.0649%" height="15" fill="rgb(193,93,0)" fg:x="3130" fg:w="3"/><text x="67.9843%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="67.7343%" y="405" width="0.0649%" height="15" fill="rgb(213,113,0)" fg:x="3130" fg:w="3"/><text x="67.9843%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="67.7775%" y="389" width="0.0216%" height="15" fill="rgb(202,202,60)" fg:x="3132" fg:w="1"/><text x="68.0275%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="67.8208%" y="485" width="0.0216%" height="15" fill="rgb(213,113,0)" fg:x="3134" fg:w="1"/><text x="68.0708%" y="495.50"></text></g><g><title>__rdl_alloc (10 samples, 0.22%)</title><rect x="68.3835%" y="261" width="0.2164%" height="15" fill="rgb(229,229,69)" fg:x="3160" fg:w="10"/><text x="68.6335%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.22%)</title><rect x="68.3835%" y="245" width="0.2164%" height="15" fill="rgb(230,130,0)" fg:x="3160" fg:w="10"/><text x="68.6335%" y="255.50"></text></g><g><title>__rust_alloc (8 samples, 0.17%)</title><rect x="68.5999%" y="261" width="0.1731%" height="15" fill="rgb(219,219,66)" fg:x="3170" fg:w="8"/><text x="68.8499%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 2.19%)</title><rect x="68.1887%" y="309" width="2.1857%" height="15" fill="rgb(244,144,0)" fg:x="3151" fg:w="101"/><text x="68.4387%" y="319.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 2.19%)</title><rect x="68.1887%" y="293" width="2.1857%" height="15" fill="rgb(208,108,0)" fg:x="3151" fg:w="101"/><text x="68.4387%" y="303.50">a..</text></g><g><title>alloc::alloc::alloc (101 samples, 2.19%)</title><rect x="68.1887%" y="277" width="2.1857%" height="15" fill="rgb(251,151,0)" fg:x="3151" fg:w="101"/><text x="68.4387%" y="287.50">a..</text></g><g><title>malloc (74 samples, 1.60%)</title><rect x="68.7730%" y="261" width="1.6014%" height="15" fill="rgb(196,196,57)" fg:x="3178" fg:w="74"/><text x="69.0230%" y="271.50"></text></g><g><title>[libc.so.6] (36 samples, 0.78%)</title><rect x="69.5953%" y="245" width="0.7791%" height="15" fill="rgb(199,199,58)" fg:x="3216" fg:w="36"/><text x="69.8453%" y="255.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="70.3311%" y="229" width="0.0433%" height="15" fill="rgb(194,194,57)" fg:x="3250" fg:w="2"/><text x="70.5811%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (114 samples, 2.47%)</title><rect x="68.0372%" y="357" width="2.4670%" height="15" fill="rgb(237,137,0)" fg:x="3144" fg:w="114"/><text x="68.2872%" y="367.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (114 samples, 2.47%)</title><rect x="68.0372%" y="341" width="2.4670%" height="15" fill="rgb(219,119,0)" fg:x="3144" fg:w="114"/><text x="68.2872%" y="351.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (114 samples, 2.47%)</title><rect x="68.0372%" y="325" width="2.4670%" height="15" fill="rgb(195,95,0)" fg:x="3144" fg:w="114"/><text x="68.2872%" y="335.50">al..</text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.13%)</title><rect x="70.3744%" y="309" width="0.1298%" height="15" fill="rgb(212,112,0)" fg:x="3252" fg:w="6"/><text x="70.6244%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.13%)</title><rect x="70.3744%" y="293" width="0.1298%" height="15" fill="rgb(230,130,0)" fg:x="3252" fg:w="6"/><text x="70.6244%" y="303.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (145 samples, 3.14%)</title><rect x="68.0372%" y="437" width="3.1378%" height="15" fill="rgb(57,171,171)" fg:x="3144" fg:w="145"/><text x="68.2872%" y="447.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (145 samples, 3.14%)</title><rect x="68.0372%" y="421" width="3.1378%" height="15" fill="rgb(204,104,0)" fg:x="3144" fg:w="145"/><text x="68.2872%" y="431.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (145 samples, 3.14%)</title><rect x="68.0372%" y="405" width="3.1378%" height="15" fill="rgb(251,151,0)" fg:x="3144" fg:w="145"/><text x="68.2872%" y="415.50">all..</text></g><g><title>alloc::slice::hack::to_vec (145 samples, 3.14%)</title><rect x="68.0372%" y="389" width="3.1378%" height="15" fill="rgb(239,139,0)" fg:x="3144" fg:w="145"/><text x="68.2872%" y="399.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (145 samples, 3.14%)</title><rect x="68.0372%" y="373" width="3.1378%" height="15" fill="rgb(97,208,208)" fg:x="3144" fg:w="145"/><text x="68.2872%" y="383.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (31 samples, 0.67%)</title><rect x="70.5042%" y="357" width="0.6709%" height="15" fill="rgb(196,96,0)" fg:x="3258" fg:w="31"/><text x="70.7542%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.67%)</title><rect x="70.5042%" y="341" width="0.6709%" height="15" fill="rgb(218,118,0)" fg:x="3258" fg:w="31"/><text x="70.7542%" y="351.50"></text></g><g><title>[libc.so.6] (28 samples, 0.61%)</title><rect x="70.5691%" y="325" width="0.6059%" height="15" fill="rgb(208,208,62)" fg:x="3261" fg:w="28"/><text x="70.8191%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.15%)</title><rect x="71.1751%" y="437" width="0.1515%" height="15" fill="rgb(210,110,0)" fg:x="3289" fg:w="7"/><text x="71.4251%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="71.2184%" y="421" width="0.1082%" height="15" fill="rgb(222,122,0)" fg:x="3291" fg:w="5"/><text x="71.4684%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="71.2184%" y="405" width="0.1082%" height="15" fill="rgb(226,126,0)" fg:x="3291" fg:w="5"/><text x="71.4684%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.11%)</title><rect x="71.2184%" y="389" width="0.1082%" height="15" fill="rgb(197,97,0)" fg:x="3291" fg:w="5"/><text x="71.4684%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="71.3266%" y="341" width="0.0216%" height="15" fill="rgb(219,219,66)" fg:x="3296" fg:w="1"/><text x="71.5766%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="71.3266%" y="325" width="0.0216%" height="15" fill="rgb(235,135,0)" fg:x="3296" fg:w="1"/><text x="71.5766%" y="335.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.04%)</title><rect x="71.3482%" y="341" width="0.0433%" height="15" fill="rgb(214,114,0)" fg:x="3297" fg:w="2"/><text x="71.5982%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.24%)</title><rect x="71.3266%" y="437" width="0.2380%" height="15" fill="rgb(246,146,0)" fg:x="3296" fg:w="11"/><text x="71.5766%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.24%)</title><rect x="71.3266%" y="421" width="0.2380%" height="15" fill="rgb(208,108,0)" fg:x="3296" fg:w="11"/><text x="71.5766%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.24%)</title><rect x="71.3266%" y="405" width="0.2380%" height="15" fill="rgb(231,131,0)" fg:x="3296" fg:w="11"/><text x="71.5766%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.24%)</title><rect x="71.3266%" y="389" width="0.2380%" height="15" fill="rgb(231,131,0)" fg:x="3296" fg:w="11"/><text x="71.5766%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.24%)</title><rect x="71.3266%" y="373" width="0.2380%" height="15" fill="rgb(195,95,0)" fg:x="3296" fg:w="11"/><text x="71.5766%" y="383.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.24%)</title><rect x="71.3266%" y="357" width="0.2380%" height="15" fill="rgb(252,152,0)" fg:x="3296" fg:w="11"/><text x="71.5766%" y="367.50"></text></g><g><title>malloc (8 samples, 0.17%)</title><rect x="71.3915%" y="341" width="0.1731%" height="15" fill="rgb(221,221,67)" fg:x="3299" fg:w="8"/><text x="71.6415%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="71.5430%" y="325" width="0.0216%" height="15" fill="rgb(177,177,50)" fg:x="3306" fg:w="1"/><text x="71.7930%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="71.5430%" y="309" width="0.0216%" height="15" fill="rgb(175,175,50)" fg:x="3306" fg:w="1"/><text x="71.7930%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (180 samples, 3.90%)</title><rect x="67.7992%" y="501" width="3.8953%" height="15" fill="rgb(204,104,0)" fg:x="3133" fg:w="180"/><text x="68.0492%" y="511.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (178 samples, 3.85%)</title><rect x="67.8425%" y="485" width="3.8520%" height="15" fill="rgb(219,119,0)" fg:x="3135" fg:w="178"/><text x="68.0925%" y="495.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (178 samples, 3.85%)</title><rect x="67.8425%" y="469" width="3.8520%" height="15" fill="rgb(241,141,0)" fg:x="3135" fg:w="178"/><text x="68.0925%" y="479.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (178 samples, 3.85%)</title><rect x="67.8425%" y="453" width="3.8520%" height="15" fill="rgb(52,167,167)" fg:x="3135" fg:w="178"/><text x="68.0925%" y="463.50">&lt;T a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6 samples, 0.13%)</title><rect x="71.5646%" y="437" width="0.1298%" height="15" fill="rgb(224,124,0)" fg:x="3307" fg:w="6"/><text x="71.8146%" y="447.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="71.6944%" y="485" width="0.0649%" height="15" fill="rgb(231,131,0)" fg:x="3313" fg:w="3"/><text x="71.9444%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.09%)</title><rect x="71.6944%" y="501" width="0.0866%" height="15" fill="rgb(205,105,0)" fg:x="3313" fg:w="4"/><text x="71.9444%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="71.7594%" y="485" width="0.0216%" height="15" fill="rgb(221,121,0)" fg:x="3316" fg:w="1"/><text x="72.0094%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.26%)</title><rect x="71.7810%" y="501" width="0.2597%" height="15" fill="rgb(244,144,0)" fg:x="3317" fg:w="12"/><text x="72.0310%" y="511.50"></text></g><g><title>core::ptr::read (5 samples, 0.11%)</title><rect x="71.9325%" y="485" width="0.1082%" height="15" fill="rgb(247,147,0)" fg:x="3324" fg:w="5"/><text x="72.1825%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (3 samples, 0.06%)</title><rect x="72.0407%" y="453" width="0.0649%" height="15" fill="rgb(216,116,0)" fg:x="3329" fg:w="3"/><text x="72.2907%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (9 samples, 0.19%)</title><rect x="72.1922%" y="421" width="0.1948%" height="15" fill="rgb(190,90,0)" fg:x="3336" fg:w="9"/><text x="72.4422%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (9 samples, 0.19%)</title><rect x="72.1922%" y="405" width="0.1948%" height="15" fill="rgb(213,113,0)" fg:x="3336" fg:w="9"/><text x="72.4422%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="72.4519%" y="389" width="0.0216%" height="15" fill="rgb(237,137,0)" fg:x="3348" fg:w="1"/><text x="72.7019%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.13%)</title><rect x="72.4735%" y="389" width="0.1298%" height="15" fill="rgb(242,142,0)" fg:x="3349" fg:w="6"/><text x="72.7235%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (5 samples, 0.11%)</title><rect x="72.4951%" y="373" width="0.1082%" height="15" fill="rgb(252,152,0)" fg:x="3350" fg:w="5"/><text x="72.7451%" y="383.50"></text></g><g><title>__rdl_realloc (17 samples, 0.37%)</title><rect x="72.9496%" y="325" width="0.3679%" height="15" fill="rgb(221,221,67)" fg:x="3371" fg:w="17"/><text x="73.1996%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (11 samples, 0.24%)</title><rect x="73.0794%" y="309" width="0.2380%" height="15" fill="rgb(245,145,0)" fg:x="3377" fg:w="11"/><text x="73.3294%" y="319.50"></text></g><g><title>__rust_realloc (7 samples, 0.15%)</title><rect x="73.3175%" y="325" width="0.1515%" height="15" fill="rgb(190,190,55)" fg:x="3388" fg:w="7"/><text x="73.5675%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (538 samples, 11.64%)</title><rect x="72.9496%" y="373" width="11.6425%" height="15" fill="rgb(192,92,0)" fg:x="3371" fg:w="538"/><text x="73.1996%" y="383.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::Global::grow_impl (538 samples, 11.64%)</title><rect x="72.9496%" y="357" width="11.6425%" height="15" fill="rgb(219,119,0)" fg:x="3371" fg:w="538"/><text x="73.1996%" y="367.50">alloc::alloc::Glo..</text></g><g><title>alloc::alloc::realloc (538 samples, 11.64%)</title><rect x="72.9496%" y="341" width="11.6425%" height="15" fill="rgb(196,96,0)" fg:x="3371" fg:w="538"/><text x="73.1996%" y="351.50">alloc::alloc::rea..</text></g><g><title>realloc (514 samples, 11.12%)</title><rect x="73.4689%" y="325" width="11.1231%" height="15" fill="rgb(201,201,59)" fg:x="3395" fg:w="514"/><text x="73.7189%" y="335.50">realloc</text></g><g><title>[libc.so.6] (451 samples, 9.76%)</title><rect x="74.8323%" y="309" width="9.7598%" height="15" fill="rgb(226,226,68)" fg:x="3458" fg:w="451"/><text x="75.0823%" y="319.50">[libc.so.6]</text></g><g><title>[libc.so.6] (386 samples, 8.35%)</title><rect x="76.2389%" y="293" width="8.3532%" height="15" fill="rgb(187,187,54)" fg:x="3523" fg:w="386"/><text x="76.4889%" y="303.50">[libc.so.6]</text></g><g><title>[libc.so.6] (26 samples, 0.56%)</title><rect x="84.0294%" y="277" width="0.5626%" height="15" fill="rgb(205,205,61)" fg:x="3883" fg:w="26"/><text x="84.2794%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="84.5488%" y="261" width="0.0433%" height="15" fill="rgb(218,218,65)" fg:x="3907" fg:w="2"/><text x="84.7988%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (564 samples, 12.21%)</title><rect x="72.6033%" y="389" width="12.2052%" height="15" fill="rgb(190,90,0)" fg:x="3355" fg:w="564"/><text x="72.8533%" y="399.50">alloc::raw_vec::fi..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (10 samples, 0.22%)</title><rect x="84.5921%" y="373" width="0.2164%" height="15" fill="rgb(236,136,0)" fg:x="3909" fg:w="10"/><text x="84.8421%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.13%)</title><rect x="84.8085%" y="389" width="0.1298%" height="15" fill="rgb(236,136,0)" fg:x="3919" fg:w="6"/><text x="85.0585%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.13%)</title><rect x="84.8085%" y="373" width="0.1298%" height="15" fill="rgb(224,124,0)" fg:x="3919" fg:w="6"/><text x="85.0585%" y="383.50"></text></g><g><title>core::cmp::max (15 samples, 0.32%)</title><rect x="84.9383%" y="389" width="0.3246%" height="15" fill="rgb(219,119,0)" fg:x="3925" fg:w="15"/><text x="85.1883%" y="399.50"></text></g><g><title>core::cmp::Ord::max (15 samples, 0.32%)</title><rect x="84.9383%" y="373" width="0.3246%" height="15" fill="rgb(249,149,0)" fg:x="3925" fg:w="15"/><text x="85.1883%" y="383.50"></text></g><g><title>core::cmp::max_by (15 samples, 0.32%)</title><rect x="84.9383%" y="357" width="0.3246%" height="15" fill="rgb(193,93,0)" fg:x="3925" fg:w="15"/><text x="85.1883%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (611 samples, 13.22%)</title><rect x="72.1056%" y="453" width="13.2222%" height="15" fill="rgb(251,151,0)" fg:x="3332" fg:w="611"/><text x="72.3556%" y="463.50">alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (611 samples, 13.22%)</title><rect x="72.1056%" y="437" width="13.2222%" height="15" fill="rgb(206,106,0)" fg:x="3332" fg:w="611"/><text x="72.3556%" y="447.50">alloc::raw_vec::RawV..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (598 samples, 12.94%)</title><rect x="72.3869%" y="421" width="12.9409%" height="15" fill="rgb(221,121,0)" fg:x="3345" fg:w="598"/><text x="72.6369%" y="431.50">alloc::raw_vec::Raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (598 samples, 12.94%)</title><rect x="72.3869%" y="405" width="12.9409%" height="15" fill="rgb(200,100,0)" fg:x="3345" fg:w="598"/><text x="72.6369%" y="415.50">alloc::raw_vec::Raw..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.06%)</title><rect x="85.2629%" y="389" width="0.0649%" height="15" fill="rgb(245,145,0)" fg:x="3940" fg:w="3"/><text x="85.5129%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.06%)</title><rect x="85.2629%" y="373" width="0.0649%" height="15" fill="rgb(205,105,0)" fg:x="3940" fg:w="3"/><text x="85.5129%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.37%)</title><rect x="85.3279%" y="453" width="0.3679%" height="15" fill="rgb(212,112,0)" fg:x="3943" fg:w="17"/><text x="85.5779%" y="463.50"></text></g><g><title>[libc.so.6] (17 samples, 0.37%)</title><rect x="85.3279%" y="437" width="0.3679%" height="15" fill="rgb(187,187,54)" fg:x="3943" fg:w="17"/><text x="85.5779%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (637 samples, 13.78%)</title><rect x="72.0407%" y="469" width="13.7849%" height="15" fill="rgb(246,146,0)" fg:x="3329" fg:w="637"/><text x="72.2907%" y="479.50">alloc::vec::Vec&lt;T,A&gt;:..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.13%)</title><rect x="85.6957%" y="453" width="0.1298%" height="15" fill="rgb(238,138,0)" fg:x="3960" fg:w="6"/><text x="85.9457%" y="463.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (638 samples, 13.81%)</title><rect x="72.0407%" y="501" width="13.8065%" height="15" fill="rgb(57,172,172)" fg:x="3329" fg:w="638"/><text x="72.2907%" y="511.50">alc::keyboard::Layout..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (638 samples, 13.81%)</title><rect x="72.0407%" y="485" width="13.8065%" height="15" fill="rgb(238,138,0)" fg:x="3329" fg:w="638"/><text x="72.2907%" y="495.50">alloc::vec::Vec&lt;T,A&gt;:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.02%)</title><rect x="85.8256%" y="469" width="0.0216%" height="15" fill="rgb(209,109,0)" fg:x="3966" fg:w="1"/><text x="86.0756%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="85.8256%" y="453" width="0.0216%" height="15" fill="rgb(240,140,0)" fg:x="3966" fg:w="1"/><text x="86.0756%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="85.8256%" y="437" width="0.0216%" height="15" fill="rgb(212,112,0)" fg:x="3966" fg:w="1"/><text x="86.0756%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="85.8256%" y="421" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="3966" fg:w="1"/><text x="86.0756%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="85.9554%" y="341" width="0.0216%" height="15" fill="rgb(216,116,0)" fg:x="3972" fg:w="1"/><text x="86.2054%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.04%)</title><rect x="85.9554%" y="357" width="0.0433%" height="15" fill="rgb(206,106,0)" fg:x="3972" fg:w="2"/><text x="86.2054%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="85.9771%" y="341" width="0.0216%" height="15" fill="rgb(212,112,0)" fg:x="3973" fg:w="1"/><text x="86.2271%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.11%)</title><rect x="86.0420%" y="341" width="0.1082%" height="15" fill="rgb(216,116,0)" fg:x="3976" fg:w="5"/><text x="86.2920%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.30%)</title><rect x="85.8905%" y="405" width="0.3030%" height="15" fill="rgb(196,96,0)" fg:x="3969" fg:w="14"/><text x="86.1405%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.30%)</title><rect x="85.8905%" y="389" width="0.3030%" height="15" fill="rgb(211,111,0)" fg:x="3969" fg:w="14"/><text x="86.1405%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.30%)</title><rect x="85.8905%" y="373" width="0.3030%" height="15" fill="rgb(201,101,0)" fg:x="3969" fg:w="14"/><text x="86.1405%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.19%)</title><rect x="85.9987%" y="357" width="0.1948%" height="15" fill="rgb(212,112,0)" fg:x="3974" fg:w="9"/><text x="86.2487%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.04%)</title><rect x="86.1502%" y="341" width="0.0433%" height="15" fill="rgb(206,106,0)" fg:x="3981" fg:w="2"/><text x="86.4002%" y="351.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.13%)</title><rect x="86.1935%" y="405" width="0.1298%" height="15" fill="rgb(208,108,0)" fg:x="3983" fg:w="6"/><text x="86.4435%" y="415.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.06%)</title><rect x="86.2584%" y="389" width="0.0649%" height="15" fill="rgb(222,122,0)" fg:x="3986" fg:w="3"/><text x="86.5084%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.06%)</title><rect x="86.2584%" y="373" width="0.0649%" height="15" fill="rgb(232,132,0)" fg:x="3986" fg:w="3"/><text x="86.5084%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.06%)</title><rect x="86.2584%" y="357" width="0.0649%" height="15" fill="rgb(205,105,0)" fg:x="3986" fg:w="3"/><text x="86.5084%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.06%)</title><rect x="86.3666%" y="277" width="0.0649%" height="15" fill="rgb(197,97,0)" fg:x="3991" fg:w="3"/><text x="86.6166%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="86.4099%" y="261" width="0.0216%" height="15" fill="rgb(227,127,0)" fg:x="3993" fg:w="1"/><text x="86.6599%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.63%)</title><rect x="85.8472%" y="437" width="0.6276%" height="15" fill="rgb(93,204,204)" fg:x="3967" fg:w="29"/><text x="86.0972%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.61%)</title><rect x="85.8689%" y="421" width="0.6059%" height="15" fill="rgb(230,130,0)" fg:x="3968" fg:w="28"/><text x="86.1189%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.15%)</title><rect x="86.3233%" y="405" width="0.1515%" height="15" fill="rgb(241,141,0)" fg:x="3989" fg:w="7"/><text x="86.5733%" y="415.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (7 samples, 0.15%)</title><rect x="86.3233%" y="389" width="0.1515%" height="15" fill="rgb(79,192,192)" fg:x="3989" fg:w="7"/><text x="86.5733%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (7 samples, 0.15%)</title><rect x="86.3233%" y="373" width="0.1515%" height="15" fill="rgb(254,154,0)" fg:x="3989" fg:w="7"/><text x="86.5733%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (7 samples, 0.15%)</title><rect x="86.3233%" y="357" width="0.1515%" height="15" fill="rgb(242,142,0)" fg:x="3989" fg:w="7"/><text x="86.5733%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.15%)</title><rect x="86.3233%" y="341" width="0.1515%" height="15" fill="rgb(206,106,0)" fg:x="3989" fg:w="7"/><text x="86.5733%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.13%)</title><rect x="86.3449%" y="325" width="0.1298%" height="15" fill="rgb(214,114,0)" fg:x="3990" fg:w="6"/><text x="86.5949%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.13%)</title><rect x="86.3449%" y="309" width="0.1298%" height="15" fill="rgb(210,110,0)" fg:x="3990" fg:w="6"/><text x="86.5949%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.13%)</title><rect x="86.3449%" y="293" width="0.1298%" height="15" fill="rgb(227,127,0)" fg:x="3990" fg:w="6"/><text x="86.5949%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.04%)</title><rect x="86.4315%" y="277" width="0.0433%" height="15" fill="rgb(218,118,0)" fg:x="3994" fg:w="2"/><text x="86.6815%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="86.4748%" y="389" width="0.0649%" height="15" fill="rgb(87,198,198)" fg:x="3996" fg:w="3"/><text x="86.7248%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.06%)</title><rect x="86.4748%" y="373" width="0.0649%" height="15" fill="rgb(109,219,219)" fg:x="3996" fg:w="3"/><text x="86.7248%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (6 samples, 0.13%)</title><rect x="86.5397%" y="373" width="0.1298%" height="15" fill="rgb(68,181,181)" fg:x="3999" fg:w="6"/><text x="86.7897%" y="383.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (6 samples, 0.13%)</title><rect x="86.5397%" y="357" width="0.1298%" height="15" fill="rgb(91,203,203)" fg:x="3999" fg:w="6"/><text x="86.7897%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.13%)</title><rect x="86.5397%" y="341" width="0.1298%" height="15" fill="rgb(209,109,0)" fg:x="3999" fg:w="6"/><text x="86.7897%" y="351.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (6 samples, 0.13%)</title><rect x="86.5397%" y="325" width="0.1298%" height="15" fill="rgb(79,191,191)" fg:x="3999" fg:w="6"/><text x="86.7897%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (9 samples, 0.19%)</title><rect x="86.5397%" y="389" width="0.1948%" height="15" fill="rgb(58,173,173)" fg:x="3999" fg:w="9"/><text x="86.7897%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="86.6696%" y="373" width="0.0649%" height="15" fill="rgb(80,193,193)" fg:x="4005" fg:w="3"/><text x="86.9196%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3 samples, 0.06%)</title><rect x="86.6696%" y="357" width="0.0649%" height="15" fill="rgb(83,195,195)" fg:x="4005" fg:w="3"/><text x="86.9196%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.06%)</title><rect x="86.6696%" y="341" width="0.0649%" height="15" fill="rgb(196,96,0)" fg:x="4005" fg:w="3"/><text x="86.9196%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.06%)</title><rect x="86.6696%" y="325" width="0.0649%" height="15" fill="rgb(239,139,0)" fg:x="4005" fg:w="3"/><text x="86.9196%" y="335.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (42 samples, 0.91%)</title><rect x="85.8472%" y="501" width="0.9089%" height="15" fill="rgb(89,201,201)" fg:x="3967" fg:w="42"/><text x="86.0972%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (42 samples, 0.91%)</title><rect x="85.8472%" y="485" width="0.9089%" height="15" fill="rgb(218,118,0)" fg:x="3967" fg:w="42"/><text x="86.0972%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (42 samples, 0.91%)</title><rect x="85.8472%" y="469" width="0.9089%" height="15" fill="rgb(95,206,206)" fg:x="3967" fg:w="42"/><text x="86.0972%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.91%)</title><rect x="85.8472%" y="453" width="0.9089%" height="15" fill="rgb(80,192,192)" fg:x="3967" fg:w="42"/><text x="86.0972%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.28%)</title><rect x="86.4748%" y="437" width="0.2813%" height="15" fill="rgb(68,182,182)" fg:x="3996" fg:w="13"/><text x="86.7248%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.28%)</title><rect x="86.4748%" y="421" width="0.2813%" height="15" fill="rgb(82,195,195)" fg:x="3996" fg:w="13"/><text x="86.7248%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (13 samples, 0.28%)</title><rect x="86.4748%" y="405" width="0.2813%" height="15" fill="rgb(100,210,210)" fg:x="3996" fg:w="13"/><text x="86.7248%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="86.7345%" y="389" width="0.0216%" height="15" fill="rgb(96,208,208)" fg:x="4008" fg:w="1"/><text x="86.9845%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="86.7345%" y="373" width="0.0216%" height="15" fill="rgb(245,145,0)" fg:x="4008" fg:w="1"/><text x="86.9845%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="86.7561%" y="405" width="0.0216%" height="15" fill="rgb(244,144,0)" fg:x="4009" fg:w="1"/><text x="87.0061%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="86.7561%" y="389" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="4009" fg:w="1"/><text x="87.0061%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="86.7561%" y="373" width="0.0216%" height="15" fill="rgb(226,126,0)" fg:x="4009" fg:w="1"/><text x="87.0061%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="86.7778%" y="261" width="0.0216%" height="15" fill="rgb(207,207,61)" fg:x="4010" fg:w="1"/><text x="87.0278%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="86.7778%" y="245" width="0.0216%" height="15" fill="rgb(254,154,0)" fg:x="4010" fg:w="1"/><text x="87.0278%" y="255.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="86.7994%" y="261" width="0.0216%" height="15" fill="rgb(176,176,50)" fg:x="4011" fg:w="1"/><text x="87.0494%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.17%)</title><rect x="86.7778%" y="309" width="0.1731%" height="15" fill="rgb(211,111,0)" fg:x="4010" fg:w="8"/><text x="87.0278%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.17%)</title><rect x="86.7778%" y="293" width="0.1731%" height="15" fill="rgb(195,95,0)" fg:x="4010" fg:w="8"/><text x="87.0278%" y="303.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.17%)</title><rect x="86.7778%" y="277" width="0.1731%" height="15" fill="rgb(198,98,0)" fg:x="4010" fg:w="8"/><text x="87.0278%" y="287.50"></text></g><g><title>malloc (6 samples, 0.13%)</title><rect x="86.8210%" y="261" width="0.1298%" height="15" fill="rgb(184,184,53)" fg:x="4012" fg:w="6"/><text x="87.0710%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="86.9292%" y="245" width="0.0216%" height="15" fill="rgb(221,221,66)" fg:x="4017" fg:w="1"/><text x="87.1792%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.19%)</title><rect x="86.7778%" y="357" width="0.1948%" height="15" fill="rgb(205,105,0)" fg:x="4010" fg:w="9"/><text x="87.0278%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.19%)</title><rect x="86.7778%" y="341" width="0.1948%" height="15" fill="rgb(232,132,0)" fg:x="4010" fg:w="9"/><text x="87.0278%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.19%)</title><rect x="86.7778%" y="325" width="0.1948%" height="15" fill="rgb(228,128,0)" fg:x="4010" fg:w="9"/><text x="87.0278%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="86.9509%" y="309" width="0.0216%" height="15" fill="rgb(197,97,0)" fg:x="4018" fg:w="1"/><text x="87.2009%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="86.9509%" y="293" width="0.0216%" height="15" fill="rgb(246,146,0)" fg:x="4018" fg:w="1"/><text x="87.2009%" y="303.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (14 samples, 0.30%)</title><rect x="86.7561%" y="437" width="0.3030%" height="15" fill="rgb(93,204,204)" fg:x="4009" fg:w="14"/><text x="87.0061%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.30%)</title><rect x="86.7561%" y="421" width="0.3030%" height="15" fill="rgb(190,90,0)" fg:x="4009" fg:w="14"/><text x="87.0061%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.28%)</title><rect x="86.7778%" y="405" width="0.2813%" height="15" fill="rgb(212,112,0)" fg:x="4010" fg:w="13"/><text x="87.0278%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.28%)</title><rect x="86.7778%" y="389" width="0.2813%" height="15" fill="rgb(227,127,0)" fg:x="4010" fg:w="13"/><text x="87.0278%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.28%)</title><rect x="86.7778%" y="373" width="0.2813%" height="15" fill="rgb(57,171,171)" fg:x="4010" fg:w="13"/><text x="87.0278%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.09%)</title><rect x="86.9725%" y="357" width="0.0866%" height="15" fill="rgb(218,118,0)" fg:x="4019" fg:w="4"/><text x="87.2225%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.09%)</title><rect x="86.9725%" y="341" width="0.0866%" height="15" fill="rgb(195,95,0)" fg:x="4019" fg:w="4"/><text x="87.2225%" y="351.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="86.9725%" y="325" width="0.0866%" height="15" fill="rgb(195,195,57)" fg:x="4019" fg:w="4"/><text x="87.2225%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="87.0591%" y="437" width="0.0433%" height="15" fill="rgb(215,115,0)" fg:x="4023" fg:w="2"/><text x="87.3091%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.0807%" y="421" width="0.0216%" height="15" fill="rgb(206,106,0)" fg:x="4024" fg:w="1"/><text x="87.3307%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.0807%" y="405" width="0.0216%" height="15" fill="rgb(193,93,0)" fg:x="4024" fg:w="1"/><text x="87.3307%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="87.0807%" y="389" width="0.0216%" height="15" fill="rgb(226,126,0)" fg:x="4024" fg:w="1"/><text x="87.3307%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="87.1024%" y="389" width="0.0216%" height="15" fill="rgb(199,99,0)" fg:x="4025" fg:w="1"/><text x="87.3524%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="87.1024%" y="373" width="0.0216%" height="15" fill="rgb(250,150,0)" fg:x="4025" fg:w="1"/><text x="87.3524%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="87.1024%" y="357" width="0.0216%" height="15" fill="rgb(243,143,0)" fg:x="4025" fg:w="1"/><text x="87.3524%" y="367.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="87.1024%" y="341" width="0.0216%" height="15" fill="rgb(178,178,51)" fg:x="4025" fg:w="1"/><text x="87.3524%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.39%)</title><rect x="86.7561%" y="501" width="0.3895%" height="15" fill="rgb(217,117,0)" fg:x="4009" fg:w="18"/><text x="87.0061%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.39%)</title><rect x="86.7561%" y="485" width="0.3895%" height="15" fill="rgb(251,151,0)" fg:x="4009" fg:w="18"/><text x="87.0061%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.39%)</title><rect x="86.7561%" y="469" width="0.3895%" height="15" fill="rgb(207,107,0)" fg:x="4009" fg:w="18"/><text x="87.0061%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.39%)</title><rect x="86.7561%" y="453" width="0.3895%" height="15" fill="rgb(53,168,168)" fg:x="4009" fg:w="18"/><text x="87.0061%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="87.1024%" y="437" width="0.0433%" height="15" fill="rgb(227,127,0)" fg:x="4025" fg:w="2"/><text x="87.3524%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="87.1024%" y="421" width="0.0433%" height="15" fill="rgb(240,140,0)" fg:x="4025" fg:w="2"/><text x="87.3524%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.04%)</title><rect x="87.1024%" y="405" width="0.0433%" height="15" fill="rgb(196,96,0)" fg:x="4025" fg:w="2"/><text x="87.3524%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="87.1240%" y="389" width="0.0216%" height="15" fill="rgb(242,142,0)" fg:x="4026" fg:w="1"/><text x="87.3740%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="87.1240%" y="373" width="0.0216%" height="15" fill="rgb(239,139,0)" fg:x="4026" fg:w="1"/><text x="87.3740%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="87.4919%" y="453" width="0.0216%" height="15" fill="rgb(248,148,0)" fg:x="4043" fg:w="1"/><text x="87.7419%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.06%)</title><rect x="87.5135%" y="453" width="0.0649%" height="15" fill="rgb(249,149,0)" fg:x="4044" fg:w="3"/><text x="87.7635%" y="463.50"></text></g><g><title>__rdl_realloc (3 samples, 0.06%)</title><rect x="87.6217%" y="389" width="0.0649%" height="15" fill="rgb(217,217,65)" fg:x="4049" fg:w="3"/><text x="87.8717%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.04%)</title><rect x="87.6434%" y="373" width="0.0433%" height="15" fill="rgb(251,151,0)" fg:x="4050" fg:w="2"/><text x="87.8934%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (127 samples, 2.75%)</title><rect x="87.6217%" y="437" width="2.7483%" height="15" fill="rgb(200,100,0)" fg:x="4049" fg:w="127"/><text x="87.8717%" y="447.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (127 samples, 2.75%)</title><rect x="87.6217%" y="421" width="2.7483%" height="15" fill="rgb(243,143,0)" fg:x="4049" fg:w="127"/><text x="87.8717%" y="431.50">al..</text></g><g><title>alloc::alloc::realloc (127 samples, 2.75%)</title><rect x="87.6217%" y="405" width="2.7483%" height="15" fill="rgb(247,147,0)" fg:x="4049" fg:w="127"/><text x="87.8717%" y="415.50">al..</text></g><g><title>realloc (124 samples, 2.68%)</title><rect x="87.6866%" y="389" width="2.6834%" height="15" fill="rgb(192,192,56)" fg:x="4052" fg:w="124"/><text x="87.9366%" y="399.50">re..</text></g><g><title>[libc.so.6] (117 samples, 2.53%)</title><rect x="87.8381%" y="373" width="2.5319%" height="15" fill="rgb(187,187,54)" fg:x="4059" fg:w="117"/><text x="88.0881%" y="383.50">[l..</text></g><g><title>[libc.so.6] (109 samples, 2.36%)</title><rect x="88.0113%" y="357" width="2.3588%" height="15" fill="rgb(215,215,64)" fg:x="4067" fg:w="109"/><text x="88.2613%" y="367.50">[..</text></g><g><title>[libc.so.6] (33 samples, 0.71%)</title><rect x="89.6559%" y="341" width="0.7141%" height="15" fill="rgb(198,198,58)" fg:x="4143" fg:w="33"/><text x="89.9059%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="90.3268%" y="325" width="0.0433%" height="15" fill="rgb(204,204,60)" fg:x="4174" fg:w="2"/><text x="90.5768%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (138 samples, 2.99%)</title><rect x="87.5784%" y="453" width="2.9864%" height="15" fill="rgb(212,112,0)" fg:x="4047" fg:w="138"/><text x="87.8284%" y="463.50">all..</text></g><g><title>malloc (9 samples, 0.19%)</title><rect x="90.3700%" y="437" width="0.1948%" height="15" fill="rgb(203,203,60)" fg:x="4176" fg:w="9"/><text x="90.6200%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (144 samples, 3.12%)</title><rect x="87.4702%" y="485" width="3.1162%" height="15" fill="rgb(240,140,0)" fg:x="4042" fg:w="144"/><text x="87.7202%" y="495.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (144 samples, 3.12%)</title><rect x="87.4702%" y="469" width="3.1162%" height="15" fill="rgb(229,129,0)" fg:x="4042" fg:w="144"/><text x="87.7202%" y="479.50">all..</text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="90.5648%" y="453" width="0.0216%" height="15" fill="rgb(196,96,0)" fg:x="4185" fg:w="1"/><text x="90.8148%" y="463.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="90.5648%" y="437" width="0.0216%" height="15" fill="rgb(228,128,0)" fg:x="4185" fg:w="1"/><text x="90.8148%" y="447.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="90.5648%" y="421" width="0.0216%" height="15" fill="rgb(192,92,0)" fg:x="4185" fg:w="1"/><text x="90.8148%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.09%)</title><rect x="90.5865%" y="485" width="0.0866%" height="15" fill="rgb(194,94,0)" fg:x="4186" fg:w="4"/><text x="90.8365%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.09%)</title><rect x="90.5865%" y="469" width="0.0866%" height="15" fill="rgb(249,149,0)" fg:x="4186" fg:w="4"/><text x="90.8365%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (171 samples, 3.70%)</title><rect x="87.1456%" y="501" width="3.7005%" height="15" fill="rgb(254,154,0)" fg:x="4027" fg:w="171"/><text x="87.3956%" y="511.50">allo..</text></g><g><title>core::ptr::write (8 samples, 0.17%)</title><rect x="90.6730%" y="485" width="0.1731%" height="15" fill="rgb(213,113,0)" fg:x="4190" fg:w="8"/><text x="90.9230%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="90.8461%" y="501" width="0.0649%" height="15" fill="rgb(247,147,0)" fg:x="4198" fg:w="3"/><text x="91.0961%" y="511.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.09%)</title><rect x="91.0625%" y="405" width="0.0866%" height="15" fill="rgb(201,201,59)" fg:x="4208" fg:w="4"/><text x="91.3125%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.09%)</title><rect x="91.0625%" y="389" width="0.0866%" height="15" fill="rgb(248,148,0)" fg:x="4208" fg:w="4"/><text x="91.3125%" y="399.50"></text></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect x="91.1491%" y="405" width="0.0649%" height="15" fill="rgb(215,215,64)" fg:x="4212" fg:w="3"/><text x="91.3991%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89 samples, 1.93%)</title><rect x="90.9111%" y="437" width="1.9260%" height="15" fill="rgb(219,119,0)" fg:x="4201" fg:w="89"/><text x="91.1611%" y="447.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (89 samples, 1.93%)</title><rect x="90.9111%" y="421" width="1.9260%" height="15" fill="rgb(254,154,0)" fg:x="4201" fg:w="89"/><text x="91.1611%" y="431.50">a..</text></g><g><title>cfree (75 samples, 1.62%)</title><rect x="91.2140%" y="405" width="1.6230%" height="15" fill="rgb(206,206,61)" fg:x="4215" fg:w="75"/><text x="91.4640%" y="415.50"></text></g><g><title>[libc.so.6] (48 samples, 1.04%)</title><rect x="91.7983%" y="389" width="1.0387%" height="15" fill="rgb(209,209,62)" fg:x="4242" fg:w="48"/><text x="92.0483%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (92 samples, 1.99%)</title><rect x="90.9111%" y="501" width="1.9909%" height="15" fill="rgb(207,107,0)" fg:x="4201" fg:w="92"/><text x="91.1611%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (92 samples, 1.99%)</title><rect x="90.9111%" y="485" width="1.9909%" height="15" fill="rgb(225,125,0)" fg:x="4201" fg:w="92"/><text x="91.1611%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (92 samples, 1.99%)</title><rect x="90.9111%" y="469" width="1.9909%" height="15" fill="rgb(245,145,0)" fg:x="4201" fg:w="92"/><text x="91.1611%" y="479.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 1.99%)</title><rect x="90.9111%" y="453" width="1.9909%" height="15" fill="rgb(203,103,0)" fg:x="4201" fg:w="92"/><text x="91.1611%" y="463.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.06%)</title><rect x="92.8370%" y="437" width="0.0649%" height="15" fill="rgb(219,119,0)" fg:x="4290" fg:w="3"/><text x="93.0870%" y="447.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.06%)</title><rect x="92.9885%" y="357" width="0.0649%" height="15" fill="rgb(211,211,63)" fg:x="4297" fg:w="3"/><text x="93.2385%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.06%)</title><rect x="92.9885%" y="341" width="0.0649%" height="15" fill="rgb(206,106,0)" fg:x="4297" fg:w="3"/><text x="93.2385%" y="351.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="93.0535%" y="357" width="0.0433%" height="15" fill="rgb(223,223,67)" fg:x="4300" fg:w="2"/><text x="93.3035%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (81 samples, 1.75%)</title><rect x="92.9669%" y="389" width="1.7529%" height="15" fill="rgb(212,112,0)" fg:x="4296" fg:w="81"/><text x="93.2169%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (81 samples, 1.75%)</title><rect x="92.9669%" y="373" width="1.7529%" height="15" fill="rgb(201,101,0)" fg:x="4296" fg:w="81"/><text x="93.2169%" y="383.50"></text></g><g><title>cfree (75 samples, 1.62%)</title><rect x="93.0967%" y="357" width="1.6230%" height="15" fill="rgb(181,181,52)" fg:x="4302" fg:w="75"/><text x="93.3467%" y="367.50"></text></g><g><title>[libc.so.6] (64 samples, 1.38%)</title><rect x="93.3348%" y="341" width="1.3850%" height="15" fill="rgb(189,189,55)" fg:x="4313" fg:w="64"/><text x="93.5848%" y="351.50"></text></g><g><title>[libc.so.6] (20 samples, 0.43%)</title><rect x="94.2870%" y="325" width="0.4328%" height="15" fill="rgb(216,216,65)" fg:x="4357" fg:w="20"/><text x="94.5370%" y="335.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="94.6548%" y="309" width="0.0649%" height="15" fill="rgb(187,187,54)" fg:x="4374" fg:w="3"/><text x="94.9048%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 1.88%)</title><rect x="92.9020%" y="485" width="1.8827%" height="15" fill="rgb(215,115,0)" fg:x="4293" fg:w="87"/><text x="93.1520%" y="495.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (87 samples, 1.88%)</title><rect x="92.9020%" y="469" width="1.8827%" height="15" fill="rgb(205,105,0)" fg:x="4293" fg:w="87"/><text x="93.1520%" y="479.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (84 samples, 1.82%)</title><rect x="92.9669%" y="453" width="1.8178%" height="15" fill="rgb(226,126,0)" fg:x="4296" fg:w="84"/><text x="93.2169%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (84 samples, 1.82%)</title><rect x="92.9669%" y="437" width="1.8178%" height="15" fill="rgb(217,117,0)" fg:x="4296" fg:w="84"/><text x="93.2169%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (84 samples, 1.82%)</title><rect x="92.9669%" y="421" width="1.8178%" height="15" fill="rgb(237,137,0)" fg:x="4296" fg:w="84"/><text x="93.2169%" y="431.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 1.82%)</title><rect x="92.9669%" y="405" width="1.8178%" height="15" fill="rgb(242,142,0)" fg:x="4296" fg:w="84"/><text x="93.2169%" y="415.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.06%)</title><rect x="94.7198%" y="389" width="0.0649%" height="15" fill="rgb(202,102,0)" fg:x="4377" fg:w="3"/><text x="94.9698%" y="399.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="94.8280%" y="421" width="0.0216%" height="15" fill="rgb(175,175,50)" fg:x="4382" fg:w="1"/><text x="95.0780%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.30%)</title><rect x="94.8063%" y="453" width="0.3030%" height="15" fill="rgb(195,95,0)" fg:x="4381" fg:w="14"/><text x="95.0563%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.30%)</title><rect x="94.8063%" y="437" width="0.3030%" height="15" fill="rgb(241,141,0)" fg:x="4381" fg:w="14"/><text x="95.0563%" y="447.50"></text></g><g><title>cfree (12 samples, 0.26%)</title><rect x="94.8496%" y="421" width="0.2597%" height="15" fill="rgb(203,203,60)" fg:x="4383" fg:w="12"/><text x="95.0996%" y="431.50"></text></g><g><title>[libc.so.6] (9 samples, 0.19%)</title><rect x="94.9145%" y="405" width="0.1948%" height="15" fill="rgb(228,228,69)" fg:x="4386" fg:w="9"/><text x="95.1645%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="95.0444%" y="389" width="0.0649%" height="15" fill="rgb(182,182,52)" fg:x="4392" fg:w="3"/><text x="95.2944%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (103 samples, 2.23%)</title><rect x="92.9020%" y="501" width="2.2290%" height="15" fill="rgb(211,111,0)" fg:x="4293" fg:w="103"/><text x="93.1520%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (16 samples, 0.35%)</title><rect x="94.7847%" y="485" width="0.3462%" height="15" fill="rgb(210,110,0)" fg:x="4380" fg:w="16"/><text x="95.0347%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.35%)</title><rect x="94.7847%" y="469" width="0.3462%" height="15" fill="rgb(218,118,0)" fg:x="4380" fg:w="16"/><text x="95.0347%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="95.1093%" y="453" width="0.0216%" height="15" fill="rgb(191,91,0)" fg:x="4395" fg:w="1"/><text x="95.3593%" y="463.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="95.1526%" y="373" width="0.0216%" height="15" fill="rgb(218,218,65)" fg:x="4397" fg:w="1"/><text x="95.4026%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="95.1526%" y="357" width="0.0216%" height="15" fill="rgb(253,153,0)" fg:x="4397" fg:w="1"/><text x="95.4026%" y="367.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="95.1742%" y="373" width="0.0433%" height="15" fill="rgb(222,222,67)" fg:x="4398" fg:w="2"/><text x="95.4242%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (19 samples, 0.41%)</title><rect x="95.1309%" y="501" width="0.4112%" height="15" fill="rgb(203,103,0)" fg:x="4396" fg:w="19"/><text x="95.3809%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.41%)</title><rect x="95.1309%" y="485" width="0.4112%" height="15" fill="rgb(208,108,0)" fg:x="4396" fg:w="19"/><text x="95.3809%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (19 samples, 0.41%)</title><rect x="95.1309%" y="469" width="0.4112%" height="15" fill="rgb(224,124,0)" fg:x="4396" fg:w="19"/><text x="95.3809%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.41%)</title><rect x="95.1309%" y="453" width="0.4112%" height="15" fill="rgb(68,181,181)" fg:x="4396" fg:w="19"/><text x="95.3809%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (19 samples, 0.41%)</title><rect x="95.1309%" y="437" width="0.4112%" height="15" fill="rgb(214,114,0)" fg:x="4396" fg:w="19"/><text x="95.3809%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.41%)</title><rect x="95.1309%" y="421" width="0.4112%" height="15" fill="rgb(204,104,0)" fg:x="4396" fg:w="19"/><text x="95.3809%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.41%)</title><rect x="95.1309%" y="405" width="0.4112%" height="15" fill="rgb(195,95,0)" fg:x="4396" fg:w="19"/><text x="95.3809%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.41%)</title><rect x="95.1309%" y="389" width="0.4112%" height="15" fill="rgb(220,120,0)" fg:x="4396" fg:w="19"/><text x="95.3809%" y="399.50"></text></g><g><title>cfree (15 samples, 0.32%)</title><rect x="95.2175%" y="373" width="0.3246%" height="15" fill="rgb(217,217,65)" fg:x="4400" fg:w="15"/><text x="95.4675%" y="383.50"></text></g><g><title>[libc.so.6] (10 samples, 0.22%)</title><rect x="95.3257%" y="357" width="0.2164%" height="15" fill="rgb(221,221,66)" fg:x="4405" fg:w="10"/><text x="95.5757%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.09%)</title><rect x="95.5421%" y="405" width="0.0866%" height="15" fill="rgb(236,136,0)" fg:x="4415" fg:w="4"/><text x="95.7921%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.09%)</title><rect x="95.5421%" y="389" width="0.0866%" height="15" fill="rgb(197,97,0)" fg:x="4415" fg:w="4"/><text x="95.7921%" y="399.50"></text></g><g><title>cfree (4 samples, 0.09%)</title><rect x="95.5421%" y="373" width="0.0866%" height="15" fill="rgb(211,211,63)" fg:x="4415" fg:w="4"/><text x="95.7921%" y="383.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="95.5421%" y="357" width="0.0866%" height="15" fill="rgb(223,223,67)" fg:x="4415" fg:w="4"/><text x="95.7921%" y="367.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (1,431 samples, 30.97%)</title><rect x="64.7046%" y="517" width="30.9673%" height="15" fill="rgb(92,204,204)" fg:x="2990" fg:w="1431"/><text x="64.9546%" y="527.50">alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_seque..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (6 samples, 0.13%)</title><rect x="95.5421%" y="501" width="0.1298%" height="15" fill="rgb(247,147,0)" fg:x="4415" fg:w="6"/><text x="95.7921%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="95.5421%" y="485" width="0.1298%" height="15" fill="rgb(235,135,0)" fg:x="4415" fg:w="6"/><text x="95.7921%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (6 samples, 0.13%)</title><rect x="95.5421%" y="469" width="0.1298%" height="15" fill="rgb(241,141,0)" fg:x="4415" fg:w="6"/><text x="95.7921%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="95.5421%" y="453" width="0.1298%" height="15" fill="rgb(100,211,211)" fg:x="4415" fg:w="6"/><text x="95.7921%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (6 samples, 0.13%)</title><rect x="95.5421%" y="437" width="0.1298%" height="15" fill="rgb(227,127,0)" fg:x="4415" fg:w="6"/><text x="95.7921%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="95.5421%" y="421" width="0.1298%" height="15" fill="rgb(207,107,0)" fg:x="4415" fg:w="6"/><text x="95.7921%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="95.6287%" y="405" width="0.0433%" height="15" fill="rgb(241,141,0)" fg:x="4419" fg:w="2"/><text x="95.8787%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="95.6503%" y="389" width="0.0216%" height="15" fill="rgb(203,103,0)" fg:x="4420" fg:w="1"/><text x="95.9003%" y="399.50"></text></g><g><title>alc::optimizer::arg_min (20 samples, 0.43%)</title><rect x="95.6719%" y="517" width="0.4328%" height="15" fill="rgb(62,176,176)" fg:x="4421" fg:w="20"/><text x="95.9219%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (17 samples, 0.37%)</title><rect x="95.7369%" y="501" width="0.3679%" height="15" fill="rgb(236,136,0)" fg:x="4424" fg:w="17"/><text x="95.9869%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (17 samples, 0.37%)</title><rect x="95.7369%" y="485" width="0.3679%" height="15" fill="rgb(215,115,0)" fg:x="4424" fg:w="17"/><text x="95.9869%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.37%)</title><rect x="95.7369%" y="469" width="0.3679%" height="15" fill="rgb(223,123,0)" fg:x="4424" fg:w="17"/><text x="95.9869%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.37%)</title><rect x="95.7369%" y="453" width="0.3679%" height="15" fill="rgb(230,130,0)" fg:x="4424" fg:w="17"/><text x="95.9869%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (9 samples, 0.19%)</title><rect x="95.9100%" y="437" width="0.1948%" height="15" fill="rgb(196,96,0)" fg:x="4432" fg:w="9"/><text x="96.1600%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (9 samples, 0.19%)</title><rect x="95.9100%" y="421" width="0.1948%" height="15" fill="rgb(211,111,0)" fg:x="4432" fg:w="9"/><text x="96.1600%" y="431.50"></text></g><g><title>core::cmp::min_by (9 samples, 0.19%)</title><rect x="95.9100%" y="405" width="0.1948%" height="15" fill="rgb(235,135,0)" fg:x="4432" fg:w="9"/><text x="96.1600%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.17%)</title><rect x="95.9316%" y="389" width="0.1731%" height="15" fill="rgb(223,123,0)" fg:x="4433" fg:w="8"/><text x="96.1816%" y="399.50"></text></g><g><title>alc::optimizer::arg_min::_{{closure}} (8 samples, 0.17%)</title><rect x="95.9316%" y="373" width="0.1731%" height="15" fill="rgb(97,208,208)" fg:x="4433" fg:w="8"/><text x="96.1816%" y="383.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::total_cmp (8 samples, 0.17%)</title><rect x="95.9316%" y="357" width="0.1731%" height="15" fill="rgb(197,97,0)" fg:x="4433" fg:w="8"/><text x="96.1816%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="96.1264%" y="469" width="0.0216%" height="15" fill="rgb(198,98,0)" fg:x="4442" fg:w="1"/><text x="96.3764%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="96.1480%" y="469" width="0.0216%" height="15" fill="rgb(206,106,0)" fg:x="4443" fg:w="1"/><text x="96.3980%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (55 samples, 1.19%)</title><rect x="96.2129%" y="453" width="1.1902%" height="15" fill="rgb(247,147,0)" fg:x="4446" fg:w="55"/><text x="96.4629%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (55 samples, 1.19%)</title><rect x="96.2129%" y="437" width="1.1902%" height="15" fill="rgb(248,148,0)" fg:x="4446" fg:w="55"/><text x="96.4629%" y="447.50"></text></g><g><title>alloc::alloc::realloc (55 samples, 1.19%)</title><rect x="96.2129%" y="421" width="1.1902%" height="15" fill="rgb(209,109,0)" fg:x="4446" fg:w="55"/><text x="96.4629%" y="431.50"></text></g><g><title>realloc (55 samples, 1.19%)</title><rect x="96.2129%" y="405" width="1.1902%" height="15" fill="rgb(198,198,58)" fg:x="4446" fg:w="55"/><text x="96.4629%" y="415.50"></text></g><g><title>[libc.so.6] (49 samples, 1.06%)</title><rect x="96.3428%" y="389" width="1.0604%" height="15" fill="rgb(202,202,59)" fg:x="4452" fg:w="49"/><text x="96.5928%" y="399.50"></text></g><g><title>[libc.so.6] (48 samples, 1.04%)</title><rect x="96.3644%" y="373" width="1.0387%" height="15" fill="rgb(188,188,55)" fg:x="4453" fg:w="48"/><text x="96.6144%" y="383.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="97.3166%" y="357" width="0.0866%" height="15" fill="rgb(191,191,56)" fg:x="4497" fg:w="4"/><text x="97.5666%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (61 samples, 1.32%)</title><rect x="96.1264%" y="501" width="1.3201%" height="15" fill="rgb(214,114,0)" fg:x="4442" fg:w="61"/><text x="96.3764%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (61 samples, 1.32%)</title><rect x="96.1264%" y="485" width="1.3201%" height="15" fill="rgb(201,101,0)" fg:x="4442" fg:w="61"/><text x="96.3764%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (59 samples, 1.28%)</title><rect x="96.1697%" y="469" width="1.2768%" height="15" fill="rgb(246,146,0)" fg:x="4444" fg:w="59"/><text x="96.4197%" y="479.50"></text></g><g><title>malloc (2 samples, 0.04%)</title><rect x="97.4032%" y="453" width="0.0433%" height="15" fill="rgb(215,215,64)" fg:x="4501" fg:w="2"/><text x="97.6532%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (64 samples, 1.38%)</title><rect x="96.1047%" y="517" width="1.3850%" height="15" fill="rgb(246,146,0)" fg:x="4441" fg:w="64"/><text x="96.3547%" y="527.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="97.4464%" y="501" width="0.0433%" height="15" fill="rgb(202,102,0)" fg:x="4503" fg:w="2"/><text x="97.6964%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="97.4897%" y="517" width="0.0216%" height="15" fill="rgb(241,141,0)" fg:x="4505" fg:w="1"/><text x="97.7397%" y="527.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="97.5330%" y="421" width="0.0216%" height="15" fill="rgb(216,216,65)" fg:x="4507" fg:w="1"/><text x="97.7830%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="97.5330%" y="405" width="0.0216%" height="15" fill="rgb(200,100,0)" fg:x="4507" fg:w="1"/><text x="97.7830%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (4 samples, 0.09%)</title><rect x="97.5114%" y="517" width="0.0866%" height="15" fill="rgb(201,101,0)" fg:x="4506" fg:w="4"/><text x="97.7614%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (4 samples, 0.09%)</title><rect x="97.5114%" y="501" width="0.0866%" height="15" fill="rgb(218,118,0)" fg:x="4506" fg:w="4"/><text x="97.7614%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (4 samples, 0.09%)</title><rect x="97.5114%" y="485" width="0.0866%" height="15" fill="rgb(229,129,0)" fg:x="4506" fg:w="4"/><text x="97.7614%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="97.5114%" y="469" width="0.0866%" height="15" fill="rgb(246,146,0)" fg:x="4506" fg:w="4"/><text x="97.7614%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.09%)</title><rect x="97.5114%" y="453" width="0.0866%" height="15" fill="rgb(224,124,0)" fg:x="4506" fg:w="4"/><text x="97.7614%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.09%)</title><rect x="97.5114%" y="437" width="0.0866%" height="15" fill="rgb(252,152,0)" fg:x="4506" fg:w="4"/><text x="97.7614%" y="447.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="97.5546%" y="421" width="0.0433%" height="15" fill="rgb(207,207,61)" fg:x="4508" fg:w="2"/><text x="97.8046%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="97.5546%" y="405" width="0.0433%" height="15" fill="rgb(183,183,53)" fg:x="4508" fg:w="2"/><text x="97.8046%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="97.5979%" y="517" width="0.0216%" height="15" fill="rgb(205,105,0)" fg:x="4510" fg:w="1"/><text x="97.8479%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.02%)</title><rect x="97.5979%" y="501" width="0.0216%" height="15" fill="rgb(199,99,0)" fg:x="4510" fg:w="1"/><text x="97.8479%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.5979%" y="485" width="0.0216%" height="15" fill="rgb(202,102,0)" fg:x="4510" fg:w="1"/><text x="97.8479%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="97.5979%" y="469" width="0.0216%" height="15" fill="rgb(202,102,0)" fg:x="4510" fg:w="1"/><text x="97.8479%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (12 samples, 0.26%)</title><rect x="97.6196%" y="517" width="0.2597%" height="15" fill="rgb(248,148,0)" fg:x="4511" fg:w="12"/><text x="97.8696%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (12 samples, 0.26%)</title><rect x="97.6196%" y="501" width="0.2597%" height="15" fill="rgb(237,137,0)" fg:x="4511" fg:w="12"/><text x="97.8696%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.26%)</title><rect x="97.6196%" y="485" width="0.2597%" height="15" fill="rgb(208,108,0)" fg:x="4511" fg:w="12"/><text x="97.8696%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.26%)</title><rect x="97.6196%" y="469" width="0.2597%" height="15" fill="rgb(224,124,0)" fg:x="4511" fg:w="12"/><text x="97.8696%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.26%)</title><rect x="97.6196%" y="453" width="0.2597%" height="15" fill="rgb(207,107,0)" fg:x="4511" fg:w="12"/><text x="97.8696%" y="463.50"></text></g><g><title>cfree (12 samples, 0.26%)</title><rect x="97.6196%" y="437" width="0.2597%" height="15" fill="rgb(176,176,50)" fg:x="4511" fg:w="12"/><text x="97.8696%" y="447.50"></text></g><g><title>[libc.so.6] (11 samples, 0.24%)</title><rect x="97.6412%" y="421" width="0.2380%" height="15" fill="rgb(196,196,57)" fg:x="4512" fg:w="11"/><text x="97.8912%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="97.8576%" y="405" width="0.0216%" height="15" fill="rgb(212,212,63)" fg:x="4522" fg:w="1"/><text x="98.1076%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (5 samples, 0.11%)</title><rect x="97.8792%" y="485" width="0.1082%" height="15" fill="rgb(206,106,0)" fg:x="4523" fg:w="5"/><text x="98.1292%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="97.8792%" y="469" width="0.1082%" height="15" fill="rgb(93,204,204)" fg:x="4523" fg:w="5"/><text x="98.1292%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (5 samples, 0.11%)</title><rect x="97.8792%" y="453" width="0.1082%" height="15" fill="rgb(241,141,0)" fg:x="4523" fg:w="5"/><text x="98.1292%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="97.8792%" y="437" width="0.1082%" height="15" fill="rgb(192,92,0)" fg:x="4523" fg:w="5"/><text x="98.1292%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.11%)</title><rect x="97.8792%" y="421" width="0.1082%" height="15" fill="rgb(193,93,0)" fg:x="4523" fg:w="5"/><text x="98.1292%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.11%)</title><rect x="97.8792%" y="405" width="0.1082%" height="15" fill="rgb(195,95,0)" fg:x="4523" fg:w="5"/><text x="98.1292%" y="415.50"></text></g><g><title>cfree (5 samples, 0.11%)</title><rect x="97.8792%" y="389" width="0.1082%" height="15" fill="rgb(176,176,50)" fg:x="4523" fg:w="5"/><text x="98.1292%" y="399.50"></text></g><g><title>[libc.so.6] (5 samples, 0.11%)</title><rect x="97.8792%" y="373" width="0.1082%" height="15" fill="rgb(179,179,51)" fg:x="4523" fg:w="5"/><text x="98.1292%" y="383.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="97.9009%" y="357" width="0.0866%" height="15" fill="rgb(215,215,64)" fg:x="4524" fg:w="4"/><text x="98.1509%" y="367.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population (3,570 samples, 77.26%)</title><rect x="20.7531%" y="565" width="77.2560%" height="15" fill="rgb(76,188,188)" fg:x="959" fg:w="3570"/><text x="21.0031%" y="575.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets (3,545 samples, 76.71%)</title><rect x="21.2941%" y="549" width="76.7150%" height="15" fill="rgb(70,183,183)" fg:x="984" fg:w="3545"/><text x="21.5441%" y="559.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_datasets</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (3,501 samples, 75.76%)</title><rect x="22.2463%" y="533" width="75.7628%" height="15" fill="rgb(54,169,169)" fg:x="1028" fg:w="3501"/><text x="22.4963%" y="543.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (6 samples, 0.13%)</title><rect x="97.8792%" y="517" width="0.1298%" height="15" fill="rgb(206,106,0)" fg:x="4523" fg:w="6"/><text x="98.1292%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="97.8792%" y="501" width="0.1298%" height="15" fill="rgb(216,116,0)" fg:x="4523" fg:w="6"/><text x="98.1292%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.02%)</title><rect x="97.9874%" y="485" width="0.0216%" height="15" fill="rgb(239,139,0)" fg:x="4528" fg:w="1"/><text x="98.2374%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.02%)</title><rect x="98.0091%" y="549" width="0.0216%" height="15" fill="rgb(210,110,0)" fg:x="4529" fg:w="1"/><text x="98.2591%" y="559.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.02%)</title><rect x="98.0091%" y="533" width="0.0216%" height="15" fill="rgb(225,125,0)" fg:x="4529" fg:w="1"/><text x="98.2591%" y="543.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.02%)</title><rect x="98.0091%" y="517" width="0.0216%" height="15" fill="rgb(238,138,0)" fg:x="4529" fg:w="1"/><text x="98.2591%" y="527.50"></text></g><g><title>core::slice::sort::merge (1 samples, 0.02%)</title><rect x="98.0091%" y="501" width="0.0216%" height="15" fill="rgb(222,122,0)" fg:x="4529" fg:w="1"/><text x="98.2591%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="98.0091%" y="485" width="0.0216%" height="15" fill="rgb(202,102,0)" fg:x="4529" fg:w="1"/><text x="98.2591%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="98.0307%" y="469" width="0.0433%" height="15" fill="rgb(198,98,0)" fg:x="4530" fg:w="2"/><text x="98.2807%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.0307%" y="453" width="0.0433%" height="15" fill="rgb(210,110,0)" fg:x="4530" fg:w="2"/><text x="98.2807%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (2 samples, 0.04%)</title><rect x="98.0307%" y="437" width="0.0433%" height="15" fill="rgb(254,154,0)" fg:x="4530" fg:w="2"/><text x="98.2807%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (2 samples, 0.04%)</title><rect x="98.0307%" y="421" width="0.0433%" height="15" fill="rgb(247,147,0)" fg:x="4530" fg:w="2"/><text x="98.2807%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (2 samples, 0.04%)</title><rect x="98.0307%" y="405" width="0.0433%" height="15" fill="rgb(253,153,0)" fg:x="4530" fg:w="2"/><text x="98.2807%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (2 samples, 0.04%)</title><rect x="98.0307%" y="389" width="0.0433%" height="15" fill="rgb(194,94,0)" fg:x="4530" fg:w="2"/><text x="98.2807%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (2 samples, 0.04%)</title><rect x="98.0307%" y="373" width="0.0433%" height="15" fill="rgb(219,119,0)" fg:x="4530" fg:w="2"/><text x="98.2807%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.0307%" y="357" width="0.0433%" height="15" fill="rgb(219,119,0)" fg:x="4530" fg:w="2"/><text x="98.2807%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="98.0524%" y="341" width="0.0216%" height="15" fill="rgb(252,152,0)" fg:x="4531" fg:w="1"/><text x="98.3024%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="98.0524%" y="325" width="0.0216%" height="15" fill="rgb(234,134,0)" fg:x="4531" fg:w="1"/><text x="98.3024%" y="335.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="98.0524%" y="309" width="0.0216%" height="15" fill="rgb(177,177,50)" fg:x="4531" fg:w="1"/><text x="98.3024%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="98.0524%" y="293" width="0.0216%" height="15" fill="rgb(192,192,56)" fg:x="4531" fg:w="1"/><text x="98.3024%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="98.0740%" y="309" width="0.1082%" height="15" fill="rgb(212,112,0)" fg:x="4532" fg:w="5"/><text x="98.3240%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (5 samples, 0.11%)</title><rect x="98.0740%" y="293" width="0.1082%" height="15" fill="rgb(192,92,0)" fg:x="4532" fg:w="5"/><text x="98.3240%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (5 samples, 0.11%)</title><rect x="98.0740%" y="277" width="0.1082%" height="15" fill="rgb(228,128,0)" fg:x="4532" fg:w="5"/><text x="98.3240%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.11%)</title><rect x="98.0740%" y="261" width="0.1082%" height="15" fill="rgb(225,125,0)" fg:x="4532" fg:w="5"/><text x="98.3240%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.11%)</title><rect x="98.0740%" y="245" width="0.1082%" height="15" fill="rgb(202,102,0)" fg:x="4532" fg:w="5"/><text x="98.3240%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="98.0740%" y="229" width="0.1082%" height="15" fill="rgb(206,106,0)" fg:x="4532" fg:w="5"/><text x="98.3240%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.09%)</title><rect x="98.0957%" y="213" width="0.0866%" height="15" fill="rgb(201,101,0)" fg:x="4533" fg:w="4"/><text x="98.3457%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.09%)</title><rect x="98.0957%" y="197" width="0.0866%" height="15" fill="rgb(212,112,0)" fg:x="4533" fg:w="4"/><text x="98.3457%" y="207.50"></text></g><g><title>cfree (4 samples, 0.09%)</title><rect x="98.0957%" y="181" width="0.0866%" height="15" fill="rgb(200,200,59)" fg:x="4533" fg:w="4"/><text x="98.3457%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="98.1389%" y="165" width="0.0433%" height="15" fill="rgb(206,206,61)" fg:x="4535" fg:w="2"/><text x="98.3889%" y="175.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::take_best_layouts (10 samples, 0.22%)</title><rect x="98.0091%" y="565" width="0.2164%" height="15" fill="rgb(70,183,183)" fg:x="4529" fg:w="10"/><text x="98.2591%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)&gt;&gt; (9 samples, 0.19%)</title><rect x="98.0307%" y="549" width="0.1948%" height="15" fill="rgb(228,128,0)" fg:x="4530" fg:w="9"/><text x="98.2807%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.19%)</title><rect x="98.0307%" y="533" width="0.1948%" height="15" fill="rgb(221,121,0)" fg:x="4530" fg:w="9"/><text x="98.2807%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)]&gt; (9 samples, 0.19%)</title><rect x="98.0307%" y="517" width="0.1948%" height="15" fill="rgb(231,131,0)" fg:x="4530" fg:w="9"/><text x="98.2807%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f64)&gt; (9 samples, 0.19%)</title><rect x="98.0307%" y="501" width="0.1948%" height="15" fill="rgb(205,105,0)" fg:x="4530" fg:w="9"/><text x="98.2807%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (9 samples, 0.19%)</title><rect x="98.0307%" y="485" width="0.1948%" height="15" fill="rgb(246,146,0)" fg:x="4530" fg:w="9"/><text x="98.2807%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (7 samples, 0.15%)</title><rect x="98.0740%" y="469" width="0.1515%" height="15" fill="rgb(235,135,0)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (7 samples, 0.15%)</title><rect x="98.0740%" y="453" width="0.1515%" height="15" fill="rgb(231,131,0)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (7 samples, 0.15%)</title><rect x="98.0740%" y="437" width="0.1515%" height="15" fill="rgb(203,103,0)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.15%)</title><rect x="98.0740%" y="421" width="0.1515%" height="15" fill="rgb(85,197,197)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (7 samples, 0.15%)</title><rect x="98.0740%" y="405" width="0.1515%" height="15" fill="rgb(109,219,219)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (7 samples, 0.15%)</title><rect x="98.0740%" y="389" width="0.1515%" height="15" fill="rgb(89,201,201)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 0.15%)</title><rect x="98.0740%" y="373" width="0.1515%" height="15" fill="rgb(68,181,181)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7 samples, 0.15%)</title><rect x="98.0740%" y="357" width="0.1515%" height="15" fill="rgb(229,129,0)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (7 samples, 0.15%)</title><rect x="98.0740%" y="341" width="0.1515%" height="15" fill="rgb(205,105,0)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (7 samples, 0.15%)</title><rect x="98.0740%" y="325" width="0.1515%" height="15" fill="rgb(227,127,0)" fg:x="4532" fg:w="7"/><text x="98.3240%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.04%)</title><rect x="98.1822%" y="309" width="0.0433%" height="15" fill="rgb(220,120,0)" fg:x="4537" fg:w="2"/><text x="98.4322%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.1822%" y="293" width="0.0433%" height="15" fill="rgb(196,96,0)" fg:x="4537" fg:w="2"/><text x="98.4322%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="98.1822%" y="277" width="0.0433%" height="15" fill="rgb(229,129,0)" fg:x="4537" fg:w="2"/><text x="98.4322%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="98.1822%" y="261" width="0.0433%" height="15" fill="rgb(213,113,0)" fg:x="4537" fg:w="2"/><text x="98.4322%" y="271.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="98.2039%" y="245" width="0.0216%" height="15" fill="rgb(199,199,59)" fg:x="4538" fg:w="1"/><text x="98.4539%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="98.2039%" y="229" width="0.0216%" height="15" fill="rgb(220,220,66)" fg:x="4538" fg:w="1"/><text x="98.4539%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.2255%" y="405" width="0.0216%" height="15" fill="rgb(86,198,198)" fg:x="4539" fg:w="1"/><text x="98.4755%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="98.2255%" y="389" width="0.0216%" height="15" fill="rgb(91,202,202)" fg:x="4539" fg:w="1"/><text x="98.4755%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.2255%" y="373" width="0.0216%" height="15" fill="rgb(108,218,218)" fg:x="4539" fg:w="1"/><text x="98.4755%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.09%)</title><rect x="98.2471%" y="245" width="0.0866%" height="15" fill="rgb(205,105,0)" fg:x="4540" fg:w="4"/><text x="98.4971%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.09%)</title><rect x="98.2471%" y="229" width="0.0866%" height="15" fill="rgb(204,104,0)" fg:x="4540" fg:w="4"/><text x="98.4971%" y="239.50"></text></g><g><title>cfree (4 samples, 0.09%)</title><rect x="98.2471%" y="213" width="0.0866%" height="15" fill="rgb(201,201,59)" fg:x="4540" fg:w="4"/><text x="98.4971%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="98.2904%" y="197" width="0.0433%" height="15" fill="rgb(212,212,63)" fg:x="4542" fg:w="2"/><text x="98.5404%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="98.2471%" y="341" width="0.1082%" height="15" fill="rgb(209,109,0)" fg:x="4540" fg:w="5"/><text x="98.4971%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (5 samples, 0.11%)</title><rect x="98.2471%" y="325" width="0.1082%" height="15" fill="rgb(220,120,0)" fg:x="4540" fg:w="5"/><text x="98.4971%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (5 samples, 0.11%)</title><rect x="98.2471%" y="309" width="0.1082%" height="15" fill="rgb(226,126,0)" fg:x="4540" fg:w="5"/><text x="98.4971%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.11%)</title><rect x="98.2471%" y="293" width="0.1082%" height="15" fill="rgb(211,111,0)" fg:x="4540" fg:w="5"/><text x="98.4971%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (5 samples, 0.11%)</title><rect x="98.2471%" y="277" width="0.1082%" height="15" fill="rgb(206,106,0)" fg:x="4540" fg:w="5"/><text x="98.4971%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="98.2471%" y="261" width="0.1082%" height="15" fill="rgb(253,153,0)" fg:x="4540" fg:w="5"/><text x="98.4971%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="98.3337%" y="245" width="0.0216%" height="15" fill="rgb(201,101,0)" fg:x="4544" fg:w="1"/><text x="98.5837%" y="255.50"></text></g><g><title>_start (3,747 samples, 81.09%)</title><rect x="17.3123%" y="853" width="81.0863%" height="15" fill="rgb(192,192,56)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="863.50">_start</text></g><g><title>__libc_start_main (3,747 samples, 81.09%)</title><rect x="17.3123%" y="837" width="81.0863%" height="15" fill="rgb(221,221,66)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="847.50">__libc_start_main</text></g><g><title>[libc.so.6] (3,747 samples, 81.09%)</title><rect x="17.3123%" y="821" width="81.0863%" height="15" fill="rgb(184,184,53)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="831.50">[libc.so.6]</text></g><g><title>main (3,747 samples, 81.09%)</title><rect x="17.3123%" y="805" width="81.0863%" height="15" fill="rgb(195,195,57)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (3,747 samples, 81.09%)</title><rect x="17.3123%" y="789" width="81.0863%" height="15" fill="rgb(209,109,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (3,747 samples, 81.09%)</title><rect x="17.3123%" y="773" width="81.0863%" height="15" fill="rgb(245,145,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,747 samples, 81.09%)</title><rect x="17.3123%" y="757" width="81.0863%" height="15" fill="rgb(202,102,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,747 samples, 81.09%)</title><rect x="17.3123%" y="741" width="81.0863%" height="15" fill="rgb(208,108,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="751.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (3,747 samples, 81.09%)</title><rect x="17.3123%" y="725" width="81.0863%" height="15" fill="rgb(227,127,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="735.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (3,747 samples, 81.09%)</title><rect x="17.3123%" y="709" width="81.0863%" height="15" fill="rgb(247,147,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,747 samples, 81.09%)</title><rect x="17.3123%" y="693" width="81.0863%" height="15" fill="rgb(217,117,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,747 samples, 81.09%)</title><rect x="17.3123%" y="677" width="81.0863%" height="15" fill="rgb(233,133,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3,747 samples, 81.09%)</title><rect x="17.3123%" y="661" width="81.0863%" height="15" fill="rgb(218,118,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (3,747 samples, 81.09%)</title><rect x="17.3123%" y="645" width="81.0863%" height="15" fill="rgb(205,105,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="655.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,747 samples, 81.09%)</title><rect x="17.3123%" y="629" width="81.0863%" height="15" fill="rgb(207,107,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,747 samples, 81.09%)</title><rect x="17.3123%" y="613" width="81.0863%" height="15" fill="rgb(204,104,0)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="623.50">core::ops::function::FnOnce::call_once</text></g><g><title>alc::main (3,747 samples, 81.09%)</title><rect x="17.3123%" y="597" width="81.0863%" height="15" fill="rgb(93,204,204)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="607.50">alc::main</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize (3,747 samples, 81.09%)</title><rect x="17.3123%" y="581" width="81.0863%" height="15" fill="rgb(83,195,195)" fg:x="800" fg:w="3747"/><text x="17.5623%" y="591.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (8 samples, 0.17%)</title><rect x="98.2255%" y="565" width="0.1731%" height="15" fill="rgb(219,119,0)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.17%)</title><rect x="98.2255%" y="549" width="0.1731%" height="15" fill="rgb(249,149,0)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;]&gt; (8 samples, 0.17%)</title><rect x="98.2255%" y="533" width="0.1731%" height="15" fill="rgb(205,105,0)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (8 samples, 0.17%)</title><rect x="98.2255%" y="517" width="0.1731%" height="15" fill="rgb(233,133,0)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (8 samples, 0.17%)</title><rect x="98.2255%" y="501" width="0.1731%" height="15" fill="rgb(203,103,0)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (8 samples, 0.17%)</title><rect x="98.2255%" y="485" width="0.1731%" height="15" fill="rgb(195,95,0)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (8 samples, 0.17%)</title><rect x="98.2255%" y="469" width="0.1731%" height="15" fill="rgb(240,140,0)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.17%)</title><rect x="98.2255%" y="453" width="0.1731%" height="15" fill="rgb(70,183,183)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (8 samples, 0.17%)</title><rect x="98.2255%" y="437" width="0.1731%" height="15" fill="rgb(74,187,187)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (8 samples, 0.17%)</title><rect x="98.2255%" y="421" width="0.1731%" height="15" fill="rgb(90,201,201)" fg:x="4539" fg:w="8"/><text x="98.4755%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 0.15%)</title><rect x="98.2471%" y="405" width="0.1515%" height="15" fill="rgb(53,167,167)" fg:x="4540" fg:w="7"/><text x="98.4971%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7 samples, 0.15%)</title><rect x="98.2471%" y="389" width="0.1515%" height="15" fill="rgb(237,137,0)" fg:x="4540" fg:w="7"/><text x="98.4971%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (7 samples, 0.15%)</title><rect x="98.2471%" y="373" width="0.1515%" height="15" fill="rgb(245,145,0)" fg:x="4540" fg:w="7"/><text x="98.4971%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (7 samples, 0.15%)</title><rect x="98.2471%" y="357" width="0.1515%" height="15" fill="rgb(209,109,0)" fg:x="4540" fg:w="7"/><text x="98.4971%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.04%)</title><rect x="98.3553%" y="341" width="0.0433%" height="15" fill="rgb(198,98,0)" fg:x="4545" fg:w="2"/><text x="98.6053%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.3553%" y="325" width="0.0433%" height="15" fill="rgb(252,152,0)" fg:x="4545" fg:w="2"/><text x="98.6053%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="98.3553%" y="309" width="0.0433%" height="15" fill="rgb(208,108,0)" fg:x="4545" fg:w="2"/><text x="98.6053%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="98.3553%" y="293" width="0.0433%" height="15" fill="rgb(224,124,0)" fg:x="4545" fg:w="2"/><text x="98.6053%" y="303.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="98.3553%" y="277" width="0.0433%" height="15" fill="rgb(212,212,63)" fg:x="4545" fg:w="2"/><text x="98.6053%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="98.3553%" y="261" width="0.0433%" height="15" fill="rgb(181,181,52)" fg:x="4545" fg:w="2"/><text x="98.6053%" y="271.50"></text></g><g><title>alc::objective::scoring::calculate_final_reduction (2 samples, 0.04%)</title><rect x="98.3986%" y="853" width="0.0433%" height="15" fill="rgb(60,174,174)" fg:x="4547" fg:w="2"/><text x="98.6486%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.35%)</title><rect x="98.4419%" y="853" width="0.3462%" height="15" fill="rgb(216,116,0)" fg:x="4549" fg:w="16"/><text x="98.6919%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.09%)</title><rect x="98.7016%" y="837" width="0.0866%" height="15" fill="rgb(235,135,0)" fg:x="4561" fg:w="4"/><text x="98.9516%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.28%)</title><rect x="98.7881%" y="853" width="0.2813%" height="15" fill="rgb(236,136,0)" fg:x="4565" fg:w="13"/><text x="99.0381%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.19%)</title><rect x="98.8747%" y="837" width="0.1948%" height="15" fill="rgb(215,115,0)" fg:x="4569" fg:w="9"/><text x="99.1247%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.19%)</title><rect x="98.8747%" y="821" width="0.1948%" height="15" fill="rgb(237,137,0)" fg:x="4569" fg:w="9"/><text x="99.1247%" y="831.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.19%)</title><rect x="98.8747%" y="805" width="0.1948%" height="15" fill="rgb(212,112,0)" fg:x="4569" fg:w="9"/><text x="99.1247%" y="815.50"></text></g><g><title>cfree (29 samples, 0.63%)</title><rect x="99.0695%" y="853" width="0.6276%" height="15" fill="rgb(202,202,59)" fg:x="4578" fg:w="29"/><text x="99.3195%" y="863.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="99.6970%" y="853" width="0.0216%" height="15" fill="rgb(63,177,177)" fg:x="4607" fg:w="1"/><text x="99.9470%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="99.6970%" y="837" width="0.0216%" height="15" fill="rgb(67,181,181)" fg:x="4607" fg:w="1"/><text x="99.9470%" y="847.50"></text></g><g><title>all (4,621 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(218,218,65)" fg:x="0" fg:w="4621"/><text x="0.2500%" y="895.50"></text></g><g><title>alc (4,621 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(206,206,61)" fg:x="0" fg:w="4621"/><text x="0.2500%" y="879.50">alc</text></g><g><title>malloc (13 samples, 0.28%)</title><rect x="99.7187%" y="853" width="0.2813%" height="15" fill="rgb(201,201,59)" fg:x="4608" fg:w="13"/><text x="99.9687%" y="863.50"></text></g></svg></svg>