<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="837.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="837.00"> </text><svg id="frames" x="10" width="1180" total_samples="2108"><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.09%)</title><rect x="0.0000%" y="773" width="0.0949%" height="15" fill="rgb(50,165,165)" fg:x="0" fg:w="2"/><text x="0.2500%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="0.0949%" y="773" width="0.0474%" height="15" fill="rgb(190,90,0)" fg:x="2" fg:w="1"/><text x="0.3449%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="0.0949%" y="757" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="2" fg:w="1"/><text x="0.3449%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="0.0949%" y="741" width="0.0474%" height="15" fill="rgb(250,150,0)" fg:x="2" fg:w="1"/><text x="0.3449%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="0.0949%" y="725" width="0.0474%" height="15" fill="rgb(67,181,181)" fg:x="2" fg:w="1"/><text x="0.3449%" y="735.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="0.0949%" y="709" width="0.0474%" height="15" fill="rgb(83,195,195)" fg:x="2" fg:w="1"/><text x="0.3449%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="0.0949%" y="693" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="2" fg:w="1"/><text x="0.3449%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="0.0949%" y="677" width="0.0474%" height="15" fill="rgb(196,96,0)" fg:x="2" fg:w="1"/><text x="0.3449%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="0.0949%" y="661" width="0.0474%" height="15" fill="rgb(198,98,0)" fg:x="2" fg:w="1"/><text x="0.3449%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="0.0949%" y="645" width="0.0474%" height="15" fill="rgb(81,194,194)" fg:x="2" fg:w="1"/><text x="0.3449%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="0.0949%" y="629" width="0.0474%" height="15" fill="rgb(254,154,0)" fg:x="2" fg:w="1"/><text x="0.3449%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="0.0949%" y="613" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="2" fg:w="1"/><text x="0.3449%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.05%)</title><rect x="0.1423%" y="757" width="0.0474%" height="15" fill="rgb(55,169,169)" fg:x="3" fg:w="1"/><text x="0.3923%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.05%)</title><rect x="0.1423%" y="741" width="0.0474%" height="15" fill="rgb(99,209,209)" fg:x="3" fg:w="1"/><text x="0.3923%" y="751.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.05%)</title><rect x="0.1423%" y="725" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="3" fg:w="1"/><text x="0.3923%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.14%)</title><rect x="0.1423%" y="773" width="0.1423%" height="15" fill="rgb(69,182,182)" fg:x="3" fg:w="3"/><text x="0.3923%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.09%)</title><rect x="0.1898%" y="757" width="0.0949%" height="15" fill="rgb(55,169,169)" fg:x="4" fg:w="2"/><text x="0.4398%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.09%)</title><rect x="0.1898%" y="741" width="0.0949%" height="15" fill="rgb(58,172,172)" fg:x="4" fg:w="2"/><text x="0.4398%" y="751.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.09%)</title><rect x="0.1898%" y="725" width="0.0949%" height="15" fill="rgb(102,212,212)" fg:x="4" fg:w="2"/><text x="0.4398%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.09%)</title><rect x="0.1898%" y="709" width="0.0949%" height="15" fill="rgb(197,97,0)" fg:x="4" fg:w="2"/><text x="0.4398%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.09%)</title><rect x="0.1898%" y="693" width="0.0949%" height="15" fill="rgb(199,99,0)" fg:x="4" fg:w="2"/><text x="0.4398%" y="703.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.09%)</title><rect x="0.1898%" y="677" width="0.0949%" height="15" fill="rgb(241,141,0)" fg:x="4" fg:w="2"/><text x="0.4398%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.14%)</title><rect x="0.2846%" y="757" width="0.1423%" height="15" fill="rgb(191,91,0)" fg:x="6" fg:w="3"/><text x="0.5346%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="0.4269%" y="757" width="0.0949%" height="15" fill="rgb(54,169,169)" fg:x="9" fg:w="2"/><text x="0.6769%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.09%)</title><rect x="0.4269%" y="741" width="0.0949%" height="15" fill="rgb(84,196,196)" fg:x="9" fg:w="2"/><text x="0.6769%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.09%)</title><rect x="0.4269%" y="725" width="0.0949%" height="15" fill="rgb(58,172,172)" fg:x="9" fg:w="2"/><text x="0.6769%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.09%)</title><rect x="0.4269%" y="709" width="0.0949%" height="15" fill="rgb(79,191,191)" fg:x="9" fg:w="2"/><text x="0.6769%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.09%)</title><rect x="0.4269%" y="693" width="0.0949%" height="15" fill="rgb(235,135,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (2 samples, 0.09%)</title><rect x="0.4269%" y="677" width="0.0949%" height="15" fill="rgb(231,131,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.09%)</title><rect x="0.4269%" y="661" width="0.0949%" height="15" fill="rgb(200,100,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="0.4269%" y="645" width="0.0949%" height="15" fill="rgb(219,119,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.09%)</title><rect x="0.4269%" y="629" width="0.0949%" height="15" fill="rgb(214,114,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.09%)</title><rect x="0.4269%" y="613" width="0.0949%" height="15" fill="rgb(241,141,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="0.4269%" y="597" width="0.0949%" height="15" fill="rgb(244,144,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="0.4269%" y="581" width="0.0949%" height="15" fill="rgb(213,113,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="0.4269%" y="565" width="0.0949%" height="15" fill="rgb(200,100,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="0.4269%" y="549" width="0.0949%" height="15" fill="rgb(191,91,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="0.4269%" y="533" width="0.0949%" height="15" fill="rgb(244,144,0)" fg:x="9" fg:w="2"/><text x="0.6769%" y="543.50"></text></g><g><title>[libc.so.6] (48 samples, 2.28%)</title><rect x="0.5218%" y="757" width="2.2770%" height="15" fill="rgb(215,215,64)" fg:x="11" fg:w="48"/><text x="0.7718%" y="767.50">[..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.14%)</title><rect x="2.8463%" y="709" width="0.1423%" height="15" fill="rgb(241,141,0)" fg:x="60" fg:w="3"/><text x="3.0963%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.14%)</title><rect x="2.8463%" y="693" width="0.1423%" height="15" fill="rgb(207,107,0)" fg:x="60" fg:w="3"/><text x="3.0963%" y="703.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (6 samples, 0.28%)</title><rect x="2.7989%" y="757" width="0.2846%" height="15" fill="rgb(68,181,181)" fg:x="59" fg:w="6"/><text x="3.0489%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (5 samples, 0.24%)</title><rect x="2.8463%" y="741" width="0.2372%" height="15" fill="rgb(216,116,0)" fg:x="60" fg:w="5"/><text x="3.0963%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.24%)</title><rect x="2.8463%" y="725" width="0.2372%" height="15" fill="rgb(222,122,0)" fg:x="60" fg:w="5"/><text x="3.0963%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="2.9886%" y="709" width="0.0949%" height="15" fill="rgb(248,148,0)" fg:x="63" fg:w="2"/><text x="3.2386%" y="719.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (2 samples, 0.09%)</title><rect x="3.0835%" y="757" width="0.0949%" height="15" fill="rgb(75,188,188)" fg:x="65" fg:w="2"/><text x="3.3335%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.05%)</title><rect x="3.1784%" y="757" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="67" fg:w="1"/><text x="3.4284%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.28%)</title><rect x="3.2258%" y="757" width="0.2846%" height="15" fill="rgb(244,144,0)" fg:x="68" fg:w="6"/><text x="3.4758%" y="767.50"></text></g><g><title>cfree (7 samples, 0.33%)</title><rect x="3.5104%" y="757" width="0.3321%" height="15" fill="rgb(189,189,55)" fg:x="74" fg:w="7"/><text x="3.7604%" y="767.50"></text></g><g><title>[[heap]] (91 samples, 4.32%)</title><rect x="0.2846%" y="773" width="4.3169%" height="15" fill="rgb(181,181,52)" fg:x="6" fg:w="91"/><text x="0.5346%" y="783.50">[[hea..</text></g><g><title>malloc (16 samples, 0.76%)</title><rect x="3.8425%" y="757" width="0.7590%" height="15" fill="rgb(183,183,53)" fg:x="81" fg:w="16"/><text x="4.0925%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="4.6015%" y="757" width="0.0949%" height="15" fill="rgb(105,216,216)" fg:x="97" fg:w="2"/><text x="4.8515%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.09%)</title><rect x="4.6015%" y="741" width="0.0949%" height="15" fill="rgb(82,194,194)" fg:x="97" fg:w="2"/><text x="4.8515%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.09%)</title><rect x="4.6015%" y="725" width="0.0949%" height="15" fill="rgb(86,198,198)" fg:x="97" fg:w="2"/><text x="4.8515%" y="735.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.09%)</title><rect x="4.6015%" y="709" width="0.0949%" height="15" fill="rgb(231,131,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="719.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="4.6015%" y="693" width="0.0949%" height="15" fill="rgb(80,193,193)" fg:x="97" fg:w="2"/><text x="4.8515%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="4.6015%" y="677" width="0.0949%" height="15" fill="rgb(231,131,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="4.6015%" y="661" width="0.0949%" height="15" fill="rgb(213,113,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="4.6015%" y="645" width="0.0949%" height="15" fill="rgb(193,93,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="4.6015%" y="629" width="0.0949%" height="15" fill="rgb(50,165,165)" fg:x="97" fg:w="2"/><text x="4.8515%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="4.6015%" y="613" width="0.0949%" height="15" fill="rgb(203,103,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="4.6015%" y="597" width="0.0949%" height="15" fill="rgb(193,93,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.09%)</title><rect x="4.6015%" y="581" width="0.0949%" height="15" fill="rgb(254,154,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.09%)</title><rect x="4.6015%" y="565" width="0.0949%" height="15" fill="rgb(231,131,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.09%)</title><rect x="4.6015%" y="549" width="0.0949%" height="15" fill="rgb(209,109,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.09%)</title><rect x="4.6015%" y="533" width="0.0949%" height="15" fill="rgb(217,117,0)" fg:x="97" fg:w="2"/><text x="4.8515%" y="543.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="4.6964%" y="757" width="0.0949%" height="15" fill="rgb(208,208,62)" fg:x="99" fg:w="2"/><text x="4.9464%" y="767.50"></text></g><g><title>__rdl_realloc (3 samples, 0.14%)</title><rect x="4.7913%" y="757" width="0.1423%" height="15" fill="rgb(193,193,56)" fg:x="101" fg:w="3"/><text x="5.0413%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.14%)</title><rect x="4.7913%" y="741" width="0.1423%" height="15" fill="rgb(240,140,0)" fg:x="101" fg:w="3"/><text x="5.0413%" y="751.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (5 samples, 0.24%)</title><rect x="4.9810%" y="725" width="0.2372%" height="15" fill="rgb(66,180,180)" fg:x="105" fg:w="5"/><text x="5.2310%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="5.1233%" y="709" width="0.0949%" height="15" fill="rgb(233,133,0)" fg:x="108" fg:w="2"/><text x="5.3733%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="5.1233%" y="693" width="0.0949%" height="15" fill="rgb(200,100,0)" fg:x="108" fg:w="2"/><text x="5.3733%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (2 samples, 0.09%)</title><rect x="5.1233%" y="677" width="0.0949%" height="15" fill="rgb(222,122,0)" fg:x="108" fg:w="2"/><text x="5.3733%" y="687.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="5.1233%" y="661" width="0.0949%" height="15" fill="rgb(64,177,177)" fg:x="108" fg:w="2"/><text x="5.3733%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="5.1233%" y="645" width="0.0949%" height="15" fill="rgb(213,113,0)" fg:x="108" fg:w="2"/><text x="5.3733%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="5.1233%" y="629" width="0.0949%" height="15" fill="rgb(223,123,0)" fg:x="108" fg:w="2"/><text x="5.3733%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="5.1233%" y="613" width="0.0949%" height="15" fill="rgb(202,102,0)" fg:x="108" fg:w="2"/><text x="5.3733%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="5.1233%" y="597" width="0.0949%" height="15" fill="rgb(200,100,0)" fg:x="108" fg:w="2"/><text x="5.3733%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.09%)</title><rect x="5.2182%" y="725" width="0.0949%" height="15" fill="rgb(249,149,0)" fg:x="110" fg:w="2"/><text x="5.4682%" y="735.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (12 samples, 0.57%)</title><rect x="4.9336%" y="757" width="0.5693%" height="15" fill="rgb(70,184,184)" fg:x="104" fg:w="12"/><text x="5.1836%" y="767.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (12 samples, 0.57%)</title><rect x="4.9336%" y="741" width="0.5693%" height="15" fill="rgb(75,188,188)" fg:x="104" fg:w="12"/><text x="5.1836%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.19%)</title><rect x="5.3131%" y="725" width="0.1898%" height="15" fill="rgb(250,150,0)" fg:x="112" fg:w="4"/><text x="5.5631%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.19%)</title><rect x="5.3131%" y="709" width="0.1898%" height="15" fill="rgb(213,113,0)" fg:x="112" fg:w="4"/><text x="5.5631%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (4 samples, 0.19%)</title><rect x="5.3131%" y="693" width="0.1898%" height="15" fill="rgb(243,143,0)" fg:x="112" fg:w="4"/><text x="5.5631%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.19%)</title><rect x="5.3131%" y="677" width="0.1898%" height="15" fill="rgb(105,215,215)" fg:x="112" fg:w="4"/><text x="5.5631%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.19%)</title><rect x="5.3131%" y="661" width="0.1898%" height="15" fill="rgb(224,124,0)" fg:x="112" fg:w="4"/><text x="5.5631%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.19%)</title><rect x="5.3131%" y="645" width="0.1898%" height="15" fill="rgb(251,151,0)" fg:x="112" fg:w="4"/><text x="5.5631%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.19%)</title><rect x="5.3131%" y="629" width="0.1898%" height="15" fill="rgb(209,109,0)" fg:x="112" fg:w="4"/><text x="5.5631%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.19%)</title><rect x="5.3131%" y="613" width="0.1898%" height="15" fill="rgb(194,94,0)" fg:x="112" fg:w="4"/><text x="5.5631%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.24%)</title><rect x="5.5028%" y="757" width="0.2372%" height="15" fill="rgb(225,125,0)" fg:x="116" fg:w="5"/><text x="5.7528%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.24%)</title><rect x="5.5028%" y="741" width="0.2372%" height="15" fill="rgb(237,137,0)" fg:x="116" fg:w="5"/><text x="5.7528%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.09%)</title><rect x="5.7400%" y="757" width="0.0949%" height="15" fill="rgb(236,136,0)" fg:x="121" fg:w="2"/><text x="5.9900%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.09%)</title><rect x="5.7400%" y="741" width="0.0949%" height="15" fill="rgb(251,151,0)" fg:x="121" fg:w="2"/><text x="5.9900%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.24%)</title><rect x="5.8349%" y="757" width="0.2372%" height="15" fill="rgb(222,122,0)" fg:x="123" fg:w="5"/><text x="6.0849%" y="767.50"></text></g><g><title>malloc (5 samples, 0.24%)</title><rect x="6.0721%" y="757" width="0.2372%" height="15" fill="rgb(198,198,58)" fg:x="128" fg:w="5"/><text x="6.3221%" y="767.50"></text></g><g><title>[[stack]] (44 samples, 2.09%)</title><rect x="4.6015%" y="773" width="2.0873%" height="15" fill="rgb(177,177,50)" fg:x="97" fg:w="44"/><text x="4.8515%" y="783.50">[..</text></g><g><title>realloc (8 samples, 0.38%)</title><rect x="6.3093%" y="757" width="0.3795%" height="15" fill="rgb(209,209,62)" fg:x="133" fg:w="8"/><text x="6.5593%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.09%)</title><rect x="6.6888%" y="773" width="0.0949%" height="15" fill="rgb(198,198,58)" fg:x="141" fg:w="2"/><text x="6.9388%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="6.7362%" y="757" width="0.0474%" height="15" fill="rgb(224,224,68)" fg:x="142" fg:w="1"/><text x="6.9862%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="6.7362%" y="741" width="0.0474%" height="15" fill="rgb(214,214,64)" fg:x="142" fg:w="1"/><text x="6.9862%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="6.7362%" y="725" width="0.0474%" height="15" fill="rgb(205,205,61)" fg:x="142" fg:w="1"/><text x="6.9862%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="6.7362%" y="709" width="0.0474%" height="15" fill="rgb(179,179,51)" fg:x="142" fg:w="1"/><text x="6.9862%" y="719.50"></text></g><g><title>[libc.so.6] (37 samples, 1.76%)</title><rect x="6.7837%" y="773" width="1.7552%" height="15" fill="rgb(200,200,59)" fg:x="143" fg:w="37"/><text x="7.0337%" y="783.50"></text></g><g><title>[libc.so.6] (10 samples, 0.47%)</title><rect x="8.0645%" y="757" width="0.4744%" height="15" fill="rgb(181,181,52)" fg:x="170" fg:w="10"/><text x="8.3145%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.09%)</title><rect x="8.9184%" y="741" width="0.0949%" height="15" fill="rgb(253,153,0)" fg:x="188" fg:w="2"/><text x="9.1684%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.14%)</title><rect x="9.0133%" y="613" width="0.1423%" height="15" fill="rgb(195,95,0)" fg:x="190" fg:w="3"/><text x="9.2633%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.14%)</title><rect x="9.0133%" y="597" width="0.1423%" height="15" fill="rgb(196,96,0)" fg:x="190" fg:w="3"/><text x="9.2633%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.14%)</title><rect x="9.0133%" y="581" width="0.1423%" height="15" fill="rgb(191,91,0)" fg:x="190" fg:w="3"/><text x="9.2633%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.14%)</title><rect x="9.0133%" y="565" width="0.1423%" height="15" fill="rgb(213,113,0)" fg:x="190" fg:w="3"/><text x="9.2633%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.14%)</title><rect x="9.0133%" y="549" width="0.1423%" height="15" fill="rgb(210,110,0)" fg:x="190" fg:w="3"/><text x="9.2633%" y="559.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.14%)</title><rect x="9.0133%" y="533" width="0.1423%" height="15" fill="rgb(209,109,0)" fg:x="190" fg:w="3"/><text x="9.2633%" y="543.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (6 samples, 0.28%)</title><rect x="9.0133%" y="693" width="0.2846%" height="15" fill="rgb(98,209,209)" fg:x="190" fg:w="6"/><text x="9.2633%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.28%)</title><rect x="9.0133%" y="677" width="0.2846%" height="15" fill="rgb(222,122,0)" fg:x="190" fg:w="6"/><text x="9.2633%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.28%)</title><rect x="9.0133%" y="661" width="0.2846%" height="15" fill="rgb(244,144,0)" fg:x="190" fg:w="6"/><text x="9.2633%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.28%)</title><rect x="9.0133%" y="645" width="0.2846%" height="15" fill="rgb(220,120,0)" fg:x="190" fg:w="6"/><text x="9.2633%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.28%)</title><rect x="9.0133%" y="629" width="0.2846%" height="15" fill="rgb(95,206,206)" fg:x="190" fg:w="6"/><text x="9.2633%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.14%)</title><rect x="9.1556%" y="613" width="0.1423%" height="15" fill="rgb(222,122,0)" fg:x="193" fg:w="3"/><text x="9.4056%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.14%)</title><rect x="9.1556%" y="597" width="0.1423%" height="15" fill="rgb(235,135,0)" fg:x="193" fg:w="3"/><text x="9.4056%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.62%)</title><rect x="8.8235%" y="757" width="0.6167%" height="15" fill="rgb(238,138,0)" fg:x="186" fg:w="13"/><text x="9.0735%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.43%)</title><rect x="9.0133%" y="741" width="0.4269%" height="15" fill="rgb(196,96,0)" fg:x="190" fg:w="9"/><text x="9.2633%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.43%)</title><rect x="9.0133%" y="725" width="0.4269%" height="15" fill="rgb(223,123,0)" fg:x="190" fg:w="9"/><text x="9.2633%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.43%)</title><rect x="9.0133%" y="709" width="0.4269%" height="15" fill="rgb(69,182,182)" fg:x="190" fg:w="9"/><text x="9.2633%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.14%)</title><rect x="9.2979%" y="693" width="0.1423%" height="15" fill="rgb(209,109,0)" fg:x="196" fg:w="3"/><text x="9.5479%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.14%)</title><rect x="9.2979%" y="677" width="0.1423%" height="15" fill="rgb(225,125,0)" fg:x="196" fg:w="3"/><text x="9.5479%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.14%)</title><rect x="9.2979%" y="661" width="0.1423%" height="15" fill="rgb(200,100,0)" fg:x="196" fg:w="3"/><text x="9.5479%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.14%)</title><rect x="9.2979%" y="645" width="0.1423%" height="15" fill="rgb(224,124,0)" fg:x="196" fg:w="3"/><text x="9.5479%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.14%)</title><rect x="9.2979%" y="629" width="0.1423%" height="15" fill="rgb(193,93,0)" fg:x="196" fg:w="3"/><text x="9.5479%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.14%)</title><rect x="9.2979%" y="613" width="0.1423%" height="15" fill="rgb(227,127,0)" fg:x="196" fg:w="3"/><text x="9.5479%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="9.4402%" y="757" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;]&gt; (1 samples, 0.05%)</title><rect x="9.4402%" y="741" width="0.0474%" height="15" fill="rgb(241,141,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (1 samples, 0.05%)</title><rect x="9.4402%" y="725" width="0.0474%" height="15" fill="rgb(194,94,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="9.4402%" y="709" width="0.0474%" height="15" fill="rgb(254,154,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="9.4402%" y="693" width="0.0474%" height="15" fill="rgb(205,105,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (1 samples, 0.05%)</title><rect x="9.4402%" y="677" width="0.0474%" height="15" fill="rgb(192,92,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.05%)</title><rect x="9.4402%" y="661" width="0.0474%" height="15" fill="rgb(206,106,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.05%)</title><rect x="9.4402%" y="645" width="0.0474%" height="15" fill="rgb(224,124,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.05%)</title><rect x="9.4402%" y="629" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (1 samples, 0.05%)</title><rect x="9.4402%" y="613" width="0.0474%" height="15" fill="rgb(195,95,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="9.4402%" y="597" width="0.0474%" height="15" fill="rgb(201,101,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="9.4402%" y="581" width="0.0474%" height="15" fill="rgb(224,124,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="9.4402%" y="565" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="199" fg:w="1"/><text x="9.6902%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="9.4877%" y="645" width="0.0949%" height="15" fill="rgb(217,117,0)" fg:x="200" fg:w="2"/><text x="9.7377%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.09%)</title><rect x="9.4877%" y="629" width="0.0949%" height="15" fill="rgb(242,142,0)" fg:x="200" fg:w="2"/><text x="9.7377%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.09%)</title><rect x="9.4877%" y="613" width="0.0949%" height="15" fill="rgb(248,148,0)" fg:x="200" fg:w="2"/><text x="9.7377%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="9.4877%" y="597" width="0.0949%" height="15" fill="rgb(246,146,0)" fg:x="200" fg:w="2"/><text x="9.7377%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="9.4877%" y="581" width="0.0949%" height="15" fill="rgb(246,146,0)" fg:x="200" fg:w="2"/><text x="9.7377%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="9.4877%" y="565" width="0.0949%" height="15" fill="rgb(203,103,0)" fg:x="200" fg:w="2"/><text x="9.7377%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="9.4877%" y="549" width="0.0949%" height="15" fill="rgb(199,99,0)" fg:x="200" fg:w="2"/><text x="9.7377%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="9.4877%" y="533" width="0.0949%" height="15" fill="rgb(199,99,0)" fg:x="200" fg:w="2"/><text x="9.7377%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.19%)</title><rect x="9.4877%" y="757" width="0.1898%" height="15" fill="rgb(102,213,213)" fg:x="200" fg:w="4"/><text x="9.7377%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (4 samples, 0.19%)</title><rect x="9.4877%" y="741" width="0.1898%" height="15" fill="rgb(76,189,189)" fg:x="200" fg:w="4"/><text x="9.7377%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (4 samples, 0.19%)</title><rect x="9.4877%" y="725" width="0.1898%" height="15" fill="rgb(78,191,191)" fg:x="200" fg:w="4"/><text x="9.7377%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.19%)</title><rect x="9.4877%" y="709" width="0.1898%" height="15" fill="rgb(69,182,182)" fg:x="200" fg:w="4"/><text x="9.7377%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (4 samples, 0.19%)</title><rect x="9.4877%" y="693" width="0.1898%" height="15" fill="rgb(218,118,0)" fg:x="200" fg:w="4"/><text x="9.7377%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (4 samples, 0.19%)</title><rect x="9.4877%" y="677" width="0.1898%" height="15" fill="rgb(196,96,0)" fg:x="200" fg:w="4"/><text x="9.7377%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.19%)</title><rect x="9.4877%" y="661" width="0.1898%" height="15" fill="rgb(236,136,0)" fg:x="200" fg:w="4"/><text x="9.7377%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.09%)</title><rect x="9.5825%" y="645" width="0.0949%" height="15" fill="rgb(197,97,0)" fg:x="202" fg:w="2"/><text x="9.8325%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="9.5825%" y="629" width="0.0949%" height="15" fill="rgb(219,119,0)" fg:x="202" fg:w="2"/><text x="9.8325%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="9.5825%" y="613" width="0.0949%" height="15" fill="rgb(201,101,0)" fg:x="202" fg:w="2"/><text x="9.8325%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="9.5825%" y="597" width="0.0949%" height="15" fill="rgb(209,109,0)" fg:x="202" fg:w="2"/><text x="9.8325%" y="607.50"></text></g><g><title>[libc.so.6] (63 samples, 2.99%)</title><rect x="9.6774%" y="757" width="2.9886%" height="15" fill="rgb(176,176,50)" fg:x="204" fg:w="63"/><text x="9.9274%" y="767.50">[li..</text></g><g><title>__rdl_realloc (7 samples, 0.33%)</title><rect x="12.6660%" y="757" width="0.3321%" height="15" fill="rgb(179,179,51)" fg:x="267" fg:w="7"/><text x="12.9160%" y="767.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (3 samples, 0.14%)</title><rect x="12.9981%" y="757" width="0.1423%" height="15" fill="rgb(71,184,184)" fg:x="274" fg:w="3"/><text x="13.2481%" y="767.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (1 samples, 0.05%)</title><rect x="13.1404%" y="757" width="0.0474%" height="15" fill="rgb(57,171,171)" fg:x="277" fg:w="1"/><text x="13.3904%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.24%)</title><rect x="13.3302%" y="661" width="0.2372%" height="15" fill="rgb(242,142,0)" fg:x="281" fg:w="5"/><text x="13.5802%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.24%)</title><rect x="13.3302%" y="645" width="0.2372%" height="15" fill="rgb(239,139,0)" fg:x="281" fg:w="5"/><text x="13.5802%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.24%)</title><rect x="13.3302%" y="629" width="0.2372%" height="15" fill="rgb(246,146,0)" fg:x="281" fg:w="5"/><text x="13.5802%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.24%)</title><rect x="13.3302%" y="613" width="0.2372%" height="15" fill="rgb(212,112,0)" fg:x="281" fg:w="5"/><text x="13.5802%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.24%)</title><rect x="13.3302%" y="597" width="0.2372%" height="15" fill="rgb(226,126,0)" fg:x="281" fg:w="5"/><text x="13.5802%" y="607.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.24%)</title><rect x="13.3302%" y="581" width="0.2372%" height="15" fill="rgb(204,104,0)" fg:x="281" fg:w="5"/><text x="13.5802%" y="591.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (10 samples, 0.47%)</title><rect x="13.3302%" y="741" width="0.4744%" height="15" fill="rgb(67,181,181)" fg:x="281" fg:w="10"/><text x="13.5802%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.47%)</title><rect x="13.3302%" y="725" width="0.4744%" height="15" fill="rgb(213,113,0)" fg:x="281" fg:w="10"/><text x="13.5802%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.47%)</title><rect x="13.3302%" y="709" width="0.4744%" height="15" fill="rgb(202,102,0)" fg:x="281" fg:w="10"/><text x="13.5802%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.47%)</title><rect x="13.3302%" y="693" width="0.4744%" height="15" fill="rgb(233,133,0)" fg:x="281" fg:w="10"/><text x="13.5802%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.47%)</title><rect x="13.3302%" y="677" width="0.4744%" height="15" fill="rgb(64,178,178)" fg:x="281" fg:w="10"/><text x="13.5802%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.24%)</title><rect x="13.5674%" y="661" width="0.2372%" height="15" fill="rgb(190,90,0)" fg:x="286" fg:w="5"/><text x="13.8174%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.24%)</title><rect x="13.5674%" y="645" width="0.2372%" height="15" fill="rgb(198,98,0)" fg:x="286" fg:w="5"/><text x="13.8174%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="13.8046%" y="661" width="0.0474%" height="15" fill="rgb(212,112,0)" fg:x="291" fg:w="1"/><text x="14.0546%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="13.8046%" y="645" width="0.0474%" height="15" fill="rgb(231,131,0)" fg:x="291" fg:w="1"/><text x="14.0546%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="13.8046%" y="629" width="0.0474%" height="15" fill="rgb(196,96,0)" fg:x="291" fg:w="1"/><text x="14.0546%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="13.8046%" y="613" width="0.0474%" height="15" fill="rgb(237,137,0)" fg:x="291" fg:w="1"/><text x="14.0546%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="13.8046%" y="597" width="0.0474%" height="15" fill="rgb(233,133,0)" fg:x="291" fg:w="1"/><text x="14.0546%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="13.8046%" y="581" width="0.0474%" height="15" fill="rgb(250,150,0)" fg:x="291" fg:w="1"/><text x="14.0546%" y="591.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="13.8046%" y="741" width="0.0949%" height="15" fill="rgb(51,166,166)" fg:x="291" fg:w="2"/><text x="14.0546%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="13.8046%" y="725" width="0.0949%" height="15" fill="rgb(219,119,0)" fg:x="291" fg:w="2"/><text x="14.0546%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="13.8046%" y="709" width="0.0949%" height="15" fill="rgb(217,117,0)" fg:x="291" fg:w="2"/><text x="14.0546%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="13.8046%" y="693" width="0.0949%" height="15" fill="rgb(232,132,0)" fg:x="291" fg:w="2"/><text x="14.0546%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="13.8046%" y="677" width="0.0949%" height="15" fill="rgb(102,213,213)" fg:x="291" fg:w="2"/><text x="14.0546%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="13.8520%" y="661" width="0.0474%" height="15" fill="rgb(196,96,0)" fg:x="292" fg:w="1"/><text x="14.1020%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="13.8520%" y="645" width="0.0474%" height="15" fill="rgb(205,105,0)" fg:x="292" fg:w="1"/><text x="14.1020%" y="655.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (3 samples, 0.14%)</title><rect x="13.8994%" y="741" width="0.1423%" height="15" fill="rgb(56,171,171)" fg:x="293" fg:w="3"/><text x="14.1494%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.14%)</title><rect x="13.8994%" y="725" width="0.1423%" height="15" fill="rgb(201,101,0)" fg:x="293" fg:w="3"/><text x="14.1494%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.14%)</title><rect x="13.8994%" y="709" width="0.1423%" height="15" fill="rgb(107,217,217)" fg:x="293" fg:w="3"/><text x="14.1494%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.14%)</title><rect x="13.8994%" y="693" width="0.1423%" height="15" fill="rgb(57,171,171)" fg:x="293" fg:w="3"/><text x="14.1494%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.14%)</title><rect x="13.8994%" y="677" width="0.1423%" height="15" fill="rgb(64,178,178)" fg:x="293" fg:w="3"/><text x="14.1494%" y="687.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (3 samples, 0.14%)</title><rect x="14.0417%" y="677" width="0.1423%" height="15" fill="rgb(84,196,196)" fg:x="296" fg:w="3"/><text x="14.2917%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.14%)</title><rect x="14.0417%" y="661" width="0.1423%" height="15" fill="rgb(249,149,0)" fg:x="296" fg:w="3"/><text x="14.2917%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.14%)</title><rect x="14.0417%" y="645" width="0.1423%" height="15" fill="rgb(199,99,0)" fg:x="296" fg:w="3"/><text x="14.2917%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.14%)</title><rect x="14.0417%" y="629" width="0.1423%" height="15" fill="rgb(232,132,0)" fg:x="296" fg:w="3"/><text x="14.2917%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.14%)</title><rect x="14.0417%" y="613" width="0.1423%" height="15" fill="rgb(90,202,202)" fg:x="296" fg:w="3"/><text x="14.2917%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.14%)</title><rect x="14.0417%" y="597" width="0.1423%" height="15" fill="rgb(244,144,0)" fg:x="296" fg:w="3"/><text x="14.2917%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.14%)</title><rect x="14.0417%" y="581" width="0.1423%" height="15" fill="rgb(228,128,0)" fg:x="296" fg:w="3"/><text x="14.2917%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.19%)</title><rect x="14.0417%" y="741" width="0.1898%" height="15" fill="rgb(203,103,0)" fg:x="296" fg:w="4"/><text x="14.2917%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.19%)</title><rect x="14.0417%" y="725" width="0.1898%" height="15" fill="rgb(201,101,0)" fg:x="296" fg:w="4"/><text x="14.2917%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.19%)</title><rect x="14.0417%" y="709" width="0.1898%" height="15" fill="rgb(193,93,0)" fg:x="296" fg:w="4"/><text x="14.2917%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.19%)</title><rect x="14.0417%" y="693" width="0.1898%" height="15" fill="rgb(97,208,208)" fg:x="296" fg:w="4"/><text x="14.2917%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="14.1841%" y="677" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="299" fg:w="1"/><text x="14.4341%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="14.1841%" y="661" width="0.0474%" height="15" fill="rgb(190,90,0)" fg:x="299" fg:w="1"/><text x="14.4341%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="14.1841%" y="645" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="299" fg:w="1"/><text x="14.4341%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="14.1841%" y="629" width="0.0474%" height="15" fill="rgb(196,96,0)" fg:x="299" fg:w="1"/><text x="14.4341%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="14.1841%" y="613" width="0.0474%" height="15" fill="rgb(246,146,0)" fg:x="299" fg:w="1"/><text x="14.4341%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="14.1841%" y="597" width="0.0474%" height="15" fill="rgb(207,107,0)" fg:x="299" fg:w="1"/><text x="14.4341%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="14.2315%" y="741" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="300" fg:w="1"/><text x="14.4815%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (3 samples, 0.14%)</title><rect x="14.2789%" y="741" width="0.1423%" height="15" fill="rgb(205,105,0)" fg:x="301" fg:w="3"/><text x="14.5289%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.14%)</title><rect x="14.2789%" y="725" width="0.1423%" height="15" fill="rgb(211,111,0)" fg:x="301" fg:w="3"/><text x="14.5289%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (3 samples, 0.14%)</title><rect x="14.2789%" y="709" width="0.1423%" height="15" fill="rgb(225,125,0)" fg:x="301" fg:w="3"/><text x="14.5289%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="14.2789%" y="693" width="0.1423%" height="15" fill="rgb(245,145,0)" fg:x="301" fg:w="3"/><text x="14.5289%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.14%)</title><rect x="14.2789%" y="677" width="0.1423%" height="15" fill="rgb(239,139,0)" fg:x="301" fg:w="3"/><text x="14.5289%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.14%)</title><rect x="14.2789%" y="661" width="0.1423%" height="15" fill="rgb(246,146,0)" fg:x="301" fg:w="3"/><text x="14.5289%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="14.4213%" y="725" width="0.0949%" height="15" fill="rgb(206,106,0)" fg:x="304" fg:w="2"/><text x="14.6713%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.09%)</title><rect x="14.4213%" y="709" width="0.0949%" height="15" fill="rgb(240,140,0)" fg:x="304" fg:w="2"/><text x="14.6713%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.09%)</title><rect x="14.4213%" y="693" width="0.0949%" height="15" fill="rgb(249,149,0)" fg:x="304" fg:w="2"/><text x="14.6713%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="14.4213%" y="677" width="0.0949%" height="15" fill="rgb(226,126,0)" fg:x="304" fg:w="2"/><text x="14.6713%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="14.4213%" y="661" width="0.0949%" height="15" fill="rgb(236,136,0)" fg:x="304" fg:w="2"/><text x="14.6713%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="14.4213%" y="645" width="0.0949%" height="15" fill="rgb(237,137,0)" fg:x="304" fg:w="2"/><text x="14.6713%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="14.4213%" y="629" width="0.0949%" height="15" fill="rgb(230,130,0)" fg:x="304" fg:w="2"/><text x="14.6713%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="14.4213%" y="613" width="0.0949%" height="15" fill="rgb(232,132,0)" fg:x="304" fg:w="2"/><text x="14.6713%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (4 samples, 0.19%)</title><rect x="14.4213%" y="741" width="0.1898%" height="15" fill="rgb(200,100,0)" fg:x="304" fg:w="4"/><text x="14.6713%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.09%)</title><rect x="14.5161%" y="725" width="0.0949%" height="15" fill="rgb(215,115,0)" fg:x="306" fg:w="2"/><text x="14.7661%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="14.5161%" y="709" width="0.0949%" height="15" fill="rgb(250,150,0)" fg:x="306" fg:w="2"/><text x="14.7661%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="14.5161%" y="693" width="0.0949%" height="15" fill="rgb(229,129,0)" fg:x="306" fg:w="2"/><text x="14.7661%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="14.5161%" y="677" width="0.0949%" height="15" fill="rgb(237,137,0)" fg:x="306" fg:w="2"/><text x="14.7661%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.05%)</title><rect x="14.6110%" y="741" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="308" fg:w="1"/><text x="14.8610%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="14.6110%" y="725" width="0.0474%" height="15" fill="rgb(214,114,0)" fg:x="308" fg:w="1"/><text x="14.8610%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.05%)</title><rect x="14.6110%" y="709" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="308" fg:w="1"/><text x="14.8610%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="14.6110%" y="693" width="0.0474%" height="15" fill="rgb(73,186,186)" fg:x="308" fg:w="1"/><text x="14.8610%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.05%)</title><rect x="14.6110%" y="677" width="0.0474%" height="15" fill="rgb(220,120,0)" fg:x="308" fg:w="1"/><text x="14.8610%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="14.6110%" y="661" width="0.0474%" height="15" fill="rgb(210,110,0)" fg:x="308" fg:w="1"/><text x="14.8610%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="14.6110%" y="645" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="308" fg:w="1"/><text x="14.8610%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="14.6110%" y="629" width="0.0474%" height="15" fill="rgb(241,141,0)" fg:x="308" fg:w="1"/><text x="14.8610%" y="639.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (32 samples, 1.52%)</title><rect x="13.1879%" y="757" width="1.5180%" height="15" fill="rgb(54,168,168)" fg:x="278" fg:w="32"/><text x="13.4379%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.05%)</title><rect x="14.6584%" y="741" width="0.0474%" height="15" fill="rgb(192,92,0)" fg:x="309" fg:w="1"/><text x="14.9084%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="14.6584%" y="725" width="0.0474%" height="15" fill="rgb(198,98,0)" fg:x="309" fg:w="1"/><text x="14.9084%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (1 samples, 0.05%)</title><rect x="14.6584%" y="709" width="0.0474%" height="15" fill="rgb(205,105,0)" fg:x="309" fg:w="1"/><text x="14.9084%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="14.6584%" y="693" width="0.0474%" height="15" fill="rgb(76,188,188)" fg:x="309" fg:w="1"/><text x="14.9084%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.05%)</title><rect x="14.6584%" y="677" width="0.0474%" height="15" fill="rgb(220,120,0)" fg:x="309" fg:w="1"/><text x="14.9084%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="14.6584%" y="661" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="309" fg:w="1"/><text x="14.9084%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="14.6584%" y="645" width="0.0474%" height="15" fill="rgb(227,127,0)" fg:x="309" fg:w="1"/><text x="14.9084%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="14.6584%" y="629" width="0.0474%" height="15" fill="rgb(198,98,0)" fg:x="309" fg:w="1"/><text x="14.9084%" y="639.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_new_layouts (1 samples, 0.05%)</title><rect x="14.7059%" y="757" width="0.0474%" height="15" fill="rgb(70,183,183)" fg:x="310" fg:w="1"/><text x="14.9559%" y="767.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="14.7059%" y="741" width="0.0474%" height="15" fill="rgb(76,188,188)" fg:x="310" fg:w="1"/><text x="14.9559%" y="751.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (1 samples, 0.05%)</title><rect x="14.7533%" y="757" width="0.0474%" height="15" fill="rgb(67,181,181)" fg:x="311" fg:w="1"/><text x="15.0033%" y="767.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_char (1 samples, 0.05%)</title><rect x="14.7533%" y="741" width="0.0474%" height="15" fill="rgb(84,196,196)" fg:x="311" fg:w="1"/><text x="15.0033%" y="751.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.05%)</title><rect x="14.7533%" y="725" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="311" fg:w="1"/><text x="15.0033%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.05%)</title><rect x="14.7533%" y="709" width="0.0474%" height="15" fill="rgb(242,142,0)" fg:x="311" fg:w="1"/><text x="15.0033%" y="719.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.05%)</title><rect x="14.7533%" y="693" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="311" fg:w="1"/><text x="15.0033%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.05%)</title><rect x="14.8008%" y="757" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="312" fg:w="1"/><text x="15.0508%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.38%)</title><rect x="14.8482%" y="757" width="0.3795%" height="15" fill="rgb(204,104,0)" fg:x="313" fg:w="8"/><text x="15.0982%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.05%)</title><rect x="15.1803%" y="741" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="320" fg:w="1"/><text x="15.4303%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.05%)</title><rect x="15.1803%" y="725" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="320" fg:w="1"/><text x="15.4303%" y="735.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.05%)</title><rect x="15.1803%" y="709" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="320" fg:w="1"/><text x="15.4303%" y="719.50"></text></g><g><title>cfree (25 samples, 1.19%)</title><rect x="15.2277%" y="757" width="1.1860%" height="15" fill="rgb(197,197,58)" fg:x="321" fg:w="25"/><text x="15.4777%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.14%)</title><rect x="16.4137%" y="757" width="0.1423%" height="15" fill="rgb(209,109,0)" fg:x="346" fg:w="3"/><text x="16.6637%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="16.5085%" y="741" width="0.0474%" height="15" fill="rgb(214,114,0)" fg:x="348" fg:w="1"/><text x="16.7585%" y="751.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="16.5085%" y="725" width="0.0474%" height="15" fill="rgb(89,201,201)" fg:x="348" fg:w="1"/><text x="16.7585%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.05%)</title><rect x="16.5085%" y="709" width="0.0474%" height="15" fill="rgb(250,150,0)" fg:x="348" fg:w="1"/><text x="16.7585%" y="719.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.05%)</title><rect x="16.5085%" y="693" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="348" fg:w="1"/><text x="16.7585%" y="703.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="16.5560%" y="757" width="0.0474%" height="15" fill="rgb(227,127,0)" fg:x="349" fg:w="1"/><text x="16.8060%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.05%)</title><rect x="16.6034%" y="757" width="0.0474%" height="15" fill="rgb(100,211,211)" fg:x="350" fg:w="1"/><text x="16.8534%" y="767.50"></text></g><g><title>malloc (15 samples, 0.71%)</title><rect x="16.6509%" y="757" width="0.7116%" height="15" fill="rgb(205,205,61)" fg:x="351" fg:w="15"/><text x="16.9009%" y="767.50"></text></g><g><title>[unknown] (193 samples, 9.16%)</title><rect x="8.5389%" y="773" width="9.1556%" height="15" fill="rgb(202,202,59)" fg:x="180" fg:w="193"/><text x="8.7889%" y="783.50">[unknown]</text></g><g><title>realloc (7 samples, 0.33%)</title><rect x="17.3624%" y="757" width="0.3321%" height="15" fill="rgb(228,228,69)" fg:x="366" fg:w="7"/><text x="17.6124%" y="767.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::combine_with (1 samples, 0.05%)</title><rect x="17.6945%" y="453" width="0.0474%" height="15" fill="rgb(108,218,218)" fg:x="373" fg:w="1"/><text x="17.9445%" y="463.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::add_from_key_value (1 samples, 0.05%)</title><rect x="17.6945%" y="437" width="0.0474%" height="15" fill="rgb(78,191,191)" fg:x="373" fg:w="1"/><text x="17.9445%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.05%)</title><rect x="17.6945%" y="421" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="373" fg:w="1"/><text x="17.9445%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.05%)</title><rect x="17.6945%" y="405" width="0.0474%" height="15" fill="rgb(61,175,175)" fg:x="373" fg:w="1"/><text x="17.9445%" y="415.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.05%)</title><rect x="17.7419%" y="405" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="374" fg:w="1"/><text x="17.9919%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.05%)</title><rect x="17.7419%" y="389" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="374" fg:w="1"/><text x="17.9919%" y="399.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.05%)</title><rect x="17.7419%" y="373" width="0.0474%" height="15" fill="rgb(212,112,0)" fg:x="374" fg:w="1"/><text x="17.9919%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.05%)</title><rect x="17.7419%" y="357" width="0.0474%" height="15" fill="rgb(208,108,0)" fg:x="374" fg:w="1"/><text x="17.9919%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.05%)</title><rect x="17.7419%" y="341" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="374" fg:w="1"/><text x="17.9919%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.05%)</title><rect x="17.7419%" y="325" width="0.0474%" height="15" fill="rgb(58,172,172)" fg:x="374" fg:w="1"/><text x="17.9919%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.05%)</title><rect x="17.7419%" y="309" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="374" fg:w="1"/><text x="17.9919%" y="319.50"></text></g><g><title>core::char::CaseMappingIter::new (1 samples, 0.05%)</title><rect x="17.7894%" y="389" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="375" fg:w="1"/><text x="18.0394%" y="399.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_uppercase (2 samples, 0.09%)</title><rect x="17.7894%" y="405" width="0.0949%" height="15" fill="rgb(252,152,0)" fg:x="375" fg:w="2"/><text x="18.0394%" y="415.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.05%)</title><rect x="17.8368%" y="389" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="376" fg:w="1"/><text x="18.0868%" y="399.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_string (4 samples, 0.19%)</title><rect x="17.7419%" y="437" width="0.1898%" height="15" fill="rgb(96,207,207)" fg:x="374" fg:w="4"/><text x="17.9919%" y="447.50"></text></g><g><title>alc::text_processor::keycode::Keycode::from_char (4 samples, 0.19%)</title><rect x="17.7419%" y="421" width="0.1898%" height="15" fill="rgb(85,197,197)" fg:x="374" fg:w="4"/><text x="17.9919%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.05%)</title><rect x="17.8843%" y="405" width="0.0474%" height="15" fill="rgb(246,146,0)" fg:x="377" fg:w="1"/><text x="18.1343%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (1 samples, 0.05%)</title><rect x="17.8843%" y="389" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="377" fg:w="1"/><text x="18.1343%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;alc::text_processor::keycode::Keycode,()&gt;&gt; (1 samples, 0.05%)</title><rect x="17.8843%" y="373" width="0.0474%" height="15" fill="rgb(242,142,0)" fg:x="377" fg:w="1"/><text x="18.1343%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(alc::text_processor::keycode::Keycode,())&gt;&gt; (1 samples, 0.05%)</title><rect x="17.8843%" y="357" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="377" fg:w="1"/><text x="18.1343%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="17.8843%" y="341" width="0.0474%" height="15" fill="rgb(109,219,219)" fg:x="377" fg:w="1"/><text x="18.1343%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="17.8843%" y="325" width="0.0474%" height="15" fill="rgb(239,139,0)" fg:x="377" fg:w="1"/><text x="18.1343%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="17.8843%" y="309" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="377" fg:w="1"/><text x="18.1343%" y="319.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="17.8843%" y="293" width="0.0474%" height="15" fill="rgb(188,188,55)" fg:x="377" fg:w="1"/><text x="18.1343%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="17.8843%" y="277" width="0.0474%" height="15" fill="rgb(191,191,55)" fg:x="377" fg:w="1"/><text x="18.1343%" y="287.50"></text></g><g><title>&lt;alc::optimizer::LayoutOptimizer&lt;4_usize,12_usize,alc::objective::scoring::SimpleScoreFunction&gt; as core::default::Default&gt;::default (7 samples, 0.33%)</title><rect x="17.6945%" y="501" width="0.3321%" height="15" fill="rgb(109,219,219)" fg:x="373" fg:w="7"/><text x="17.9445%" y="511.50"></text></g><g><title>alc::text_processor::dataset::FrequencyDataset&lt;u32&gt;::try_from_dir (7 samples, 0.33%)</title><rect x="17.6945%" y="485" width="0.3321%" height="15" fill="rgb(57,172,172)" fg:x="373" fg:w="7"/><text x="17.9445%" y="495.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_file (7 samples, 0.33%)</title><rect x="17.6945%" y="469" width="0.3321%" height="15" fill="rgb(91,203,203)" fg:x="373" fg:w="7"/><text x="17.9445%" y="479.50"></text></g><g><title>alc::text_processor::frequency_holder::SingleGramFrequencies&lt;u32&gt;::try_from_string (6 samples, 0.28%)</title><rect x="17.7419%" y="453" width="0.2846%" height="15" fill="rgb(90,202,202)" fg:x="374" fg:w="6"/><text x="17.9919%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.09%)</title><rect x="17.9317%" y="437" width="0.0949%" height="15" fill="rgb(190,90,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.09%)</title><rect x="17.9317%" y="421" width="0.0949%" height="15" fill="rgb(96,207,207)" fg:x="378" fg:w="2"/><text x="18.1817%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.09%)</title><rect x="17.9317%" y="405" width="0.0949%" height="15" fill="rgb(56,170,170)" fg:x="378" fg:w="2"/><text x="18.1817%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.09%)</title><rect x="17.9317%" y="389" width="0.0949%" height="15" fill="rgb(193,93,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.09%)</title><rect x="17.9317%" y="373" width="0.0949%" height="15" fill="rgb(252,152,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="383.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="17.9317%" y="357" width="0.0949%" height="15" fill="rgb(101,212,212)" fg:x="378" fg:w="2"/><text x="18.1817%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="17.9317%" y="341" width="0.0949%" height="15" fill="rgb(218,118,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.09%)</title><rect x="17.9317%" y="325" width="0.0949%" height="15" fill="rgb(221,121,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="335.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.09%)</title><rect x="17.9317%" y="309" width="0.0949%" height="15" fill="rgb(213,113,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="319.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="17.9317%" y="293" width="0.0949%" height="15" fill="rgb(89,200,200)" fg:x="378" fg:w="2"/><text x="18.1817%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.09%)</title><rect x="17.9317%" y="277" width="0.0949%" height="15" fill="rgb(200,100,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="287.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.09%)</title><rect x="17.9317%" y="261" width="0.0949%" height="15" fill="rgb(212,112,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="271.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.09%)</title><rect x="17.9317%" y="245" width="0.0949%" height="15" fill="rgb(253,153,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="17.9317%" y="229" width="0.0949%" height="15" fill="rgb(228,128,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="17.9317%" y="213" width="0.0949%" height="15" fill="rgb(199,99,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="17.9317%" y="197" width="0.0949%" height="15" fill="rgb(228,128,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.09%)</title><rect x="17.9317%" y="181" width="0.0949%" height="15" fill="rgb(214,114,0)" fg:x="378" fg:w="2"/><text x="18.1817%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="17.9791%" y="165" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="379" fg:w="1"/><text x="18.2291%" y="175.50"></text></g><g><title>&lt;tqdm::Tqdm&lt;Iter&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="18.0266%" y="485" width="0.0474%" height="15" fill="rgb(66,180,180)" fg:x="380" fg:w="1"/><text x="18.2766%" y="495.50"></text></g><g><title>tqdm::Pbar::update (1 samples, 0.05%)</title><rect x="18.0266%" y="469" width="0.0474%" height="15" fill="rgb(59,173,173)" fg:x="380" fg:w="1"/><text x="18.2766%" y="479.50"></text></g><g><title>tqdm::refresh (1 samples, 0.05%)</title><rect x="18.0266%" y="453" width="0.0474%" height="15" fill="rgb(66,180,180)" fg:x="380" fg:w="1"/><text x="18.2766%" y="463.50"></text></g><g><title>tqdm::Info::format (1 samples, 0.05%)</title><rect x="18.0266%" y="437" width="0.0474%" height="15" fill="rgb(69,182,182)" fg:x="380" fg:w="1"/><text x="18.2766%" y="447.50"></text></g><g><title>&lt;core::fmt::Arguments as alloc::string::ToString&gt;::to_string (1 samples, 0.05%)</title><rect x="18.0266%" y="421" width="0.0474%" height="15" fill="rgb(215,115,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="431.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.05%)</title><rect x="18.0266%" y="405" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.05%)</title><rect x="18.0266%" y="389" width="0.0474%" height="15" fill="rgb(212,112,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="399.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.05%)</title><rect x="18.0266%" y="373" width="0.0474%" height="15" fill="rgb(211,111,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.05%)</title><rect x="18.0266%" y="357" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.05%)</title><rect x="18.0266%" y="341" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.05%)</title><rect x="18.0266%" y="325" width="0.0474%" height="15" fill="rgb(57,171,171)" fg:x="380" fg:w="1"/><text x="18.2766%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.05%)</title><rect x="18.0266%" y="309" width="0.0474%" height="15" fill="rgb(236,136,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.05%)</title><rect x="18.0266%" y="293" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="18.0266%" y="277" width="0.0474%" height="15" fill="rgb(213,113,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.05%)</title><rect x="18.0266%" y="261" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="18.0266%" y="245" width="0.0474%" height="15" fill="rgb(195,95,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="18.0266%" y="229" width="0.0474%" height="15" fill="rgb(212,112,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="18.0266%" y="213" width="0.0474%" height="15" fill="rgb(246,146,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="18.0266%" y="197" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="18.0266%" y="181" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="18.0266%" y="165" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="18.0266%" y="149" width="0.0474%" height="15" fill="rgb(254,154,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="18.0266%" y="133" width="0.0474%" height="15" fill="rgb(214,114,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.05%)</title><rect x="18.0266%" y="117" width="0.0474%" height="15" fill="rgb(202,102,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.05%)</title><rect x="18.0266%" y="101" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.05%)</title><rect x="18.0266%" y="85" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="380" fg:w="1"/><text x="18.2766%" y="95.50"></text></g><g><title>realloc (1 samples, 0.05%)</title><rect x="18.0266%" y="69" width="0.0474%" height="15" fill="rgb(227,227,69)" fg:x="380" fg:w="1"/><text x="18.2766%" y="79.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.0266%" y="53" width="0.0474%" height="15" fill="rgb(215,215,64)" fg:x="380" fg:w="1"/><text x="18.2766%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.0266%" y="37" width="0.0474%" height="15" fill="rgb(179,179,51)" fg:x="380" fg:w="1"/><text x="18.2766%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.0740%" y="453" width="0.0949%" height="15" fill="rgb(191,91,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="18.0740%" y="437" width="0.0949%" height="15" fill="rgb(231,131,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="18.0740%" y="421" width="0.0949%" height="15" fill="rgb(226,126,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="18.0740%" y="405" width="0.0949%" height="15" fill="rgb(51,166,166)" fg:x="381" fg:w="2"/><text x="18.3240%" y="415.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.0740%" y="389" width="0.0949%" height="15" fill="rgb(75,188,188)" fg:x="381" fg:w="2"/><text x="18.3240%" y="399.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.0740%" y="373" width="0.0949%" height="15" fill="rgb(50,165,165)" fg:x="381" fg:w="2"/><text x="18.3240%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.0740%" y="357" width="0.0949%" height="15" fill="rgb(249,149,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="18.0740%" y="341" width="0.0949%" height="15" fill="rgb(228,128,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="18.0740%" y="325" width="0.0949%" height="15" fill="rgb(228,128,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="18.0740%" y="309" width="0.0949%" height="15" fill="rgb(54,169,169)" fg:x="381" fg:w="2"/><text x="18.3240%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="18.0740%" y="293" width="0.0949%" height="15" fill="rgb(242,142,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="18.0740%" y="277" width="0.0949%" height="15" fill="rgb(251,151,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.09%)</title><rect x="18.0740%" y="261" width="0.0949%" height="15" fill="rgb(241,141,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.09%)</title><rect x="18.0740%" y="245" width="0.0949%" height="15" fill="rgb(206,106,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.09%)</title><rect x="18.0740%" y="229" width="0.0949%" height="15" fill="rgb(218,118,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.09%)</title><rect x="18.0740%" y="213" width="0.0949%" height="15" fill="rgb(249,149,0)" fg:x="381" fg:w="2"/><text x="18.3240%" y="223.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="18.0740%" y="197" width="0.0949%" height="15" fill="rgb(176,176,50)" fg:x="381" fg:w="2"/><text x="18.3240%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="18.0740%" y="181" width="0.0949%" height="15" fill="rgb(223,223,67)" fg:x="381" fg:w="2"/><text x="18.3240%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="18.0740%" y="165" width="0.0949%" height="15" fill="rgb(224,224,67)" fg:x="381" fg:w="2"/><text x="18.3240%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.1214%" y="149" width="0.0474%" height="15" fill="rgb(188,188,54)" fg:x="382" fg:w="1"/><text x="18.3714%" y="159.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="18.1689%" y="293" width="0.0474%" height="15" fill="rgb(98,209,209)" fg:x="383" fg:w="1"/><text x="18.4189%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="18.1689%" y="277" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="18.1689%" y="261" width="0.0474%" height="15" fill="rgb(232,132,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="18.1689%" y="245" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="18.1689%" y="229" width="0.0474%" height="15" fill="rgb(89,201,201)" fg:x="383" fg:w="1"/><text x="18.4189%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.1689%" y="213" width="0.0474%" height="15" fill="rgb(233,133,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.1689%" y="197" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="18.1689%" y="181" width="0.0474%" height="15" fill="rgb(208,108,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="18.1689%" y="165" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="18.1689%" y="149" width="0.0474%" height="15" fill="rgb(211,111,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="18.1689%" y="133" width="0.0474%" height="15" fill="rgb(202,102,0)" fg:x="383" fg:w="1"/><text x="18.4189%" y="143.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="18.1689%" y="117" width="0.0474%" height="15" fill="rgb(210,210,63)" fg:x="383" fg:w="1"/><text x="18.4189%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.1689%" y="101" width="0.0474%" height="15" fill="rgb(181,181,52)" fg:x="383" fg:w="1"/><text x="18.4189%" y="111.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (4 samples, 0.19%)</title><rect x="18.0740%" y="469" width="0.1898%" height="15" fill="rgb(83,196,196)" fg:x="381" fg:w="4"/><text x="18.3240%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.1689%" y="453" width="0.0949%" height="15" fill="rgb(209,109,0)" fg:x="383" fg:w="2"/><text x="18.4189%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.1689%" y="437" width="0.0949%" height="15" fill="rgb(67,181,181)" fg:x="383" fg:w="2"/><text x="18.4189%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.1689%" y="421" width="0.0949%" height="15" fill="rgb(87,199,199)" fg:x="383" fg:w="2"/><text x="18.4189%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.09%)</title><rect x="18.1689%" y="405" width="0.0949%" height="15" fill="rgb(56,171,171)" fg:x="383" fg:w="2"/><text x="18.4189%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.09%)</title><rect x="18.1689%" y="389" width="0.0949%" height="15" fill="rgb(81,193,193)" fg:x="383" fg:w="2"/><text x="18.4189%" y="399.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.09%)</title><rect x="18.1689%" y="373" width="0.0949%" height="15" fill="rgb(217,117,0)" fg:x="383" fg:w="2"/><text x="18.4189%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.1689%" y="357" width="0.0949%" height="15" fill="rgb(197,97,0)" fg:x="383" fg:w="2"/><text x="18.4189%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="18.1689%" y="341" width="0.0949%" height="15" fill="rgb(230,130,0)" fg:x="383" fg:w="2"/><text x="18.4189%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="18.1689%" y="325" width="0.0949%" height="15" fill="rgb(214,114,0)" fg:x="383" fg:w="2"/><text x="18.4189%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="18.1689%" y="309" width="0.0949%" height="15" fill="rgb(72,185,185)" fg:x="383" fg:w="2"/><text x="18.4189%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.2163%" y="293" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="384" fg:w="1"/><text x="18.4663%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.2163%" y="277" width="0.0474%" height="15" fill="rgb(246,146,0)" fg:x="384" fg:w="1"/><text x="18.4663%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="18.2163%" y="261" width="0.0474%" height="15" fill="rgb(206,106,0)" fg:x="384" fg:w="1"/><text x="18.4663%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="18.2163%" y="245" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="384" fg:w="1"/><text x="18.4663%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="18.2163%" y="229" width="0.0474%" height="15" fill="rgb(194,94,0)" fg:x="384" fg:w="1"/><text x="18.4663%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="18.2163%" y="213" width="0.0474%" height="15" fill="rgb(197,97,0)" fg:x="384" fg:w="1"/><text x="18.4663%" y="223.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="18.2163%" y="197" width="0.0474%" height="15" fill="rgb(183,183,53)" fg:x="384" fg:w="1"/><text x="18.4663%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.2163%" y="181" width="0.0474%" height="15" fill="rgb(191,191,55)" fg:x="384" fg:w="1"/><text x="18.4663%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.3112%" y="357" width="0.0474%" height="15" fill="rgb(223,123,0)" fg:x="386" fg:w="1"/><text x="18.5612%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.3112%" y="341" width="0.0474%" height="15" fill="rgb(217,117,0)" fg:x="386" fg:w="1"/><text x="18.5612%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="18.3112%" y="325" width="0.0474%" height="15" fill="rgb(192,92,0)" fg:x="386" fg:w="1"/><text x="18.5612%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="18.3112%" y="309" width="0.0474%" height="15" fill="rgb(217,117,0)" fg:x="386" fg:w="1"/><text x="18.5612%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="18.3112%" y="293" width="0.0474%" height="15" fill="rgb(191,91,0)" fg:x="386" fg:w="1"/><text x="18.5612%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="18.3112%" y="277" width="0.0474%" height="15" fill="rgb(243,143,0)" fg:x="386" fg:w="1"/><text x="18.5612%" y="287.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="18.3112%" y="261" width="0.0474%" height="15" fill="rgb(195,195,57)" fg:x="386" fg:w="1"/><text x="18.5612%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.3112%" y="245" width="0.0474%" height="15" fill="rgb(199,199,58)" fg:x="386" fg:w="1"/><text x="18.5612%" y="255.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.3112%" y="437" width="0.0949%" height="15" fill="rgb(93,205,205)" fg:x="386" fg:w="2"/><text x="18.5612%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.3112%" y="421" width="0.0949%" height="15" fill="rgb(222,122,0)" fg:x="386" fg:w="2"/><text x="18.5612%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="18.3112%" y="405" width="0.0949%" height="15" fill="rgb(242,142,0)" fg:x="386" fg:w="2"/><text x="18.5612%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="18.3112%" y="389" width="0.0949%" height="15" fill="rgb(216,116,0)" fg:x="386" fg:w="2"/><text x="18.5612%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="18.3112%" y="373" width="0.0949%" height="15" fill="rgb(99,210,210)" fg:x="386" fg:w="2"/><text x="18.5612%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="18.3586%" y="357" width="0.0474%" height="15" fill="rgb(233,133,0)" fg:x="387" fg:w="1"/><text x="18.6086%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="18.3586%" y="341" width="0.0474%" height="15" fill="rgb(196,96,0)" fg:x="387" fg:w="1"/><text x="18.6086%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.3586%" y="325" width="0.0474%" height="15" fill="rgb(225,225,68)" fg:x="387" fg:w="1"/><text x="18.6086%" y="335.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.05%)</title><rect x="18.4061%" y="357" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="18.4061%" y="341" width="0.0474%" height="15" fill="rgb(216,116,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="18.4061%" y="325" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="18.4061%" y="309" width="0.0474%" height="15" fill="rgb(236,136,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="18.4061%" y="293" width="0.0474%" height="15" fill="rgb(59,173,173)" fg:x="388" fg:w="1"/><text x="18.6561%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.4061%" y="277" width="0.0474%" height="15" fill="rgb(236,136,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.4061%" y="261" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="18.4061%" y="245" width="0.0474%" height="15" fill="rgb(223,123,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="18.4061%" y="229" width="0.0474%" height="15" fill="rgb(220,120,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="18.4061%" y="213" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="18.4061%" y="197" width="0.0474%" height="15" fill="rgb(213,113,0)" fg:x="388" fg:w="1"/><text x="18.6561%" y="207.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="18.4061%" y="181" width="0.0474%" height="15" fill="rgb(220,220,66)" fg:x="388" fg:w="1"/><text x="18.6561%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.4061%" y="437" width="0.0949%" height="15" fill="rgb(221,121,0)" fg:x="388" fg:w="2"/><text x="18.6561%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.4061%" y="421" width="0.0949%" height="15" fill="rgb(72,185,185)" fg:x="388" fg:w="2"/><text x="18.6561%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.4061%" y="405" width="0.0949%" height="15" fill="rgb(100,211,211)" fg:x="388" fg:w="2"/><text x="18.6561%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.09%)</title><rect x="18.4061%" y="389" width="0.0949%" height="15" fill="rgb(57,171,171)" fg:x="388" fg:w="2"/><text x="18.6561%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.09%)</title><rect x="18.4061%" y="373" width="0.0949%" height="15" fill="rgb(64,178,178)" fg:x="388" fg:w="2"/><text x="18.6561%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.05%)</title><rect x="18.4535%" y="357" width="0.0474%" height="15" fill="rgb(106,216,216)" fg:x="389" fg:w="1"/><text x="18.7035%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.05%)</title><rect x="18.4535%" y="341" width="0.0474%" height="15" fill="rgb(102,213,213)" fg:x="389" fg:w="1"/><text x="18.7035%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="18.4535%" y="325" width="0.0474%" height="15" fill="rgb(222,122,0)" fg:x="389" fg:w="1"/><text x="18.7035%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="18.4535%" y="309" width="0.0474%" height="15" fill="rgb(210,110,0)" fg:x="389" fg:w="1"/><text x="18.7035%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="18.5009%" y="437" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="390" fg:w="1"/><text x="18.7509%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="18.5009%" y="421" width="0.0474%" height="15" fill="rgb(195,95,0)" fg:x="390" fg:w="1"/><text x="18.7509%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="18.5484%" y="277" width="0.0474%" height="15" fill="rgb(246,146,0)" fg:x="391" fg:w="1"/><text x="18.7984%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.05%)</title><rect x="18.5484%" y="261" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="391" fg:w="1"/><text x="18.7984%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.05%)</title><rect x="18.5484%" y="245" width="0.0474%" height="15" fill="rgb(224,124,0)" fg:x="391" fg:w="1"/><text x="18.7984%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.05%)</title><rect x="18.5484%" y="229" width="0.0474%" height="15" fill="rgb(215,115,0)" fg:x="391" fg:w="1"/><text x="18.7984%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.05%)</title><rect x="18.5484%" y="213" width="0.0474%" height="15" fill="rgb(233,133,0)" fg:x="391" fg:w="1"/><text x="18.7984%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="18.5484%" y="197" width="0.0474%" height="15" fill="rgb(232,132,0)" fg:x="391" fg:w="1"/><text x="18.7984%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="18.5484%" y="181" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="391" fg:w="1"/><text x="18.7984%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="18.5484%" y="165" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="391" fg:w="1"/><text x="18.7984%" y="175.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="18.5484%" y="149" width="0.0474%" height="15" fill="rgb(207,207,61)" fg:x="391" fg:w="1"/><text x="18.7984%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="18.5484%" y="437" width="0.0949%" height="15" fill="rgb(212,112,0)" fg:x="391" fg:w="2"/><text x="18.7984%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (2 samples, 0.09%)</title><rect x="18.5484%" y="421" width="0.0949%" height="15" fill="rgb(219,119,0)" fg:x="391" fg:w="2"/><text x="18.7984%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (2 samples, 0.09%)</title><rect x="18.5484%" y="405" width="0.0949%" height="15" fill="rgb(240,140,0)" fg:x="391" fg:w="2"/><text x="18.7984%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="18.5484%" y="389" width="0.0949%" height="15" fill="rgb(52,167,167)" fg:x="391" fg:w="2"/><text x="18.7984%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.09%)</title><rect x="18.5484%" y="373" width="0.0949%" height="15" fill="rgb(77,190,190)" fg:x="391" fg:w="2"/><text x="18.7984%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.09%)</title><rect x="18.5484%" y="357" width="0.0949%" height="15" fill="rgb(107,217,217)" fg:x="391" fg:w="2"/><text x="18.7984%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.09%)</title><rect x="18.5484%" y="341" width="0.0949%" height="15" fill="rgb(63,177,177)" fg:x="391" fg:w="2"/><text x="18.7984%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.09%)</title><rect x="18.5484%" y="325" width="0.0949%" height="15" fill="rgb(234,134,0)" fg:x="391" fg:w="2"/><text x="18.7984%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (2 samples, 0.09%)</title><rect x="18.5484%" y="309" width="0.0949%" height="15" fill="rgb(196,96,0)" fg:x="391" fg:w="2"/><text x="18.7984%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.09%)</title><rect x="18.5484%" y="293" width="0.0949%" height="15" fill="rgb(195,95,0)" fg:x="391" fg:w="2"/><text x="18.7984%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.05%)</title><rect x="18.5958%" y="277" width="0.0474%" height="15" fill="rgb(202,102,0)" fg:x="392" fg:w="1"/><text x="18.8458%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="18.5958%" y="261" width="0.0474%" height="15" fill="rgb(219,119,0)" fg:x="392" fg:w="1"/><text x="18.8458%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="18.5958%" y="245" width="0.0474%" height="15" fill="rgb(213,113,0)" fg:x="392" fg:w="1"/><text x="18.8458%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="18.5958%" y="229" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="392" fg:w="1"/><text x="18.8458%" y="239.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="18.5958%" y="213" width="0.0474%" height="15" fill="rgb(225,225,68)" fg:x="392" fg:w="1"/><text x="18.8458%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.5958%" y="197" width="0.0474%" height="15" fill="rgb(211,211,63)" fg:x="392" fg:w="1"/><text x="18.8458%" y="207.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::randomize (9 samples, 0.43%)</title><rect x="18.2638%" y="469" width="0.4269%" height="15" fill="rgb(66,180,180)" fg:x="385" fg:w="9"/><text x="18.5138%" y="479.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (9 samples, 0.43%)</title><rect x="18.2638%" y="453" width="0.4269%" height="15" fill="rgb(92,203,203)" fg:x="385" fg:w="9"/><text x="18.5138%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.05%)</title><rect x="18.6433%" y="437" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="393" fg:w="1"/><text x="18.8933%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.05%)</title><rect x="18.6433%" y="421" width="0.0474%" height="15" fill="rgb(109,219,219)" fg:x="393" fg:w="1"/><text x="18.8933%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.05%)</title><rect x="18.6433%" y="405" width="0.0474%" height="15" fill="rgb(104,215,215)" fg:x="393" fg:w="1"/><text x="18.8933%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="18.6433%" y="389" width="0.0474%" height="15" fill="rgb(92,204,204)" fg:x="393" fg:w="1"/><text x="18.8933%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.05%)</title><rect x="18.6433%" y="373" width="0.0474%" height="15" fill="rgb(53,168,168)" fg:x="393" fg:w="1"/><text x="18.8933%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.05%)</title><rect x="18.6433%" y="357" width="0.0474%" height="15" fill="rgb(59,173,173)" fg:x="393" fg:w="1"/><text x="18.8933%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.05%)</title><rect x="18.6433%" y="341" width="0.0474%" height="15" fill="rgb(97,208,208)" fg:x="393" fg:w="1"/><text x="18.8933%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.05%)</title><rect x="18.6433%" y="325" width="0.0474%" height="15" fill="rgb(60,174,174)" fg:x="393" fg:w="1"/><text x="18.8933%" y="335.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.05%)</title><rect x="18.6433%" y="309" width="0.0474%" height="15" fill="rgb(78,191,191)" fg:x="393" fg:w="1"/><text x="18.8933%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.05%)</title><rect x="18.6433%" y="293" width="0.0474%" height="15" fill="rgb(100,211,211)" fg:x="393" fg:w="1"/><text x="18.8933%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="18.6433%" y="277" width="0.0474%" height="15" fill="rgb(219,119,0)" fg:x="393" fg:w="1"/><text x="18.8933%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="18.6433%" y="261" width="0.0474%" height="15" fill="rgb(253,153,0)" fg:x="393" fg:w="1"/><text x="18.8933%" y="271.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="18.6433%" y="245" width="0.0474%" height="15" fill="rgb(109,219,219)" fg:x="393" fg:w="1"/><text x="18.8933%" y="255.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.6907%" y="453" width="0.0949%" height="15" fill="rgb(101,212,212)" fg:x="394" fg:w="2"/><text x="18.9407%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.6907%" y="437" width="0.0949%" height="15" fill="rgb(249,149,0)" fg:x="394" fg:w="2"/><text x="18.9407%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.6907%" y="421" width="0.0949%" height="15" fill="rgb(101,211,211)" fg:x="394" fg:w="2"/><text x="18.9407%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="18.6907%" y="405" width="0.0949%" height="15" fill="rgb(74,187,187)" fg:x="394" fg:w="2"/><text x="18.9407%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.09%)</title><rect x="18.6907%" y="389" width="0.0949%" height="15" fill="rgb(60,174,174)" fg:x="394" fg:w="2"/><text x="18.9407%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.09%)</title><rect x="18.6907%" y="373" width="0.0949%" height="15" fill="rgb(79,191,191)" fg:x="394" fg:w="2"/><text x="18.9407%" y="383.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.09%)</title><rect x="18.6907%" y="357" width="0.0949%" height="15" fill="rgb(231,131,0)" fg:x="394" fg:w="2"/><text x="18.9407%" y="367.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="18.7381%" y="341" width="0.0474%" height="15" fill="rgb(57,172,172)" fg:x="395" fg:w="1"/><text x="18.9881%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="18.7381%" y="325" width="0.0474%" height="15" fill="rgb(210,110,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="18.7381%" y="309" width="0.0474%" height="15" fill="rgb(250,150,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="18.7381%" y="293" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="18.7381%" y="277" width="0.0474%" height="15" fill="rgb(55,170,170)" fg:x="395" fg:w="1"/><text x="18.9881%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.7381%" y="261" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="18.7381%" y="245" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="18.7381%" y="229" width="0.0474%" height="15" fill="rgb(223,123,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="18.7381%" y="213" width="0.0474%" height="15" fill="rgb(213,113,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="18.7381%" y="197" width="0.0474%" height="15" fill="rgb(201,101,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="18.7381%" y="181" width="0.0474%" height="15" fill="rgb(223,123,0)" fg:x="395" fg:w="1"/><text x="18.9881%" y="191.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="18.7381%" y="165" width="0.0474%" height="15" fill="rgb(214,214,64)" fg:x="395" fg:w="1"/><text x="18.9881%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="18.7381%" y="149" width="0.0474%" height="15" fill="rgb(202,202,59)" fg:x="395" fg:w="1"/><text x="18.9881%" y="159.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (2 samples, 0.09%)</title><rect x="18.7856%" y="437" width="0.0949%" height="15" fill="rgb(52,166,166)" fg:x="396" fg:w="2"/><text x="19.0356%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="18.7856%" y="421" width="0.0949%" height="15" fill="rgb(199,99,0)" fg:x="396" fg:w="2"/><text x="19.0356%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="18.7856%" y="405" width="0.0949%" height="15" fill="rgb(215,115,0)" fg:x="396" fg:w="2"/><text x="19.0356%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (2 samples, 0.09%)</title><rect x="18.7856%" y="389" width="0.0949%" height="15" fill="rgb(248,148,0)" fg:x="396" fg:w="2"/><text x="19.0356%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="18.7856%" y="373" width="0.0949%" height="15" fill="rgb(90,202,202)" fg:x="396" fg:w="2"/><text x="19.0356%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="18.7856%" y="357" width="0.0949%" height="15" fill="rgb(244,144,0)" fg:x="396" fg:w="2"/><text x="19.0356%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="18.7856%" y="341" width="0.0949%" height="15" fill="rgb(221,121,0)" fg:x="396" fg:w="2"/><text x="19.0356%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="18.7856%" y="325" width="0.0949%" height="15" fill="rgb(209,109,0)" fg:x="396" fg:w="2"/><text x="19.0356%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="18.7856%" y="309" width="0.0949%" height="15" fill="rgb(197,97,0)" fg:x="396" fg:w="2"/><text x="19.0356%" y="319.50"></text></g><g><title>cfree (2 samples, 0.09%)</title><rect x="18.7856%" y="293" width="0.0949%" height="15" fill="rgb(200,200,59)" fg:x="396" fg:w="2"/><text x="19.0356%" y="303.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="18.7856%" y="277" width="0.0949%" height="15" fill="rgb(228,228,69)" fg:x="396" fg:w="2"/><text x="19.0356%" y="287.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="19.0228%" y="421" width="0.0474%" height="15" fill="rgb(96,207,207)" fg:x="401" fg:w="1"/><text x="19.2728%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="19.0228%" y="405" width="0.0474%" height="15" fill="rgb(196,96,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="19.0228%" y="389" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="19.0228%" y="373" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="19.0228%" y="357" width="0.0474%" height="15" fill="rgb(89,201,201)" fg:x="401" fg:w="1"/><text x="19.2728%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="19.0228%" y="341" width="0.0474%" height="15" fill="rgb(232,132,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="19.0228%" y="325" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="19.0228%" y="309" width="0.0474%" height="15" fill="rgb(231,131,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="19.0228%" y="293" width="0.0474%" height="15" fill="rgb(226,126,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="19.0228%" y="277" width="0.0474%" height="15" fill="rgb(214,114,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="19.0228%" y="261" width="0.0474%" height="15" fill="rgb(254,154,0)" fg:x="401" fg:w="1"/><text x="19.2728%" y="271.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="19.0228%" y="245" width="0.0474%" height="15" fill="rgb(216,216,65)" fg:x="401" fg:w="1"/><text x="19.2728%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="19.0702%" y="277" width="0.0474%" height="15" fill="rgb(237,137,0)" fg:x="402" fg:w="1"/><text x="19.3202%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="19.0702%" y="261" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="402" fg:w="1"/><text x="19.3202%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="19.0702%" y="245" width="0.0474%" height="15" fill="rgb(230,130,0)" fg:x="402" fg:w="1"/><text x="19.3202%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="19.0702%" y="229" width="0.0474%" height="15" fill="rgb(242,142,0)" fg:x="402" fg:w="1"/><text x="19.3202%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="19.0702%" y="213" width="0.0474%" height="15" fill="rgb(208,108,0)" fg:x="402" fg:w="1"/><text x="19.3202%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="19.0702%" y="197" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="402" fg:w="1"/><text x="19.3202%" y="207.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="19.0702%" y="181" width="0.0474%" height="15" fill="rgb(220,220,66)" fg:x="402" fg:w="1"/><text x="19.3202%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="19.0702%" y="421" width="0.0949%" height="15" fill="rgb(212,112,0)" fg:x="402" fg:w="2"/><text x="19.3202%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="19.0702%" y="405" width="0.0949%" height="15" fill="rgb(192,92,0)" fg:x="402" fg:w="2"/><text x="19.3202%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="19.0702%" y="389" width="0.0949%" height="15" fill="rgb(244,144,0)" fg:x="402" fg:w="2"/><text x="19.3202%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="19.0702%" y="373" width="0.0949%" height="15" fill="rgb(59,173,173)" fg:x="402" fg:w="2"/><text x="19.3202%" y="383.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="19.0702%" y="357" width="0.0949%" height="15" fill="rgb(52,167,167)" fg:x="402" fg:w="2"/><text x="19.3202%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="19.0702%" y="341" width="0.0949%" height="15" fill="rgb(220,120,0)" fg:x="402" fg:w="2"/><text x="19.3202%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="19.0702%" y="325" width="0.0949%" height="15" fill="rgb(230,130,0)" fg:x="402" fg:w="2"/><text x="19.3202%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="19.0702%" y="309" width="0.0949%" height="15" fill="rgb(193,93,0)" fg:x="402" fg:w="2"/><text x="19.3202%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="19.0702%" y="293" width="0.0949%" height="15" fill="rgb(78,190,190)" fg:x="402" fg:w="2"/><text x="19.3202%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="19.1176%" y="277" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="403" fg:w="1"/><text x="19.3676%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="19.1176%" y="261" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="403" fg:w="1"/><text x="19.3676%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="19.1176%" y="245" width="0.0474%" height="15" fill="rgb(194,194,56)" fg:x="403" fg:w="1"/><text x="19.3676%" y="255.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (3 samples, 0.14%)</title><rect x="19.1651%" y="421" width="0.1423%" height="15" fill="rgb(91,203,203)" fg:x="404" fg:w="3"/><text x="19.4151%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.14%)</title><rect x="19.1651%" y="405" width="0.1423%" height="15" fill="rgb(193,93,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.14%)</title><rect x="19.1651%" y="389" width="0.1423%" height="15" fill="rgb(224,124,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.14%)</title><rect x="19.1651%" y="373" width="0.1423%" height="15" fill="rgb(231,131,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.14%)</title><rect x="19.1651%" y="357" width="0.1423%" height="15" fill="rgb(240,140,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.14%)</title><rect x="19.1651%" y="341" width="0.1423%" height="15" fill="rgb(240,140,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.14%)</title><rect x="19.1651%" y="325" width="0.1423%" height="15" fill="rgb(209,109,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.14%)</title><rect x="19.1651%" y="309" width="0.1423%" height="15" fill="rgb(228,128,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.14%)</title><rect x="19.1651%" y="293" width="0.1423%" height="15" fill="rgb(208,108,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.14%)</title><rect x="19.1651%" y="277" width="0.1423%" height="15" fill="rgb(243,143,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="287.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.14%)</title><rect x="19.1651%" y="261" width="0.1423%" height="15" fill="rgb(231,131,0)" fg:x="404" fg:w="3"/><text x="19.4151%" y="271.50"></text></g><g><title>realloc (3 samples, 0.14%)</title><rect x="19.1651%" y="245" width="0.1423%" height="15" fill="rgb(182,182,52)" fg:x="404" fg:w="3"/><text x="19.4151%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="19.2600%" y="229" width="0.0474%" height="15" fill="rgb(220,220,66)" fg:x="406" fg:w="1"/><text x="19.5100%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="19.2600%" y="213" width="0.0474%" height="15" fill="rgb(183,183,53)" fg:x="406" fg:w="1"/><text x="19.5100%" y="223.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="19.3074%" y="325" width="0.0949%" height="15" fill="rgb(215,115,0)" fg:x="407" fg:w="2"/><text x="19.5574%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="19.3074%" y="309" width="0.0949%" height="15" fill="rgb(208,108,0)" fg:x="407" fg:w="2"/><text x="19.5574%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="19.3074%" y="293" width="0.0949%" height="15" fill="rgb(193,93,0)" fg:x="407" fg:w="2"/><text x="19.5574%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.09%)</title><rect x="19.3074%" y="277" width="0.0949%" height="15" fill="rgb(209,109,0)" fg:x="407" fg:w="2"/><text x="19.5574%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.09%)</title><rect x="19.3074%" y="261" width="0.0949%" height="15" fill="rgb(231,131,0)" fg:x="407" fg:w="2"/><text x="19.5574%" y="271.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (3 samples, 0.14%)</title><rect x="19.3074%" y="421" width="0.1423%" height="15" fill="rgb(58,172,172)" fg:x="407" fg:w="3"/><text x="19.5574%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.14%)</title><rect x="19.3074%" y="405" width="0.1423%" height="15" fill="rgb(248,148,0)" fg:x="407" fg:w="3"/><text x="19.5574%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.14%)</title><rect x="19.3074%" y="389" width="0.1423%" height="15" fill="rgb(64,178,178)" fg:x="407" fg:w="3"/><text x="19.5574%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.14%)</title><rect x="19.3074%" y="373" width="0.1423%" height="15" fill="rgb(69,183,183)" fg:x="407" fg:w="3"/><text x="19.5574%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.14%)</title><rect x="19.3074%" y="357" width="0.1423%" height="15" fill="rgb(55,170,170)" fg:x="407" fg:w="3"/><text x="19.5574%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.14%)</title><rect x="19.3074%" y="341" width="0.1423%" height="15" fill="rgb(192,92,0)" fg:x="407" fg:w="3"/><text x="19.5574%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="19.4023%" y="325" width="0.0474%" height="15" fill="rgb(218,118,0)" fg:x="409" fg:w="1"/><text x="19.6523%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="19.4023%" y="309" width="0.0474%" height="15" fill="rgb(56,171,171)" fg:x="409" fg:w="1"/><text x="19.6523%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.05%)</title><rect x="19.4023%" y="293" width="0.0474%" height="15" fill="rgb(236,136,0)" fg:x="409" fg:w="1"/><text x="19.6523%" y="303.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.05%)</title><rect x="19.4023%" y="277" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="409" fg:w="1"/><text x="19.6523%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="19.4023%" y="261" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="409" fg:w="1"/><text x="19.6523%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="19.4023%" y="245" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="409" fg:w="1"/><text x="19.6523%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="19.4023%" y="229" width="0.0474%" height="15" fill="rgb(226,126,0)" fg:x="409" fg:w="1"/><text x="19.6523%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="19.4023%" y="213" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="409" fg:w="1"/><text x="19.6523%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.05%)</title><rect x="19.4023%" y="197" width="0.0474%" height="15" fill="rgb(209,109,0)" fg:x="409" fg:w="1"/><text x="19.6523%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.05%)</title><rect x="19.4497%" y="421" width="0.0474%" height="15" fill="rgb(211,111,0)" fg:x="410" fg:w="1"/><text x="19.6997%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="19.4497%" y="405" width="0.0474%" height="15" fill="rgb(208,108,0)" fg:x="410" fg:w="1"/><text x="19.6997%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="19.4497%" y="389" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="410" fg:w="1"/><text x="19.6997%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="19.4497%" y="373" width="0.0474%" height="15" fill="rgb(91,203,203)" fg:x="410" fg:w="1"/><text x="19.6997%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="19.4497%" y="357" width="0.0474%" height="15" fill="rgb(237,137,0)" fg:x="410" fg:w="1"/><text x="19.6997%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="19.4497%" y="341" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="410" fg:w="1"/><text x="19.6997%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="19.4497%" y="325" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="410" fg:w="1"/><text x="19.6997%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.05%)</title><rect x="19.4972%" y="421" width="0.0474%" height="15" fill="rgb(202,102,0)" fg:x="411" fg:w="1"/><text x="19.7472%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.05%)</title><rect x="19.4972%" y="405" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="411" fg:w="1"/><text x="19.7472%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.05%)</title><rect x="19.4972%" y="389" width="0.0474%" height="15" fill="rgb(211,111,0)" fg:x="411" fg:w="1"/><text x="19.7472%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="19.4972%" y="373" width="0.0474%" height="15" fill="rgb(209,109,0)" fg:x="411" fg:w="1"/><text x="19.7472%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="19.4972%" y="357" width="0.0474%" height="15" fill="rgb(214,114,0)" fg:x="411" fg:w="1"/><text x="19.7472%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="19.4972%" y="341" width="0.0474%" height="15" fill="rgb(222,122,0)" fg:x="411" fg:w="1"/><text x="19.7472%" y="351.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="19.4972%" y="325" width="0.0474%" height="15" fill="rgb(189,189,55)" fg:x="411" fg:w="1"/><text x="19.7472%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="19.4972%" y="309" width="0.0474%" height="15" fill="rgb(187,187,54)" fg:x="411" fg:w="1"/><text x="19.7472%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.09%)</title><rect x="19.5446%" y="421" width="0.0949%" height="15" fill="rgb(206,106,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="19.5446%" y="405" width="0.0949%" height="15" fill="rgb(222,122,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (2 samples, 0.09%)</title><rect x="19.5446%" y="389" width="0.0949%" height="15" fill="rgb(233,133,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.09%)</title><rect x="19.5446%" y="373" width="0.0949%" height="15" fill="rgb(203,103,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="19.5446%" y="357" width="0.0949%" height="15" fill="rgb(219,119,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="19.5446%" y="341" width="0.0949%" height="15" fill="rgb(198,98,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="19.5446%" y="325" width="0.0949%" height="15" fill="rgb(223,123,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="19.5446%" y="309" width="0.0949%" height="15" fill="rgb(195,95,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="19.5446%" y="293" width="0.0949%" height="15" fill="rgb(227,127,0)" fg:x="412" fg:w="2"/><text x="19.7946%" y="303.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="19.5920%" y="277" width="0.0474%" height="15" fill="rgb(176,176,50)" fg:x="413" fg:w="1"/><text x="19.8420%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="19.5920%" y="261" width="0.0474%" height="15" fill="rgb(175,175,50)" fg:x="413" fg:w="1"/><text x="19.8420%" y="271.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (17 samples, 0.81%)</title><rect x="18.8805%" y="437" width="0.8065%" height="15" fill="rgb(72,185,185)" fg:x="398" fg:w="17"/><text x="19.1305%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.05%)</title><rect x="19.6395%" y="421" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="414" fg:w="1"/><text x="19.8895%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="19.6395%" y="405" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="414" fg:w="1"/><text x="19.8895%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.05%)</title><rect x="19.6395%" y="389" width="0.0474%" height="15" fill="rgb(234,134,0)" fg:x="414" fg:w="1"/><text x="19.8895%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="19.6395%" y="373" width="0.0474%" height="15" fill="rgb(105,215,215)" fg:x="414" fg:w="1"/><text x="19.8895%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.05%)</title><rect x="19.6395%" y="357" width="0.0474%" height="15" fill="rgb(206,106,0)" fg:x="414" fg:w="1"/><text x="19.8895%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="19.6395%" y="341" width="0.0474%" height="15" fill="rgb(213,113,0)" fg:x="414" fg:w="1"/><text x="19.8895%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="19.6395%" y="325" width="0.0474%" height="15" fill="rgb(236,136,0)" fg:x="414" fg:w="1"/><text x="19.8895%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="19.6395%" y="309" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="414" fg:w="1"/><text x="19.8895%" y="319.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="19.6395%" y="293" width="0.0474%" height="15" fill="rgb(205,205,61)" fg:x="414" fg:w="1"/><text x="19.8895%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="19.6869%" y="373" width="0.0474%" height="15" fill="rgb(220,220,66)" fg:x="415" fg:w="1"/><text x="19.9369%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="19.6869%" y="357" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="415" fg:w="1"/><text x="19.9369%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.09%)</title><rect x="19.6869%" y="437" width="0.0949%" height="15" fill="rgb(196,96,0)" fg:x="415" fg:w="2"/><text x="19.9369%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.09%)</title><rect x="19.6869%" y="421" width="0.0949%" height="15" fill="rgb(193,93,0)" fg:x="415" fg:w="2"/><text x="19.9369%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.09%)</title><rect x="19.6869%" y="405" width="0.0949%" height="15" fill="rgb(253,153,0)" fg:x="415" fg:w="2"/><text x="19.9369%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.09%)</title><rect x="19.6869%" y="389" width="0.0949%" height="15" fill="rgb(224,124,0)" fg:x="415" fg:w="2"/><text x="19.9369%" y="399.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="19.7343%" y="373" width="0.0474%" height="15" fill="rgb(191,191,55)" fg:x="416" fg:w="1"/><text x="19.9843%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2 samples, 0.09%)</title><rect x="19.7818%" y="437" width="0.0949%" height="15" fill="rgb(225,125,0)" fg:x="417" fg:w="2"/><text x="20.0318%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2 samples, 0.09%)</title><rect x="19.7818%" y="421" width="0.0949%" height="15" fill="rgb(217,117,0)" fg:x="417" fg:w="2"/><text x="20.0318%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="19.8292%" y="405" width="0.0474%" height="15" fill="rgb(218,118,0)" fg:x="418" fg:w="1"/><text x="20.0792%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (1 samples, 0.05%)</title><rect x="19.8767%" y="437" width="0.0474%" height="15" fill="rgb(219,119,0)" fg:x="419" fg:w="1"/><text x="20.1267%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.05%)</title><rect x="19.8767%" y="421" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="419" fg:w="1"/><text x="20.1267%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="19.8767%" y="405" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="419" fg:w="1"/><text x="20.1267%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="19.8767%" y="389" width="0.0474%" height="15" fill="rgb(231,131,0)" fg:x="419" fg:w="1"/><text x="20.1267%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="19.8767%" y="373" width="0.0474%" height="15" fill="rgb(193,93,0)" fg:x="419" fg:w="1"/><text x="20.1267%" y="383.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="19.8767%" y="357" width="0.0474%" height="15" fill="rgb(195,195,57)" fg:x="419" fg:w="1"/><text x="20.1267%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="19.8767%" y="341" width="0.0474%" height="15" fill="rgb(198,198,58)" fg:x="419" fg:w="1"/><text x="20.1267%" y="351.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_and_score_initial_population (40 samples, 1.90%)</title><rect x="18.0740%" y="485" width="1.8975%" height="15" fill="rgb(76,188,188)" fg:x="381" fg:w="40"/><text x="18.3240%" y="495.50">a..</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (27 samples, 1.28%)</title><rect x="18.6907%" y="469" width="1.2808%" height="15" fill="rgb(93,205,205)" fg:x="394" fg:w="27"/><text x="18.9407%" y="479.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (25 samples, 1.19%)</title><rect x="18.7856%" y="453" width="1.1860%" height="15" fill="rgb(60,174,174)" fg:x="396" fg:w="25"/><text x="19.0356%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.05%)</title><rect x="19.9241%" y="437" width="0.0474%" height="15" fill="rgb(241,141,0)" fg:x="420" fg:w="1"/><text x="20.1741%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="19.9241%" y="421" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="420" fg:w="1"/><text x="20.1741%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (1 samples, 0.05%)</title><rect x="19.9241%" y="405" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="420" fg:w="1"/><text x="20.1741%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="19.9241%" y="389" width="0.0474%" height="15" fill="rgb(102,213,213)" fg:x="420" fg:w="1"/><text x="20.1741%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (1 samples, 0.05%)</title><rect x="19.9241%" y="373" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="420" fg:w="1"/><text x="20.1741%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="19.9241%" y="357" width="0.0474%" height="15" fill="rgb(196,96,0)" fg:x="420" fg:w="1"/><text x="20.1741%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="19.9241%" y="341" width="0.0474%" height="15" fill="rgb(192,92,0)" fg:x="420" fg:w="1"/><text x="20.1741%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="19.9241%" y="325" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="420" fg:w="1"/><text x="20.1741%" y="335.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="19.9241%" y="309" width="0.0474%" height="15" fill="rgb(216,216,64)" fg:x="420" fg:w="1"/><text x="20.1741%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="19.9241%" y="293" width="0.0474%" height="15" fill="rgb(192,192,56)" fg:x="420" fg:w="1"/><text x="20.1741%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 3.13%)</title><rect x="19.9715%" y="245" width="3.1309%" height="15" fill="rgb(238,138,0)" fg:x="421" fg:w="66"/><text x="20.2215%" y="255.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 3.13%)</title><rect x="19.9715%" y="229" width="3.1309%" height="15" fill="rgb(214,114,0)" fg:x="421" fg:w="66"/><text x="20.2215%" y="239.50">all..</text></g><g><title>alloc::alloc::alloc (66 samples, 3.13%)</title><rect x="19.9715%" y="213" width="3.1309%" height="15" fill="rgb(249,149,0)" fg:x="421" fg:w="66"/><text x="20.2215%" y="223.50">all..</text></g><g><title>malloc (66 samples, 3.13%)</title><rect x="19.9715%" y="197" width="3.1309%" height="15" fill="rgb(185,185,53)" fg:x="421" fg:w="66"/><text x="20.2215%" y="207.50">mal..</text></g><g><title>[libc.so.6] (66 samples, 3.13%)</title><rect x="19.9715%" y="181" width="3.1309%" height="15" fill="rgb(178,178,51)" fg:x="421" fg:w="66"/><text x="20.2215%" y="191.50">[li..</text></g><g><title>[libc.so.6] (31 samples, 1.47%)</title><rect x="21.6319%" y="165" width="1.4706%" height="15" fill="rgb(222,222,67)" fg:x="456" fg:w="31"/><text x="21.8819%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="23.0550%" y="149" width="0.0474%" height="15" fill="rgb(196,196,57)" fg:x="486" fg:w="1"/><text x="23.3050%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 3.18%)</title><rect x="19.9715%" y="293" width="3.1784%" height="15" fill="rgb(241,141,0)" fg:x="421" fg:w="67"/><text x="20.2215%" y="303.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (67 samples, 3.18%)</title><rect x="19.9715%" y="277" width="3.1784%" height="15" fill="rgb(230,130,0)" fg:x="421" fg:w="67"/><text x="20.2215%" y="287.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (67 samples, 3.18%)</title><rect x="19.9715%" y="261" width="3.1784%" height="15" fill="rgb(207,107,0)" fg:x="421" fg:w="67"/><text x="20.2215%" y="271.50">all..</text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.05%)</title><rect x="23.1025%" y="245" width="0.0474%" height="15" fill="rgb(220,120,0)" fg:x="487" fg:w="1"/><text x="23.3525%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.05%)</title><rect x="23.1025%" y="229" width="0.0474%" height="15" fill="rgb(223,123,0)" fg:x="487" fg:w="1"/><text x="23.3525%" y="239.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (71 samples, 3.37%)</title><rect x="19.9715%" y="389" width="3.3681%" height="15" fill="rgb(56,171,171)" fg:x="421" fg:w="71"/><text x="20.2215%" y="399.50">&lt;al..</text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (71 samples, 3.37%)</title><rect x="19.9715%" y="373" width="3.3681%" height="15" fill="rgb(74,187,187)" fg:x="421" fg:w="71"/><text x="20.2215%" y="383.50">&lt;ar..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (71 samples, 3.37%)</title><rect x="19.9715%" y="357" width="3.3681%" height="15" fill="rgb(249,149,0)" fg:x="421" fg:w="71"/><text x="20.2215%" y="367.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (71 samples, 3.37%)</title><rect x="19.9715%" y="341" width="3.3681%" height="15" fill="rgb(209,109,0)" fg:x="421" fg:w="71"/><text x="20.2215%" y="351.50">all..</text></g><g><title>alloc::slice::hack::to_vec (71 samples, 3.37%)</title><rect x="19.9715%" y="325" width="3.3681%" height="15" fill="rgb(231,131,0)" fg:x="421" fg:w="71"/><text x="20.2215%" y="335.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (71 samples, 3.37%)</title><rect x="19.9715%" y="309" width="3.3681%" height="15" fill="rgb(80,192,192)" fg:x="421" fg:w="71"/><text x="20.2215%" y="319.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.19%)</title><rect x="23.1499%" y="293" width="0.1898%" height="15" fill="rgb(191,91,0)" fg:x="488" fg:w="4"/><text x="23.3999%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.19%)</title><rect x="23.1499%" y="277" width="0.1898%" height="15" fill="rgb(235,135,0)" fg:x="488" fg:w="4"/><text x="23.3999%" y="287.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="23.1499%" y="261" width="0.1898%" height="15" fill="rgb(192,192,56)" fg:x="488" fg:w="4"/><text x="23.3999%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (72 samples, 3.42%)</title><rect x="19.9715%" y="453" width="3.4156%" height="15" fill="rgb(223,123,0)" fg:x="421" fg:w="72"/><text x="20.2215%" y="463.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (72 samples, 3.42%)</title><rect x="19.9715%" y="437" width="3.4156%" height="15" fill="rgb(213,113,0)" fg:x="421" fg:w="72"/><text x="20.2215%" y="447.50">all..</text></g><g><title>alloc::slice::hack::to_vec (72 samples, 3.42%)</title><rect x="19.9715%" y="421" width="3.4156%" height="15" fill="rgb(191,91,0)" fg:x="421" fg:w="72"/><text x="20.2215%" y="431.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (72 samples, 3.42%)</title><rect x="19.9715%" y="405" width="3.4156%" height="15" fill="rgb(90,202,202)" fg:x="421" fg:w="72"/><text x="20.2215%" y="415.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="23.3397%" y="389" width="0.0474%" height="15" fill="rgb(198,98,0)" fg:x="492" fg:w="1"/><text x="23.5897%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="23.3397%" y="373" width="0.0474%" height="15" fill="rgb(216,116,0)" fg:x="492" fg:w="1"/><text x="23.5897%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="23.3397%" y="357" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="492" fg:w="1"/><text x="23.5897%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="23.3397%" y="341" width="0.0474%" height="15" fill="rgb(190,90,0)" fg:x="492" fg:w="1"/><text x="23.5897%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="23.3397%" y="325" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="492" fg:w="1"/><text x="23.5897%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="23.3397%" y="309" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="492" fg:w="1"/><text x="23.5897%" y="319.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="23.3397%" y="293" width="0.0474%" height="15" fill="rgb(195,195,57)" fg:x="492" fg:w="1"/><text x="23.5897%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="23.3871%" y="373" width="0.0949%" height="15" fill="rgb(93,204,204)" fg:x="493" fg:w="2"/><text x="23.6371%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.09%)</title><rect x="23.3871%" y="357" width="0.0949%" height="15" fill="rgb(98,209,209)" fg:x="493" fg:w="2"/><text x="23.6371%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (2 samples, 0.09%)</title><rect x="23.3871%" y="341" width="0.0949%" height="15" fill="rgb(66,179,179)" fg:x="493" fg:w="2"/><text x="23.6371%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.09%)</title><rect x="23.3871%" y="325" width="0.0949%" height="15" fill="rgb(211,111,0)" fg:x="493" fg:w="2"/><text x="23.6371%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.09%)</title><rect x="23.3871%" y="309" width="0.0949%" height="15" fill="rgb(219,119,0)" fg:x="493" fg:w="2"/><text x="23.6371%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="23.5769%" y="341" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="497" fg:w="1"/><text x="23.8269%" y="351.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="23.9564%" y="117" width="0.0474%" height="15" fill="rgb(211,211,63)" fg:x="505" fg:w="1"/><text x="24.2064%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.81%)</title><rect x="23.9089%" y="213" width="0.8065%" height="15" fill="rgb(222,122,0)" fg:x="504" fg:w="17"/><text x="24.1589%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.81%)</title><rect x="23.9089%" y="197" width="0.8065%" height="15" fill="rgb(230,130,0)" fg:x="504" fg:w="17"/><text x="24.1589%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.81%)</title><rect x="23.9089%" y="181" width="0.8065%" height="15" fill="rgb(221,121,0)" fg:x="504" fg:w="17"/><text x="24.1589%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.76%)</title><rect x="23.9564%" y="165" width="0.7590%" height="15" fill="rgb(217,117,0)" fg:x="505" fg:w="16"/><text x="24.2064%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.76%)</title><rect x="23.9564%" y="149" width="0.7590%" height="15" fill="rgb(240,140,0)" fg:x="505" fg:w="16"/><text x="24.2064%" y="159.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.76%)</title><rect x="23.9564%" y="133" width="0.7590%" height="15" fill="rgb(211,111,0)" fg:x="505" fg:w="16"/><text x="24.2064%" y="143.50"></text></g><g><title>malloc (15 samples, 0.71%)</title><rect x="24.0038%" y="117" width="0.7116%" height="15" fill="rgb(191,191,55)" fg:x="506" fg:w="15"/><text x="24.2538%" y="127.50"></text></g><g><title>[libc.so.6] (11 samples, 0.52%)</title><rect x="24.1935%" y="101" width="0.5218%" height="15" fill="rgb(197,197,58)" fg:x="510" fg:w="11"/><text x="24.4435%" y="111.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (24 samples, 1.14%)</title><rect x="23.9089%" y="293" width="1.1385%" height="15" fill="rgb(89,200,200)" fg:x="504" fg:w="24"/><text x="24.1589%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 1.14%)</title><rect x="23.9089%" y="277" width="1.1385%" height="15" fill="rgb(205,105,0)" fg:x="504" fg:w="24"/><text x="24.1589%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 1.14%)</title><rect x="23.9089%" y="261" width="1.1385%" height="15" fill="rgb(240,140,0)" fg:x="504" fg:w="24"/><text x="24.1589%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 1.14%)</title><rect x="23.9089%" y="245" width="1.1385%" height="15" fill="rgb(237,137,0)" fg:x="504" fg:w="24"/><text x="24.1589%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 1.14%)</title><rect x="23.9089%" y="229" width="1.1385%" height="15" fill="rgb(69,182,182)" fg:x="504" fg:w="24"/><text x="24.1589%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (7 samples, 0.33%)</title><rect x="24.7154%" y="213" width="0.3321%" height="15" fill="rgb(247,147,0)" fg:x="521" fg:w="7"/><text x="24.9654%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.33%)</title><rect x="24.7154%" y="197" width="0.3321%" height="15" fill="rgb(245,145,0)" fg:x="521" fg:w="7"/><text x="24.9654%" y="207.50"></text></g><g><title>[libc.so.6] (6 samples, 0.28%)</title><rect x="24.7628%" y="181" width="0.2846%" height="15" fill="rgb(198,198,58)" fg:x="522" fg:w="6"/><text x="25.0128%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="25.0474%" y="293" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="528" fg:w="1"/><text x="25.2974%" y="303.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.05%)</title><rect x="25.0949%" y="197" width="0.0474%" height="15" fill="rgb(242,142,0)" fg:x="529" fg:w="1"/><text x="25.3449%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.38%)</title><rect x="25.0949%" y="293" width="0.3795%" height="15" fill="rgb(228,128,0)" fg:x="529" fg:w="8"/><text x="25.3449%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.38%)</title><rect x="25.0949%" y="277" width="0.3795%" height="15" fill="rgb(250,150,0)" fg:x="529" fg:w="8"/><text x="25.3449%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.38%)</title><rect x="25.0949%" y="261" width="0.3795%" height="15" fill="rgb(222,122,0)" fg:x="529" fg:w="8"/><text x="25.3449%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.38%)</title><rect x="25.0949%" y="245" width="0.3795%" height="15" fill="rgb(253,153,0)" fg:x="529" fg:w="8"/><text x="25.3449%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.38%)</title><rect x="25.0949%" y="229" width="0.3795%" height="15" fill="rgb(225,125,0)" fg:x="529" fg:w="8"/><text x="25.3449%" y="239.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.38%)</title><rect x="25.0949%" y="213" width="0.3795%" height="15" fill="rgb(208,108,0)" fg:x="529" fg:w="8"/><text x="25.3449%" y="223.50"></text></g><g><title>malloc (7 samples, 0.33%)</title><rect x="25.1423%" y="197" width="0.3321%" height="15" fill="rgb(198,198,58)" fg:x="530" fg:w="7"/><text x="25.3923%" y="207.50"></text></g><g><title>[libc.so.6] (5 samples, 0.24%)</title><rect x="25.2372%" y="181" width="0.2372%" height="15" fill="rgb(226,226,68)" fg:x="532" fg:w="5"/><text x="25.4872%" y="191.50"></text></g><g><title>core::clone::Clone::clone (43 samples, 2.04%)</title><rect x="23.4820%" y="373" width="2.0398%" height="15" fill="rgb(238,138,0)" fg:x="495" fg:w="43"/><text x="23.7320%" y="383.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 2.04%)</title><rect x="23.4820%" y="357" width="2.0398%" height="15" fill="rgb(199,99,0)" fg:x="495" fg:w="43"/><text x="23.7320%" y="367.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40 samples, 1.90%)</title><rect x="23.6243%" y="341" width="1.8975%" height="15" fill="rgb(238,138,0)" fg:x="498" fg:w="40"/><text x="23.8743%" y="351.50">a..</text></g><g><title>alloc::slice::hack::to_vec (40 samples, 1.90%)</title><rect x="23.6243%" y="325" width="1.8975%" height="15" fill="rgb(199,99,0)" fg:x="498" fg:w="40"/><text x="23.8743%" y="335.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40 samples, 1.90%)</title><rect x="23.6243%" y="309" width="1.8975%" height="15" fill="rgb(52,167,167)" fg:x="498" fg:w="40"/><text x="23.8743%" y="319.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.05%)</title><rect x="25.4744%" y="293" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="537" fg:w="1"/><text x="25.7244%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="25.5218%" y="373" width="0.0474%" height="15" fill="rgb(223,123,0)" fg:x="538" fg:w="1"/><text x="25.7718%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="25.5218%" y="357" width="0.0474%" height="15" fill="rgb(217,117,0)" fg:x="538" fg:w="1"/><text x="25.7718%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="25.5218%" y="341" width="0.0474%" height="15" fill="rgb(189,189,55)" fg:x="538" fg:w="1"/><text x="25.7718%" y="351.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (121 samples, 5.74%)</title><rect x="19.9715%" y="469" width="5.7400%" height="15" fill="rgb(74,187,187)" fg:x="421" fg:w="121"/><text x="20.2215%" y="479.50">&lt;alc::k..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (49 samples, 2.32%)</title><rect x="23.3871%" y="453" width="2.3245%" height="15" fill="rgb(213,113,0)" fg:x="493" fg:w="49"/><text x="23.6371%" y="463.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (49 samples, 2.32%)</title><rect x="23.3871%" y="437" width="2.3245%" height="15" fill="rgb(81,193,193)" fg:x="493" fg:w="49"/><text x="23.6371%" y="447.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (49 samples, 2.32%)</title><rect x="23.3871%" y="421" width="2.3245%" height="15" fill="rgb(62,176,176)" fg:x="493" fg:w="49"/><text x="23.6371%" y="431.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (49 samples, 2.32%)</title><rect x="23.3871%" y="405" width="2.3245%" height="15" fill="rgb(106,216,216)" fg:x="493" fg:w="49"/><text x="23.6371%" y="415.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (49 samples, 2.32%)</title><rect x="23.3871%" y="389" width="2.3245%" height="15" fill="rgb(56,171,171)" fg:x="493" fg:w="49"/><text x="23.6371%" y="399.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.14%)</title><rect x="25.5693%" y="373" width="0.1423%" height="15" fill="rgb(62,176,176)" fg:x="539" fg:w="3"/><text x="25.8193%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.14%)</title><rect x="25.5693%" y="357" width="0.1423%" height="15" fill="rgb(235,135,0)" fg:x="539" fg:w="3"/><text x="25.8193%" y="367.50"></text></g><g><title>core::ptr::write (3 samples, 0.14%)</title><rect x="25.5693%" y="341" width="0.1423%" height="15" fill="rgb(209,109,0)" fg:x="539" fg:w="3"/><text x="25.8193%" y="351.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_moveable_position (1 samples, 0.05%)</title><rect x="25.7116%" y="453" width="0.0474%" height="15" fill="rgb(97,208,208)" fg:x="542" fg:w="1"/><text x="25.9616%" y="463.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_random_position (1 samples, 0.05%)</title><rect x="25.7116%" y="437" width="0.0474%" height="15" fill="rgb(82,194,194)" fg:x="542" fg:w="1"/><text x="25.9616%" y="447.50"></text></g><g><title>rand::rng::Rng::gen_range (1 samples, 0.05%)</title><rect x="25.7116%" y="421" width="0.0474%" height="15" fill="rgb(102,213,213)" fg:x="542" fg:w="1"/><text x="25.9616%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (1 samples, 0.05%)</title><rect x="25.7116%" y="405" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="542" fg:w="1"/><text x="25.9616%" y="415.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.05%)</title><rect x="25.7116%" y="389" width="0.0474%" height="15" fill="rgb(91,202,202)" fg:x="542" fg:w="1"/><text x="25.9616%" y="399.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (1 samples, 0.05%)</title><rect x="25.7116%" y="373" width="0.0474%" height="15" fill="rgb(104,215,215)" fg:x="542" fg:w="1"/><text x="25.9616%" y="383.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.05%)</title><rect x="25.7116%" y="357" width="0.0474%" height="15" fill="rgb(80,192,192)" fg:x="542" fg:w="1"/><text x="25.9616%" y="367.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.05%)</title><rect x="25.7116%" y="341" width="0.0474%" height="15" fill="rgb(52,167,167)" fg:x="542" fg:w="1"/><text x="25.9616%" y="351.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.05%)</title><rect x="25.7116%" y="325" width="0.0474%" height="15" fill="rgb(68,182,182)" fg:x="542" fg:w="1"/><text x="25.9616%" y="335.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.05%)</title><rect x="25.7116%" y="309" width="0.0474%" height="15" fill="rgb(91,203,203)" fg:x="542" fg:w="1"/><text x="25.9616%" y="319.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.05%)</title><rect x="25.7116%" y="293" width="0.0474%" height="15" fill="rgb(60,174,174)" fg:x="542" fg:w="1"/><text x="25.9616%" y="303.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_valid_replace_position (2 samples, 0.09%)</title><rect x="25.7116%" y="469" width="0.0949%" height="15" fill="rgb(100,211,211)" fg:x="542" fg:w="2"/><text x="25.9616%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="25.7590%" y="453" width="0.0474%" height="15" fill="rgb(195,95,0)" fg:x="543" fg:w="1"/><text x="26.0090%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.05%)</title><rect x="25.7590%" y="437" width="0.0474%" height="15" fill="rgb(71,185,185)" fg:x="543" fg:w="1"/><text x="26.0090%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="25.7590%" y="421" width="0.0474%" height="15" fill="rgb(66,180,180)" fg:x="543" fg:w="1"/><text x="26.0090%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.05%)</title><rect x="25.7590%" y="405" width="0.0474%" height="15" fill="rgb(64,178,178)" fg:x="543" fg:w="1"/><text x="26.0090%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="25.7590%" y="389" width="0.0474%" height="15" fill="rgb(76,188,188)" fg:x="543" fg:w="1"/><text x="26.0090%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.05%)</title><rect x="25.7590%" y="373" width="0.0474%" height="15" fill="rgb(61,175,175)" fg:x="543" fg:w="1"/><text x="26.0090%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.05%)</title><rect x="25.7590%" y="357" width="0.0474%" height="15" fill="rgb(102,213,213)" fg:x="543" fg:w="1"/><text x="26.0090%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.05%)</title><rect x="25.7590%" y="341" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="543" fg:w="1"/><text x="26.0090%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="25.7590%" y="325" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="543" fg:w="1"/><text x="26.0090%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="25.8065%" y="357" width="0.0474%" height="15" fill="rgb(101,212,212)" fg:x="544" fg:w="1"/><text x="26.0565%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="25.8065%" y="341" width="0.0474%" height="15" fill="rgb(55,170,170)" fg:x="544" fg:w="1"/><text x="26.0565%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="25.8065%" y="325" width="0.0474%" height="15" fill="rgb(50,165,165)" fg:x="544" fg:w="1"/><text x="26.0565%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="25.8539%" y="197" width="0.0474%" height="15" fill="rgb(196,96,0)" fg:x="545" fg:w="1"/><text x="26.1039%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="25.8539%" y="181" width="0.0474%" height="15" fill="rgb(214,114,0)" fg:x="545" fg:w="1"/><text x="26.1039%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="25.8539%" y="165" width="0.0474%" height="15" fill="rgb(226,126,0)" fg:x="545" fg:w="1"/><text x="26.1039%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="25.8539%" y="149" width="0.0474%" height="15" fill="rgb(231,131,0)" fg:x="545" fg:w="1"/><text x="26.1039%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="25.8539%" y="133" width="0.0474%" height="15" fill="rgb(223,123,0)" fg:x="545" fg:w="1"/><text x="26.1039%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="25.8539%" y="117" width="0.0474%" height="15" fill="rgb(215,115,0)" fg:x="545" fg:w="1"/><text x="26.1039%" y="127.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="25.8539%" y="101" width="0.0474%" height="15" fill="rgb(214,214,64)" fg:x="545" fg:w="1"/><text x="26.1039%" y="111.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.09%)</title><rect x="25.8539%" y="357" width="0.0949%" height="15" fill="rgb(208,108,0)" fg:x="545" fg:w="2"/><text x="26.1039%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="25.8539%" y="341" width="0.0949%" height="15" fill="rgb(218,118,0)" fg:x="545" fg:w="2"/><text x="26.1039%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="25.8539%" y="325" width="0.0949%" height="15" fill="rgb(225,125,0)" fg:x="545" fg:w="2"/><text x="26.1039%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="25.8539%" y="309" width="0.0949%" height="15" fill="rgb(239,139,0)" fg:x="545" fg:w="2"/><text x="26.1039%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="25.8539%" y="293" width="0.0949%" height="15" fill="rgb(51,166,166)" fg:x="545" fg:w="2"/><text x="26.1039%" y="303.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="25.8539%" y="277" width="0.0949%" height="15" fill="rgb(62,176,176)" fg:x="545" fg:w="2"/><text x="26.1039%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="25.8539%" y="261" width="0.0949%" height="15" fill="rgb(250,150,0)" fg:x="545" fg:w="2"/><text x="26.1039%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="25.8539%" y="245" width="0.0949%" height="15" fill="rgb(219,119,0)" fg:x="545" fg:w="2"/><text x="26.1039%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="25.8539%" y="229" width="0.0949%" height="15" fill="rgb(234,134,0)" fg:x="545" fg:w="2"/><text x="26.1039%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="25.8539%" y="213" width="0.0949%" height="15" fill="rgb(104,214,214)" fg:x="545" fg:w="2"/><text x="26.1039%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="25.9013%" y="197" width="0.0474%" height="15" fill="rgb(201,101,0)" fg:x="546" fg:w="1"/><text x="26.1513%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="25.9013%" y="181" width="0.0474%" height="15" fill="rgb(206,106,0)" fg:x="546" fg:w="1"/><text x="26.1513%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="25.9013%" y="165" width="0.0474%" height="15" fill="rgb(223,223,67)" fg:x="546" fg:w="1"/><text x="26.1513%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="25.9488%" y="357" width="0.0474%" height="15" fill="rgb(218,118,0)" fg:x="547" fg:w="1"/><text x="26.1988%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="25.9488%" y="341" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="547" fg:w="1"/><text x="26.1988%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="25.9488%" y="325" width="0.0474%" height="15" fill="rgb(200,200,59)" fg:x="547" fg:w="1"/><text x="26.1988%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.24%)</title><rect x="25.8065%" y="437" width="0.2372%" height="15" fill="rgb(210,110,0)" fg:x="544" fg:w="5"/><text x="26.0565%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.24%)</title><rect x="25.8065%" y="421" width="0.2372%" height="15" fill="rgb(106,217,217)" fg:x="544" fg:w="5"/><text x="26.0565%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.24%)</title><rect x="25.8065%" y="405" width="0.2372%" height="15" fill="rgb(93,204,204)" fg:x="544" fg:w="5"/><text x="26.0565%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5 samples, 0.24%)</title><rect x="25.8065%" y="389" width="0.2372%" height="15" fill="rgb(73,186,186)" fg:x="544" fg:w="5"/><text x="26.0565%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5 samples, 0.24%)</title><rect x="25.8065%" y="373" width="0.2372%" height="15" fill="rgb(83,196,196)" fg:x="544" fg:w="5"/><text x="26.0565%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.05%)</title><rect x="25.9962%" y="357" width="0.0474%" height="15" fill="rgb(101,212,212)" fg:x="548" fg:w="1"/><text x="26.2462%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.05%)</title><rect x="25.9962%" y="341" width="0.0474%" height="15" fill="rgb(230,130,0)" fg:x="548" fg:w="1"/><text x="26.2462%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="25.9962%" y="325" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="548" fg:w="1"/><text x="26.2462%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="26.0436%" y="341" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="549" fg:w="1"/><text x="26.2936%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="26.0436%" y="325" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="549" fg:w="1"/><text x="26.2936%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="26.0436%" y="309" width="0.0474%" height="15" fill="rgb(242,142,0)" fg:x="549" fg:w="1"/><text x="26.2936%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.05%)</title><rect x="26.0436%" y="293" width="0.0474%" height="15" fill="rgb(190,90,0)" fg:x="549" fg:w="1"/><text x="26.2936%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="26.0436%" y="277" width="0.0474%" height="15" fill="rgb(223,123,0)" fg:x="549" fg:w="1"/><text x="26.2936%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.09%)</title><rect x="26.0436%" y="373" width="0.0949%" height="15" fill="rgb(74,187,187)" fg:x="549" fg:w="2"/><text x="26.2936%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.09%)</title><rect x="26.0436%" y="357" width="0.0949%" height="15" fill="rgb(203,103,0)" fg:x="549" fg:w="2"/><text x="26.2936%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="26.0911%" y="341" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="550" fg:w="1"/><text x="26.3411%" y="351.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="26.0911%" y="325" width="0.0474%" height="15" fill="rgb(83,195,195)" fg:x="550" fg:w="1"/><text x="26.3411%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.05%)</title><rect x="26.0911%" y="309" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="550" fg:w="1"/><text x="26.3411%" y="319.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.05%)</title><rect x="26.0911%" y="293" width="0.0474%" height="15" fill="rgb(193,93,0)" fg:x="550" fg:w="1"/><text x="26.3411%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="26.0911%" y="277" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="550" fg:w="1"/><text x="26.3411%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="26.0911%" y="261" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="550" fg:w="1"/><text x="26.3411%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="26.0911%" y="245" width="0.0474%" height="15" fill="rgb(239,139,0)" fg:x="550" fg:w="1"/><text x="26.3411%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="26.0911%" y="229" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="550" fg:w="1"/><text x="26.3411%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.05%)</title><rect x="26.0911%" y="213" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="550" fg:w="1"/><text x="26.3411%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (3 samples, 0.14%)</title><rect x="26.0436%" y="437" width="0.1423%" height="15" fill="rgb(196,96,0)" fg:x="549" fg:w="3"/><text x="26.2936%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.14%)</title><rect x="26.0436%" y="421" width="0.1423%" height="15" fill="rgb(207,107,0)" fg:x="549" fg:w="3"/><text x="26.2936%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.14%)</title><rect x="26.0436%" y="405" width="0.1423%" height="15" fill="rgb(109,219,219)" fg:x="549" fg:w="3"/><text x="26.2936%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.14%)</title><rect x="26.0436%" y="389" width="0.1423%" height="15" fill="rgb(107,217,217)" fg:x="549" fg:w="3"/><text x="26.2936%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.05%)</title><rect x="26.1385%" y="373" width="0.0474%" height="15" fill="rgb(95,206,206)" fg:x="551" fg:w="1"/><text x="26.3885%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="26.1385%" y="357" width="0.0474%" height="15" fill="rgb(71,184,184)" fg:x="551" fg:w="1"/><text x="26.3885%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.05%)</title><rect x="26.1385%" y="341" width="0.0474%" height="15" fill="rgb(101,211,211)" fg:x="551" fg:w="1"/><text x="26.3885%" y="351.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.05%)</title><rect x="26.1385%" y="325" width="0.0474%" height="15" fill="rgb(100,210,210)" fg:x="551" fg:w="1"/><text x="26.3885%" y="335.50"></text></g><g><title>__rdl_realloc (1 samples, 0.05%)</title><rect x="26.1860%" y="309" width="0.0474%" height="15" fill="rgb(204,204,60)" fg:x="552" fg:w="1"/><text x="26.4360%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.05%)</title><rect x="26.1860%" y="293" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="552" fg:w="1"/><text x="26.4360%" y="303.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (4 samples, 0.19%)</title><rect x="26.1860%" y="437" width="0.1898%" height="15" fill="rgb(104,215,215)" fg:x="552" fg:w="4"/><text x="26.4360%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.19%)</title><rect x="26.1860%" y="421" width="0.1898%" height="15" fill="rgb(193,93,0)" fg:x="552" fg:w="4"/><text x="26.4360%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.19%)</title><rect x="26.1860%" y="405" width="0.1898%" height="15" fill="rgb(218,118,0)" fg:x="552" fg:w="4"/><text x="26.4360%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.19%)</title><rect x="26.1860%" y="389" width="0.1898%" height="15" fill="rgb(217,117,0)" fg:x="552" fg:w="4"/><text x="26.4360%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.19%)</title><rect x="26.1860%" y="373" width="0.1898%" height="15" fill="rgb(220,120,0)" fg:x="552" fg:w="4"/><text x="26.4360%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.19%)</title><rect x="26.1860%" y="357" width="0.1898%" height="15" fill="rgb(243,143,0)" fg:x="552" fg:w="4"/><text x="26.4360%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.19%)</title><rect x="26.1860%" y="341" width="0.1898%" height="15" fill="rgb(238,138,0)" fg:x="552" fg:w="4"/><text x="26.4360%" y="351.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.19%)</title><rect x="26.1860%" y="325" width="0.1898%" height="15" fill="rgb(207,107,0)" fg:x="552" fg:w="4"/><text x="26.4360%" y="335.50"></text></g><g><title>realloc (3 samples, 0.14%)</title><rect x="26.2334%" y="309" width="0.1423%" height="15" fill="rgb(202,202,59)" fg:x="553" fg:w="3"/><text x="26.4834%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="26.2334%" y="293" width="0.1423%" height="15" fill="rgb(203,203,60)" fg:x="553" fg:w="3"/><text x="26.4834%" y="303.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="26.2808%" y="277" width="0.0949%" height="15" fill="rgb(203,203,60)" fg:x="554" fg:w="2"/><text x="26.5308%" y="287.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.05%)</title><rect x="26.3757%" y="437" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="556" fg:w="1"/><text x="26.6257%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="26.3757%" y="421" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="556" fg:w="1"/><text x="26.6257%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="26.3757%" y="405" width="0.0474%" height="15" fill="rgb(208,108,0)" fg:x="556" fg:w="1"/><text x="26.6257%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="26.3757%" y="389" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="556" fg:w="1"/><text x="26.6257%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="26.3757%" y="373" width="0.0474%" height="15" fill="rgb(207,207,61)" fg:x="556" fg:w="1"/><text x="26.6257%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="26.4706%" y="373" width="0.0474%" height="15" fill="rgb(199,199,58)" fg:x="558" fg:w="1"/><text x="26.7206%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="26.4706%" y="357" width="0.0474%" height="15" fill="rgb(220,120,0)" fg:x="558" fg:w="1"/><text x="26.7206%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.14%)</title><rect x="26.4231%" y="437" width="0.1423%" height="15" fill="rgb(218,118,0)" fg:x="557" fg:w="3"/><text x="26.6731%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.14%)</title><rect x="26.4231%" y="421" width="0.1423%" height="15" fill="rgb(231,131,0)" fg:x="557" fg:w="3"/><text x="26.6731%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.14%)</title><rect x="26.4231%" y="405" width="0.1423%" height="15" fill="rgb(192,92,0)" fg:x="557" fg:w="3"/><text x="26.6731%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.14%)</title><rect x="26.4231%" y="389" width="0.1423%" height="15" fill="rgb(228,128,0)" fg:x="557" fg:w="3"/><text x="26.6731%" y="399.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="26.5180%" y="373" width="0.0474%" height="15" fill="rgb(221,221,66)" fg:x="559" fg:w="1"/><text x="26.7680%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="26.5180%" y="357" width="0.0474%" height="15" fill="rgb(206,206,61)" fg:x="559" fg:w="1"/><text x="26.7680%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.05%)</title><rect x="26.5655%" y="437" width="0.0474%" height="15" fill="rgb(218,118,0)" fg:x="560" fg:w="1"/><text x="26.8155%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.05%)</title><rect x="26.5655%" y="421" width="0.0474%" height="15" fill="rgb(242,142,0)" fg:x="560" fg:w="1"/><text x="26.8155%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.05%)</title><rect x="26.5655%" y="405" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="560" fg:w="1"/><text x="26.8155%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="26.5655%" y="389" width="0.0474%" height="15" fill="rgb(250,150,0)" fg:x="560" fg:w="1"/><text x="26.8155%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="26.5655%" y="373" width="0.0474%" height="15" fill="rgb(216,116,0)" fg:x="560" fg:w="1"/><text x="26.8155%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="26.5655%" y="357" width="0.0474%" height="15" fill="rgb(241,141,0)" fg:x="560" fg:w="1"/><text x="26.8155%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="26.6129%" y="277" width="0.0474%" height="15" fill="rgb(242,142,0)" fg:x="561" fg:w="1"/><text x="26.8629%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (1 samples, 0.05%)</title><rect x="26.6129%" y="261" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="561" fg:w="1"/><text x="26.8629%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (1 samples, 0.05%)</title><rect x="26.6129%" y="245" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="561" fg:w="1"/><text x="26.8629%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.05%)</title><rect x="26.6129%" y="229" width="0.0474%" height="15" fill="rgb(193,93,0)" fg:x="561" fg:w="1"/><text x="26.8629%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (1 samples, 0.05%)</title><rect x="26.6129%" y="213" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="561" fg:w="1"/><text x="26.8629%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="26.6129%" y="197" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="561" fg:w="1"/><text x="26.8629%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="26.6129%" y="181" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="561" fg:w="1"/><text x="26.8629%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="26.6129%" y="165" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="561" fg:w="1"/><text x="26.8629%" y="175.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="26.6129%" y="149" width="0.0474%" height="15" fill="rgb(204,204,60)" fg:x="561" fg:w="1"/><text x="26.8629%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.14%)</title><rect x="26.6129%" y="357" width="0.1423%" height="15" fill="rgb(102,212,212)" fg:x="561" fg:w="3"/><text x="26.8629%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.14%)</title><rect x="26.6129%" y="341" width="0.1423%" height="15" fill="rgb(65,179,179)" fg:x="561" fg:w="3"/><text x="26.8629%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.14%)</title><rect x="26.6129%" y="325" width="0.1423%" height="15" fill="rgb(200,100,0)" fg:x="561" fg:w="3"/><text x="26.8629%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (3 samples, 0.14%)</title><rect x="26.6129%" y="309" width="0.1423%" height="15" fill="rgb(208,108,0)" fg:x="561" fg:w="3"/><text x="26.8629%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (3 samples, 0.14%)</title><rect x="26.6129%" y="293" width="0.1423%" height="15" fill="rgb(234,134,0)" fg:x="561" fg:w="3"/><text x="26.8629%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.09%)</title><rect x="26.6603%" y="277" width="0.0949%" height="15" fill="rgb(190,90,0)" fg:x="562" fg:w="2"/><text x="26.9103%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="26.6603%" y="261" width="0.0949%" height="15" fill="rgb(230,130,0)" fg:x="562" fg:w="2"/><text x="26.9103%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="26.6603%" y="245" width="0.0949%" height="15" fill="rgb(197,97,0)" fg:x="562" fg:w="2"/><text x="26.9103%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="26.6603%" y="229" width="0.0949%" height="15" fill="rgb(233,133,0)" fg:x="562" fg:w="2"/><text x="26.9103%" y="239.50"></text></g><g><title>cfree (2 samples, 0.09%)</title><rect x="26.6603%" y="213" width="0.0949%" height="15" fill="rgb(193,193,56)" fg:x="562" fg:w="2"/><text x="26.9103%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="26.6603%" y="197" width="0.0949%" height="15" fill="rgb(176,176,50)" fg:x="562" fg:w="2"/><text x="26.9103%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (4 samples, 0.19%)</title><rect x="26.6129%" y="437" width="0.1898%" height="15" fill="rgb(254,154,0)" fg:x="561" fg:w="4"/><text x="26.8629%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (4 samples, 0.19%)</title><rect x="26.6129%" y="421" width="0.1898%" height="15" fill="rgb(248,148,0)" fg:x="561" fg:w="4"/><text x="26.8629%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (4 samples, 0.19%)</title><rect x="26.6129%" y="405" width="0.1898%" height="15" fill="rgb(222,122,0)" fg:x="561" fg:w="4"/><text x="26.8629%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.19%)</title><rect x="26.6129%" y="389" width="0.1898%" height="15" fill="rgb(100,210,210)" fg:x="561" fg:w="4"/><text x="26.8629%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (4 samples, 0.19%)</title><rect x="26.6129%" y="373" width="0.1898%" height="15" fill="rgb(109,219,219)" fg:x="561" fg:w="4"/><text x="26.8629%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.05%)</title><rect x="26.7552%" y="357" width="0.0474%" height="15" fill="rgb(71,184,184)" fg:x="564" fg:w="1"/><text x="27.0052%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="26.7552%" y="341" width="0.0474%" height="15" fill="rgb(254,154,0)" fg:x="564" fg:w="1"/><text x="27.0052%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="26.7552%" y="325" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="564" fg:w="1"/><text x="27.0052%" y="335.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="26.7552%" y="309" width="0.0474%" height="15" fill="rgb(223,223,67)" fg:x="564" fg:w="1"/><text x="27.0052%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="26.7552%" y="293" width="0.0474%" height="15" fill="rgb(205,205,61)" fg:x="564" fg:w="1"/><text x="27.0052%" y="303.50"></text></g><g><title>core::mem::swap (1 samples, 0.05%)</title><rect x="26.8027%" y="325" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="565" fg:w="1"/><text x="27.0527%" y="335.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.05%)</title><rect x="26.8027%" y="309" width="0.0474%" height="15" fill="rgb(219,119,0)" fg:x="565" fg:w="1"/><text x="27.0527%" y="319.50"></text></g><g><title>core::ptr::read (1 samples, 0.05%)</title><rect x="26.8027%" y="293" width="0.0474%" height="15" fill="rgb(192,92,0)" fg:x="565" fg:w="1"/><text x="27.0527%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.05%)</title><rect x="26.8501%" y="325" width="0.0474%" height="15" fill="rgb(106,216,216)" fg:x="566" fg:w="1"/><text x="27.1001%" y="335.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.05%)</title><rect x="26.8501%" y="309" width="0.0474%" height="15" fill="rgb(102,212,212)" fg:x="566" fg:w="1"/><text x="27.1001%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.05%)</title><rect x="26.8501%" y="293" width="0.0474%" height="15" fill="rgb(72,185,185)" fg:x="566" fg:w="1"/><text x="27.1001%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="26.8501%" y="277" width="0.0474%" height="15" fill="rgb(220,120,0)" fg:x="566" fg:w="1"/><text x="27.1001%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="26.8501%" y="261" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="566" fg:w="1"/><text x="27.1001%" y="271.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="26.8501%" y="245" width="0.0474%" height="15" fill="rgb(53,168,168)" fg:x="566" fg:w="1"/><text x="27.1001%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.05%)</title><rect x="26.8501%" y="229" width="0.0474%" height="15" fill="rgb(207,107,0)" fg:x="566" fg:w="1"/><text x="27.1001%" y="239.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.05%)</title><rect x="26.8501%" y="213" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="566" fg:w="1"/><text x="27.1001%" y="223.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="26.8501%" y="197" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="566" fg:w="1"/><text x="27.1001%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="26.8501%" y="181" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="566" fg:w="1"/><text x="27.1001%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="26.8501%" y="165" width="0.0474%" height="15" fill="rgb(198,98,0)" fg:x="566" fg:w="1"/><text x="27.1001%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="26.8501%" y="149" width="0.0474%" height="15" fill="rgb(194,94,0)" fg:x="566" fg:w="1"/><text x="27.1001%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.05%)</title><rect x="26.8975%" y="293" width="0.0474%" height="15" fill="rgb(106,216,216)" fg:x="567" fg:w="1"/><text x="27.1475%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (2 samples, 0.09%)</title><rect x="26.8975%" y="325" width="0.0949%" height="15" fill="rgb(107,217,217)" fg:x="567" fg:w="2"/><text x="27.1475%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (2 samples, 0.09%)</title><rect x="26.8975%" y="309" width="0.0949%" height="15" fill="rgb(93,204,204)" fg:x="567" fg:w="2"/><text x="27.1475%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.05%)</title><rect x="26.9450%" y="293" width="0.0474%" height="15" fill="rgb(84,196,196)" fg:x="568" fg:w="1"/><text x="27.1950%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (5 samples, 0.24%)</title><rect x="26.8027%" y="405" width="0.2372%" height="15" fill="rgb(64,178,178)" fg:x="565" fg:w="5"/><text x="27.0527%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.24%)</title><rect x="26.8027%" y="389" width="0.2372%" height="15" fill="rgb(95,206,206)" fg:x="565" fg:w="5"/><text x="27.0527%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.24%)</title><rect x="26.8027%" y="373" width="0.2372%" height="15" fill="rgb(99,210,210)" fg:x="565" fg:w="5"/><text x="27.0527%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.24%)</title><rect x="26.8027%" y="357" width="0.2372%" height="15" fill="rgb(76,189,189)" fg:x="565" fg:w="5"/><text x="27.0527%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.24%)</title><rect x="26.8027%" y="341" width="0.2372%" height="15" fill="rgb(99,210,210)" fg:x="565" fg:w="5"/><text x="27.0527%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.05%)</title><rect x="26.9924%" y="325" width="0.0474%" height="15" fill="rgb(109,219,219)" fg:x="569" fg:w="1"/><text x="27.2424%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.05%)</title><rect x="26.9924%" y="309" width="0.0474%" height="15" fill="rgb(59,173,173)" fg:x="569" fg:w="1"/><text x="27.2424%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.05%)</title><rect x="26.9924%" y="293" width="0.0474%" height="15" fill="rgb(77,190,190)" fg:x="569" fg:w="1"/><text x="27.2424%" y="303.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.05%)</title><rect x="26.9924%" y="277" width="0.0474%" height="15" fill="rgb(73,186,186)" fg:x="569" fg:w="1"/><text x="27.2424%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="26.9924%" y="261" width="0.0474%" height="15" fill="rgb(192,92,0)" fg:x="569" fg:w="1"/><text x="27.2424%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="26.9924%" y="245" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="569" fg:w="1"/><text x="27.2424%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="26.9924%" y="229" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="569" fg:w="1"/><text x="27.2424%" y="239.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="26.9924%" y="213" width="0.0474%" height="15" fill="rgb(198,198,58)" fg:x="569" fg:w="1"/><text x="27.2424%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="26.9924%" y="197" width="0.0474%" height="15" fill="rgb(229,229,69)" fg:x="569" fg:w="1"/><text x="27.2424%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="27.0398%" y="373" width="0.0474%" height="15" fill="rgb(208,108,0)" fg:x="570" fg:w="1"/><text x="27.2898%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="27.0398%" y="357" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="570" fg:w="1"/><text x="27.2898%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="27.0398%" y="341" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="570" fg:w="1"/><text x="27.2898%" y="351.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::replace (28 samples, 1.33%)</title><rect x="25.8065%" y="469" width="1.3283%" height="15" fill="rgb(91,203,203)" fg:x="544" fg:w="28"/><text x="26.0565%" y="479.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (28 samples, 1.33%)</title><rect x="25.8065%" y="453" width="1.3283%" height="15" fill="rgb(72,185,185)" fg:x="544" fg:w="28"/><text x="26.0565%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.33%)</title><rect x="26.8027%" y="437" width="0.3321%" height="15" fill="rgb(225,125,0)" fg:x="565" fg:w="7"/><text x="27.0527%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (7 samples, 0.33%)</title><rect x="26.8027%" y="421" width="0.3321%" height="15" fill="rgb(64,178,178)" fg:x="565" fg:w="7"/><text x="27.0527%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.09%)</title><rect x="27.0398%" y="405" width="0.0949%" height="15" fill="rgb(103,213,213)" fg:x="570" fg:w="2"/><text x="27.2898%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.09%)</title><rect x="27.0398%" y="389" width="0.0949%" height="15" fill="rgb(206,106,0)" fg:x="570" fg:w="2"/><text x="27.2898%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="27.0873%" y="373" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="383.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="27.0873%" y="357" width="0.0474%" height="15" fill="rgb(54,168,168)" fg:x="571" fg:w="1"/><text x="27.3373%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.05%)</title><rect x="27.0873%" y="341" width="0.0474%" height="15" fill="rgb(190,90,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="351.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.05%)</title><rect x="27.0873%" y="325" width="0.0474%" height="15" fill="rgb(226,126,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="27.0873%" y="309" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="27.0873%" y="293" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="27.0873%" y="277" width="0.0474%" height="15" fill="rgb(241,141,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="27.0873%" y="261" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.05%)</title><rect x="27.0873%" y="245" width="0.0474%" height="15" fill="rgb(207,107,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="27.0873%" y="229" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="571" fg:w="1"/><text x="27.3373%" y="239.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (9 samples, 0.43%)</title><rect x="27.1822%" y="373" width="0.4269%" height="15" fill="rgb(70,183,183)" fg:x="573" fg:w="9"/><text x="27.4322%" y="383.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.43%)</title><rect x="27.1822%" y="357" width="0.4269%" height="15" fill="rgb(76,189,189)" fg:x="573" fg:w="9"/><text x="27.4322%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.43%)</title><rect x="27.1822%" y="341" width="0.4269%" height="15" fill="rgb(246,146,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.43%)</title><rect x="27.1822%" y="325" width="0.4269%" height="15" fill="rgb(217,117,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.43%)</title><rect x="27.1822%" y="309" width="0.4269%" height="15" fill="rgb(214,114,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.43%)</title><rect x="27.1822%" y="293" width="0.4269%" height="15" fill="rgb(95,207,207)" fg:x="573" fg:w="9"/><text x="27.4322%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.43%)</title><rect x="27.1822%" y="277" width="0.4269%" height="15" fill="rgb(210,110,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.43%)</title><rect x="27.1822%" y="261" width="0.4269%" height="15" fill="rgb(208,108,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.43%)</title><rect x="27.1822%" y="245" width="0.4269%" height="15" fill="rgb(212,112,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.43%)</title><rect x="27.1822%" y="229" width="0.4269%" height="15" fill="rgb(220,120,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.43%)</title><rect x="27.1822%" y="213" width="0.4269%" height="15" fill="rgb(190,90,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="223.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.43%)</title><rect x="27.1822%" y="197" width="0.4269%" height="15" fill="rgb(218,118,0)" fg:x="573" fg:w="9"/><text x="27.4322%" y="207.50"></text></g><g><title>malloc (8 samples, 0.38%)</title><rect x="27.2296%" y="181" width="0.3795%" height="15" fill="rgb(201,201,59)" fg:x="574" fg:w="8"/><text x="27.4796%" y="191.50"></text></g><g><title>[libc.so.6] (8 samples, 0.38%)</title><rect x="27.2296%" y="165" width="0.3795%" height="15" fill="rgb(188,188,54)" fg:x="574" fg:w="8"/><text x="27.4796%" y="175.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="27.4668%" y="149" width="0.1423%" height="15" fill="rgb(186,186,54)" fg:x="579" fg:w="3"/><text x="27.7168%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="27.5617%" y="133" width="0.0474%" height="15" fill="rgb(179,179,51)" fg:x="581" fg:w="1"/><text x="27.8117%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.47%)</title><rect x="27.1822%" y="437" width="0.4744%" height="15" fill="rgb(247,147,0)" fg:x="573" fg:w="10"/><text x="27.4322%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.47%)</title><rect x="27.1822%" y="421" width="0.4744%" height="15" fill="rgb(230,130,0)" fg:x="573" fg:w="10"/><text x="27.4322%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.47%)</title><rect x="27.1822%" y="405" width="0.4744%" height="15" fill="rgb(220,120,0)" fg:x="573" fg:w="10"/><text x="27.4322%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.47%)</title><rect x="27.1822%" y="389" width="0.4744%" height="15" fill="rgb(71,185,185)" fg:x="573" fg:w="10"/><text x="27.4322%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="27.6091%" y="373" width="0.0474%" height="15" fill="rgb(215,115,0)" fg:x="582" fg:w="1"/><text x="27.8591%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="27.6091%" y="357" width="0.0474%" height="15" fill="rgb(191,91,0)" fg:x="582" fg:w="1"/><text x="27.8591%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="27.6091%" y="341" width="0.0474%" height="15" fill="rgb(253,153,0)" fg:x="582" fg:w="1"/><text x="27.8591%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="27.6091%" y="325" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="582" fg:w="1"/><text x="27.8591%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="27.6091%" y="309" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="582" fg:w="1"/><text x="27.8591%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="27.6091%" y="293" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="582" fg:w="1"/><text x="27.8591%" y="303.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="27.6091%" y="277" width="0.0474%" height="15" fill="rgb(226,226,68)" fg:x="582" fg:w="1"/><text x="27.8591%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="27.6091%" y="261" width="0.0474%" height="15" fill="rgb(209,209,62)" fg:x="582" fg:w="1"/><text x="27.8591%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="27.6565%" y="357" width="0.0474%" height="15" fill="rgb(72,185,185)" fg:x="583" fg:w="1"/><text x="27.9065%" y="367.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="27.7040%" y="341" width="0.0474%" height="15" fill="rgb(55,169,169)" fg:x="584" fg:w="1"/><text x="27.9540%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="27.8463%" y="101" width="0.0474%" height="15" fill="rgb(196,196,57)" fg:x="587" fg:w="1"/><text x="28.0963%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="27.8463%" y="85" width="0.0474%" height="15" fill="rgb(193,93,0)" fg:x="587" fg:w="1"/><text x="28.0963%" y="95.50"></text></g><g><title>__rust_alloc (3 samples, 0.14%)</title><rect x="27.8937%" y="101" width="0.1423%" height="15" fill="rgb(191,191,55)" fg:x="588" fg:w="3"/><text x="28.1437%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 1.33%)</title><rect x="27.7989%" y="197" width="1.3283%" height="15" fill="rgb(201,101,0)" fg:x="586" fg:w="28"/><text x="28.0489%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 1.33%)</title><rect x="27.7989%" y="181" width="1.3283%" height="15" fill="rgb(234,134,0)" fg:x="586" fg:w="28"/><text x="28.0489%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 1.33%)</title><rect x="27.7989%" y="165" width="1.3283%" height="15" fill="rgb(216,116,0)" fg:x="586" fg:w="28"/><text x="28.0489%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 1.28%)</title><rect x="27.8463%" y="149" width="1.2808%" height="15" fill="rgb(221,121,0)" fg:x="587" fg:w="27"/><text x="28.0963%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 1.28%)</title><rect x="27.8463%" y="133" width="1.2808%" height="15" fill="rgb(228,128,0)" fg:x="587" fg:w="27"/><text x="28.0963%" y="143.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 1.28%)</title><rect x="27.8463%" y="117" width="1.2808%" height="15" fill="rgb(218,118,0)" fg:x="587" fg:w="27"/><text x="28.0963%" y="127.50"></text></g><g><title>malloc (23 samples, 1.09%)</title><rect x="28.0361%" y="101" width="1.0911%" height="15" fill="rgb(182,182,52)" fg:x="591" fg:w="23"/><text x="28.2861%" y="111.50"></text></g><g><title>[libc.so.6] (18 samples, 0.85%)</title><rect x="28.2732%" y="85" width="0.8539%" height="15" fill="rgb(191,191,55)" fg:x="596" fg:w="18"/><text x="28.5232%" y="95.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="28.9848%" y="69" width="0.1423%" height="15" fill="rgb(177,177,50)" fg:x="611" fg:w="3"/><text x="29.2348%" y="79.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (31 samples, 1.47%)</title><rect x="27.7989%" y="277" width="1.4706%" height="15" fill="rgb(103,213,213)" fg:x="586" fg:w="31"/><text x="28.0489%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 1.47%)</title><rect x="27.7989%" y="261" width="1.4706%" height="15" fill="rgb(233,133,0)" fg:x="586" fg:w="31"/><text x="28.0489%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 1.47%)</title><rect x="27.7989%" y="245" width="1.4706%" height="15" fill="rgb(192,92,0)" fg:x="586" fg:w="31"/><text x="28.0489%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 1.47%)</title><rect x="27.7989%" y="229" width="1.4706%" height="15" fill="rgb(249,149,0)" fg:x="586" fg:w="31"/><text x="28.0489%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 1.47%)</title><rect x="27.7989%" y="213" width="1.4706%" height="15" fill="rgb(109,219,219)" fg:x="586" fg:w="31"/><text x="28.0489%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.14%)</title><rect x="29.1271%" y="197" width="0.1423%" height="15" fill="rgb(216,116,0)" fg:x="614" fg:w="3"/><text x="29.3771%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.14%)</title><rect x="29.1271%" y="181" width="0.1423%" height="15" fill="rgb(192,92,0)" fg:x="614" fg:w="3"/><text x="29.3771%" y="191.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="29.1271%" y="165" width="0.1423%" height="15" fill="rgb(225,225,68)" fg:x="614" fg:w="3"/><text x="29.3771%" y="175.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="29.2694%" y="181" width="0.0474%" height="15" fill="rgb(211,211,63)" fg:x="617" fg:w="1"/><text x="29.5194%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.47%)</title><rect x="29.2694%" y="277" width="0.4744%" height="15" fill="rgb(237,137,0)" fg:x="617" fg:w="10"/><text x="29.5194%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.47%)</title><rect x="29.2694%" y="261" width="0.4744%" height="15" fill="rgb(226,126,0)" fg:x="617" fg:w="10"/><text x="29.5194%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.47%)</title><rect x="29.2694%" y="245" width="0.4744%" height="15" fill="rgb(212,112,0)" fg:x="617" fg:w="10"/><text x="29.5194%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.47%)</title><rect x="29.2694%" y="229" width="0.4744%" height="15" fill="rgb(243,143,0)" fg:x="617" fg:w="10"/><text x="29.5194%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.47%)</title><rect x="29.2694%" y="213" width="0.4744%" height="15" fill="rgb(223,123,0)" fg:x="617" fg:w="10"/><text x="29.5194%" y="223.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.47%)</title><rect x="29.2694%" y="197" width="0.4744%" height="15" fill="rgb(244,144,0)" fg:x="617" fg:w="10"/><text x="29.5194%" y="207.50"></text></g><g><title>malloc (9 samples, 0.43%)</title><rect x="29.3169%" y="181" width="0.4269%" height="15" fill="rgb(222,222,67)" fg:x="618" fg:w="9"/><text x="29.5669%" y="191.50"></text></g><g><title>[libc.so.6] (8 samples, 0.38%)</title><rect x="29.3643%" y="165" width="0.3795%" height="15" fill="rgb(193,193,56)" fg:x="619" fg:w="8"/><text x="29.6143%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="29.6964%" y="149" width="0.0474%" height="15" fill="rgb(180,180,51)" fg:x="626" fg:w="1"/><text x="29.9464%" y="159.50"></text></g><g><title>core::clone::Clone::clone (45 samples, 2.13%)</title><rect x="27.7040%" y="357" width="2.1347%" height="15" fill="rgb(253,153,0)" fg:x="584" fg:w="45"/><text x="27.9540%" y="367.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44 samples, 2.09%)</title><rect x="27.7514%" y="341" width="2.0873%" height="15" fill="rgb(202,102,0)" fg:x="585" fg:w="44"/><text x="28.0014%" y="351.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 2.04%)</title><rect x="27.7989%" y="325" width="2.0398%" height="15" fill="rgb(199,99,0)" fg:x="586" fg:w="43"/><text x="28.0489%" y="335.50">a..</text></g><g><title>alloc::slice::hack::to_vec (43 samples, 2.04%)</title><rect x="27.7989%" y="309" width="2.0398%" height="15" fill="rgb(192,92,0)" fg:x="586" fg:w="43"/><text x="28.0489%" y="319.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 2.04%)</title><rect x="27.7989%" y="293" width="2.0398%" height="15" fill="rgb(56,170,170)" fg:x="586" fg:w="43"/><text x="28.0489%" y="303.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.09%)</title><rect x="29.7438%" y="277" width="0.0949%" height="15" fill="rgb(242,142,0)" fg:x="627" fg:w="2"/><text x="29.9938%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (50 samples, 2.37%)</title><rect x="27.6565%" y="389" width="2.3719%" height="15" fill="rgb(95,206,206)" fg:x="583" fg:w="50"/><text x="27.9065%" y="399.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (50 samples, 2.37%)</title><rect x="27.6565%" y="373" width="2.3719%" height="15" fill="rgb(100,210,210)" fg:x="583" fg:w="50"/><text x="27.9065%" y="383.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (4 samples, 0.19%)</title><rect x="29.8387%" y="357" width="0.1898%" height="15" fill="rgb(85,197,197)" fg:x="629" fg:w="4"/><text x="30.0887%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.19%)</title><rect x="29.8387%" y="341" width="0.1898%" height="15" fill="rgb(254,154,0)" fg:x="629" fg:w="4"/><text x="30.0887%" y="351.50"></text></g><g><title>core::ptr::write (4 samples, 0.19%)</title><rect x="29.8387%" y="325" width="0.1898%" height="15" fill="rgb(221,121,0)" fg:x="629" fg:w="4"/><text x="30.0887%" y="335.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (62 samples, 2.94%)</title><rect x="27.1347%" y="453" width="2.9412%" height="15" fill="rgb(60,174,174)" fg:x="572" fg:w="62"/><text x="27.3847%" y="463.50">&lt;a..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (51 samples, 2.42%)</title><rect x="27.6565%" y="437" width="2.4194%" height="15" fill="rgb(220,120,0)" fg:x="583" fg:w="51"/><text x="27.9065%" y="447.50">&lt;s..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (51 samples, 2.42%)</title><rect x="27.6565%" y="421" width="2.4194%" height="15" fill="rgb(74,187,187)" fg:x="583" fg:w="51"/><text x="27.9065%" y="431.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (51 samples, 2.42%)</title><rect x="27.6565%" y="405" width="2.4194%" height="15" fill="rgb(105,215,215)" fg:x="583" fg:w="51"/><text x="27.9065%" y="415.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.05%)</title><rect x="30.0285%" y="389" width="0.0474%" height="15" fill="rgb(52,167,167)" fg:x="633" fg:w="1"/><text x="30.2785%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.05%)</title><rect x="30.0285%" y="373" width="0.0474%" height="15" fill="rgb(95,206,206)" fg:x="633" fg:w="1"/><text x="30.2785%" y="383.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.05%)</title><rect x="30.0285%" y="357" width="0.0474%" height="15" fill="rgb(74,187,187)" fg:x="633" fg:w="1"/><text x="30.2785%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.05%)</title><rect x="30.0285%" y="341" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="633" fg:w="1"/><text x="30.2785%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.05%)</title><rect x="30.0285%" y="325" width="0.0474%" height="15" fill="rgb(191,91,0)" fg:x="633" fg:w="1"/><text x="30.2785%" y="335.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.05%)</title><rect x="30.0759%" y="261" width="0.0474%" height="15" fill="rgb(253,153,0)" fg:x="634" fg:w="1"/><text x="30.3259%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.14%)</title><rect x="30.0759%" y="357" width="0.1423%" height="15" fill="rgb(225,125,0)" fg:x="634" fg:w="3"/><text x="30.3259%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.14%)</title><rect x="30.0759%" y="341" width="0.1423%" height="15" fill="rgb(219,119,0)" fg:x="634" fg:w="3"/><text x="30.3259%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.14%)</title><rect x="30.0759%" y="325" width="0.1423%" height="15" fill="rgb(190,90,0)" fg:x="634" fg:w="3"/><text x="30.3259%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.14%)</title><rect x="30.0759%" y="309" width="0.1423%" height="15" fill="rgb(236,136,0)" fg:x="634" fg:w="3"/><text x="30.3259%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.14%)</title><rect x="30.0759%" y="293" width="0.1423%" height="15" fill="rgb(250,150,0)" fg:x="634" fg:w="3"/><text x="30.3259%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.14%)</title><rect x="30.0759%" y="277" width="0.1423%" height="15" fill="rgb(195,95,0)" fg:x="634" fg:w="3"/><text x="30.3259%" y="287.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="30.1233%" y="261" width="0.0949%" height="15" fill="rgb(214,214,64)" fg:x="635" fg:w="2"/><text x="30.3733%" y="271.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (6 samples, 0.28%)</title><rect x="30.0759%" y="437" width="0.2846%" height="15" fill="rgb(78,191,191)" fg:x="634" fg:w="6"/><text x="30.3259%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.28%)</title><rect x="30.0759%" y="421" width="0.2846%" height="15" fill="rgb(196,96,0)" fg:x="634" fg:w="6"/><text x="30.3259%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.28%)</title><rect x="30.0759%" y="405" width="0.2846%" height="15" fill="rgb(203,103,0)" fg:x="634" fg:w="6"/><text x="30.3259%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.28%)</title><rect x="30.0759%" y="389" width="0.2846%" height="15" fill="rgb(200,100,0)" fg:x="634" fg:w="6"/><text x="30.3259%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.28%)</title><rect x="30.0759%" y="373" width="0.2846%" height="15" fill="rgb(82,194,194)" fg:x="634" fg:w="6"/><text x="30.3259%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.14%)</title><rect x="30.2182%" y="357" width="0.1423%" height="15" fill="rgb(251,151,0)" fg:x="637" fg:w="3"/><text x="30.4682%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.14%)</title><rect x="30.2182%" y="341" width="0.1423%" height="15" fill="rgb(191,91,0)" fg:x="637" fg:w="3"/><text x="30.4682%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="30.2182%" y="325" width="0.1423%" height="15" fill="rgb(195,195,57)" fg:x="637" fg:w="3"/><text x="30.4682%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="30.3605%" y="437" width="0.0474%" height="15" fill="rgb(233,133,0)" fg:x="640" fg:w="1"/><text x="30.6105%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="30.3605%" y="421" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="640" fg:w="1"/><text x="30.6105%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="30.5503%" y="357" width="0.0474%" height="15" fill="rgb(58,173,173)" fg:x="644" fg:w="1"/><text x="30.8003%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="30.5503%" y="341" width="0.0474%" height="15" fill="rgb(75,188,188)" fg:x="644" fg:w="1"/><text x="30.8003%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="30.5503%" y="325" width="0.0474%" height="15" fill="rgb(68,181,181)" fg:x="644" fg:w="1"/><text x="30.8003%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="30.5977%" y="341" width="0.0474%" height="15" fill="rgb(90,202,202)" fg:x="645" fg:w="1"/><text x="30.8477%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="30.8349%" y="101" width="0.0474%" height="15" fill="rgb(219,219,66)" fg:x="650" fg:w="1"/><text x="31.0849%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="30.8349%" y="85" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="650" fg:w="1"/><text x="31.0849%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.28%)</title><rect x="30.7875%" y="197" width="0.2846%" height="15" fill="rgb(240,140,0)" fg:x="649" fg:w="6"/><text x="31.0375%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.28%)</title><rect x="30.7875%" y="181" width="0.2846%" height="15" fill="rgb(202,102,0)" fg:x="649" fg:w="6"/><text x="31.0375%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.28%)</title><rect x="30.7875%" y="165" width="0.2846%" height="15" fill="rgb(240,140,0)" fg:x="649" fg:w="6"/><text x="31.0375%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.24%)</title><rect x="30.8349%" y="149" width="0.2372%" height="15" fill="rgb(220,120,0)" fg:x="650" fg:w="5"/><text x="31.0849%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.24%)</title><rect x="30.8349%" y="133" width="0.2372%" height="15" fill="rgb(241,141,0)" fg:x="650" fg:w="5"/><text x="31.0849%" y="143.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.24%)</title><rect x="30.8349%" y="117" width="0.2372%" height="15" fill="rgb(211,111,0)" fg:x="650" fg:w="5"/><text x="31.0849%" y="127.50"></text></g><g><title>malloc (4 samples, 0.19%)</title><rect x="30.8824%" y="101" width="0.1898%" height="15" fill="rgb(191,191,55)" fg:x="651" fg:w="4"/><text x="31.1324%" y="111.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (9 samples, 0.43%)</title><rect x="30.7875%" y="277" width="0.4269%" height="15" fill="rgb(109,219,219)" fg:x="649" fg:w="9"/><text x="31.0375%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.43%)</title><rect x="30.7875%" y="261" width="0.4269%" height="15" fill="rgb(229,129,0)" fg:x="649" fg:w="9"/><text x="31.0375%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.43%)</title><rect x="30.7875%" y="245" width="0.4269%" height="15" fill="rgb(217,117,0)" fg:x="649" fg:w="9"/><text x="31.0375%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.43%)</title><rect x="30.7875%" y="229" width="0.4269%" height="15" fill="rgb(212,112,0)" fg:x="649" fg:w="9"/><text x="31.0375%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.43%)</title><rect x="30.7875%" y="213" width="0.4269%" height="15" fill="rgb(96,207,207)" fg:x="649" fg:w="9"/><text x="31.0375%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.14%)</title><rect x="31.0721%" y="197" width="0.1423%" height="15" fill="rgb(243,143,0)" fg:x="655" fg:w="3"/><text x="31.3221%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.14%)</title><rect x="31.0721%" y="181" width="0.1423%" height="15" fill="rgb(220,120,0)" fg:x="655" fg:w="3"/><text x="31.3221%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="31.1195%" y="165" width="0.0949%" height="15" fill="rgb(205,205,61)" fg:x="656" fg:w="2"/><text x="31.3695%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="31.2144%" y="181" width="0.0474%" height="15" fill="rgb(202,202,60)" fg:x="658" fg:w="1"/><text x="31.4644%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="31.2144%" y="165" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="658" fg:w="1"/><text x="31.4644%" y="175.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="31.2619%" y="181" width="0.0474%" height="15" fill="rgb(218,218,65)" fg:x="659" fg:w="1"/><text x="31.5119%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.24%)</title><rect x="31.2144%" y="277" width="0.2372%" height="15" fill="rgb(216,116,0)" fg:x="658" fg:w="5"/><text x="31.4644%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.24%)</title><rect x="31.2144%" y="261" width="0.2372%" height="15" fill="rgb(192,92,0)" fg:x="658" fg:w="5"/><text x="31.4644%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.24%)</title><rect x="31.2144%" y="245" width="0.2372%" height="15" fill="rgb(220,120,0)" fg:x="658" fg:w="5"/><text x="31.4644%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.24%)</title><rect x="31.2144%" y="229" width="0.2372%" height="15" fill="rgb(244,144,0)" fg:x="658" fg:w="5"/><text x="31.4644%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.24%)</title><rect x="31.2144%" y="213" width="0.2372%" height="15" fill="rgb(227,127,0)" fg:x="658" fg:w="5"/><text x="31.4644%" y="223.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.24%)</title><rect x="31.2144%" y="197" width="0.2372%" height="15" fill="rgb(233,133,0)" fg:x="658" fg:w="5"/><text x="31.4644%" y="207.50"></text></g><g><title>malloc (3 samples, 0.14%)</title><rect x="31.3093%" y="181" width="0.1423%" height="15" fill="rgb(217,217,65)" fg:x="660" fg:w="3"/><text x="31.5593%" y="191.50"></text></g><g><title>core::clone::Clone::clone (19 samples, 0.90%)</title><rect x="30.5977%" y="357" width="0.9013%" height="15" fill="rgb(208,108,0)" fg:x="645" fg:w="19"/><text x="30.8477%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.85%)</title><rect x="30.6452%" y="341" width="0.8539%" height="15" fill="rgb(223,123,0)" fg:x="646" fg:w="18"/><text x="30.8952%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.85%)</title><rect x="30.6452%" y="325" width="0.8539%" height="15" fill="rgb(224,124,0)" fg:x="646" fg:w="18"/><text x="30.8952%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.85%)</title><rect x="30.6452%" y="309" width="0.8539%" height="15" fill="rgb(218,118,0)" fg:x="646" fg:w="18"/><text x="30.8952%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.85%)</title><rect x="30.6452%" y="293" width="0.8539%" height="15" fill="rgb(92,204,204)" fg:x="646" fg:w="18"/><text x="30.8952%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.05%)</title><rect x="31.4516%" y="277" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="663" fg:w="1"/><text x="31.7016%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="31.4991%" y="357" width="0.0474%" height="15" fill="rgb(201,101,0)" fg:x="664" fg:w="1"/><text x="31.7491%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="31.4991%" y="341" width="0.0474%" height="15" fill="rgb(198,98,0)" fg:x="664" fg:w="1"/><text x="31.7491%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="31.4991%" y="325" width="0.0474%" height="15" fill="rgb(179,179,51)" fg:x="664" fg:w="1"/><text x="31.7491%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.43%)</title><rect x="31.5465%" y="341" width="0.4269%" height="15" fill="rgb(211,111,0)" fg:x="665" fg:w="9"/><text x="31.7965%" y="351.50"></text></g><g><title>core::ptr::write (9 samples, 0.43%)</title><rect x="31.5465%" y="325" width="0.4269%" height="15" fill="rgb(193,93,0)" fg:x="665" fg:w="9"/><text x="31.7965%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (31 samples, 1.47%)</title><rect x="30.5503%" y="389" width="1.4706%" height="15" fill="rgb(99,210,210)" fg:x="644" fg:w="31"/><text x="30.8003%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (31 samples, 1.47%)</title><rect x="30.5503%" y="373" width="1.4706%" height="15" fill="rgb(95,206,206)" fg:x="644" fg:w="31"/><text x="30.8003%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (10 samples, 0.47%)</title><rect x="31.5465%" y="357" width="0.4744%" height="15" fill="rgb(56,171,171)" fg:x="665" fg:w="10"/><text x="31.7965%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.05%)</title><rect x="31.9734%" y="341" width="0.0474%" height="15" fill="rgb(102,212,212)" fg:x="674" fg:w="1"/><text x="32.2234%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="31.9734%" y="325" width="0.0474%" height="15" fill="rgb(217,117,0)" fg:x="674" fg:w="1"/><text x="32.2234%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="31.9734%" y="309" width="0.0474%" height="15" fill="rgb(214,114,0)" fg:x="674" fg:w="1"/><text x="32.2234%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (35 samples, 1.66%)</title><rect x="30.4080%" y="437" width="1.6603%" height="15" fill="rgb(227,127,0)" fg:x="641" fg:w="35"/><text x="30.6580%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (35 samples, 1.66%)</title><rect x="30.4080%" y="421" width="1.6603%" height="15" fill="rgb(56,171,171)" fg:x="641" fg:w="35"/><text x="30.6580%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 1.52%)</title><rect x="30.5503%" y="405" width="1.5180%" height="15" fill="rgb(104,215,215)" fg:x="644" fg:w="32"/><text x="30.8003%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.05%)</title><rect x="32.0209%" y="389" width="0.0474%" height="15" fill="rgb(85,197,197)" fg:x="675" fg:w="1"/><text x="32.2709%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.05%)</title><rect x="32.0209%" y="373" width="0.0474%" height="15" fill="rgb(57,171,171)" fg:x="675" fg:w="1"/><text x="32.2709%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.05%)</title><rect x="32.0209%" y="357" width="0.0474%" height="15" fill="rgb(101,211,211)" fg:x="675" fg:w="1"/><text x="32.2709%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="32.0209%" y="341" width="0.0474%" height="15" fill="rgb(191,91,0)" fg:x="675" fg:w="1"/><text x="32.2709%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="32.0209%" y="325" width="0.0474%" height="15" fill="rgb(253,153,0)" fg:x="675" fg:w="1"/><text x="32.2709%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="32.0209%" y="309" width="0.0474%" height="15" fill="rgb(191,91,0)" fg:x="675" fg:w="1"/><text x="32.2709%" y="319.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="32.0209%" y="293" width="0.0474%" height="15" fill="rgb(210,210,63)" fg:x="675" fg:w="1"/><text x="32.2709%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="32.1157%" y="341" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="677" fg:w="1"/><text x="32.3657%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="32.1157%" y="325" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="677" fg:w="1"/><text x="32.3657%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="32.1157%" y="309" width="0.0474%" height="15" fill="rgb(214,114,0)" fg:x="677" fg:w="1"/><text x="32.3657%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.05%)</title><rect x="32.4478%" y="197" width="0.0474%" height="15" fill="rgb(195,95,0)" fg:x="684" fg:w="1"/><text x="32.6978%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.19%)</title><rect x="32.3529%" y="213" width="0.1898%" height="15" fill="rgb(210,110,0)" fg:x="682" fg:w="4"/><text x="32.6029%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="32.4953%" y="197" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="685" fg:w="1"/><text x="32.7453%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (8 samples, 0.38%)</title><rect x="32.2581%" y="309" width="0.3795%" height="15" fill="rgb(204,104,0)" fg:x="680" fg:w="8"/><text x="32.5081%" y="319.50"></text></g><g><title>core::hash::Hasher::write_isize (8 samples, 0.38%)</title><rect x="32.2581%" y="293" width="0.3795%" height="15" fill="rgb(246,146,0)" fg:x="680" fg:w="8"/><text x="32.5081%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.38%)</title><rect x="32.2581%" y="277" width="0.3795%" height="15" fill="rgb(195,95,0)" fg:x="680" fg:w="8"/><text x="32.5081%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.33%)</title><rect x="32.3055%" y="261" width="0.3321%" height="15" fill="rgb(202,102,0)" fg:x="681" fg:w="7"/><text x="32.5555%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.33%)</title><rect x="32.3055%" y="245" width="0.3321%" height="15" fill="rgb(194,94,0)" fg:x="681" fg:w="7"/><text x="32.5555%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.33%)</title><rect x="32.3055%" y="229" width="0.3321%" height="15" fill="rgb(252,152,0)" fg:x="681" fg:w="7"/><text x="32.5555%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.09%)</title><rect x="32.5427%" y="213" width="0.0949%" height="15" fill="rgb(234,134,0)" fg:x="686" fg:w="2"/><text x="32.7927%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.57%)</title><rect x="32.1157%" y="373" width="0.5693%" height="15" fill="rgb(63,177,177)" fg:x="677" fg:w="12"/><text x="32.3657%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.57%)</title><rect x="32.1157%" y="357" width="0.5693%" height="15" fill="rgb(215,115,0)" fg:x="677" fg:w="12"/><text x="32.3657%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11 samples, 0.52%)</title><rect x="32.1632%" y="341" width="0.5218%" height="15" fill="rgb(234,134,0)" fg:x="678" fg:w="11"/><text x="32.4132%" y="351.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (11 samples, 0.52%)</title><rect x="32.1632%" y="325" width="0.5218%" height="15" fill="rgb(78,190,190)" fg:x="678" fg:w="11"/><text x="32.4132%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.05%)</title><rect x="32.6376%" y="309" width="0.0474%" height="15" fill="rgb(242,142,0)" fg:x="688" fg:w="1"/><text x="32.8876%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="32.6376%" y="293" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="688" fg:w="1"/><text x="32.8876%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="32.6376%" y="277" width="0.0474%" height="15" fill="rgb(230,130,0)" fg:x="688" fg:w="1"/><text x="32.8876%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="32.6376%" y="261" width="0.0474%" height="15" fill="rgb(211,111,0)" fg:x="688" fg:w="1"/><text x="32.8876%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="32.6376%" y="245" width="0.0474%" height="15" fill="rgb(239,139,0)" fg:x="688" fg:w="1"/><text x="32.8876%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.05%)</title><rect x="32.6850%" y="325" width="0.0474%" height="15" fill="rgb(78,190,190)" fg:x="689" fg:w="1"/><text x="32.9350%" y="335.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.05%)</title><rect x="32.6850%" y="309" width="0.0474%" height="15" fill="rgb(81,193,193)" fg:x="689" fg:w="1"/><text x="32.9350%" y="319.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.05%)</title><rect x="32.6850%" y="293" width="0.0474%" height="15" fill="rgb(62,176,176)" fg:x="689" fg:w="1"/><text x="32.9350%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.05%)</title><rect x="32.6850%" y="277" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="689" fg:w="1"/><text x="32.9350%" y="287.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="32.6850%" y="261" width="0.0474%" height="15" fill="rgb(81,194,194)" fg:x="689" fg:w="1"/><text x="32.9350%" y="271.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.05%)</title><rect x="32.7324%" y="325" width="0.0474%" height="15" fill="rgb(81,193,193)" fg:x="690" fg:w="1"/><text x="32.9824%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (16 samples, 0.76%)</title><rect x="32.0683%" y="437" width="0.7590%" height="15" fill="rgb(236,136,0)" fg:x="676" fg:w="16"/><text x="32.3183%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.76%)</title><rect x="32.0683%" y="421" width="0.7590%" height="15" fill="rgb(250,150,0)" fg:x="676" fg:w="16"/><text x="32.3183%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 0.76%)</title><rect x="32.0683%" y="405" width="0.7590%" height="15" fill="rgb(72,185,185)" fg:x="676" fg:w="16"/><text x="32.3183%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.76%)</title><rect x="32.0683%" y="389" width="0.7590%" height="15" fill="rgb(62,176,176)" fg:x="676" fg:w="16"/><text x="32.3183%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.14%)</title><rect x="32.6850%" y="373" width="0.1423%" height="15" fill="rgb(56,171,171)" fg:x="689" fg:w="3"/><text x="32.9350%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.14%)</title><rect x="32.6850%" y="357" width="0.1423%" height="15" fill="rgb(92,204,204)" fg:x="689" fg:w="3"/><text x="32.9350%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.14%)</title><rect x="32.6850%" y="341" width="0.1423%" height="15" fill="rgb(100,211,211)" fg:x="689" fg:w="3"/><text x="32.9350%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.05%)</title><rect x="32.7799%" y="325" width="0.0474%" height="15" fill="rgb(79,191,191)" fg:x="691" fg:w="1"/><text x="33.0299%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.05%)</title><rect x="32.7799%" y="309" width="0.0474%" height="15" fill="rgb(253,153,0)" fg:x="691" fg:w="1"/><text x="33.0299%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="32.7799%" y="293" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="691" fg:w="1"/><text x="33.0299%" y="303.50"></text></g><g><title>__rdl_realloc (1 samples, 0.05%)</title><rect x="32.8748%" y="309" width="0.0474%" height="15" fill="rgb(212,212,63)" fg:x="693" fg:w="1"/><text x="33.1248%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.05%)</title><rect x="32.8748%" y="293" width="0.0474%" height="15" fill="rgb(224,124,0)" fg:x="693" fg:w="1"/><text x="33.1248%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.85%)</title><rect x="32.8273%" y="373" width="0.8539%" height="15" fill="rgb(216,116,0)" fg:x="692" fg:w="18"/><text x="33.0773%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.81%)</title><rect x="32.8748%" y="357" width="0.8065%" height="15" fill="rgb(225,125,0)" fg:x="693" fg:w="17"/><text x="33.1248%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.81%)</title><rect x="32.8748%" y="341" width="0.8065%" height="15" fill="rgb(217,117,0)" fg:x="693" fg:w="17"/><text x="33.1248%" y="351.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.81%)</title><rect x="32.8748%" y="325" width="0.8065%" height="15" fill="rgb(233,133,0)" fg:x="693" fg:w="17"/><text x="33.1248%" y="335.50"></text></g><g><title>realloc (16 samples, 0.76%)</title><rect x="32.9222%" y="309" width="0.7590%" height="15" fill="rgb(221,221,67)" fg:x="694" fg:w="16"/><text x="33.1722%" y="319.50"></text></g><g><title>[libc.so.6] (15 samples, 0.71%)</title><rect x="32.9696%" y="293" width="0.7116%" height="15" fill="rgb(223,223,67)" fg:x="695" fg:w="15"/><text x="33.2196%" y="303.50"></text></g><g><title>[libc.so.6] (14 samples, 0.66%)</title><rect x="33.0171%" y="277" width="0.6641%" height="15" fill="rgb(198,198,58)" fg:x="696" fg:w="14"/><text x="33.2671%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="33.6338%" y="261" width="0.0474%" height="15" fill="rgb(220,220,66)" fg:x="709" fg:w="1"/><text x="33.8838%" y="271.50"></text></g><g><title>core::cmp::max (1 samples, 0.05%)</title><rect x="33.6812%" y="373" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="710" fg:w="1"/><text x="33.9312%" y="383.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.05%)</title><rect x="33.6812%" y="357" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="710" fg:w="1"/><text x="33.9312%" y="367.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.05%)</title><rect x="33.6812%" y="341" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="710" fg:w="1"/><text x="33.9312%" y="351.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::push (20 samples, 0.95%)</title><rect x="32.8273%" y="437" width="0.9488%" height="15" fill="rgb(104,214,214)" fg:x="692" fg:w="20"/><text x="33.0773%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.95%)</title><rect x="32.8273%" y="421" width="0.9488%" height="15" fill="rgb(239,139,0)" fg:x="692" fg:w="20"/><text x="33.0773%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.95%)</title><rect x="32.8273%" y="405" width="0.9488%" height="15" fill="rgb(227,127,0)" fg:x="692" fg:w="20"/><text x="33.0773%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.95%)</title><rect x="32.8273%" y="389" width="0.9488%" height="15" fill="rgb(228,128,0)" fg:x="692" fg:w="20"/><text x="33.0773%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.05%)</title><rect x="33.7287%" y="373" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="711" fg:w="1"/><text x="33.9787%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.05%)</title><rect x="33.7287%" y="357" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="711" fg:w="1"/><text x="33.9787%" y="367.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="33.7761%" y="373" width="0.0474%" height="15" fill="rgb(177,177,50)" fg:x="712" fg:w="1"/><text x="34.0261%" y="383.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.05%)</title><rect x="33.8235%" y="373" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="713" fg:w="1"/><text x="34.0735%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.43%)</title><rect x="33.7761%" y="437" width="0.4269%" height="15" fill="rgb(218,118,0)" fg:x="712" fg:w="9"/><text x="34.0261%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.43%)</title><rect x="33.7761%" y="421" width="0.4269%" height="15" fill="rgb(219,119,0)" fg:x="712" fg:w="9"/><text x="34.0261%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.43%)</title><rect x="33.7761%" y="405" width="0.4269%" height="15" fill="rgb(218,118,0)" fg:x="712" fg:w="9"/><text x="34.0261%" y="415.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.43%)</title><rect x="33.7761%" y="389" width="0.4269%" height="15" fill="rgb(244,144,0)" fg:x="712" fg:w="9"/><text x="34.0261%" y="399.50"></text></g><g><title>malloc (7 samples, 0.33%)</title><rect x="33.8710%" y="373" width="0.3321%" height="15" fill="rgb(229,229,69)" fg:x="714" fg:w="7"/><text x="34.1210%" y="383.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="34.0133%" y="357" width="0.1898%" height="15" fill="rgb(198,198,58)" fg:x="717" fg:w="4"/><text x="34.2633%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.09%)</title><rect x="34.3928%" y="373" width="0.0949%" height="15" fill="rgb(237,137,0)" fg:x="725" fg:w="2"/><text x="34.6428%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.09%)</title><rect x="34.3928%" y="357" width="0.0949%" height="15" fill="rgb(237,137,0)" fg:x="725" fg:w="2"/><text x="34.6428%" y="367.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.09%)</title><rect x="34.3928%" y="341" width="0.0949%" height="15" fill="rgb(224,124,0)" fg:x="725" fg:w="2"/><text x="34.6428%" y="351.50"></text></g><g><title>realloc (2 samples, 0.09%)</title><rect x="34.3928%" y="325" width="0.0949%" height="15" fill="rgb(184,184,53)" fg:x="725" fg:w="2"/><text x="34.6428%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="34.3928%" y="309" width="0.0949%" height="15" fill="rgb(195,195,57)" fg:x="725" fg:w="2"/><text x="34.6428%" y="319.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="34.3928%" y="293" width="0.0949%" height="15" fill="rgb(205,205,60)" fg:x="725" fg:w="2"/><text x="34.6428%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.95%)</title><rect x="34.3454%" y="421" width="0.9488%" height="15" fill="rgb(252,152,0)" fg:x="724" fg:w="20"/><text x="34.5954%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.95%)</title><rect x="34.3454%" y="405" width="0.9488%" height="15" fill="rgb(201,101,0)" fg:x="724" fg:w="20"/><text x="34.5954%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.95%)</title><rect x="34.3454%" y="389" width="0.9488%" height="15" fill="rgb(214,114,0)" fg:x="724" fg:w="20"/><text x="34.5954%" y="399.50"></text></g><g><title>malloc (17 samples, 0.81%)</title><rect x="34.4877%" y="373" width="0.8065%" height="15" fill="rgb(188,188,54)" fg:x="727" fg:w="17"/><text x="34.7377%" y="383.50"></text></g><g><title>[libc.so.6] (16 samples, 0.76%)</title><rect x="34.5351%" y="357" width="0.7590%" height="15" fill="rgb(219,219,66)" fg:x="728" fg:w="16"/><text x="34.7851%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="35.2467%" y="341" width="0.0474%" height="15" fill="rgb(212,212,63)" fg:x="743" fg:w="1"/><text x="35.4967%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 1.19%)</title><rect x="34.2030%" y="437" width="1.1860%" height="15" fill="rgb(235,135,0)" fg:x="721" fg:w="25"/><text x="34.4530%" y="447.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="35.2941%" y="421" width="0.0949%" height="15" fill="rgb(247,147,0)" fg:x="744" fg:w="2"/><text x="35.5441%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (2 samples, 0.09%)</title><rect x="35.3890%" y="437" width="0.0949%" height="15" fill="rgb(194,94,0)" fg:x="746" fg:w="2"/><text x="35.6390%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="35.3890%" y="421" width="0.0949%" height="15" fill="rgb(221,121,0)" fg:x="746" fg:w="2"/><text x="35.6390%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (2 samples, 0.09%)</title><rect x="35.3890%" y="405" width="0.0949%" height="15" fill="rgb(234,134,0)" fg:x="746" fg:w="2"/><text x="35.6390%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="35.3890%" y="389" width="0.0949%" height="15" fill="rgb(194,94,0)" fg:x="746" fg:w="2"/><text x="35.6390%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="35.3890%" y="373" width="0.0949%" height="15" fill="rgb(207,107,0)" fg:x="746" fg:w="2"/><text x="35.6390%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="35.3890%" y="357" width="0.0949%" height="15" fill="rgb(214,114,0)" fg:x="746" fg:w="2"/><text x="35.6390%" y="367.50"></text></g><g><title>cfree (2 samples, 0.09%)</title><rect x="35.3890%" y="341" width="0.0949%" height="15" fill="rgb(192,192,56)" fg:x="746" fg:w="2"/><text x="35.6390%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="35.3890%" y="325" width="0.0949%" height="15" fill="rgb(217,217,65)" fg:x="746" fg:w="2"/><text x="35.6390%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="35.4839%" y="309" width="0.0474%" height="15" fill="rgb(83,195,195)" fg:x="748" fg:w="1"/><text x="35.7339%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="35.4839%" y="341" width="0.0949%" height="15" fill="rgb(81,193,193)" fg:x="748" fg:w="2"/><text x="35.7339%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.09%)</title><rect x="35.4839%" y="325" width="0.0949%" height="15" fill="rgb(78,191,191)" fg:x="748" fg:w="2"/><text x="35.7339%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.05%)</title><rect x="35.5313%" y="309" width="0.0474%" height="15" fill="rgb(51,166,166)" fg:x="749" fg:w="1"/><text x="35.7813%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="35.5313%" y="293" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="749" fg:w="1"/><text x="35.7813%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="35.5313%" y="277" width="0.0474%" height="15" fill="rgb(230,130,0)" fg:x="749" fg:w="1"/><text x="35.7813%" y="287.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.05%)</title><rect x="35.6736%" y="149" width="0.0474%" height="15" fill="rgb(223,223,67)" fg:x="752" fg:w="1"/><text x="35.9236%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.05%)</title><rect x="35.6736%" y="133" width="0.0474%" height="15" fill="rgb(233,133,0)" fg:x="752" fg:w="1"/><text x="35.9236%" y="143.50"></text></g><g><title>__rust_dealloc (5 samples, 0.24%)</title><rect x="35.7211%" y="149" width="0.2372%" height="15" fill="rgb(200,200,59)" fg:x="753" fg:w="5"/><text x="35.9711%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.95%)</title><rect x="35.6262%" y="181" width="0.9488%" height="15" fill="rgb(208,108,0)" fg:x="751" fg:w="20"/><text x="35.8762%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.95%)</title><rect x="35.6262%" y="165" width="0.9488%" height="15" fill="rgb(206,106,0)" fg:x="751" fg:w="20"/><text x="35.8762%" y="175.50"></text></g><g><title>cfree (13 samples, 0.62%)</title><rect x="35.9583%" y="149" width="0.6167%" height="15" fill="rgb(213,213,64)" fg:x="758" fg:w="13"/><text x="36.2083%" y="159.50"></text></g><g><title>[libc.so.6] (6 samples, 0.28%)</title><rect x="36.2903%" y="133" width="0.2846%" height="15" fill="rgb(226,226,68)" fg:x="765" fg:w="6"/><text x="36.5403%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.14%)</title><rect x="35.5787%" y="277" width="1.1385%" height="15" fill="rgb(200,100,0)" fg:x="750" fg:w="24"/><text x="35.8287%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (24 samples, 1.14%)</title><rect x="35.5787%" y="261" width="1.1385%" height="15" fill="rgb(234,134,0)" fg:x="750" fg:w="24"/><text x="35.8287%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (23 samples, 1.09%)</title><rect x="35.6262%" y="245" width="1.0911%" height="15" fill="rgb(232,132,0)" fg:x="751" fg:w="23"/><text x="35.8762%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (23 samples, 1.09%)</title><rect x="35.6262%" y="229" width="1.0911%" height="15" fill="rgb(213,113,0)" fg:x="751" fg:w="23"/><text x="35.8762%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (23 samples, 1.09%)</title><rect x="35.6262%" y="213" width="1.0911%" height="15" fill="rgb(209,109,0)" fg:x="751" fg:w="23"/><text x="35.8762%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.09%)</title><rect x="35.6262%" y="197" width="1.0911%" height="15" fill="rgb(219,119,0)" fg:x="751" fg:w="23"/><text x="35.8762%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.14%)</title><rect x="36.5750%" y="181" width="0.1423%" height="15" fill="rgb(202,102,0)" fg:x="771" fg:w="3"/><text x="36.8250%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.05%)</title><rect x="36.6698%" y="165" width="0.0474%" height="15" fill="rgb(191,91,0)" fg:x="773" fg:w="1"/><text x="36.9198%" y="175.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.05%)</title><rect x="36.7173%" y="213" width="0.0474%" height="15" fill="rgb(180,180,51)" fg:x="774" fg:w="1"/><text x="36.9673%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.05%)</title><rect x="36.7173%" y="197" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="774" fg:w="1"/><text x="36.9673%" y="207.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (31 samples, 1.47%)</title><rect x="35.5787%" y="341" width="1.4706%" height="15" fill="rgb(66,179,179)" fg:x="750" fg:w="31"/><text x="35.8287%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (31 samples, 1.47%)</title><rect x="35.5787%" y="325" width="1.4706%" height="15" fill="rgb(219,119,0)" fg:x="750" fg:w="31"/><text x="35.8287%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (31 samples, 1.47%)</title><rect x="35.5787%" y="309" width="1.4706%" height="15" fill="rgb(193,93,0)" fg:x="750" fg:w="31"/><text x="35.8287%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (31 samples, 1.47%)</title><rect x="35.5787%" y="293" width="1.4706%" height="15" fill="rgb(204,104,0)" fg:x="750" fg:w="31"/><text x="35.8287%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (7 samples, 0.33%)</title><rect x="36.7173%" y="277" width="0.3321%" height="15" fill="rgb(217,117,0)" fg:x="774" fg:w="7"/><text x="36.9673%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.33%)</title><rect x="36.7173%" y="261" width="0.3321%" height="15" fill="rgb(211,111,0)" fg:x="774" fg:w="7"/><text x="36.9673%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.33%)</title><rect x="36.7173%" y="245" width="0.3321%" height="15" fill="rgb(222,122,0)" fg:x="774" fg:w="7"/><text x="36.9673%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.33%)</title><rect x="36.7173%" y="229" width="0.3321%" height="15" fill="rgb(233,133,0)" fg:x="774" fg:w="7"/><text x="36.9673%" y="239.50"></text></g><g><title>cfree (6 samples, 0.28%)</title><rect x="36.7647%" y="213" width="0.2846%" height="15" fill="rgb(185,185,53)" fg:x="775" fg:w="6"/><text x="37.0147%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="36.8596%" y="197" width="0.1898%" height="15" fill="rgb(229,229,69)" fg:x="777" fg:w="4"/><text x="37.1096%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (34 samples, 1.61%)</title><rect x="35.4839%" y="357" width="1.6129%" height="15" fill="rgb(70,183,183)" fg:x="748" fg:w="34"/><text x="35.7339%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1 samples, 0.05%)</title><rect x="37.0493%" y="341" width="0.0474%" height="15" fill="rgb(74,187,187)" fg:x="781" fg:w="1"/><text x="37.2993%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="37.0493%" y="325" width="0.0474%" height="15" fill="rgb(107,217,217)" fg:x="781" fg:w="1"/><text x="37.2993%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.05%)</title><rect x="37.0493%" y="309" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="781" fg:w="1"/><text x="37.2993%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.05%)</title><rect x="37.0968%" y="357" width="0.0474%" height="15" fill="rgb(77,189,189)" fg:x="782" fg:w="1"/><text x="37.3468%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (1 samples, 0.05%)</title><rect x="37.0968%" y="341" width="0.0474%" height="15" fill="rgb(82,195,195)" fg:x="782" fg:w="1"/><text x="37.3468%" y="351.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.05%)</title><rect x="37.0968%" y="325" width="0.0474%" height="15" fill="rgb(106,216,216)" fg:x="782" fg:w="1"/><text x="37.3468%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.05%)</title><rect x="37.0968%" y="309" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="782" fg:w="1"/><text x="37.3468%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.05%)</title><rect x="37.0968%" y="293" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="782" fg:w="1"/><text x="37.3468%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (36 samples, 1.71%)</title><rect x="35.4839%" y="437" width="1.7078%" height="15" fill="rgb(251,151,0)" fg:x="748" fg:w="36"/><text x="35.7339%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (36 samples, 1.71%)</title><rect x="35.4839%" y="421" width="1.7078%" height="15" fill="rgb(236,136,0)" fg:x="748" fg:w="36"/><text x="35.7339%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (36 samples, 1.71%)</title><rect x="35.4839%" y="405" width="1.7078%" height="15" fill="rgb(221,121,0)" fg:x="748" fg:w="36"/><text x="35.7339%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 1.71%)</title><rect x="35.4839%" y="389" width="1.7078%" height="15" fill="rgb(94,205,205)" fg:x="748" fg:w="36"/><text x="35.7339%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (36 samples, 1.71%)</title><rect x="35.4839%" y="373" width="1.7078%" height="15" fill="rgb(80,192,192)" fg:x="748" fg:w="36"/><text x="35.7339%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1 samples, 0.05%)</title><rect x="37.1442%" y="357" width="0.0474%" height="15" fill="rgb(102,212,212)" fg:x="783" fg:w="1"/><text x="37.3942%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (1 samples, 0.05%)</title><rect x="37.1917%" y="325" width="0.0474%" height="15" fill="rgb(102,213,213)" fg:x="784" fg:w="1"/><text x="37.4417%" y="335.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (2 samples, 0.09%)</title><rect x="37.1917%" y="437" width="0.0949%" height="15" fill="rgb(223,123,0)" fg:x="784" fg:w="2"/><text x="37.4417%" y="447.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (2 samples, 0.09%)</title><rect x="37.1917%" y="421" width="0.0949%" height="15" fill="rgb(225,125,0)" fg:x="784" fg:w="2"/><text x="37.4417%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.09%)</title><rect x="37.1917%" y="405" width="0.0949%" height="15" fill="rgb(75,188,188)" fg:x="784" fg:w="2"/><text x="37.4417%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (2 samples, 0.09%)</title><rect x="37.1917%" y="389" width="0.0949%" height="15" fill="rgb(61,175,175)" fg:x="784" fg:w="2"/><text x="37.4417%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (2 samples, 0.09%)</title><rect x="37.1917%" y="373" width="0.0949%" height="15" fill="rgb(108,218,218)" fg:x="784" fg:w="2"/><text x="37.4417%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (2 samples, 0.09%)</title><rect x="37.1917%" y="357" width="0.0949%" height="15" fill="rgb(57,171,171)" fg:x="784" fg:w="2"/><text x="37.4417%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (2 samples, 0.09%)</title><rect x="37.1917%" y="341" width="0.0949%" height="15" fill="rgb(107,217,217)" fg:x="784" fg:w="2"/><text x="37.4417%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.05%)</title><rect x="37.2391%" y="325" width="0.0474%" height="15" fill="rgb(94,206,206)" fg:x="785" fg:w="1"/><text x="37.4891%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.05%)</title><rect x="37.2391%" y="309" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="785" fg:w="1"/><text x="37.4891%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="37.4288%" y="325" width="0.0474%" height="15" fill="rgb(212,112,0)" fg:x="789" fg:w="1"/><text x="37.6788%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.05%)</title><rect x="37.6186%" y="197" width="0.0474%" height="15" fill="rgb(232,132,0)" fg:x="793" fg:w="1"/><text x="37.8686%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.19%)</title><rect x="37.5237%" y="261" width="0.1898%" height="15" fill="rgb(220,120,0)" fg:x="791" fg:w="4"/><text x="37.7737%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.19%)</title><rect x="37.5237%" y="245" width="0.1898%" height="15" fill="rgb(195,95,0)" fg:x="791" fg:w="4"/><text x="37.7737%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.19%)</title><rect x="37.5237%" y="229" width="0.1898%" height="15" fill="rgb(197,97,0)" fg:x="791" fg:w="4"/><text x="37.7737%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.14%)</title><rect x="37.5712%" y="213" width="0.1423%" height="15" fill="rgb(190,90,0)" fg:x="792" fg:w="3"/><text x="37.8212%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="37.6660%" y="197" width="0.0474%" height="15" fill="rgb(192,92,0)" fg:x="794" fg:w="1"/><text x="37.9160%" y="207.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.05%)</title><rect x="37.7135%" y="261" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="795" fg:w="1"/><text x="37.9635%" y="271.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.05%)</title><rect x="37.7135%" y="245" width="0.0474%" height="15" fill="rgb(239,139,0)" fg:x="795" fg:w="1"/><text x="37.9635%" y="255.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.05%)</title><rect x="37.7135%" y="229" width="0.0474%" height="15" fill="rgb(193,93,0)" fg:x="795" fg:w="1"/><text x="37.9635%" y="239.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.05%)</title><rect x="37.7135%" y="213" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="795" fg:w="1"/><text x="37.9635%" y="223.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (10 samples, 0.47%)</title><rect x="37.4763%" y="309" width="0.4744%" height="15" fill="rgb(51,165,165)" fg:x="790" fg:w="10"/><text x="37.7263%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.47%)</title><rect x="37.4763%" y="293" width="0.4744%" height="15" fill="rgb(51,166,166)" fg:x="790" fg:w="10"/><text x="37.7263%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.47%)</title><rect x="37.4763%" y="277" width="0.4744%" height="15" fill="rgb(227,127,0)" fg:x="790" fg:w="10"/><text x="37.7263%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.19%)</title><rect x="37.7609%" y="261" width="0.1898%" height="15" fill="rgb(247,147,0)" fg:x="796" fg:w="4"/><text x="38.0109%" y="271.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (4 samples, 0.19%)</title><rect x="37.7609%" y="245" width="0.1898%" height="15" fill="rgb(102,212,212)" fg:x="796" fg:w="4"/><text x="38.0109%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.14%)</title><rect x="37.8083%" y="229" width="0.1423%" height="15" fill="rgb(193,93,0)" fg:x="797" fg:w="3"/><text x="38.0583%" y="239.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.14%)</title><rect x="37.8083%" y="213" width="0.1423%" height="15" fill="rgb(249,149,0)" fg:x="797" fg:w="3"/><text x="38.0583%" y="223.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.14%)</title><rect x="37.8083%" y="197" width="0.1423%" height="15" fill="rgb(251,151,0)" fg:x="797" fg:w="3"/><text x="38.0583%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="37.8558%" y="181" width="0.0949%" height="15" fill="rgb(234,134,0)" fg:x="798" fg:w="2"/><text x="38.1058%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="37.8558%" y="165" width="0.0949%" height="15" fill="rgb(193,93,0)" fg:x="798" fg:w="2"/><text x="38.1058%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="37.8558%" y="149" width="0.0949%" height="15" fill="rgb(217,117,0)" fg:x="798" fg:w="2"/><text x="38.1058%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.09%)</title><rect x="37.8558%" y="133" width="0.0949%" height="15" fill="rgb(246,146,0)" fg:x="798" fg:w="2"/><text x="38.1058%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="37.9032%" y="117" width="0.0474%" height="15" fill="rgb(219,119,0)" fg:x="799" fg:w="1"/><text x="38.1532%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (11 samples, 0.52%)</title><rect x="37.4763%" y="325" width="0.5218%" height="15" fill="rgb(59,173,173)" fg:x="790" fg:w="11"/><text x="37.7263%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket (1 samples, 0.05%)</title><rect x="37.9507%" y="309" width="0.0474%" height="15" fill="rgb(53,168,168)" fg:x="800" fg:w="1"/><text x="38.2007%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.05%)</title><rect x="37.9507%" y="293" width="0.0474%" height="15" fill="rgb(78,190,190)" fg:x="800" fg:w="1"/><text x="38.2007%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="37.9507%" y="277" width="0.0474%" height="15" fill="rgb(237,137,0)" fg:x="800" fg:w="1"/><text x="38.2007%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket_ptr (2 samples, 0.09%)</title><rect x="37.9981%" y="325" width="0.0949%" height="15" fill="rgb(78,191,191)" fg:x="801" fg:w="2"/><text x="38.2481%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.05%)</title><rect x="38.1404%" y="293" width="0.0474%" height="15" fill="rgb(67,181,181)" fg:x="804" fg:w="1"/><text x="38.3904%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.05%)</title><rect x="38.1404%" y="277" width="0.0474%" height="15" fill="rgb(97,208,208)" fg:x="804" fg:w="1"/><text x="38.3904%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.05%)</title><rect x="38.1404%" y="261" width="0.0474%" height="15" fill="rgb(253,153,0)" fg:x="804" fg:w="1"/><text x="38.3904%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (3 samples, 0.14%)</title><rect x="38.1879%" y="293" width="0.1423%" height="15" fill="rgb(56,171,171)" fg:x="805" fg:w="3"/><text x="38.4379%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (2 samples, 0.09%)</title><rect x="38.2353%" y="277" width="0.0949%" height="15" fill="rgb(101,212,212)" fg:x="806" fg:w="2"/><text x="38.4853%" y="287.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.09%)</title><rect x="38.2353%" y="261" width="0.0949%" height="15" fill="rgb(97,208,208)" fg:x="806" fg:w="2"/><text x="38.4853%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (6 samples, 0.28%)</title><rect x="38.0930%" y="325" width="0.2846%" height="15" fill="rgb(73,186,186)" fg:x="803" fg:w="6"/><text x="38.3430%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (6 samples, 0.28%)</title><rect x="38.0930%" y="309" width="0.2846%" height="15" fill="rgb(94,206,206)" fg:x="803" fg:w="6"/><text x="38.3430%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.05%)</title><rect x="38.3302%" y="293" width="0.0474%" height="15" fill="rgb(108,218,218)" fg:x="808" fg:w="1"/><text x="38.5802%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.05%)</title><rect x="38.3302%" y="277" width="0.0474%" height="15" fill="rgb(190,90,0)" fg:x="808" fg:w="1"/><text x="38.5802%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="38.3302%" y="261" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="808" fg:w="1"/><text x="38.5802%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (21 samples, 1.00%)</title><rect x="37.4288%" y="405" width="0.9962%" height="15" fill="rgb(78,191,191)" fg:x="789" fg:w="21"/><text x="37.6788%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (21 samples, 1.00%)</title><rect x="37.4288%" y="389" width="0.9962%" height="15" fill="rgb(73,186,186)" fg:x="789" fg:w="21"/><text x="37.6788%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 1.00%)</title><rect x="37.4288%" y="373" width="0.9962%" height="15" fill="rgb(57,171,171)" fg:x="789" fg:w="21"/><text x="37.6788%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (21 samples, 1.00%)</title><rect x="37.4288%" y="357" width="0.9962%" height="15" fill="rgb(71,184,184)" fg:x="789" fg:w="21"/><text x="37.6788%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (21 samples, 1.00%)</title><rect x="37.4288%" y="341" width="0.9962%" height="15" fill="rgb(86,198,198)" fg:x="789" fg:w="21"/><text x="37.6788%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.05%)</title><rect x="38.3776%" y="325" width="0.0474%" height="15" fill="rgb(77,190,190)" fg:x="809" fg:w="1"/><text x="38.6276%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.05%)</title><rect x="38.3776%" y="309" width="0.0474%" height="15" fill="rgb(56,170,170)" fg:x="809" fg:w="1"/><text x="38.6276%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.14%)</title><rect x="38.6148%" y="309" width="0.1423%" height="15" fill="rgb(216,116,0)" fg:x="814" fg:w="3"/><text x="38.8648%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.43%)</title><rect x="38.4725%" y="373" width="0.4269%" height="15" fill="rgb(203,103,0)" fg:x="811" fg:w="9"/><text x="38.7225%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.43%)</title><rect x="38.4725%" y="357" width="0.4269%" height="15" fill="rgb(248,148,0)" fg:x="811" fg:w="9"/><text x="38.7225%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.43%)</title><rect x="38.4725%" y="341" width="0.4269%" height="15" fill="rgb(205,105,0)" fg:x="811" fg:w="9"/><text x="38.7225%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.38%)</title><rect x="38.5199%" y="325" width="0.3795%" height="15" fill="rgb(191,91,0)" fg:x="812" fg:w="8"/><text x="38.7699%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.14%)</title><rect x="38.7571%" y="309" width="0.1423%" height="15" fill="rgb(204,104,0)" fg:x="817" fg:w="3"/><text x="39.0071%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.05%)</title><rect x="38.8994%" y="341" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="820" fg:w="1"/><text x="39.1494%" y="351.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.05%)</title><rect x="38.8994%" y="325" width="0.0474%" height="15" fill="rgb(220,120,0)" fg:x="820" fg:w="1"/><text x="39.1494%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="38.8994%" y="309" width="0.0474%" height="15" fill="rgb(205,105,0)" fg:x="820" fg:w="1"/><text x="39.1494%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="38.8994%" y="293" width="0.0474%" height="15" fill="rgb(190,90,0)" fg:x="820" fg:w="1"/><text x="39.1494%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="38.8994%" y="277" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="820" fg:w="1"/><text x="39.1494%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="38.8994%" y="261" width="0.0474%" height="15" fill="rgb(191,91,0)" fg:x="820" fg:w="1"/><text x="39.1494%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.05%)</title><rect x="38.8994%" y="245" width="0.0474%" height="15" fill="rgb(237,137,0)" fg:x="820" fg:w="1"/><text x="39.1494%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.57%)</title><rect x="38.4250%" y="405" width="0.5693%" height="15" fill="rgb(62,176,176)" fg:x="810" fg:w="12"/><text x="38.6750%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.57%)</title><rect x="38.4250%" y="389" width="0.5693%" height="15" fill="rgb(218,118,0)" fg:x="810" fg:w="12"/><text x="38.6750%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.09%)</title><rect x="38.8994%" y="373" width="0.0949%" height="15" fill="rgb(248,148,0)" fg:x="820" fg:w="2"/><text x="39.1494%" y="383.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="38.8994%" y="357" width="0.0949%" height="15" fill="rgb(75,188,188)" fg:x="820" fg:w="2"/><text x="39.1494%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.05%)</title><rect x="38.9469%" y="341" width="0.0474%" height="15" fill="rgb(199,99,0)" fg:x="821" fg:w="1"/><text x="39.1969%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="38.9469%" y="325" width="0.0474%" height="15" fill="rgb(239,139,0)" fg:x="821" fg:w="1"/><text x="39.1969%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="38.9469%" y="309" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="821" fg:w="1"/><text x="39.1969%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="38.9469%" y="293" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="821" fg:w="1"/><text x="39.1969%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="38.9469%" y="277" width="0.0474%" height="15" fill="rgb(192,92,0)" fg:x="821" fg:w="1"/><text x="39.1969%" y="287.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.05%)</title><rect x="38.9469%" y="261" width="0.0474%" height="15" fill="rgb(228,128,0)" fg:x="821" fg:w="1"/><text x="39.1969%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="38.9943%" y="373" width="0.0474%" height="15" fill="rgb(104,215,215)" fg:x="822" fg:w="1"/><text x="39.2443%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.05%)</title><rect x="38.9943%" y="357" width="0.0474%" height="15" fill="rgb(61,175,175)" fg:x="822" fg:w="1"/><text x="39.2443%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.14%)</title><rect x="39.0417%" y="373" width="0.1423%" height="15" fill="rgb(52,167,167)" fg:x="823" fg:w="3"/><text x="39.2917%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::_{{closure}} (3 samples, 0.14%)</title><rect x="39.0417%" y="357" width="0.1423%" height="15" fill="rgb(71,184,184)" fg:x="823" fg:w="3"/><text x="39.2917%" y="367.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (3 samples, 0.14%)</title><rect x="39.0417%" y="341" width="0.1423%" height="15" fill="rgb(80,192,192)" fg:x="823" fg:w="3"/><text x="39.2917%" y="351.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.05%)</title><rect x="39.1841%" y="373" width="0.0474%" height="15" fill="rgb(71,184,184)" fg:x="826" fg:w="1"/><text x="39.4341%" y="383.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::generate_pathmap (194 samples, 9.20%)</title><rect x="30.0759%" y="453" width="9.2030%" height="15" fill="rgb(109,219,219)" fg:x="634" fg:w="194"/><text x="30.3259%" y="463.50">alc::keyboard..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (42 samples, 1.99%)</title><rect x="37.2865%" y="437" width="1.9924%" height="15" fill="rgb(230,130,0)" fg:x="786" fg:w="42"/><text x="37.5365%" y="447.50">s..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (41 samples, 1.94%)</title><rect x="37.3340%" y="421" width="1.9450%" height="15" fill="rgb(98,209,209)" fg:x="787" fg:w="41"/><text x="37.5840%" y="431.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.28%)</title><rect x="38.9943%" y="405" width="0.2846%" height="15" fill="rgb(100,211,211)" fg:x="822" fg:w="6"/><text x="39.2443%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.28%)</title><rect x="38.9943%" y="389" width="0.2846%" height="15" fill="rgb(67,180,180)" fg:x="822" fg:w="6"/><text x="39.2443%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.05%)</title><rect x="39.2315%" y="373" width="0.0474%" height="15" fill="rgb(106,216,216)" fg:x="827" fg:w="1"/><text x="39.4815%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.05%)</title><rect x="39.2315%" y="357" width="0.0474%" height="15" fill="rgb(215,115,0)" fg:x="827" fg:w="1"/><text x="39.4815%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="39.2789%" y="341" width="0.0474%" height="15" fill="rgb(76,189,189)" fg:x="828" fg:w="1"/><text x="39.5289%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="39.2789%" y="325" width="0.0474%" height="15" fill="rgb(71,184,184)" fg:x="828" fg:w="1"/><text x="39.5289%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="39.2789%" y="309" width="0.0474%" height="15" fill="rgb(93,205,205)" fg:x="828" fg:w="1"/><text x="39.5289%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.05%)</title><rect x="39.2789%" y="293" width="0.0474%" height="15" fill="rgb(77,189,189)" fg:x="828" fg:w="1"/><text x="39.5289%" y="303.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.05%)</title><rect x="39.4213%" y="149" width="0.0474%" height="15" fill="rgb(180,180,51)" fg:x="831" fg:w="1"/><text x="39.6713%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.05%)</title><rect x="39.4213%" y="133" width="0.0474%" height="15" fill="rgb(212,112,0)" fg:x="831" fg:w="1"/><text x="39.6713%" y="143.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="39.4687%" y="149" width="0.0474%" height="15" fill="rgb(209,209,62)" fg:x="832" fg:w="1"/><text x="39.7187%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.38%)</title><rect x="39.4213%" y="181" width="0.3795%" height="15" fill="rgb(197,97,0)" fg:x="831" fg:w="8"/><text x="39.6713%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.38%)</title><rect x="39.4213%" y="165" width="0.3795%" height="15" fill="rgb(204,104,0)" fg:x="831" fg:w="8"/><text x="39.6713%" y="175.50"></text></g><g><title>cfree (6 samples, 0.28%)</title><rect x="39.5161%" y="149" width="0.2846%" height="15" fill="rgb(226,226,68)" fg:x="833" fg:w="6"/><text x="39.7661%" y="159.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="39.6584%" y="133" width="0.1423%" height="15" fill="rgb(217,217,65)" fg:x="836" fg:w="3"/><text x="39.9084%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.52%)</title><rect x="39.3264%" y="277" width="0.5218%" height="15" fill="rgb(241,141,0)" fg:x="829" fg:w="11"/><text x="39.5764%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (11 samples, 0.52%)</title><rect x="39.3264%" y="261" width="0.5218%" height="15" fill="rgb(196,96,0)" fg:x="829" fg:w="11"/><text x="39.5764%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (11 samples, 0.52%)</title><rect x="39.3264%" y="245" width="0.5218%" height="15" fill="rgb(218,118,0)" fg:x="829" fg:w="11"/><text x="39.5764%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (11 samples, 0.52%)</title><rect x="39.3264%" y="229" width="0.5218%" height="15" fill="rgb(230,130,0)" fg:x="829" fg:w="11"/><text x="39.5764%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (11 samples, 0.52%)</title><rect x="39.3264%" y="213" width="0.5218%" height="15" fill="rgb(210,110,0)" fg:x="829" fg:w="11"/><text x="39.5764%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.52%)</title><rect x="39.3264%" y="197" width="0.5218%" height="15" fill="rgb(222,122,0)" fg:x="829" fg:w="11"/><text x="39.5764%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="39.8008%" y="181" width="0.0474%" height="15" fill="rgb(226,126,0)" fg:x="839" fg:w="1"/><text x="40.0508%" y="191.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="39.8482%" y="213" width="0.0474%" height="15" fill="rgb(181,181,52)" fg:x="840" fg:w="1"/><text x="40.0982%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (21 samples, 1.00%)</title><rect x="39.2789%" y="453" width="0.9962%" height="15" fill="rgb(242,142,0)" fg:x="828" fg:w="21"/><text x="39.5289%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (21 samples, 1.00%)</title><rect x="39.2789%" y="437" width="0.9962%" height="15" fill="rgb(235,135,0)" fg:x="828" fg:w="21"/><text x="39.5289%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (21 samples, 1.00%)</title><rect x="39.2789%" y="421" width="0.9962%" height="15" fill="rgb(214,114,0)" fg:x="828" fg:w="21"/><text x="39.5289%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (21 samples, 1.00%)</title><rect x="39.2789%" y="405" width="0.9962%" height="15" fill="rgb(246,146,0)" fg:x="828" fg:w="21"/><text x="39.5289%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.00%)</title><rect x="39.2789%" y="389" width="0.9962%" height="15" fill="rgb(67,180,180)" fg:x="828" fg:w="21"/><text x="39.5289%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (21 samples, 1.00%)</title><rect x="39.2789%" y="373" width="0.9962%" height="15" fill="rgb(88,200,200)" fg:x="828" fg:w="21"/><text x="39.5289%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (21 samples, 1.00%)</title><rect x="39.2789%" y="357" width="0.9962%" height="15" fill="rgb(87,199,199)" fg:x="828" fg:w="21"/><text x="39.5289%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (20 samples, 0.95%)</title><rect x="39.3264%" y="341" width="0.9488%" height="15" fill="rgb(55,169,169)" fg:x="829" fg:w="20"/><text x="39.5764%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (20 samples, 0.95%)</title><rect x="39.3264%" y="325" width="0.9488%" height="15" fill="rgb(252,152,0)" fg:x="829" fg:w="20"/><text x="39.5764%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (20 samples, 0.95%)</title><rect x="39.3264%" y="309" width="0.9488%" height="15" fill="rgb(245,145,0)" fg:x="829" fg:w="20"/><text x="39.5764%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (20 samples, 0.95%)</title><rect x="39.3264%" y="293" width="0.9488%" height="15" fill="rgb(192,92,0)" fg:x="829" fg:w="20"/><text x="39.5764%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (9 samples, 0.43%)</title><rect x="39.8482%" y="277" width="0.4269%" height="15" fill="rgb(191,91,0)" fg:x="840" fg:w="9"/><text x="40.0982%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.43%)</title><rect x="39.8482%" y="261" width="0.4269%" height="15" fill="rgb(204,104,0)" fg:x="840" fg:w="9"/><text x="40.0982%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.43%)</title><rect x="39.8482%" y="245" width="0.4269%" height="15" fill="rgb(219,119,0)" fg:x="840" fg:w="9"/><text x="40.0982%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.43%)</title><rect x="39.8482%" y="229" width="0.4269%" height="15" fill="rgb(241,141,0)" fg:x="840" fg:w="9"/><text x="40.0982%" y="239.50"></text></g><g><title>cfree (8 samples, 0.38%)</title><rect x="39.8956%" y="213" width="0.3795%" height="15" fill="rgb(177,177,50)" fg:x="841" fg:w="8"/><text x="40.1456%" y="223.50"></text></g><g><title>[libc.so.6] (6 samples, 0.28%)</title><rect x="39.9905%" y="197" width="0.2846%" height="15" fill="rgb(203,203,60)" fg:x="843" fg:w="6"/><text x="40.2405%" y="207.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::generate_new_layouts (429 samples, 20.35%)</title><rect x="19.9715%" y="485" width="20.3510%" height="15" fill="rgb(88,199,199)" fg:x="421" fg:w="429"/><text x="20.2215%" y="495.50">alc::optimizer::LayoutOptimizer&lt;..</text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::swap (278 samples, 13.19%)</title><rect x="27.1347%" y="469" width="13.1879%" height="15" fill="rgb(64,178,178)" fg:x="572" fg:w="278"/><text x="27.3847%" y="479.50">alc::keyboard::layou..</text></g><g><title>std::io::stdio::_print (1 samples, 0.05%)</title><rect x="40.2751%" y="453" width="0.0474%" height="15" fill="rgb(221,121,0)" fg:x="849" fg:w="1"/><text x="40.5251%" y="463.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.05%)</title><rect x="40.2751%" y="437" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="849" fg:w="1"/><text x="40.5251%" y="447.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.05%)</title><rect x="40.2751%" y="421" width="0.0474%" height="15" fill="rgb(247,147,0)" fg:x="849" fg:w="1"/><text x="40.5251%" y="431.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.05%)</title><rect x="40.2751%" y="405" width="0.0474%" height="15" fill="rgb(74,187,187)" fg:x="849" fg:w="1"/><text x="40.5251%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.05%)</title><rect x="40.2751%" y="389" width="0.0474%" height="15" fill="rgb(190,90,0)" fg:x="849" fg:w="1"/><text x="40.5251%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.05%)</title><rect x="40.2751%" y="373" width="0.0474%" height="15" fill="rgb(213,113,0)" fg:x="849" fg:w="1"/><text x="40.5251%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.05%)</title><rect x="40.2751%" y="357" width="0.0474%" height="15" fill="rgb(237,137,0)" fg:x="849" fg:w="1"/><text x="40.5251%" y="367.50"></text></g><g><title>&lt;alc::keyboard::LayoutPosition as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="40.2751%" y="341" width="0.0474%" height="15" fill="rgb(98,209,209)" fg:x="849" fg:w="1"/><text x="40.5251%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.05%)</title><rect x="40.2751%" y="325" width="0.0474%" height="15" fill="rgb(252,152,0)" fg:x="849" fg:w="1"/><text x="40.5251%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.57%)</title><rect x="40.3226%" y="293" width="0.5693%" height="15" fill="rgb(245,145,0)" fg:x="850" fg:w="12"/><text x="40.5726%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.57%)</title><rect x="40.3226%" y="277" width="0.5693%" height="15" fill="rgb(245,145,0)" fg:x="850" fg:w="12"/><text x="40.5726%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.57%)</title><rect x="40.3226%" y="261" width="0.5693%" height="15" fill="rgb(207,107,0)" fg:x="850" fg:w="12"/><text x="40.5726%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.57%)</title><rect x="40.3226%" y="245" width="0.5693%" height="15" fill="rgb(192,92,0)" fg:x="850" fg:w="12"/><text x="40.5726%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.57%)</title><rect x="40.3226%" y="229" width="0.5693%" height="15" fill="rgb(219,119,0)" fg:x="850" fg:w="12"/><text x="40.5726%" y="239.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.57%)</title><rect x="40.3226%" y="213" width="0.5693%" height="15" fill="rgb(196,96,0)" fg:x="850" fg:w="12"/><text x="40.5726%" y="223.50"></text></g><g><title>malloc (12 samples, 0.57%)</title><rect x="40.3226%" y="197" width="0.5693%" height="15" fill="rgb(201,201,59)" fg:x="850" fg:w="12"/><text x="40.5726%" y="207.50"></text></g><g><title>[libc.so.6] (12 samples, 0.57%)</title><rect x="40.3226%" y="181" width="0.5693%" height="15" fill="rgb(226,226,68)" fg:x="850" fg:w="12"/><text x="40.5726%" y="191.50"></text></g><g><title>[libc.so.6] (9 samples, 0.43%)</title><rect x="40.4649%" y="165" width="0.4269%" height="15" fill="rgb(187,187,54)" fg:x="853" fg:w="9"/><text x="40.7149%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.76%)</title><rect x="40.3226%" y="453" width="0.7590%" height="15" fill="rgb(226,126,0)" fg:x="850" fg:w="16"/><text x="40.5726%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.76%)</title><rect x="40.3226%" y="437" width="0.7590%" height="15" fill="rgb(241,141,0)" fg:x="850" fg:w="16"/><text x="40.5726%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.76%)</title><rect x="40.3226%" y="421" width="0.7590%" height="15" fill="rgb(190,90,0)" fg:x="850" fg:w="16"/><text x="40.5726%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.76%)</title><rect x="40.3226%" y="405" width="0.7590%" height="15" fill="rgb(93,204,204)" fg:x="850" fg:w="16"/><text x="40.5726%" y="415.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,K&gt; as core::clone::Clone&gt;::clone (16 samples, 0.76%)</title><rect x="40.3226%" y="389" width="0.7590%" height="15" fill="rgb(92,204,204)" fg:x="850" fg:w="16"/><text x="40.5726%" y="399.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.76%)</title><rect x="40.3226%" y="373" width="0.7590%" height="15" fill="rgb(81,194,194)" fg:x="850" fg:w="16"/><text x="40.5726%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.76%)</title><rect x="40.3226%" y="357" width="0.7590%" height="15" fill="rgb(219,119,0)" fg:x="850" fg:w="16"/><text x="40.5726%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.76%)</title><rect x="40.3226%" y="341" width="0.7590%" height="15" fill="rgb(249,149,0)" fg:x="850" fg:w="16"/><text x="40.5726%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.76%)</title><rect x="40.3226%" y="325" width="0.7590%" height="15" fill="rgb(193,93,0)" fg:x="850" fg:w="16"/><text x="40.5726%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.76%)</title><rect x="40.3226%" y="309" width="0.7590%" height="15" fill="rgb(106,216,216)" fg:x="850" fg:w="16"/><text x="40.5726%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.19%)</title><rect x="40.8918%" y="293" width="0.1898%" height="15" fill="rgb(206,106,0)" fg:x="862" fg:w="4"/><text x="41.1418%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.19%)</title><rect x="40.8918%" y="277" width="0.1898%" height="15" fill="rgb(221,121,0)" fg:x="862" fg:w="4"/><text x="41.1418%" y="287.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="40.8918%" y="261" width="0.1898%" height="15" fill="rgb(184,184,53)" fg:x="862" fg:w="4"/><text x="41.1418%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="41.0816%" y="373" width="0.0474%" height="15" fill="rgb(100,211,211)" fg:x="866" fg:w="1"/><text x="41.3316%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="41.0816%" y="357" width="0.0474%" height="15" fill="rgb(64,178,178)" fg:x="866" fg:w="1"/><text x="41.3316%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.05%)</title><rect x="41.0816%" y="341" width="0.0474%" height="15" fill="rgb(70,184,184)" fg:x="866" fg:w="1"/><text x="41.3316%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="41.0816%" y="325" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="866" fg:w="1"/><text x="41.3316%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="41.0816%" y="309" width="0.0474%" height="15" fill="rgb(246,146,0)" fg:x="866" fg:w="1"/><text x="41.3316%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="41.2713%" y="117" width="0.0474%" height="15" fill="rgb(215,215,64)" fg:x="870" fg:w="1"/><text x="41.5213%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="41.2713%" y="101" width="0.0474%" height="15" fill="rgb(198,98,0)" fg:x="870" fg:w="1"/><text x="41.5213%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 1.28%)</title><rect x="41.2713%" y="213" width="1.2808%" height="15" fill="rgb(238,138,0)" fg:x="870" fg:w="27"/><text x="41.5213%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 1.28%)</title><rect x="41.2713%" y="197" width="1.2808%" height="15" fill="rgb(209,109,0)" fg:x="870" fg:w="27"/><text x="41.5213%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 1.28%)</title><rect x="41.2713%" y="181" width="1.2808%" height="15" fill="rgb(240,140,0)" fg:x="870" fg:w="27"/><text x="41.5213%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 1.28%)</title><rect x="41.2713%" y="165" width="1.2808%" height="15" fill="rgb(212,112,0)" fg:x="870" fg:w="27"/><text x="41.5213%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 1.28%)</title><rect x="41.2713%" y="149" width="1.2808%" height="15" fill="rgb(200,100,0)" fg:x="870" fg:w="27"/><text x="41.5213%" y="159.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 1.28%)</title><rect x="41.2713%" y="133" width="1.2808%" height="15" fill="rgb(216,116,0)" fg:x="870" fg:w="27"/><text x="41.5213%" y="143.50"></text></g><g><title>malloc (26 samples, 1.23%)</title><rect x="41.3188%" y="117" width="1.2334%" height="15" fill="rgb(189,189,55)" fg:x="871" fg:w="26"/><text x="41.5688%" y="127.50"></text></g><g><title>[libc.so.6] (19 samples, 0.90%)</title><rect x="41.6509%" y="101" width="0.9013%" height="15" fill="rgb(194,194,57)" fg:x="878" fg:w="19"/><text x="41.9009%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="42.5047%" y="85" width="0.0474%" height="15" fill="rgb(197,197,58)" fg:x="896" fg:w="1"/><text x="42.7547%" y="95.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (35 samples, 1.66%)</title><rect x="41.2713%" y="293" width="1.6603%" height="15" fill="rgb(56,170,170)" fg:x="870" fg:w="35"/><text x="41.5213%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 1.66%)</title><rect x="41.2713%" y="277" width="1.6603%" height="15" fill="rgb(211,111,0)" fg:x="870" fg:w="35"/><text x="41.5213%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 1.66%)</title><rect x="41.2713%" y="261" width="1.6603%" height="15" fill="rgb(201,101,0)" fg:x="870" fg:w="35"/><text x="41.5213%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 1.66%)</title><rect x="41.2713%" y="245" width="1.6603%" height="15" fill="rgb(212,112,0)" fg:x="870" fg:w="35"/><text x="41.5213%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 1.66%)</title><rect x="41.2713%" y="229" width="1.6603%" height="15" fill="rgb(65,179,179)" fg:x="870" fg:w="35"/><text x="41.5213%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.38%)</title><rect x="42.5522%" y="213" width="0.3795%" height="15" fill="rgb(208,108,0)" fg:x="897" fg:w="8"/><text x="42.8022%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.38%)</title><rect x="42.5522%" y="197" width="0.3795%" height="15" fill="rgb(222,122,0)" fg:x="897" fg:w="8"/><text x="42.8022%" y="207.50"></text></g><g><title>[libc.so.6] (8 samples, 0.38%)</title><rect x="42.5522%" y="181" width="0.3795%" height="15" fill="rgb(211,211,63)" fg:x="897" fg:w="8"/><text x="42.8022%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="42.9317%" y="293" width="0.0474%" height="15" fill="rgb(205,105,0)" fg:x="905" fg:w="1"/><text x="43.1817%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="42.9317%" y="277" width="0.0474%" height="15" fill="rgb(197,97,0)" fg:x="905" fg:w="1"/><text x="43.1817%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="42.9317%" y="261" width="0.0474%" height="15" fill="rgb(227,127,0)" fg:x="905" fg:w="1"/><text x="43.1817%" y="271.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="42.9317%" y="245" width="0.0474%" height="15" fill="rgb(237,137,0)" fg:x="905" fg:w="1"/><text x="43.1817%" y="255.50"></text></g><g><title>core::clone::Clone::clone (49 samples, 2.32%)</title><rect x="41.1290%" y="373" width="2.3245%" height="15" fill="rgb(230,130,0)" fg:x="867" fg:w="49"/><text x="41.3790%" y="383.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (49 samples, 2.32%)</title><rect x="41.1290%" y="357" width="2.3245%" height="15" fill="rgb(241,141,0)" fg:x="867" fg:w="49"/><text x="41.3790%" y="367.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (49 samples, 2.32%)</title><rect x="41.1290%" y="341" width="2.3245%" height="15" fill="rgb(222,122,0)" fg:x="867" fg:w="49"/><text x="41.3790%" y="351.50">a..</text></g><g><title>alloc::slice::hack::to_vec (49 samples, 2.32%)</title><rect x="41.1290%" y="325" width="2.3245%" height="15" fill="rgb(254,154,0)" fg:x="867" fg:w="49"/><text x="41.3790%" y="335.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (49 samples, 2.32%)</title><rect x="41.1290%" y="309" width="2.3245%" height="15" fill="rgb(98,209,209)" fg:x="867" fg:w="49"/><text x="41.3790%" y="319.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.47%)</title><rect x="42.9791%" y="293" width="0.4744%" height="15" fill="rgb(206,106,0)" fg:x="906" fg:w="10"/><text x="43.2291%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.47%)</title><rect x="42.9791%" y="277" width="0.4744%" height="15" fill="rgb(214,114,0)" fg:x="906" fg:w="10"/><text x="43.2291%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.47%)</title><rect x="42.9791%" y="261" width="0.4744%" height="15" fill="rgb(210,110,0)" fg:x="906" fg:w="10"/><text x="43.2291%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.47%)</title><rect x="42.9791%" y="245" width="0.4744%" height="15" fill="rgb(227,127,0)" fg:x="906" fg:w="10"/><text x="43.2291%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.47%)</title><rect x="42.9791%" y="229" width="0.4744%" height="15" fill="rgb(218,118,0)" fg:x="906" fg:w="10"/><text x="43.2291%" y="239.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.47%)</title><rect x="42.9791%" y="213" width="0.4744%" height="15" fill="rgb(230,130,0)" fg:x="906" fg:w="10"/><text x="43.2291%" y="223.50"></text></g><g><title>malloc (10 samples, 0.47%)</title><rect x="42.9791%" y="197" width="0.4744%" height="15" fill="rgb(229,229,69)" fg:x="906" fg:w="10"/><text x="43.2291%" y="207.50"></text></g><g><title>[libc.so.6] (8 samples, 0.38%)</title><rect x="43.0740%" y="181" width="0.3795%" height="15" fill="rgb(191,191,56)" fg:x="908" fg:w="8"/><text x="43.3240%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.24%)</title><rect x="43.4535%" y="357" width="0.2372%" height="15" fill="rgb(235,135,0)" fg:x="916" fg:w="5"/><text x="43.7035%" y="367.50"></text></g><g><title>core::ptr::write (5 samples, 0.24%)</title><rect x="43.4535%" y="341" width="0.2372%" height="15" fill="rgb(209,109,0)" fg:x="916" fg:w="5"/><text x="43.7035%" y="351.50"></text></g><g><title>&lt;alc::keyboard::layout::Layout&lt;_,_&gt; as core::clone::Clone&gt;::clone (72 samples, 3.42%)</title><rect x="40.3226%" y="469" width="3.4156%" height="15" fill="rgb(79,191,191)" fg:x="850" fg:w="72"/><text x="40.5726%" y="479.50">&lt;al..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (56 samples, 2.66%)</title><rect x="41.0816%" y="453" width="2.6565%" height="15" fill="rgb(199,99,0)" fg:x="866" fg:w="56"/><text x="41.3316%" y="463.50">&lt;s..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (56 samples, 2.66%)</title><rect x="41.0816%" y="437" width="2.6565%" height="15" fill="rgb(80,193,193)" fg:x="866" fg:w="56"/><text x="41.3316%" y="447.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (56 samples, 2.66%)</title><rect x="41.0816%" y="421" width="2.6565%" height="15" fill="rgb(83,195,195)" fg:x="866" fg:w="56"/><text x="41.3316%" y="431.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (56 samples, 2.66%)</title><rect x="41.0816%" y="405" width="2.6565%" height="15" fill="rgb(55,170,170)" fg:x="866" fg:w="56"/><text x="41.3316%" y="415.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (56 samples, 2.66%)</title><rect x="41.0816%" y="389" width="2.6565%" height="15" fill="rgb(95,206,206)" fg:x="866" fg:w="56"/><text x="41.3316%" y="399.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6 samples, 0.28%)</title><rect x="43.4535%" y="373" width="0.2846%" height="15" fill="rgb(89,201,201)" fg:x="916" fg:w="6"/><text x="43.7035%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.05%)</title><rect x="43.6907%" y="357" width="0.0474%" height="15" fill="rgb(75,188,188)" fg:x="921" fg:w="1"/><text x="43.9407%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="43.6907%" y="341" width="0.0474%" height="15" fill="rgb(239,139,0)" fg:x="921" fg:w="1"/><text x="43.9407%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="43.6907%" y="325" width="0.0474%" height="15" fill="rgb(222,122,0)" fg:x="921" fg:w="1"/><text x="43.9407%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="43.8330%" y="309" width="0.0474%" height="15" fill="rgb(210,110,0)" fg:x="924" fg:w="1"/><text x="44.0830%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.05%)</title><rect x="43.8330%" y="293" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="924" fg:w="1"/><text x="44.0830%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.05%)</title><rect x="43.8330%" y="277" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="924" fg:w="1"/><text x="44.0830%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="43.8805%" y="165" width="0.0474%" height="15" fill="rgb(218,218,65)" fg:x="925" fg:w="1"/><text x="44.1305%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="43.8805%" y="149" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="925" fg:w="1"/><text x="44.1305%" y="159.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.05%)</title><rect x="43.9279%" y="165" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="926" fg:w="1"/><text x="44.1779%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 1.04%)</title><rect x="43.8805%" y="261" width="1.0436%" height="15" fill="rgb(200,100,0)" fg:x="925" fg:w="22"/><text x="44.1305%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 1.04%)</title><rect x="43.8805%" y="245" width="1.0436%" height="15" fill="rgb(226,126,0)" fg:x="925" fg:w="22"/><text x="44.1305%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 1.04%)</title><rect x="43.8805%" y="229" width="1.0436%" height="15" fill="rgb(228,128,0)" fg:x="925" fg:w="22"/><text x="44.1305%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 1.04%)</title><rect x="43.8805%" y="213" width="1.0436%" height="15" fill="rgb(254,154,0)" fg:x="925" fg:w="22"/><text x="44.1305%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 1.04%)</title><rect x="43.8805%" y="197" width="1.0436%" height="15" fill="rgb(191,91,0)" fg:x="925" fg:w="22"/><text x="44.1305%" y="207.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 1.04%)</title><rect x="43.8805%" y="181" width="1.0436%" height="15" fill="rgb(211,111,0)" fg:x="925" fg:w="22"/><text x="44.1305%" y="191.50"></text></g><g><title>malloc (20 samples, 0.95%)</title><rect x="43.9753%" y="165" width="0.9488%" height="15" fill="rgb(179,179,51)" fg:x="927" fg:w="20"/><text x="44.2253%" y="175.50"></text></g><g><title>[libc.so.6] (16 samples, 0.76%)</title><rect x="44.1651%" y="149" width="0.7590%" height="15" fill="rgb(181,181,52)" fg:x="931" fg:w="16"/><text x="44.4151%" y="159.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="44.8292%" y="133" width="0.0949%" height="15" fill="rgb(184,184,53)" fg:x="945" fg:w="2"/><text x="45.0792%" y="143.50"></text></g><g><title>core::clone::Clone::clone (26 samples, 1.23%)</title><rect x="43.7856%" y="357" width="1.2334%" height="15" fill="rgb(245,145,0)" fg:x="923" fg:w="26"/><text x="44.0356%" y="367.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (25 samples, 1.19%)</title><rect x="43.8330%" y="341" width="1.1860%" height="15" fill="rgb(64,178,178)" fg:x="924" fg:w="25"/><text x="44.0830%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 1.19%)</title><rect x="43.8330%" y="325" width="1.1860%" height="15" fill="rgb(232,132,0)" fg:x="924" fg:w="25"/><text x="44.0830%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 1.14%)</title><rect x="43.8805%" y="309" width="1.1385%" height="15" fill="rgb(228,128,0)" fg:x="925" fg:w="24"/><text x="44.1305%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 1.14%)</title><rect x="43.8805%" y="293" width="1.1385%" height="15" fill="rgb(197,97,0)" fg:x="925" fg:w="24"/><text x="44.1305%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 1.14%)</title><rect x="43.8805%" y="277" width="1.1385%" height="15" fill="rgb(102,212,212)" fg:x="925" fg:w="24"/><text x="44.1305%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.09%)</title><rect x="44.9241%" y="261" width="0.0949%" height="15" fill="rgb(237,137,0)" fg:x="947" fg:w="2"/><text x="45.1741%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="44.9241%" y="245" width="0.0949%" height="15" fill="rgb(190,90,0)" fg:x="947" fg:w="2"/><text x="45.1741%" y="255.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="44.9241%" y="229" width="0.0949%" height="15" fill="rgb(194,194,56)" fg:x="947" fg:w="2"/><text x="45.1741%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.05%)</title><rect x="45.0190%" y="357" width="0.0474%" height="15" fill="rgb(84,196,196)" fg:x="949" fg:w="1"/><text x="45.2690%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.05%)</title><rect x="45.0190%" y="341" width="0.0474%" height="15" fill="rgb(197,97,0)" fg:x="949" fg:w="1"/><text x="45.2690%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="45.0190%" y="325" width="0.0474%" height="15" fill="rgb(218,118,0)" fg:x="949" fg:w="1"/><text x="45.2690%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (29 samples, 1.38%)</title><rect x="43.7381%" y="389" width="1.3757%" height="15" fill="rgb(54,169,169)" fg:x="922" fg:w="29"/><text x="43.9881%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (29 samples, 1.38%)</title><rect x="43.7381%" y="373" width="1.3757%" height="15" fill="rgb(72,185,185)" fg:x="922" fg:w="29"/><text x="43.9881%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (1 samples, 0.05%)</title><rect x="45.0664%" y="357" width="0.0474%" height="15" fill="rgb(73,186,186)" fg:x="950" fg:w="1"/><text x="45.3164%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (1 samples, 0.05%)</title><rect x="45.0664%" y="341" width="0.0474%" height="15" fill="rgb(65,178,178)" fg:x="950" fg:w="1"/><text x="45.3164%" y="351.50"></text></g><g><title>hashbrown::raw::offset_from (1 samples, 0.05%)</title><rect x="45.0664%" y="325" width="0.0474%" height="15" fill="rgb(53,167,167)" fg:x="950" fg:w="1"/><text x="45.3164%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (1 samples, 0.05%)</title><rect x="45.0664%" y="309" width="0.0474%" height="15" fill="rgb(226,126,0)" fg:x="950" fg:w="1"/><text x="45.3164%" y="319.50"></text></g><g><title>&lt;alc::text_processor::frequency_holder::SingleGramFrequencies&lt;T&gt; as core::clone::Clone&gt;::clone (57 samples, 2.70%)</title><rect x="43.7381%" y="453" width="2.7040%" height="15" fill="rgb(58,173,173)" fg:x="922" fg:w="57"/><text x="43.9881%" y="463.50">&lt;a..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (57 samples, 2.70%)</title><rect x="43.7381%" y="437" width="2.7040%" height="15" fill="rgb(250,150,0)" fg:x="922" fg:w="57"/><text x="43.9881%" y="447.50">&lt;s..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (57 samples, 2.70%)</title><rect x="43.7381%" y="421" width="2.7040%" height="15" fill="rgb(99,210,210)" fg:x="922" fg:w="57"/><text x="43.9881%" y="431.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (57 samples, 2.70%)</title><rect x="43.7381%" y="405" width="2.7040%" height="15" fill="rgb(53,168,168)" fg:x="922" fg:w="57"/><text x="43.9881%" y="415.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (28 samples, 1.33%)</title><rect x="45.1139%" y="389" width="1.3283%" height="15" fill="rgb(75,188,188)" fg:x="951" fg:w="28"/><text x="45.3639%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (28 samples, 1.33%)</title><rect x="45.1139%" y="373" width="1.3283%" height="15" fill="rgb(107,217,217)" fg:x="951" fg:w="28"/><text x="45.3639%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (28 samples, 1.33%)</title><rect x="45.1139%" y="357" width="1.3283%" height="15" fill="rgb(65,179,179)" fg:x="951" fg:w="28"/><text x="45.3639%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 1.33%)</title><rect x="45.1139%" y="341" width="1.3283%" height="15" fill="rgb(194,94,0)" fg:x="951" fg:w="28"/><text x="45.3639%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 1.33%)</title><rect x="45.1139%" y="325" width="1.3283%" height="15" fill="rgb(227,127,0)" fg:x="951" fg:w="28"/><text x="45.3639%" y="335.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 1.33%)</title><rect x="45.1139%" y="309" width="1.3283%" height="15" fill="rgb(240,140,0)" fg:x="951" fg:w="28"/><text x="45.3639%" y="319.50"></text></g><g><title>malloc (28 samples, 1.33%)</title><rect x="45.1139%" y="293" width="1.3283%" height="15" fill="rgb(180,180,52)" fg:x="951" fg:w="28"/><text x="45.3639%" y="303.50"></text></g><g><title>[libc.so.6] (28 samples, 1.33%)</title><rect x="45.1139%" y="277" width="1.3283%" height="15" fill="rgb(219,219,66)" fg:x="951" fg:w="28"/><text x="45.3639%" y="287.50"></text></g><g><title>[libc.so.6] (19 samples, 0.90%)</title><rect x="45.5408%" y="261" width="0.9013%" height="15" fill="rgb(216,216,65)" fg:x="960" fg:w="19"/><text x="45.7908%" y="271.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="46.2998%" y="245" width="0.1423%" height="15" fill="rgb(224,224,67)" fg:x="976" fg:w="3"/><text x="46.5498%" y="255.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.24%)</title><rect x="47.2960%" y="421" width="0.2372%" height="15" fill="rgb(105,215,215)" fg:x="997" fg:w="5"/><text x="47.5460%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.19%)</title><rect x="47.3435%" y="405" width="0.1898%" height="15" fill="rgb(240,140,0)" fg:x="998" fg:w="4"/><text x="47.5935%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.05%)</title><rect x="47.4858%" y="389" width="0.0474%" height="15" fill="rgb(251,151,0)" fg:x="1001" fg:w="1"/><text x="47.7358%" y="399.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get_index (5 samples, 0.24%)</title><rect x="47.7230%" y="373" width="0.2372%" height="15" fill="rgb(59,173,173)" fg:x="1006" fg:w="5"/><text x="47.9730%" y="383.50"></text></g><g><title>&lt;alc::keyboard::layer::Layer&lt;_,_,T&gt; as core::ops::index::Index&lt;alc::keyboard::LayoutPosition&gt;&gt;::index (11 samples, 0.52%)</title><rect x="47.5332%" y="421" width="0.5218%" height="15" fill="rgb(99,210,210)" fg:x="1002" fg:w="11"/><text x="47.7832%" y="431.50"></text></g><g><title>&lt;array2d::Array2D&lt;T&gt; as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (11 samples, 0.52%)</title><rect x="47.5332%" y="405" width="0.5218%" height="15" fill="rgb(103,213,213)" fg:x="1002" fg:w="11"/><text x="47.7832%" y="415.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get (7 samples, 0.33%)</title><rect x="47.7230%" y="389" width="0.3321%" height="15" fill="rgb(68,182,182)" fg:x="1006" fg:w="7"/><text x="47.9730%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.09%)</title><rect x="47.9602%" y="373" width="0.0949%" height="15" fill="rgb(205,105,0)" fg:x="1011" fg:w="2"/><text x="48.2102%" y="383.50"></text></g><g><title>array2d::Array2D&lt;T&gt;::get::_{{closure}} (2 samples, 0.09%)</title><rect x="47.9602%" y="357" width="0.0949%" height="15" fill="rgb(93,205,205)" fg:x="1011" fg:w="2"/><text x="48.2102%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.09%)</title><rect x="47.9602%" y="341" width="0.0949%" height="15" fill="rgb(217,117,0)" fg:x="1011" fg:w="2"/><text x="48.2102%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.09%)</title><rect x="47.9602%" y="325" width="0.0949%" height="15" fill="rgb(224,124,0)" fg:x="1011" fg:w="2"/><text x="48.2102%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.09%)</title><rect x="47.9602%" y="309" width="0.0949%" height="15" fill="rgb(71,184,184)" fg:x="1011" fg:w="2"/><text x="48.2102%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.43%)</title><rect x="48.0550%" y="421" width="0.4269%" height="15" fill="rgb(223,123,0)" fg:x="1013" fg:w="9"/><text x="48.3050%" y="431.50"></text></g><g><title>core::ptr::read (1 samples, 0.05%)</title><rect x="48.4345%" y="405" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="1021" fg:w="1"/><text x="48.6845%" y="415.50"></text></g><g><title>__rust_dealloc (2 samples, 0.09%)</title><rect x="48.4820%" y="293" width="0.0949%" height="15" fill="rgb(208,208,62)" fg:x="1022" fg:w="2"/><text x="48.7320%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 1.71%)</title><rect x="48.4820%" y="325" width="1.7078%" height="15" fill="rgb(196,96,0)" fg:x="1022" fg:w="36"/><text x="48.7320%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 1.71%)</title><rect x="48.4820%" y="309" width="1.7078%" height="15" fill="rgb(228,128,0)" fg:x="1022" fg:w="36"/><text x="48.7320%" y="319.50"></text></g><g><title>cfree (34 samples, 1.61%)</title><rect x="48.5769%" y="293" width="1.6129%" height="15" fill="rgb(177,177,50)" fg:x="1024" fg:w="34"/><text x="48.8269%" y="303.50"></text></g><g><title>[libc.so.6] (31 samples, 1.47%)</title><rect x="48.7192%" y="277" width="1.4706%" height="15" fill="rgb(179,179,51)" fg:x="1027" fg:w="31"/><text x="48.9692%" y="287.50"></text></g><g><title>[libc.so.6] (8 samples, 0.38%)</title><rect x="49.8102%" y="261" width="0.3795%" height="15" fill="rgb(225,225,68)" fg:x="1050" fg:w="8"/><text x="50.0602%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="50.0949%" y="245" width="0.0949%" height="15" fill="rgb(229,229,69)" fg:x="1056" fg:w="2"/><text x="50.3449%" y="255.50"></text></g><g><title>&lt;alc::objective::scoring::SimpleScoreFunction as alc::objective::scoring::Score&lt;_,_&gt;&gt;::score_layout_position_sequence (73 samples, 3.46%)</title><rect x="46.7742%" y="437" width="3.4630%" height="15" fill="rgb(72,185,185)" fg:x="986" fg:w="73"/><text x="47.0242%" y="447.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPosition&gt;&gt; (37 samples, 1.76%)</title><rect x="48.4820%" y="421" width="1.7552%" height="15" fill="rgb(247,147,0)" fg:x="1022" fg:w="37"/><text x="48.7320%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 1.76%)</title><rect x="48.4820%" y="405" width="1.7552%" height="15" fill="rgb(220,120,0)" fg:x="1022" fg:w="37"/><text x="48.7320%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPosition,alloc::alloc::Global&gt;&gt; (37 samples, 1.76%)</title><rect x="48.4820%" y="389" width="1.7552%" height="15" fill="rgb(248,148,0)" fg:x="1022" fg:w="37"/><text x="48.7320%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 1.76%)</title><rect x="48.4820%" y="373" width="1.7552%" height="15" fill="rgb(93,205,205)" fg:x="1022" fg:w="37"/><text x="48.7320%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (37 samples, 1.76%)</title><rect x="48.4820%" y="357" width="1.7552%" height="15" fill="rgb(219,119,0)" fg:x="1022" fg:w="37"/><text x="48.7320%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 1.76%)</title><rect x="48.4820%" y="341" width="1.7552%" height="15" fill="rgb(254,154,0)" fg:x="1022" fg:w="37"/><text x="48.7320%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="50.1898%" y="325" width="0.0474%" height="15" fill="rgb(227,127,0)" fg:x="1058" fg:w="1"/><text x="50.4398%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.05%)</title><rect x="50.2372%" y="437" width="0.0474%" height="15" fill="rgb(231,131,0)" fg:x="1059" fg:w="1"/><text x="50.4872%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.05%)</title><rect x="50.2372%" y="421" width="0.0474%" height="15" fill="rgb(207,107,0)" fg:x="1059" fg:w="1"/><text x="50.4872%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="50.2846%" y="437" width="0.0949%" height="15" fill="rgb(225,125,0)" fg:x="1060" fg:w="2"/><text x="50.5346%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="50.4269%" y="357" width="0.0474%" height="15" fill="rgb(101,211,211)" fg:x="1063" fg:w="1"/><text x="50.6769%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.05%)</title><rect x="50.4269%" y="341" width="0.0474%" height="15" fill="rgb(62,176,176)" fg:x="1063" fg:w="1"/><text x="50.6769%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.14%)</title><rect x="50.3795%" y="437" width="0.1423%" height="15" fill="rgb(219,119,0)" fg:x="1062" fg:w="3"/><text x="50.6295%" y="447.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.14%)</title><rect x="50.3795%" y="421" width="0.1423%" height="15" fill="rgb(89,201,201)" fg:x="1062" fg:w="3"/><text x="50.6295%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.14%)</title><rect x="50.3795%" y="405" width="0.1423%" height="15" fill="rgb(65,179,179)" fg:x="1062" fg:w="3"/><text x="50.6295%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="50.4269%" y="389" width="0.0949%" height="15" fill="rgb(102,213,213)" fg:x="1063" fg:w="2"/><text x="50.6769%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.09%)</title><rect x="50.4269%" y="373" width="0.0949%" height="15" fill="rgb(71,184,184)" fg:x="1063" fg:w="2"/><text x="50.6769%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.05%)</title><rect x="50.4744%" y="357" width="0.0474%" height="15" fill="rgb(61,175,175)" fg:x="1064" fg:w="1"/><text x="50.7244%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="50.4744%" y="341" width="0.0474%" height="15" fill="rgb(197,97,0)" fg:x="1064" fg:w="1"/><text x="50.7244%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="50.4744%" y="325" width="0.0474%" height="15" fill="rgb(207,107,0)" fg:x="1064" fg:w="1"/><text x="50.7244%" y="335.50"></text></g><g><title>__rdl_alloc (3 samples, 0.14%)</title><rect x="51.8501%" y="245" width="0.1423%" height="15" fill="rgb(216,216,65)" fg:x="1093" fg:w="3"/><text x="52.1001%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.14%)</title><rect x="51.8501%" y="229" width="0.1423%" height="15" fill="rgb(204,104,0)" fg:x="1093" fg:w="3"/><text x="52.1001%" y="239.50"></text></g><g><title>__rust_alloc (3 samples, 0.14%)</title><rect x="51.9924%" y="245" width="0.1423%" height="15" fill="rgb(196,196,57)" fg:x="1096" fg:w="3"/><text x="52.2424%" y="255.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.05%)</title><rect x="52.1347%" y="245" width="0.0474%" height="15" fill="rgb(205,105,0)" fg:x="1099" fg:w="1"/><text x="52.3847%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 1.00%)</title><rect x="51.8027%" y="341" width="0.9962%" height="15" fill="rgb(226,126,0)" fg:x="1092" fg:w="21"/><text x="52.0527%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 1.00%)</title><rect x="51.8027%" y="325" width="0.9962%" height="15" fill="rgb(217,117,0)" fg:x="1092" fg:w="21"/><text x="52.0527%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 1.00%)</title><rect x="51.8027%" y="309" width="0.9962%" height="15" fill="rgb(237,137,0)" fg:x="1092" fg:w="21"/><text x="52.0527%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 1.00%)</title><rect x="51.8027%" y="293" width="0.9962%" height="15" fill="rgb(242,142,0)" fg:x="1092" fg:w="21"/><text x="52.0527%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 1.00%)</title><rect x="51.8027%" y="277" width="0.9962%" height="15" fill="rgb(202,102,0)" fg:x="1092" fg:w="21"/><text x="52.0527%" y="287.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 1.00%)</title><rect x="51.8027%" y="261" width="0.9962%" height="15" fill="rgb(190,90,0)" fg:x="1092" fg:w="21"/><text x="52.0527%" y="271.50"></text></g><g><title>malloc (13 samples, 0.62%)</title><rect x="52.1822%" y="245" width="0.6167%" height="15" fill="rgb(179,179,51)" fg:x="1100" fg:w="13"/><text x="52.4322%" y="255.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (29 samples, 1.38%)</title><rect x="51.7078%" y="421" width="1.3757%" height="15" fill="rgb(97,208,208)" fg:x="1090" fg:w="29"/><text x="51.9578%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 1.38%)</title><rect x="51.7078%" y="405" width="1.3757%" height="15" fill="rgb(223,123,0)" fg:x="1090" fg:w="29"/><text x="51.9578%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 1.38%)</title><rect x="51.7078%" y="389" width="1.3757%" height="15" fill="rgb(253,153,0)" fg:x="1090" fg:w="29"/><text x="51.9578%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 1.38%)</title><rect x="51.7078%" y="373" width="1.3757%" height="15" fill="rgb(198,98,0)" fg:x="1090" fg:w="29"/><text x="51.9578%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 1.38%)</title><rect x="51.7078%" y="357" width="1.3757%" height="15" fill="rgb(69,183,183)" fg:x="1090" fg:w="29"/><text x="51.9578%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.28%)</title><rect x="52.7989%" y="341" width="0.2846%" height="15" fill="rgb(210,110,0)" fg:x="1113" fg:w="6"/><text x="53.0489%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.28%)</title><rect x="52.7989%" y="325" width="0.2846%" height="15" fill="rgb(218,118,0)" fg:x="1113" fg:w="6"/><text x="53.0489%" y="335.50"></text></g><g><title>[libc.so.6] (6 samples, 0.28%)</title><rect x="52.7989%" y="309" width="0.2846%" height="15" fill="rgb(176,176,50)" fg:x="1113" fg:w="6"/><text x="53.0489%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="53.0835%" y="245" width="0.0474%" height="15" fill="rgb(218,218,65)" fg:x="1119" fg:w="1"/><text x="53.3335%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="53.0835%" y="229" width="0.0474%" height="15" fill="rgb(253,153,0)" fg:x="1119" fg:w="1"/><text x="53.3335%" y="239.50"></text></g><g><title>__rust_alloc (2 samples, 0.09%)</title><rect x="53.1309%" y="245" width="0.0949%" height="15" fill="rgb(222,222,67)" fg:x="1120" fg:w="2"/><text x="53.3809%" y="255.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.05%)</title><rect x="53.2258%" y="245" width="0.0474%" height="15" fill="rgb(203,103,0)" fg:x="1122" fg:w="1"/><text x="53.4758%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.28%)</title><rect x="53.0835%" y="341" width="0.2846%" height="15" fill="rgb(208,108,0)" fg:x="1119" fg:w="6"/><text x="53.3335%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.28%)</title><rect x="53.0835%" y="325" width="0.2846%" height="15" fill="rgb(224,124,0)" fg:x="1119" fg:w="6"/><text x="53.3335%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.28%)</title><rect x="53.0835%" y="309" width="0.2846%" height="15" fill="rgb(209,109,0)" fg:x="1119" fg:w="6"/><text x="53.3335%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.28%)</title><rect x="53.0835%" y="293" width="0.2846%" height="15" fill="rgb(214,114,0)" fg:x="1119" fg:w="6"/><text x="53.3335%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.28%)</title><rect x="53.0835%" y="277" width="0.2846%" height="15" fill="rgb(204,104,0)" fg:x="1119" fg:w="6"/><text x="53.3335%" y="287.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.28%)</title><rect x="53.0835%" y="261" width="0.2846%" height="15" fill="rgb(195,95,0)" fg:x="1119" fg:w="6"/><text x="53.3335%" y="271.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="53.2732%" y="245" width="0.0949%" height="15" fill="rgb(200,200,59)" fg:x="1123" fg:w="2"/><text x="53.5232%" y="255.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::clone::Clone&gt;::clone (9 samples, 0.43%)</title><rect x="53.0835%" y="421" width="0.4269%" height="15" fill="rgb(96,207,207)" fg:x="1119" fg:w="9"/><text x="53.3335%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.43%)</title><rect x="53.0835%" y="405" width="0.4269%" height="15" fill="rgb(244,144,0)" fg:x="1119" fg:w="9"/><text x="53.3335%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.43%)</title><rect x="53.0835%" y="389" width="0.4269%" height="15" fill="rgb(236,136,0)" fg:x="1119" fg:w="9"/><text x="53.3335%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.43%)</title><rect x="53.0835%" y="373" width="0.4269%" height="15" fill="rgb(197,97,0)" fg:x="1119" fg:w="9"/><text x="53.3335%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.43%)</title><rect x="53.0835%" y="357" width="0.4269%" height="15" fill="rgb(89,201,201)" fg:x="1119" fg:w="9"/><text x="53.3335%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.14%)</title><rect x="53.3681%" y="341" width="0.1423%" height="15" fill="rgb(247,147,0)" fg:x="1125" fg:w="3"/><text x="53.6181%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.14%)</title><rect x="53.3681%" y="325" width="0.1423%" height="15" fill="rgb(236,136,0)" fg:x="1125" fg:w="3"/><text x="53.6181%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="53.4156%" y="309" width="0.0949%" height="15" fill="rgb(223,223,67)" fg:x="1126" fg:w="2"/><text x="53.6656%" y="319.50"></text></g><g><title>&lt;alc::text_processor::ngram::Ngram as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.05%)</title><rect x="53.5104%" y="421" width="0.0474%" height="15" fill="rgb(91,203,203)" fg:x="1128" fg:w="1"/><text x="53.7604%" y="431.50"></text></g><g><title>__rdl_alloc (5 samples, 0.24%)</title><rect x="54.4118%" y="181" width="0.2372%" height="15" fill="rgb(218,218,65)" fg:x="1147" fg:w="5"/><text x="54.6618%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.24%)</title><rect x="54.4118%" y="165" width="0.2372%" height="15" fill="rgb(245,145,0)" fg:x="1147" fg:w="5"/><text x="54.6618%" y="175.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="54.6490%" y="181" width="0.0474%" height="15" fill="rgb(206,206,61)" fg:x="1152" fg:w="1"/><text x="54.8990%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 1.57%)</title><rect x="54.3169%" y="229" width="1.5655%" height="15" fill="rgb(207,107,0)" fg:x="1145" fg:w="33"/><text x="54.5669%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 1.57%)</title><rect x="54.3169%" y="213" width="1.5655%" height="15" fill="rgb(241,141,0)" fg:x="1145" fg:w="33"/><text x="54.5669%" y="223.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 1.57%)</title><rect x="54.3169%" y="197" width="1.5655%" height="15" fill="rgb(203,103,0)" fg:x="1145" fg:w="33"/><text x="54.5669%" y="207.50"></text></g><g><title>malloc (25 samples, 1.19%)</title><rect x="54.6964%" y="181" width="1.1860%" height="15" fill="rgb(186,186,54)" fg:x="1153" fg:w="25"/><text x="54.9464%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="55.8349%" y="165" width="0.0474%" height="15" fill="rgb(214,214,64)" fg:x="1177" fg:w="1"/><text x="56.0849%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="55.8349%" y="149" width="0.0474%" height="15" fill="rgb(196,196,57)" fg:x="1177" fg:w="1"/><text x="56.0849%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (41 samples, 1.94%)</title><rect x="54.1271%" y="277" width="1.9450%" height="15" fill="rgb(223,123,0)" fg:x="1141" fg:w="41"/><text x="54.3771%" y="287.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (41 samples, 1.94%)</title><rect x="54.1271%" y="261" width="1.9450%" height="15" fill="rgb(230,130,0)" fg:x="1141" fg:w="41"/><text x="54.3771%" y="271.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (41 samples, 1.94%)</title><rect x="54.1271%" y="245" width="1.9450%" height="15" fill="rgb(196,96,0)" fg:x="1141" fg:w="41"/><text x="54.3771%" y="255.50">a..</text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.19%)</title><rect x="55.8824%" y="229" width="0.1898%" height="15" fill="rgb(211,111,0)" fg:x="1178" fg:w="4"/><text x="56.1324%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.19%)</title><rect x="55.8824%" y="213" width="0.1898%" height="15" fill="rgb(235,135,0)" fg:x="1178" fg:w="4"/><text x="56.1324%" y="223.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (53 samples, 2.51%)</title><rect x="54.1271%" y="357" width="2.5142%" height="15" fill="rgb(81,193,193)" fg:x="1141" fg:w="53"/><text x="54.3771%" y="367.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53 samples, 2.51%)</title><rect x="54.1271%" y="341" width="2.5142%" height="15" fill="rgb(241,141,0)" fg:x="1141" fg:w="53"/><text x="54.3771%" y="351.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53 samples, 2.51%)</title><rect x="54.1271%" y="325" width="2.5142%" height="15" fill="rgb(197,97,0)" fg:x="1141" fg:w="53"/><text x="54.3771%" y="335.50">al..</text></g><g><title>alloc::slice::hack::to_vec (53 samples, 2.51%)</title><rect x="54.1271%" y="309" width="2.5142%" height="15" fill="rgb(198,98,0)" fg:x="1141" fg:w="53"/><text x="54.3771%" y="319.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 2.51%)</title><rect x="54.1271%" y="293" width="2.5142%" height="15" fill="rgb(65,179,179)" fg:x="1141" fg:w="53"/><text x="54.3771%" y="303.50">&lt;T..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12 samples, 0.57%)</title><rect x="56.0721%" y="277" width="0.5693%" height="15" fill="rgb(247,147,0)" fg:x="1182" fg:w="12"/><text x="56.3221%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.57%)</title><rect x="56.0721%" y="261" width="0.5693%" height="15" fill="rgb(248,148,0)" fg:x="1182" fg:w="12"/><text x="56.3221%" y="271.50"></text></g><g><title>[libc.so.6] (10 samples, 0.47%)</title><rect x="56.1670%" y="245" width="0.4744%" height="15" fill="rgb(191,191,55)" fg:x="1184" fg:w="10"/><text x="56.4170%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.19%)</title><rect x="56.6414%" y="357" width="0.1898%" height="15" fill="rgb(217,117,0)" fg:x="1194" fg:w="4"/><text x="56.8914%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.14%)</title><rect x="56.6888%" y="341" width="0.1423%" height="15" fill="rgb(222,122,0)" fg:x="1195" fg:w="3"/><text x="56.9388%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.14%)</title><rect x="56.6888%" y="325" width="0.1423%" height="15" fill="rgb(206,106,0)" fg:x="1195" fg:w="3"/><text x="56.9388%" y="335.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.14%)</title><rect x="56.6888%" y="309" width="0.1423%" height="15" fill="rgb(210,110,0)" fg:x="1195" fg:w="3"/><text x="56.9388%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="56.8311%" y="261" width="0.0474%" height="15" fill="rgb(195,195,57)" fg:x="1198" fg:w="1"/><text x="57.0811%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="56.8311%" y="245" width="0.0474%" height="15" fill="rgb(201,101,0)" fg:x="1198" fg:w="1"/><text x="57.0811%" y="255.50"></text></g><g><title>__rust_alloc (2 samples, 0.09%)</title><rect x="56.8786%" y="261" width="0.0949%" height="15" fill="rgb(222,222,67)" fg:x="1199" fg:w="2"/><text x="57.1286%" y="271.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.05%)</title><rect x="56.9734%" y="261" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="1201" fg:w="1"/><text x="57.2234%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.81%)</title><rect x="56.8311%" y="357" width="0.8065%" height="15" fill="rgb(246,146,0)" fg:x="1198" fg:w="17"/><text x="57.0811%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.81%)</title><rect x="56.8311%" y="341" width="0.8065%" height="15" fill="rgb(202,102,0)" fg:x="1198" fg:w="17"/><text x="57.0811%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.81%)</title><rect x="56.8311%" y="325" width="0.8065%" height="15" fill="rgb(241,141,0)" fg:x="1198" fg:w="17"/><text x="57.0811%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.81%)</title><rect x="56.8311%" y="309" width="0.8065%" height="15" fill="rgb(239,139,0)" fg:x="1198" fg:w="17"/><text x="57.0811%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.81%)</title><rect x="56.8311%" y="293" width="0.8065%" height="15" fill="rgb(200,100,0)" fg:x="1198" fg:w="17"/><text x="57.0811%" y="303.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.81%)</title><rect x="56.8311%" y="277" width="0.8065%" height="15" fill="rgb(201,101,0)" fg:x="1198" fg:w="17"/><text x="57.0811%" y="287.50"></text></g><g><title>malloc (13 samples, 0.62%)</title><rect x="57.0209%" y="261" width="0.6167%" height="15" fill="rgb(199,199,58)" fg:x="1202" fg:w="13"/><text x="57.2709%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (90 samples, 4.27%)</title><rect x="53.5579%" y="421" width="4.2694%" height="15" fill="rgb(229,129,0)" fg:x="1129" fg:w="90"/><text x="53.8079%" y="431.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84 samples, 3.98%)</title><rect x="53.8425%" y="405" width="3.9848%" height="15" fill="rgb(246,146,0)" fg:x="1135" fg:w="84"/><text x="54.0925%" y="415.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (84 samples, 3.98%)</title><rect x="53.8425%" y="389" width="3.9848%" height="15" fill="rgb(224,124,0)" fg:x="1135" fg:w="84"/><text x="54.0925%" y="399.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84 samples, 3.98%)</title><rect x="53.8425%" y="373" width="3.9848%" height="15" fill="rgb(107,217,217)" fg:x="1135" fg:w="84"/><text x="54.0925%" y="383.50">&lt;T a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.19%)</title><rect x="57.6376%" y="357" width="0.1898%" height="15" fill="rgb(228,128,0)" fg:x="1215" fg:w="4"/><text x="57.8876%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.05%)</title><rect x="57.8273%" y="421" width="0.0474%" height="15" fill="rgb(200,100,0)" fg:x="1219" fg:w="1"/><text x="58.0773%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.05%)</title><rect x="57.8273%" y="405" width="0.0474%" height="15" fill="rgb(205,105,0)" fg:x="1219" fg:w="1"/><text x="58.0773%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.09%)</title><rect x="57.8748%" y="421" width="0.0949%" height="15" fill="rgb(199,99,0)" fg:x="1220" fg:w="2"/><text x="58.1248%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.52%)</title><rect x="57.9696%" y="421" width="0.5218%" height="15" fill="rgb(202,102,0)" fg:x="1222" fg:w="11"/><text x="58.2196%" y="431.50"></text></g><g><title>core::ptr::read (9 samples, 0.43%)</title><rect x="58.0645%" y="405" width="0.4269%" height="15" fill="rgb(202,102,0)" fg:x="1224" fg:w="9"/><text x="58.3145%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="58.4915%" y="421" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="1233" fg:w="1"/><text x="58.7415%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (3 samples, 0.14%)</title><rect x="58.5389%" y="373" width="0.1423%" height="15" fill="rgb(237,137,0)" fg:x="1234" fg:w="3"/><text x="58.7889%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.09%)</title><rect x="58.7287%" y="341" width="0.0949%" height="15" fill="rgb(208,108,0)" fg:x="1238" fg:w="2"/><text x="58.9787%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.09%)</title><rect x="58.7287%" y="325" width="0.0949%" height="15" fill="rgb(224,124,0)" fg:x="1238" fg:w="2"/><text x="58.9787%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.09%)</title><rect x="58.9184%" y="309" width="0.0949%" height="15" fill="rgb(207,107,0)" fg:x="1242" fg:w="2"/><text x="59.1684%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.05%)</title><rect x="58.9658%" y="293" width="0.0474%" height="15" fill="rgb(191,91,0)" fg:x="1243" fg:w="1"/><text x="59.2158%" y="303.50"></text></g><g><title>__rdl_realloc (2 samples, 0.09%)</title><rect x="59.2979%" y="245" width="0.0949%" height="15" fill="rgb(196,196,57)" fg:x="1250" fg:w="2"/><text x="59.5479%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.09%)</title><rect x="59.2979%" y="229" width="0.0949%" height="15" fill="rgb(233,133,0)" fg:x="1250" fg:w="2"/><text x="59.5479%" y="239.50"></text></g><g><title>__rust_realloc (4 samples, 0.19%)</title><rect x="59.3928%" y="245" width="0.1898%" height="15" fill="rgb(188,188,54)" fg:x="1252" fg:w="4"/><text x="59.6428%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (160 samples, 7.59%)</title><rect x="59.2979%" y="293" width="7.5901%" height="15" fill="rgb(237,137,0)" fg:x="1250" fg:w="160"/><text x="59.5479%" y="303.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::grow_impl (160 samples, 7.59%)</title><rect x="59.2979%" y="277" width="7.5901%" height="15" fill="rgb(241,141,0)" fg:x="1250" fg:w="160"/><text x="59.5479%" y="287.50">alloc::all..</text></g><g><title>alloc::alloc::realloc (160 samples, 7.59%)</title><rect x="59.2979%" y="261" width="7.5901%" height="15" fill="rgb(192,92,0)" fg:x="1250" fg:w="160"/><text x="59.5479%" y="271.50">alloc::all..</text></g><g><title>realloc (154 samples, 7.31%)</title><rect x="59.5825%" y="245" width="7.3055%" height="15" fill="rgb(177,177,50)" fg:x="1256" fg:w="154"/><text x="59.8325%" y="255.50">realloc</text></g><g><title>[libc.so.6] (131 samples, 6.21%)</title><rect x="60.6736%" y="229" width="6.2144%" height="15" fill="rgb(179,179,51)" fg:x="1279" fg:w="131"/><text x="60.9236%" y="239.50">[libc.so..</text></g><g><title>[libc.so.6] (111 samples, 5.27%)</title><rect x="61.6224%" y="213" width="5.2657%" height="15" fill="rgb(176,176,50)" fg:x="1299" fg:w="111"/><text x="61.8724%" y="223.50">[libc...</text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="66.7457%" y="197" width="0.1423%" height="15" fill="rgb(179,179,51)" fg:x="1407" fg:w="3"/><text x="66.9957%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (168 samples, 7.97%)</title><rect x="59.0133%" y="309" width="7.9696%" height="15" fill="rgb(238,138,0)" fg:x="1244" fg:w="168"/><text x="59.2633%" y="319.50">alloc::raw_..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.09%)</title><rect x="66.8880%" y="293" width="0.0949%" height="15" fill="rgb(218,118,0)" fg:x="1410" fg:w="2"/><text x="67.1380%" y="303.50"></text></g><g><title>core::cmp::max (9 samples, 0.43%)</title><rect x="66.9829%" y="309" width="0.4269%" height="15" fill="rgb(212,112,0)" fg:x="1412" fg:w="9"/><text x="67.2329%" y="319.50"></text></g><g><title>core::cmp::Ord::max (9 samples, 0.43%)</title><rect x="66.9829%" y="293" width="0.4269%" height="15" fill="rgb(195,95,0)" fg:x="1412" fg:w="9"/><text x="67.2329%" y="303.50"></text></g><g><title>core::cmp::max_by (9 samples, 0.43%)</title><rect x="66.9829%" y="277" width="0.4269%" height="15" fill="rgb(206,106,0)" fg:x="1412" fg:w="9"/><text x="67.2329%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (185 samples, 8.78%)</title><rect x="58.6812%" y="373" width="8.7761%" height="15" fill="rgb(216,116,0)" fg:x="1237" fg:w="185"/><text x="58.9312%" y="383.50">alloc::vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (185 samples, 8.78%)</title><rect x="58.6812%" y="357" width="8.7761%" height="15" fill="rgb(239,139,0)" fg:x="1237" fg:w="185"/><text x="58.9312%" y="367.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (182 samples, 8.63%)</title><rect x="58.8235%" y="341" width="8.6338%" height="15" fill="rgb(210,110,0)" fg:x="1240" fg:w="182"/><text x="59.0735%" y="351.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (182 samples, 8.63%)</title><rect x="58.8235%" y="325" width="8.6338%" height="15" fill="rgb(225,125,0)" fg:x="1240" fg:w="182"/><text x="59.0735%" y="335.50">alloc::raw_v..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.05%)</title><rect x="67.4099%" y="309" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="1421" fg:w="1"/><text x="67.6599%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.05%)</title><rect x="67.4099%" y="293" width="0.0474%" height="15" fill="rgb(222,122,0)" fg:x="1421" fg:w="1"/><text x="67.6599%" y="303.50"></text></g><g><title>alc::keyboard::LayoutPositionSequence::append (192 samples, 9.11%)</title><rect x="58.5389%" y="421" width="9.1082%" height="15" fill="rgb(61,175,175)" fg:x="1234" fg:w="192"/><text x="58.7889%" y="431.50">alc::keyboard..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (192 samples, 9.11%)</title><rect x="58.5389%" y="405" width="9.1082%" height="15" fill="rgb(198,98,0)" fg:x="1234" fg:w="192"/><text x="58.7889%" y="415.50">alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (192 samples, 9.11%)</title><rect x="58.5389%" y="389" width="9.1082%" height="15" fill="rgb(210,110,0)" fg:x="1234" fg:w="192"/><text x="58.7889%" y="399.50">alloc::vec::V..</text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.19%)</title><rect x="67.4573%" y="373" width="0.1898%" height="15" fill="rgb(254,154,0)" fg:x="1422" fg:w="4"/><text x="67.7073%" y="383.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="67.4573%" y="357" width="0.1898%" height="15" fill="rgb(223,223,67)" fg:x="1422" fg:w="4"/><text x="67.7073%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.14%)</title><rect x="68.4061%" y="261" width="0.1423%" height="15" fill="rgb(253,153,0)" fg:x="1442" fg:w="3"/><text x="68.6561%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.38%)</title><rect x="68.2638%" y="277" width="0.3795%" height="15" fill="rgb(194,94,0)" fg:x="1439" fg:w="8"/><text x="68.5138%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="68.5484%" y="261" width="0.0949%" height="15" fill="rgb(219,119,0)" fg:x="1445" fg:w="2"/><text x="68.7984%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.28%)</title><rect x="68.8805%" y="261" width="0.2846%" height="15" fill="rgb(219,119,0)" fg:x="1452" fg:w="6"/><text x="69.1305%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 1.57%)</title><rect x="67.8843%" y="325" width="1.5655%" height="15" fill="rgb(252,152,0)" fg:x="1431" fg:w="33"/><text x="68.1343%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 1.57%)</title><rect x="67.8843%" y="309" width="1.5655%" height="15" fill="rgb(234,134,0)" fg:x="1431" fg:w="33"/><text x="68.1343%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 1.57%)</title><rect x="67.8843%" y="293" width="1.5655%" height="15" fill="rgb(192,92,0)" fg:x="1431" fg:w="33"/><text x="68.1343%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.81%)</title><rect x="68.6433%" y="277" width="0.8065%" height="15" fill="rgb(210,110,0)" fg:x="1447" fg:w="17"/><text x="68.8933%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.28%)</title><rect x="69.1651%" y="261" width="0.2846%" height="15" fill="rgb(212,112,0)" fg:x="1458" fg:w="6"/><text x="69.4151%" y="271.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.09%)</title><rect x="69.4497%" y="325" width="0.0949%" height="15" fill="rgb(192,92,0)" fg:x="1464" fg:w="2"/><text x="69.6997%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.24%)</title><rect x="70.6357%" y="181" width="0.2372%" height="15" fill="rgb(228,128,0)" fg:x="1489" fg:w="5"/><text x="70.8857%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.62%)</title><rect x="70.3510%" y="197" width="0.6167%" height="15" fill="rgb(225,125,0)" fg:x="1483" fg:w="13"/><text x="70.6010%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="70.8729%" y="181" width="0.0949%" height="15" fill="rgb(202,102,0)" fg:x="1494" fg:w="2"/><text x="71.1229%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (72 samples, 3.42%)</title><rect x="67.6471%" y="357" width="3.4156%" height="15" fill="rgb(64,178,178)" fg:x="1426" fg:w="72"/><text x="67.8971%" y="367.50">has..</text></g><g><title>core::hash::BuildHasher::hash_one (71 samples, 3.37%)</title><rect x="67.6945%" y="341" width="3.3681%" height="15" fill="rgb(201,101,0)" fg:x="1427" fg:w="71"/><text x="67.9445%" y="351.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 1.52%)</title><rect x="69.5446%" y="325" width="1.5180%" height="15" fill="rgb(212,112,0)" fg:x="1466" fg:w="32"/><text x="69.7946%" y="335.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::hash::Hash&gt;::hash (32 samples, 1.52%)</title><rect x="69.5446%" y="309" width="1.5180%" height="15" fill="rgb(77,190,190)" fg:x="1466" fg:w="32"/><text x="69.7946%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (30 samples, 1.42%)</title><rect x="69.6395%" y="293" width="1.4231%" height="15" fill="rgb(227,127,0)" fg:x="1468" fg:w="30"/><text x="69.8895%" y="303.50"></text></g><g><title>core::hash::Hasher::write_isize (30 samples, 1.42%)</title><rect x="69.6395%" y="277" width="1.4231%" height="15" fill="rgb(211,111,0)" fg:x="1468" fg:w="30"/><text x="69.8895%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (30 samples, 1.42%)</title><rect x="69.6395%" y="261" width="1.4231%" height="15" fill="rgb(228,128,0)" fg:x="1468" fg:w="30"/><text x="69.8895%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 1.33%)</title><rect x="69.7343%" y="245" width="1.3283%" height="15" fill="rgb(221,121,0)" fg:x="1470" fg:w="28"/><text x="69.9843%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 1.33%)</title><rect x="69.7343%" y="229" width="1.3283%" height="15" fill="rgb(231,131,0)" fg:x="1470" fg:w="28"/><text x="69.9843%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 1.33%)</title><rect x="69.7343%" y="213" width="1.3283%" height="15" fill="rgb(205,105,0)" fg:x="1470" fg:w="28"/><text x="69.9843%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.09%)</title><rect x="70.9677%" y="197" width="0.0949%" height="15" fill="rgb(246,146,0)" fg:x="1496" fg:w="2"/><text x="71.2177%" y="207.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (16 samples, 0.76%)</title><rect x="71.1101%" y="293" width="0.7590%" height="15" fill="rgb(92,203,203)" fg:x="1499" fg:w="16"/><text x="71.3601%" y="303.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (16 samples, 0.76%)</title><rect x="71.1101%" y="277" width="0.7590%" height="15" fill="rgb(88,199,199)" fg:x="1499" fg:w="16"/><text x="71.3601%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.76%)</title><rect x="71.1101%" y="261" width="0.7590%" height="15" fill="rgb(203,103,0)" fg:x="1499" fg:w="16"/><text x="71.3601%" y="271.50"></text></g><g><title>&lt;alc::text_processor::keycode::Keycode as core::cmp::PartialEq&gt;::eq (16 samples, 0.76%)</title><rect x="71.1101%" y="245" width="0.7590%" height="15" fill="rgb(85,197,197)" fg:x="1499" fg:w="16"/><text x="71.3601%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (17 samples, 0.81%)</title><rect x="71.1101%" y="309" width="0.8065%" height="15" fill="rgb(109,219,219)" fg:x="1499" fg:w="17"/><text x="71.3601%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.05%)</title><rect x="71.8691%" y="293" width="0.0474%" height="15" fill="rgb(89,201,201)" fg:x="1515" fg:w="1"/><text x="72.1191%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.05%)</title><rect x="71.8691%" y="277" width="0.0474%" height="15" fill="rgb(68,181,181)" fg:x="1515" fg:w="1"/><text x="72.1191%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="71.8691%" y="261" width="0.0474%" height="15" fill="rgb(229,129,0)" fg:x="1515" fg:w="1"/><text x="72.1191%" y="271.50"></text></g><g><title>hashbrown::raw::h2 (7 samples, 0.33%)</title><rect x="71.9165%" y="309" width="0.3321%" height="15" fill="rgb(64,178,178)" fg:x="1516" fg:w="7"/><text x="72.1665%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.09%)</title><rect x="72.2486%" y="309" width="0.0949%" height="15" fill="rgb(84,196,196)" fg:x="1523" fg:w="2"/><text x="72.4986%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.09%)</title><rect x="72.2486%" y="293" width="0.0949%" height="15" fill="rgb(220,120,0)" fg:x="1523" fg:w="2"/><text x="72.4986%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="72.2486%" y="277" width="0.0949%" height="15" fill="rgb(196,96,0)" fg:x="1523" fg:w="2"/><text x="72.4986%" y="287.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::paths_to_keycode (103 samples, 4.89%)</title><rect x="67.6471%" y="421" width="4.8861%" height="15" fill="rgb(86,198,198)" fg:x="1426" fg:w="103"/><text x="67.8971%" y="431.50">alc::k..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (103 samples, 4.89%)</title><rect x="67.6471%" y="405" width="4.8861%" height="15" fill="rgb(213,113,0)" fg:x="1426" fg:w="103"/><text x="67.8971%" y="415.50">std::c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (103 samples, 4.89%)</title><rect x="67.6471%" y="389" width="4.8861%" height="15" fill="rgb(77,189,189)" fg:x="1426" fg:w="103"/><text x="67.8971%" y="399.50">hashbr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (103 samples, 4.89%)</title><rect x="67.6471%" y="373" width="4.8861%" height="15" fill="rgb(99,210,210)" fg:x="1426" fg:w="103"/><text x="67.8971%" y="383.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (31 samples, 1.47%)</title><rect x="71.0626%" y="357" width="1.4706%" height="15" fill="rgb(86,198,198)" fg:x="1498" fg:w="31"/><text x="71.3126%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 1.47%)</title><rect x="71.0626%" y="341" width="1.4706%" height="15" fill="rgb(91,202,202)" fg:x="1498" fg:w="31"/><text x="71.3126%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (31 samples, 1.47%)</title><rect x="71.0626%" y="325" width="1.4706%" height="15" fill="rgb(108,218,218)" fg:x="1498" fg:w="31"/><text x="71.3126%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.19%)</title><rect x="72.3435%" y="309" width="0.1898%" height="15" fill="rgb(64,178,178)" fg:x="1525" fg:w="4"/><text x="72.5935%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.19%)</title><rect x="72.3435%" y="293" width="0.1898%" height="15" fill="rgb(204,104,0)" fg:x="1525" fg:w="4"/><text x="72.5935%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.95%)</title><rect x="72.6281%" y="325" width="0.9488%" height="15" fill="rgb(221,121,0)" fg:x="1531" fg:w="20"/><text x="72.8781%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (19 samples, 0.90%)</title><rect x="72.6755%" y="309" width="0.9013%" height="15" fill="rgb(233,133,0)" fg:x="1532" fg:w="19"/><text x="72.9255%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (19 samples, 0.90%)</title><rect x="72.6755%" y="293" width="0.9013%" height="15" fill="rgb(209,109,0)" fg:x="1532" fg:w="19"/><text x="72.9255%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="73.6243%" y="181" width="0.0474%" height="15" fill="rgb(200,200,59)" fg:x="1552" fg:w="1"/><text x="73.8743%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="73.6243%" y="165" width="0.0474%" height="15" fill="rgb(226,126,0)" fg:x="1552" fg:w="1"/><text x="73.8743%" y="175.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="73.6717%" y="181" width="0.0474%" height="15" fill="rgb(192,192,56)" fg:x="1553" fg:w="1"/><text x="73.9217%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.52%)</title><rect x="73.5769%" y="277" width="0.5218%" height="15" fill="rgb(206,106,0)" fg:x="1551" fg:w="11"/><text x="73.8269%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.52%)</title><rect x="73.5769%" y="261" width="0.5218%" height="15" fill="rgb(253,153,0)" fg:x="1551" fg:w="11"/><text x="73.8269%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.52%)</title><rect x="73.5769%" y="245" width="0.5218%" height="15" fill="rgb(201,101,0)" fg:x="1551" fg:w="11"/><text x="73.8269%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.52%)</title><rect x="73.5769%" y="229" width="0.5218%" height="15" fill="rgb(210,110,0)" fg:x="1551" fg:w="11"/><text x="73.8269%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.52%)</title><rect x="73.5769%" y="213" width="0.5218%" height="15" fill="rgb(244,144,0)" fg:x="1551" fg:w="11"/><text x="73.8269%" y="223.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.52%)</title><rect x="73.5769%" y="197" width="0.5218%" height="15" fill="rgb(201,101,0)" fg:x="1551" fg:w="11"/><text x="73.8269%" y="207.50"></text></g><g><title>malloc (8 samples, 0.38%)</title><rect x="73.7192%" y="181" width="0.3795%" height="15" fill="rgb(195,195,57)" fg:x="1554" fg:w="8"/><text x="73.9692%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="74.0512%" y="165" width="0.0474%" height="15" fill="rgb(191,191,56)" fg:x="1561" fg:w="1"/><text x="74.3012%" y="175.50"></text></g><g><title>&lt;alc::keyboard::LayoutPositionSequence as core::clone::Clone&gt;::clone (46 samples, 2.18%)</title><rect x="72.6281%" y="357" width="2.1822%" height="15" fill="rgb(101,211,211)" fg:x="1531" fg:w="46"/><text x="72.8781%" y="367.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 2.18%)</title><rect x="72.6281%" y="341" width="2.1822%" height="15" fill="rgb(202,102,0)" fg:x="1531" fg:w="46"/><text x="72.8781%" y="351.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 1.23%)</title><rect x="73.5769%" y="325" width="1.2334%" height="15" fill="rgb(208,108,0)" fg:x="1551" fg:w="26"/><text x="73.8269%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 1.23%)</title><rect x="73.5769%" y="309" width="1.2334%" height="15" fill="rgb(227,127,0)" fg:x="1551" fg:w="26"/><text x="73.8269%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 1.23%)</title><rect x="73.5769%" y="293" width="1.2334%" height="15" fill="rgb(102,213,213)" fg:x="1551" fg:w="26"/><text x="73.8269%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.71%)</title><rect x="74.0987%" y="277" width="0.7116%" height="15" fill="rgb(217,117,0)" fg:x="1562" fg:w="15"/><text x="74.3487%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.71%)</title><rect x="74.0987%" y="261" width="0.7116%" height="15" fill="rgb(233,133,0)" fg:x="1562" fg:w="15"/><text x="74.3487%" y="271.50"></text></g><g><title>[libc.so.6] (15 samples, 0.71%)</title><rect x="74.0987%" y="245" width="0.7116%" height="15" fill="rgb(198,198,58)" fg:x="1562" fg:w="15"/><text x="74.3487%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="74.8102%" y="357" width="0.0949%" height="15" fill="rgb(205,105,0)" fg:x="1577" fg:w="2"/><text x="75.0602%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="74.8577%" y="341" width="0.0474%" height="15" fill="rgb(207,107,0)" fg:x="1578" fg:w="1"/><text x="75.1077%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="74.8577%" y="325" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="1578" fg:w="1"/><text x="75.1077%" y="335.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="74.8577%" y="309" width="0.0474%" height="15" fill="rgb(236,136,0)" fg:x="1578" fg:w="1"/><text x="75.1077%" y="319.50"></text></g><g><title>__rdl_alloc (3 samples, 0.14%)</title><rect x="74.9051%" y="261" width="0.1423%" height="15" fill="rgb(205,205,61)" fg:x="1579" fg:w="3"/><text x="75.1551%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.14%)</title><rect x="74.9051%" y="245" width="0.1423%" height="15" fill="rgb(219,119,0)" fg:x="1579" fg:w="3"/><text x="75.1551%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.57%)</title><rect x="74.9051%" y="309" width="0.5693%" height="15" fill="rgb(249,149,0)" fg:x="1579" fg:w="12"/><text x="75.1551%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.57%)</title><rect x="74.9051%" y="293" width="0.5693%" height="15" fill="rgb(205,105,0)" fg:x="1579" fg:w="12"/><text x="75.1551%" y="303.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.57%)</title><rect x="74.9051%" y="277" width="0.5693%" height="15" fill="rgb(233,133,0)" fg:x="1579" fg:w="12"/><text x="75.1551%" y="287.50"></text></g><g><title>malloc (9 samples, 0.43%)</title><rect x="75.0474%" y="261" width="0.4269%" height="15" fill="rgb(186,186,54)" fg:x="1582" fg:w="9"/><text x="75.2974%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.62%)</title><rect x="74.9051%" y="357" width="0.6167%" height="15" fill="rgb(195,95,0)" fg:x="1579" fg:w="13"/><text x="75.1551%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.62%)</title><rect x="74.9051%" y="341" width="0.6167%" height="15" fill="rgb(240,140,0)" fg:x="1579" fg:w="13"/><text x="75.1551%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.62%)</title><rect x="74.9051%" y="325" width="0.6167%" height="15" fill="rgb(211,111,0)" fg:x="1579" fg:w="13"/><text x="75.1551%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.05%)</title><rect x="75.4744%" y="309" width="0.0474%" height="15" fill="rgb(216,116,0)" fg:x="1591" fg:w="1"/><text x="75.7244%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.05%)</title><rect x="75.4744%" y="293" width="0.0474%" height="15" fill="rgb(233,133,0)" fg:x="1591" fg:w="1"/><text x="75.7244%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (64 samples, 3.04%)</title><rect x="72.5332%" y="421" width="3.0361%" height="15" fill="rgb(193,93,0)" fg:x="1529" fg:w="64"/><text x="72.7832%" y="431.50">all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (64 samples, 3.04%)</title><rect x="72.5332%" y="405" width="3.0361%" height="15" fill="rgb(237,137,0)" fg:x="1529" fg:w="64"/><text x="72.7832%" y="415.50">all..</text></g><g><title>alloc::slice::hack::to_vec (64 samples, 3.04%)</title><rect x="72.5332%" y="389" width="3.0361%" height="15" fill="rgb(245,145,0)" fg:x="1529" fg:w="64"/><text x="72.7832%" y="399.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64 samples, 3.04%)</title><rect x="72.5332%" y="373" width="3.0361%" height="15" fill="rgb(68,181,181)" fg:x="1529" fg:w="64"/><text x="72.7832%" y="383.50">&lt;T ..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.05%)</title><rect x="75.5218%" y="357" width="0.0474%" height="15" fill="rgb(198,98,0)" fg:x="1592" fg:w="1"/><text x="75.7718%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (3 samples, 0.14%)</title><rect x="75.5693%" y="421" width="0.1423%" height="15" fill="rgb(252,152,0)" fg:x="1593" fg:w="3"/><text x="75.8193%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.28%)</title><rect x="76.0911%" y="357" width="0.2846%" height="15" fill="rgb(208,108,0)" fg:x="1604" fg:w="6"/><text x="76.3411%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.28%)</title><rect x="76.0911%" y="341" width="0.2846%" height="15" fill="rgb(224,124,0)" fg:x="1604" fg:w="6"/><text x="76.3411%" y="351.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.28%)</title><rect x="76.0911%" y="325" width="0.2846%" height="15" fill="rgb(234,134,0)" fg:x="1604" fg:w="6"/><text x="76.3411%" y="335.50"></text></g><g><title>realloc (6 samples, 0.28%)</title><rect x="76.0911%" y="309" width="0.2846%" height="15" fill="rgb(181,181,52)" fg:x="1604" fg:w="6"/><text x="76.3411%" y="319.50"></text></g><g><title>[libc.so.6] (5 samples, 0.24%)</title><rect x="76.1385%" y="293" width="0.2372%" height="15" fill="rgb(184,184,53)" fg:x="1605" fg:w="5"/><text x="76.3885%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="76.1860%" y="277" width="0.1898%" height="15" fill="rgb(197,197,58)" fg:x="1606" fg:w="4"/><text x="76.4360%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="76.3283%" y="261" width="0.0474%" height="15" fill="rgb(213,213,63)" fg:x="1609" fg:w="1"/><text x="76.5783%" y="271.50"></text></g><g><title>__rust_alloc (2 samples, 0.09%)</title><rect x="76.3757%" y="357" width="0.0949%" height="15" fill="rgb(214,214,64)" fg:x="1610" fg:w="2"/><text x="76.6257%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.05%)</title><rect x="76.4706%" y="357" width="0.0474%" height="15" fill="rgb(215,115,0)" fg:x="1612" fg:w="1"/><text x="76.7206%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.90%)</title><rect x="76.0436%" y="373" width="0.9013%" height="15" fill="rgb(237,137,0)" fg:x="1603" fg:w="19"/><text x="76.2936%" y="383.50"></text></g><g><title>malloc (9 samples, 0.43%)</title><rect x="76.5180%" y="357" width="0.4269%" height="15" fill="rgb(194,194,57)" fg:x="1613" fg:w="9"/><text x="76.7680%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.05%)</title><rect x="76.9450%" y="373" width="0.0474%" height="15" fill="rgb(222,122,0)" fg:x="1622" fg:w="1"/><text x="77.1950%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.05%)</title><rect x="76.9450%" y="357" width="0.0474%" height="15" fill="rgb(204,104,0)" fg:x="1622" fg:w="1"/><text x="77.1950%" y="367.50"></text></g><g><title>core::cmp::max (4 samples, 0.19%)</title><rect x="76.9924%" y="373" width="0.1898%" height="15" fill="rgb(209,109,0)" fg:x="1623" fg:w="4"/><text x="77.2424%" y="383.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.19%)</title><rect x="76.9924%" y="357" width="0.1898%" height="15" fill="rgb(240,140,0)" fg:x="1623" fg:w="4"/><text x="77.2424%" y="367.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.19%)</title><rect x="76.9924%" y="341" width="0.1898%" height="15" fill="rgb(226,126,0)" fg:x="1623" fg:w="4"/><text x="77.2424%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 1.19%)</title><rect x="76.0436%" y="405" width="1.1860%" height="15" fill="rgb(220,120,0)" fg:x="1603" fg:w="25"/><text x="76.2936%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 1.19%)</title><rect x="76.0436%" y="389" width="1.1860%" height="15" fill="rgb(204,104,0)" fg:x="1603" fg:w="25"/><text x="76.2936%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.05%)</title><rect x="77.1822%" y="373" width="0.0474%" height="15" fill="rgb(206,106,0)" fg:x="1627" fg:w="1"/><text x="77.4322%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.05%)</title><rect x="77.1822%" y="357" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="1627" fg:w="1"/><text x="77.4322%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (40 samples, 1.90%)</title><rect x="75.7116%" y="421" width="1.8975%" height="15" fill="rgb(229,129,0)" fg:x="1596" fg:w="40"/><text x="75.9616%" y="431.50">a..</text></g><g><title>core::ptr::write (8 samples, 0.38%)</title><rect x="77.2296%" y="405" width="0.3795%" height="15" fill="rgb(221,121,0)" fg:x="1628" fg:w="8"/><text x="77.4796%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.14%)</title><rect x="77.6091%" y="421" width="0.1423%" height="15" fill="rgb(244,144,0)" fg:x="1636" fg:w="3"/><text x="77.8591%" y="431.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.14%)</title><rect x="77.8463%" y="325" width="0.1423%" height="15" fill="rgb(191,191,56)" fg:x="1641" fg:w="3"/><text x="78.0963%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.14%)</title><rect x="77.8463%" y="309" width="0.1423%" height="15" fill="rgb(226,126,0)" fg:x="1641" fg:w="3"/><text x="78.0963%" y="319.50"></text></g><g><title>__rust_dealloc (2 samples, 0.09%)</title><rect x="77.9886%" y="325" width="0.0949%" height="15" fill="rgb(218,218,65)" fg:x="1644" fg:w="2"/><text x="78.2386%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 1.42%)</title><rect x="77.7514%" y="357" width="1.4231%" height="15" fill="rgb(210,110,0)" fg:x="1639" fg:w="30"/><text x="78.0014%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 1.42%)</title><rect x="77.7514%" y="341" width="1.4231%" height="15" fill="rgb(249,149,0)" fg:x="1639" fg:w="30"/><text x="78.0014%" y="351.50"></text></g><g><title>cfree (23 samples, 1.09%)</title><rect x="78.0835%" y="325" width="1.0911%" height="15" fill="rgb(210,210,62)" fg:x="1646" fg:w="23"/><text x="78.3335%" y="335.50"></text></g><g><title>[libc.so.6] (15 samples, 0.71%)</title><rect x="78.4630%" y="309" width="0.7116%" height="15" fill="rgb(205,205,61)" fg:x="1654" fg:w="15"/><text x="78.7130%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (34 samples, 1.61%)</title><rect x="77.7514%" y="421" width="1.6129%" height="15" fill="rgb(219,119,0)" fg:x="1639" fg:w="34"/><text x="78.0014%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (34 samples, 1.61%)</title><rect x="77.7514%" y="405" width="1.6129%" height="15" fill="rgb(199,99,0)" fg:x="1639" fg:w="34"/><text x="78.0014%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (34 samples, 1.61%)</title><rect x="77.7514%" y="389" width="1.6129%" height="15" fill="rgb(190,90,0)" fg:x="1639" fg:w="34"/><text x="78.0014%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 1.61%)</title><rect x="77.7514%" y="373" width="1.6129%" height="15" fill="rgb(230,130,0)" fg:x="1639" fg:w="34"/><text x="78.0014%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.19%)</title><rect x="79.1746%" y="357" width="0.1898%" height="15" fill="rgb(236,136,0)" fg:x="1669" fg:w="4"/><text x="79.4246%" y="367.50"></text></g><g><title>__rust_dealloc (3 samples, 0.14%)</title><rect x="79.5541%" y="277" width="0.1423%" height="15" fill="rgb(178,178,51)" fg:x="1677" fg:w="3"/><text x="79.8041%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 2.13%)</title><rect x="79.3643%" y="405" width="2.1347%" height="15" fill="rgb(208,108,0)" fg:x="1673" fg:w="45"/><text x="79.6143%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (45 samples, 2.13%)</title><rect x="79.3643%" y="389" width="2.1347%" height="15" fill="rgb(221,121,0)" fg:x="1673" fg:w="45"/><text x="79.6143%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (43 samples, 2.04%)</title><rect x="79.4592%" y="373" width="2.0398%" height="15" fill="rgb(215,115,0)" fg:x="1675" fg:w="43"/><text x="79.7092%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (43 samples, 2.04%)</title><rect x="79.4592%" y="357" width="2.0398%" height="15" fill="rgb(207,107,0)" fg:x="1675" fg:w="43"/><text x="79.7092%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (43 samples, 2.04%)</title><rect x="79.4592%" y="341" width="2.0398%" height="15" fill="rgb(206,106,0)" fg:x="1675" fg:w="43"/><text x="79.7092%" y="351.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 2.04%)</title><rect x="79.4592%" y="325" width="2.0398%" height="15" fill="rgb(237,137,0)" fg:x="1675" fg:w="43"/><text x="79.7092%" y="335.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (43 samples, 2.04%)</title><rect x="79.4592%" y="309" width="2.0398%" height="15" fill="rgb(251,151,0)" fg:x="1675" fg:w="43"/><text x="79.7092%" y="319.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (43 samples, 2.04%)</title><rect x="79.4592%" y="293" width="2.0398%" height="15" fill="rgb(231,131,0)" fg:x="1675" fg:w="43"/><text x="79.7092%" y="303.50">a..</text></g><g><title>cfree (38 samples, 1.80%)</title><rect x="79.6964%" y="277" width="1.8027%" height="15" fill="rgb(216,216,65)" fg:x="1680" fg:w="38"/><text x="79.9464%" y="287.50">c..</text></g><g><title>[libc.so.6] (27 samples, 1.28%)</title><rect x="80.2182%" y="261" width="1.2808%" height="15" fill="rgb(198,198,58)" fg:x="1691" fg:w="27"/><text x="80.4682%" y="271.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="81.3093%" y="245" width="0.1898%" height="15" fill="rgb(177,177,50)" fg:x="1714" fg:w="4"/><text x="81.5593%" y="255.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.05%)</title><rect x="81.5465%" y="341" width="0.0474%" height="15" fill="rgb(176,176,50)" fg:x="1719" fg:w="1"/><text x="81.7965%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.05%)</title><rect x="81.5465%" y="325" width="0.0474%" height="15" fill="rgb(213,113,0)" fg:x="1719" fg:w="1"/><text x="81.7965%" y="335.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="81.5939%" y="341" width="0.0474%" height="15" fill="rgb(187,187,54)" fg:x="1720" fg:w="1"/><text x="81.8439%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 1.00%)</title><rect x="81.4991%" y="373" width="0.9962%" height="15" fill="rgb(218,118,0)" fg:x="1718" fg:w="21"/><text x="81.7491%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 1.00%)</title><rect x="81.4991%" y="357" width="0.9962%" height="15" fill="rgb(231,131,0)" fg:x="1718" fg:w="21"/><text x="81.7491%" y="367.50"></text></g><g><title>cfree (18 samples, 0.85%)</title><rect x="81.6414%" y="341" width="0.8539%" height="15" fill="rgb(209,209,62)" fg:x="1721" fg:w="18"/><text x="81.8914%" y="351.50"></text></g><g><title>[libc.so.6] (10 samples, 0.47%)</title><rect x="82.0209%" y="325" width="0.4744%" height="15" fill="rgb(181,181,52)" fg:x="1729" fg:w="10"/><text x="82.2709%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (68 samples, 3.23%)</title><rect x="79.3643%" y="421" width="3.2258%" height="15" fill="rgb(236,136,0)" fg:x="1673" fg:w="68"/><text x="79.6143%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (23 samples, 1.09%)</title><rect x="81.4991%" y="405" width="1.0911%" height="15" fill="rgb(221,121,0)" fg:x="1718" fg:w="23"/><text x="81.7491%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.09%)</title><rect x="81.4991%" y="389" width="1.0911%" height="15" fill="rgb(245,145,0)" fg:x="1718" fg:w="23"/><text x="81.7491%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.09%)</title><rect x="82.4953%" y="373" width="0.0949%" height="15" fill="rgb(214,114,0)" fg:x="1739" fg:w="2"/><text x="82.7453%" y="383.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (2 samples, 0.09%)</title><rect x="82.5901%" y="389" width="0.0949%" height="15" fill="rgb(195,95,0)" fg:x="1741" fg:w="2"/><text x="82.8401%" y="399.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.09%)</title><rect x="82.5901%" y="373" width="0.0949%" height="15" fill="rgb(72,185,185)" fg:x="1741" fg:w="2"/><text x="82.8401%" y="383.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.09%)</title><rect x="82.5901%" y="357" width="0.0949%" height="15" fill="rgb(242,142,0)" fg:x="1741" fg:w="2"/><text x="82.8401%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.09%)</title><rect x="82.5901%" y="341" width="0.0949%" height="15" fill="rgb(222,122,0)" fg:x="1741" fg:w="2"/><text x="82.8401%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.09%)</title><rect x="82.5901%" y="325" width="0.0949%" height="15" fill="rgb(239,139,0)" fg:x="1741" fg:w="2"/><text x="82.8401%" y="335.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.05%)</title><rect x="82.7324%" y="293" width="0.0474%" height="15" fill="rgb(180,180,52)" fg:x="1744" fg:w="1"/><text x="82.9824%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.05%)</title><rect x="82.7324%" y="277" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="1744" fg:w="1"/><text x="82.9824%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.62%)</title><rect x="82.6850%" y="325" width="0.6167%" height="15" fill="rgb(203,103,0)" fg:x="1743" fg:w="13"/><text x="82.9350%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.62%)</title><rect x="82.6850%" y="309" width="0.6167%" height="15" fill="rgb(217,117,0)" fg:x="1743" fg:w="13"/><text x="82.9350%" y="319.50"></text></g><g><title>cfree (11 samples, 0.52%)</title><rect x="82.7799%" y="293" width="0.5218%" height="15" fill="rgb(187,187,54)" fg:x="1745" fg:w="11"/><text x="83.0299%" y="303.50"></text></g><g><title>[libc.so.6] (6 samples, 0.28%)</title><rect x="83.0171%" y="277" width="0.2846%" height="15" fill="rgb(205,205,61)" fg:x="1750" fg:w="6"/><text x="83.2671%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (16 samples, 0.76%)</title><rect x="82.5901%" y="421" width="0.7590%" height="15" fill="rgb(228,128,0)" fg:x="1741" fg:w="16"/><text x="82.8401%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.76%)</title><rect x="82.5901%" y="405" width="0.7590%" height="15" fill="rgb(194,94,0)" fg:x="1741" fg:w="16"/><text x="82.8401%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (14 samples, 0.66%)</title><rect x="82.6850%" y="389" width="0.6641%" height="15" fill="rgb(243,143,0)" fg:x="1743" fg:w="14"/><text x="82.9350%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.66%)</title><rect x="82.6850%" y="373" width="0.6641%" height="15" fill="rgb(50,165,165)" fg:x="1743" fg:w="14"/><text x="82.9350%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (14 samples, 0.66%)</title><rect x="82.6850%" y="357" width="0.6641%" height="15" fill="rgb(210,110,0)" fg:x="1743" fg:w="14"/><text x="82.9350%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.66%)</title><rect x="82.6850%" y="341" width="0.6641%" height="15" fill="rgb(193,93,0)" fg:x="1743" fg:w="14"/><text x="82.9350%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="83.3017%" y="325" width="0.0474%" height="15" fill="rgb(232,132,0)" fg:x="1756" fg:w="1"/><text x="83.5517%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.05%)</title><rect x="83.3017%" y="309" width="0.0474%" height="15" fill="rgb(235,135,0)" fg:x="1756" fg:w="1"/><text x="83.5517%" y="319.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (702 samples, 33.30%)</title><rect x="50.5218%" y="437" width="33.3017%" height="15" fill="rgb(53,168,168)" fg:x="1065" fg:w="702"/><text x="50.7718%" y="447.50">alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::text_processor::keycode::Keycode&gt;&gt; (10 samples, 0.47%)</title><rect x="83.3491%" y="421" width="0.4744%" height="15" fill="rgb(246,146,0)" fg:x="1757" fg:w="10"/><text x="83.5991%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.47%)</title><rect x="83.3491%" y="405" width="0.4744%" height="15" fill="rgb(251,151,0)" fg:x="1757" fg:w="10"/><text x="83.5991%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::text_processor::keycode::Keycode,alloc::alloc::Global&gt;&gt; (10 samples, 0.47%)</title><rect x="83.3491%" y="389" width="0.4744%" height="15" fill="rgb(231,131,0)" fg:x="1757" fg:w="10"/><text x="83.5991%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.47%)</title><rect x="83.3491%" y="373" width="0.4744%" height="15" fill="rgb(57,171,171)" fg:x="1757" fg:w="10"/><text x="83.5991%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (10 samples, 0.47%)</title><rect x="83.3491%" y="357" width="0.4744%" height="15" fill="rgb(251,151,0)" fg:x="1757" fg:w="10"/><text x="83.5991%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.47%)</title><rect x="83.3491%" y="341" width="0.4744%" height="15" fill="rgb(191,91,0)" fg:x="1757" fg:w="10"/><text x="83.5991%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.47%)</title><rect x="83.3491%" y="325" width="0.4744%" height="15" fill="rgb(223,123,0)" fg:x="1757" fg:w="10"/><text x="83.5991%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.47%)</title><rect x="83.3491%" y="309" width="0.4744%" height="15" fill="rgb(196,96,0)" fg:x="1757" fg:w="10"/><text x="83.5991%" y="319.50"></text></g><g><title>cfree (9 samples, 0.43%)</title><rect x="83.3966%" y="293" width="0.4269%" height="15" fill="rgb(177,177,50)" fg:x="1758" fg:w="9"/><text x="83.6466%" y="303.50"></text></g><g><title>[libc.so.6] (7 samples, 0.33%)</title><rect x="83.4915%" y="277" width="0.3321%" height="15" fill="rgb(198,198,58)" fg:x="1760" fg:w="7"/><text x="83.7415%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="83.9658%" y="389" width="0.0474%" height="15" fill="rgb(227,127,0)" fg:x="1770" fg:w="1"/><text x="84.2158%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="84.0133%" y="389" width="0.0474%" height="15" fill="rgb(226,126,0)" fg:x="1771" fg:w="1"/><text x="84.2633%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.19%)</title><rect x="84.1082%" y="373" width="0.1898%" height="15" fill="rgb(208,108,0)" fg:x="1773" fg:w="4"/><text x="84.3582%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.19%)</title><rect x="84.1082%" y="357" width="0.1898%" height="15" fill="rgb(243,143,0)" fg:x="1773" fg:w="4"/><text x="84.3582%" y="367.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.19%)</title><rect x="84.1082%" y="341" width="0.1898%" height="15" fill="rgb(220,120,0)" fg:x="1773" fg:w="4"/><text x="84.3582%" y="351.50"></text></g><g><title>realloc (4 samples, 0.19%)</title><rect x="84.1082%" y="325" width="0.1898%" height="15" fill="rgb(196,196,57)" fg:x="1773" fg:w="4"/><text x="84.3582%" y="335.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="84.1082%" y="309" width="0.1898%" height="15" fill="rgb(210,210,62)" fg:x="1773" fg:w="4"/><text x="84.3582%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="84.1556%" y="293" width="0.1423%" height="15" fill="rgb(213,213,64)" fg:x="1774" fg:w="3"/><text x="84.4056%" y="303.50"></text></g><g><title>__rdl_alloc (2 samples, 0.09%)</title><rect x="84.2979%" y="373" width="0.0949%" height="15" fill="rgb(211,211,63)" fg:x="1777" fg:w="2"/><text x="84.5479%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.09%)</title><rect x="84.2979%" y="357" width="0.0949%" height="15" fill="rgb(244,144,0)" fg:x="1777" fg:w="2"/><text x="84.5479%" y="367.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="84.3928%" y="373" width="0.0474%" height="15" fill="rgb(215,215,64)" fg:x="1779" fg:w="1"/><text x="84.6428%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.05%)</title><rect x="84.4402%" y="373" width="0.0474%" height="15" fill="rgb(219,119,0)" fg:x="1780" fg:w="1"/><text x="84.6902%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.85%)</title><rect x="84.0607%" y="389" width="0.8539%" height="15" fill="rgb(196,96,0)" fg:x="1772" fg:w="18"/><text x="84.3107%" y="399.50"></text></g><g><title>malloc (9 samples, 0.43%)</title><rect x="84.4877%" y="373" width="0.4269%" height="15" fill="rgb(206,206,61)" fg:x="1781" fg:w="9"/><text x="84.7377%" y="383.50"></text></g><g><title>core::cmp::max (2 samples, 0.09%)</title><rect x="84.9146%" y="389" width="0.0949%" height="15" fill="rgb(216,116,0)" fg:x="1790" fg:w="2"/><text x="85.1646%" y="399.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.09%)</title><rect x="84.9146%" y="373" width="0.0949%" height="15" fill="rgb(252,152,0)" fg:x="1790" fg:w="2"/><text x="85.1646%" y="383.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.09%)</title><rect x="84.9146%" y="357" width="0.0949%" height="15" fill="rgb(216,116,0)" fg:x="1790" fg:w="2"/><text x="85.1646%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 1.23%)</title><rect x="83.8710%" y="421" width="1.2334%" height="15" fill="rgb(253,153,0)" fg:x="1768" fg:w="26"/><text x="84.1210%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 1.23%)</title><rect x="83.8710%" y="405" width="1.2334%" height="15" fill="rgb(239,139,0)" fg:x="1768" fg:w="26"/><text x="84.1210%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.09%)</title><rect x="85.0095%" y="389" width="0.0949%" height="15" fill="rgb(232,132,0)" fg:x="1792" fg:w="2"/><text x="85.2595%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.09%)</title><rect x="85.0095%" y="373" width="0.0949%" height="15" fill="rgb(249,149,0)" fg:x="1792" fg:w="2"/><text x="85.2595%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.05%)</title><rect x="85.1044%" y="421" width="0.0474%" height="15" fill="rgb(254,154,0)" fg:x="1794" fg:w="1"/><text x="85.3544%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.05%)</title><rect x="85.1044%" y="405" width="0.0474%" height="15" fill="rgb(244,144,0)" fg:x="1794" fg:w="1"/><text x="85.3544%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (30 samples, 1.42%)</title><rect x="83.8235%" y="437" width="1.4231%" height="15" fill="rgb(197,97,0)" fg:x="1767" fg:w="30"/><text x="84.0735%" y="447.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="85.1518%" y="421" width="0.0949%" height="15" fill="rgb(237,137,0)" fg:x="1795" fg:w="2"/><text x="85.4018%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (7 samples, 0.33%)</title><rect x="85.2467%" y="437" width="0.3321%" height="15" fill="rgb(254,154,0)" fg:x="1797" fg:w="7"/><text x="85.4967%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (7 samples, 0.33%)</title><rect x="85.2467%" y="421" width="0.3321%" height="15" fill="rgb(200,100,0)" fg:x="1797" fg:w="7"/><text x="85.4967%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.33%)</title><rect x="85.2467%" y="405" width="0.3321%" height="15" fill="rgb(203,103,0)" fg:x="1797" fg:w="7"/><text x="85.4967%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (3 samples, 0.14%)</title><rect x="85.4364%" y="389" width="0.1423%" height="15" fill="rgb(225,125,0)" fg:x="1801" fg:w="3"/><text x="85.6864%" y="399.50"></text></g><g><title>core::cmp::min_by (3 samples, 0.14%)</title><rect x="85.4364%" y="373" width="0.1423%" height="15" fill="rgb(209,109,0)" fg:x="1801" fg:w="3"/><text x="85.6864%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.14%)</title><rect x="85.4364%" y="357" width="0.1423%" height="15" fill="rgb(202,102,0)" fg:x="1801" fg:w="3"/><text x="85.6864%" y="367.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams::_{{closure}} (3 samples, 0.14%)</title><rect x="85.4364%" y="341" width="0.1423%" height="15" fill="rgb(64,177,177)" fg:x="1801" fg:w="3"/><text x="85.6864%" y="351.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::total_cmp (2 samples, 0.09%)</title><rect x="85.4839%" y="325" width="0.0949%" height="15" fill="rgb(227,127,0)" fg:x="1802" fg:w="2"/><text x="85.7339%" y="335.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="85.6262%" y="341" width="0.0474%" height="15" fill="rgb(229,229,69)" fg:x="1805" fg:w="1"/><text x="85.8762%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.47%)</title><rect x="85.5787%" y="373" width="0.4744%" height="15" fill="rgb(217,117,0)" fg:x="1804" fg:w="10"/><text x="85.8287%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.47%)</title><rect x="85.5787%" y="357" width="0.4744%" height="15" fill="rgb(212,112,0)" fg:x="1804" fg:w="10"/><text x="85.8287%" y="367.50"></text></g><g><title>cfree (8 samples, 0.38%)</title><rect x="85.6736%" y="341" width="0.3795%" height="15" fill="rgb(206,206,61)" fg:x="1806" fg:w="8"/><text x="85.9236%" y="351.50"></text></g><g><title>[libc.so.6] (6 samples, 0.28%)</title><rect x="85.7685%" y="325" width="0.2846%" height="15" fill="rgb(187,187,54)" fg:x="1808" fg:w="6"/><text x="86.0185%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::text_processor::ngram::Ngram&gt; (13 samples, 0.62%)</title><rect x="85.5787%" y="437" width="0.6167%" height="15" fill="rgb(214,114,0)" fg:x="1804" fg:w="13"/><text x="85.8287%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (13 samples, 0.62%)</title><rect x="85.5787%" y="421" width="0.6167%" height="15" fill="rgb(208,108,0)" fg:x="1804" fg:w="13"/><text x="85.8287%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::text_processor::keycode::Keycode&gt;&gt; (13 samples, 0.62%)</title><rect x="85.5787%" y="405" width="0.6167%" height="15" fill="rgb(232,132,0)" fg:x="1804" fg:w="13"/><text x="85.8287%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.62%)</title><rect x="85.5787%" y="389" width="0.6167%" height="15" fill="rgb(232,132,0)" fg:x="1804" fg:w="13"/><text x="85.8287%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.14%)</title><rect x="86.0531%" y="373" width="0.1423%" height="15" fill="rgb(241,141,0)" fg:x="1814" fg:w="3"/><text x="86.3031%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3 samples, 0.14%)</title><rect x="86.0531%" y="357" width="0.1423%" height="15" fill="rgb(205,105,0)" fg:x="1814" fg:w="3"/><text x="86.3031%" y="367.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.09%)</title><rect x="86.1954%" y="357" width="0.0949%" height="15" fill="rgb(184,184,53)" fg:x="1817" fg:w="2"/><text x="86.4454%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.09%)</title><rect x="86.1954%" y="341" width="0.0949%" height="15" fill="rgb(237,137,0)" fg:x="1817" fg:w="2"/><text x="86.4454%" y="351.50"></text></g><g><title>__rust_dealloc (2 samples, 0.09%)</title><rect x="86.2903%" y="357" width="0.0949%" height="15" fill="rgb(194,194,56)" fg:x="1819" fg:w="2"/><text x="86.5403%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (10 samples, 0.47%)</title><rect x="86.1954%" y="437" width="0.4744%" height="15" fill="rgb(240,140,0)" fg:x="1817" fg:w="10"/><text x="86.4454%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (10 samples, 0.47%)</title><rect x="86.1954%" y="421" width="0.4744%" height="15" fill="rgb(195,95,0)" fg:x="1817" fg:w="10"/><text x="86.4454%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.47%)</title><rect x="86.1954%" y="405" width="0.4744%" height="15" fill="rgb(195,95,0)" fg:x="1817" fg:w="10"/><text x="86.4454%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.47%)</title><rect x="86.1954%" y="389" width="0.4744%" height="15" fill="rgb(237,137,0)" fg:x="1817" fg:w="10"/><text x="86.4454%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.47%)</title><rect x="86.1954%" y="373" width="0.4744%" height="15" fill="rgb(215,115,0)" fg:x="1817" fg:w="10"/><text x="86.4454%" y="383.50"></text></g><g><title>cfree (6 samples, 0.28%)</title><rect x="86.3852%" y="357" width="0.2846%" height="15" fill="rgb(198,198,58)" fg:x="1821" fg:w="6"/><text x="86.6352%" y="367.50"></text></g><g><title>[libc.so.6] (4 samples, 0.19%)</title><rect x="86.4801%" y="341" width="0.1898%" height="15" fill="rgb(196,196,57)" fg:x="1823" fg:w="4"/><text x="86.7301%" y="351.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.05%)</title><rect x="86.6698%" y="309" width="0.0474%" height="15" fill="rgb(221,221,66)" fg:x="1827" fg:w="1"/><text x="86.9198%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.05%)</title><rect x="86.6698%" y="293" width="0.0474%" height="15" fill="rgb(225,125,0)" fg:x="1827" fg:w="1"/><text x="86.9198%" y="303.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams (868 samples, 41.18%)</title><rect x="46.4421%" y="453" width="41.1765%" height="15" fill="rgb(93,204,204)" fg:x="979" fg:w="868"/><text x="46.6921%" y="463.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_single_grams</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (20 samples, 0.95%)</title><rect x="86.6698%" y="437" width="0.9488%" height="15" fill="rgb(196,96,0)" fg:x="1827" fg:w="20"/><text x="86.9198%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.95%)</title><rect x="86.6698%" y="421" width="0.9488%" height="15" fill="rgb(204,104,0)" fg:x="1827" fg:w="20"/><text x="86.9198%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alc::keyboard::LayoutPositionSequence,alloc::alloc::Global&gt;&gt; (20 samples, 0.95%)</title><rect x="86.6698%" y="405" width="0.9488%" height="15" fill="rgb(236,136,0)" fg:x="1827" fg:w="20"/><text x="86.9198%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.95%)</title><rect x="86.6698%" y="389" width="0.9488%" height="15" fill="rgb(81,193,193)" fg:x="1827" fg:w="20"/><text x="86.9198%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (20 samples, 0.95%)</title><rect x="86.6698%" y="373" width="0.9488%" height="15" fill="rgb(224,124,0)" fg:x="1827" fg:w="20"/><text x="86.9198%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.95%)</title><rect x="86.6698%" y="357" width="0.9488%" height="15" fill="rgb(209,109,0)" fg:x="1827" fg:w="20"/><text x="86.9198%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.95%)</title><rect x="86.6698%" y="341" width="0.9488%" height="15" fill="rgb(244,144,0)" fg:x="1827" fg:w="20"/><text x="86.9198%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.95%)</title><rect x="86.6698%" y="325" width="0.9488%" height="15" fill="rgb(213,113,0)" fg:x="1827" fg:w="20"/><text x="86.9198%" y="335.50"></text></g><g><title>cfree (19 samples, 0.90%)</title><rect x="86.7173%" y="309" width="0.9013%" height="15" fill="rgb(177,177,51)" fg:x="1828" fg:w="19"/><text x="86.9673%" y="319.50"></text></g><g><title>[libc.so.6] (12 samples, 0.57%)</title><rect x="87.0493%" y="293" width="0.5693%" height="15" fill="rgb(188,188,54)" fg:x="1835" fg:w="12"/><text x="87.2993%" y="303.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population (998 samples, 47.34%)</title><rect x="40.3226%" y="485" width="47.3435%" height="15" fill="rgb(76,189,189)" fg:x="850" fg:w="998"/><text x="40.5726%" y="495.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_population</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset (926 samples, 43.93%)</title><rect x="43.7381%" y="469" width="43.9279%" height="15" fill="rgb(91,203,203)" fg:x="922" fg:w="926"/><text x="43.9881%" y="479.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::score_dataset</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="87.6186%" y="453" width="0.0474%" height="15" fill="rgb(222,122,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.05%)</title><rect x="87.6186%" y="437" width="0.0474%" height="15" fill="rgb(93,204,204)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="87.6186%" y="421" width="0.0474%" height="15" fill="rgb(57,171,171)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.05%)</title><rect x="87.6186%" y="405" width="0.0474%" height="15" fill="rgb(64,178,178)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="87.6186%" y="389" width="0.0474%" height="15" fill="rgb(207,107,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="87.6186%" y="373" width="0.0474%" height="15" fill="rgb(197,97,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.05%)</title><rect x="87.6186%" y="357" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="87.6186%" y="341" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="87.6186%" y="325" width="0.0474%" height="15" fill="rgb(238,138,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="87.6186%" y="309" width="0.0474%" height="15" fill="rgb(240,140,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="87.6186%" y="293" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.05%)</title><rect x="87.6186%" y="277" width="0.0474%" height="15" fill="rgb(209,109,0)" fg:x="1847" fg:w="1"/><text x="87.8686%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.05%)</title><rect x="87.6660%" y="469" width="0.0474%" height="15" fill="rgb(250,150,0)" fg:x="1848" fg:w="1"/><text x="87.9160%" y="479.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.05%)</title><rect x="87.6660%" y="453" width="0.0474%" height="15" fill="rgb(218,118,0)" fg:x="1848" fg:w="1"/><text x="87.9160%" y="463.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.05%)</title><rect x="87.6660%" y="437" width="0.0474%" height="15" fill="rgb(213,113,0)" fg:x="1848" fg:w="1"/><text x="87.9160%" y="447.50"></text></g><g><title>core::slice::sort::provide_sorted_batch (1 samples, 0.05%)</title><rect x="87.6660%" y="421" width="0.0474%" height="15" fill="rgb(253,153,0)" fg:x="1848" fg:w="1"/><text x="87.9160%" y="431.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.05%)</title><rect x="87.6660%" y="405" width="0.0474%" height="15" fill="rgb(218,118,0)" fg:x="1848" fg:w="1"/><text x="87.9160%" y="415.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.05%)</title><rect x="87.6660%" y="389" width="0.0474%" height="15" fill="rgb(215,115,0)" fg:x="1848" fg:w="1"/><text x="87.9160%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="87.6660%" y="373" width="0.0474%" height="15" fill="rgb(248,148,0)" fg:x="1848" fg:w="1"/><text x="87.9160%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (3 samples, 0.14%)</title><rect x="87.7135%" y="469" width="0.1423%" height="15" fill="rgb(198,98,0)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="479.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (3 samples, 0.14%)</title><rect x="87.7135%" y="453" width="0.1423%" height="15" fill="rgb(90,201,201)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_reserve (3 samples, 0.14%)</title><rect x="87.7135%" y="437" width="0.1423%" height="15" fill="rgb(236,136,0)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.14%)</title><rect x="87.7135%" y="421" width="0.1423%" height="15" fill="rgb(246,146,0)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.14%)</title><rect x="87.7135%" y="405" width="0.1423%" height="15" fill="rgb(192,92,0)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.14%)</title><rect x="87.7135%" y="389" width="0.1423%" height="15" fill="rgb(205,105,0)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.14%)</title><rect x="87.7135%" y="373" width="0.1423%" height="15" fill="rgb(244,144,0)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.14%)</title><rect x="87.7135%" y="357" width="0.1423%" height="15" fill="rgb(202,102,0)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="367.50"></text></g><g><title>malloc (3 samples, 0.14%)</title><rect x="87.7135%" y="341" width="0.1423%" height="15" fill="rgb(185,185,53)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="87.7135%" y="325" width="0.1423%" height="15" fill="rgb(201,201,59)" fg:x="1849" fg:w="3"/><text x="87.9635%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (6 samples, 0.28%)</title><rect x="87.8558%" y="389" width="0.2846%" height="15" fill="rgb(208,108,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.28%)</title><rect x="87.8558%" y="373" width="0.2846%" height="15" fill="rgb(221,121,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (6 samples, 0.28%)</title><rect x="87.8558%" y="357" width="0.2846%" height="15" fill="rgb(223,123,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (6 samples, 0.28%)</title><rect x="87.8558%" y="341" width="0.2846%" height="15" fill="rgb(213,113,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (6 samples, 0.28%)</title><rect x="87.8558%" y="325" width="0.2846%" height="15" fill="rgb(238,138,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (6 samples, 0.28%)</title><rect x="87.8558%" y="309" width="0.2846%" height="15" fill="rgb(232,132,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (6 samples, 0.28%)</title><rect x="87.8558%" y="293" width="0.2846%" height="15" fill="rgb(245,145,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.28%)</title><rect x="87.8558%" y="277" width="0.2846%" height="15" fill="rgb(194,94,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.28%)</title><rect x="87.8558%" y="261" width="0.2846%" height="15" fill="rgb(236,136,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.28%)</title><rect x="87.8558%" y="245" width="0.2846%" height="15" fill="rgb(218,118,0)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="255.50"></text></g><g><title>cfree (6 samples, 0.28%)</title><rect x="87.8558%" y="229" width="0.2846%" height="15" fill="rgb(199,199,59)" fg:x="1852" fg:w="6"/><text x="88.1058%" y="239.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="87.9981%" y="213" width="0.1423%" height="15" fill="rgb(220,220,66)" fg:x="1855" fg:w="3"/><text x="88.2481%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="88.0455%" y="197" width="0.0949%" height="15" fill="rgb(223,223,67)" fg:x="1856" fg:w="2"/><text x="88.2955%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="88.1404%" y="293" width="0.0474%" height="15" fill="rgb(79,191,191)" fg:x="1858" fg:w="1"/><text x="88.3904%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="88.1404%" y="277" width="0.0474%" height="15" fill="rgb(95,206,206)" fg:x="1858" fg:w="1"/><text x="88.3904%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.05%)</title><rect x="88.1404%" y="261" width="0.0474%" height="15" fill="rgb(108,218,218)" fg:x="1858" fg:w="1"/><text x="88.3904%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="88.1404%" y="245" width="0.0474%" height="15" fill="rgb(230,130,0)" fg:x="1858" fg:w="1"/><text x="88.3904%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="88.1404%" y="229" width="0.0474%" height="15" fill="rgb(249,149,0)" fg:x="1858" fg:w="1"/><text x="88.3904%" y="239.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="88.3776%" y="101" width="0.0474%" height="15" fill="rgb(218,218,65)" fg:x="1863" fg:w="1"/><text x="88.6276%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.90%)</title><rect x="88.3776%" y="133" width="0.9013%" height="15" fill="rgb(226,126,0)" fg:x="1863" fg:w="19"/><text x="88.6276%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.90%)</title><rect x="88.3776%" y="117" width="0.9013%" height="15" fill="rgb(223,123,0)" fg:x="1863" fg:w="19"/><text x="88.6276%" y="127.50"></text></g><g><title>cfree (18 samples, 0.85%)</title><rect x="88.4250%" y="101" width="0.8539%" height="15" fill="rgb(219,219,66)" fg:x="1864" fg:w="18"/><text x="88.6750%" y="111.50"></text></g><g><title>[libc.so.6] (13 samples, 0.62%)</title><rect x="88.6622%" y="85" width="0.6167%" height="15" fill="rgb(210,210,63)" fg:x="1869" fg:w="13"/><text x="88.9122%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 1.19%)</title><rect x="88.1879%" y="229" width="1.1860%" height="15" fill="rgb(254,154,0)" fg:x="1859" fg:w="25"/><text x="88.4379%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (23 samples, 1.09%)</title><rect x="88.2827%" y="213" width="1.0911%" height="15" fill="rgb(211,111,0)" fg:x="1861" fg:w="23"/><text x="88.5327%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (23 samples, 1.09%)</title><rect x="88.2827%" y="197" width="1.0911%" height="15" fill="rgb(250,150,0)" fg:x="1861" fg:w="23"/><text x="88.5327%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (23 samples, 1.09%)</title><rect x="88.2827%" y="181" width="1.0911%" height="15" fill="rgb(211,111,0)" fg:x="1861" fg:w="23"/><text x="88.5327%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (23 samples, 1.09%)</title><rect x="88.2827%" y="165" width="1.0911%" height="15" fill="rgb(224,124,0)" fg:x="1861" fg:w="23"/><text x="88.5327%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.09%)</title><rect x="88.2827%" y="149" width="1.0911%" height="15" fill="rgb(227,127,0)" fg:x="1861" fg:w="23"/><text x="88.5327%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.09%)</title><rect x="89.2789%" y="133" width="0.0949%" height="15" fill="rgb(238,138,0)" fg:x="1882" fg:w="2"/><text x="89.5289%" y="143.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (27 samples, 1.28%)</title><rect x="88.1879%" y="293" width="1.2808%" height="15" fill="rgb(75,187,187)" fg:x="1859" fg:w="27"/><text x="88.4379%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (27 samples, 1.28%)</title><rect x="88.1879%" y="277" width="1.2808%" height="15" fill="rgb(249,149,0)" fg:x="1859" fg:w="27"/><text x="88.4379%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (27 samples, 1.28%)</title><rect x="88.1879%" y="261" width="1.2808%" height="15" fill="rgb(214,114,0)" fg:x="1859" fg:w="27"/><text x="88.4379%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (27 samples, 1.28%)</title><rect x="88.1879%" y="245" width="1.2808%" height="15" fill="rgb(254,154,0)" fg:x="1859" fg:w="27"/><text x="88.4379%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (2 samples, 0.09%)</title><rect x="89.3738%" y="229" width="0.0949%" height="15" fill="rgb(209,109,0)" fg:x="1884" fg:w="2"/><text x="89.6238%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="89.3738%" y="213" width="0.0949%" height="15" fill="rgb(240,140,0)" fg:x="1884" fg:w="2"/><text x="89.6238%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="89.3738%" y="197" width="0.0949%" height="15" fill="rgb(205,105,0)" fg:x="1884" fg:w="2"/><text x="89.6238%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="89.3738%" y="181" width="0.0949%" height="15" fill="rgb(250,150,0)" fg:x="1884" fg:w="2"/><text x="89.6238%" y="191.50"></text></g><g><title>cfree (2 samples, 0.09%)</title><rect x="89.3738%" y="165" width="0.0949%" height="15" fill="rgb(193,193,56)" fg:x="1884" fg:w="2"/><text x="89.6238%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="89.4213%" y="149" width="0.0474%" height="15" fill="rgb(218,218,65)" fg:x="1885" fg:w="1"/><text x="89.6713%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 1.66%)</title><rect x="87.8558%" y="453" width="1.6603%" height="15" fill="rgb(223,123,0)" fg:x="1852" fg:w="35"/><text x="88.1058%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)]&gt; (35 samples, 1.66%)</title><rect x="87.8558%" y="437" width="1.6603%" height="15" fill="rgb(238,138,0)" fg:x="1852" fg:w="35"/><text x="88.1058%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt; (35 samples, 1.66%)</title><rect x="87.8558%" y="421" width="1.6603%" height="15" fill="rgb(240,140,0)" fg:x="1852" fg:w="35"/><text x="88.1058%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (35 samples, 1.66%)</title><rect x="87.8558%" y="405" width="1.6603%" height="15" fill="rgb(219,119,0)" fg:x="1852" fg:w="35"/><text x="88.1058%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (29 samples, 1.38%)</title><rect x="88.1404%" y="389" width="1.3757%" height="15" fill="rgb(226,126,0)" fg:x="1858" fg:w="29"/><text x="88.3904%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (29 samples, 1.38%)</title><rect x="88.1404%" y="373" width="1.3757%" height="15" fill="rgb(198,98,0)" fg:x="1858" fg:w="29"/><text x="88.3904%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (29 samples, 1.38%)</title><rect x="88.1404%" y="357" width="1.3757%" height="15" fill="rgb(202,102,0)" fg:x="1858" fg:w="29"/><text x="88.3904%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 1.38%)</title><rect x="88.1404%" y="341" width="1.3757%" height="15" fill="rgb(84,196,196)" fg:x="1858" fg:w="29"/><text x="88.3904%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (29 samples, 1.38%)</title><rect x="88.1404%" y="325" width="1.3757%" height="15" fill="rgb(88,200,200)" fg:x="1858" fg:w="29"/><text x="88.3904%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (29 samples, 1.38%)</title><rect x="88.1404%" y="309" width="1.3757%" height="15" fill="rgb(94,205,205)" fg:x="1858" fg:w="29"/><text x="88.3904%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1 samples, 0.05%)</title><rect x="89.4687%" y="293" width="0.0474%" height="15" fill="rgb(64,178,178)" fg:x="1886" fg:w="1"/><text x="89.7187%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="89.4687%" y="277" width="0.0474%" height="15" fill="rgb(101,212,212)" fg:x="1886" fg:w="1"/><text x="89.7187%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.05%)</title><rect x="89.4687%" y="261" width="0.0474%" height="15" fill="rgb(61,175,175)" fg:x="1886" fg:w="1"/><text x="89.7187%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.05%)</title><rect x="89.4687%" y="245" width="0.0474%" height="15" fill="rgb(250,150,0)" fg:x="1886" fg:w="1"/><text x="89.7187%" y="255.50"></text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::take_best_layouts (85 samples, 4.03%)</title><rect x="87.6660%" y="485" width="4.0323%" height="15" fill="rgb(53,168,168)" fg:x="1848" fg:w="85"/><text x="87.9160%" y="495.50">alc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt;&gt; (81 samples, 3.84%)</title><rect x="87.8558%" y="469" width="3.8425%" height="15" fill="rgb(222,122,0)" fg:x="1852" fg:w="81"/><text x="88.1058%" y="479.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;,f32)&gt;&gt; (46 samples, 2.18%)</title><rect x="89.5161%" y="453" width="2.1822%" height="15" fill="rgb(201,101,0)" fg:x="1887" fg:w="46"/><text x="89.7661%" y="463.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 2.18%)</title><rect x="89.5161%" y="437" width="2.1822%" height="15" fill="rgb(227,127,0)" fg:x="1887" fg:w="46"/><text x="89.7661%" y="447.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (46 samples, 2.18%)</title><rect x="89.5161%" y="421" width="2.1822%" height="15" fill="rgb(243,143,0)" fg:x="1887" fg:w="46"/><text x="89.7661%" y="431.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (46 samples, 2.18%)</title><rect x="89.5161%" y="405" width="2.1822%" height="15" fill="rgb(200,100,0)" fg:x="1887" fg:w="46"/><text x="89.7661%" y="415.50">a..</text></g><g><title>cfree (46 samples, 2.18%)</title><rect x="89.5161%" y="389" width="2.1822%" height="15" fill="rgb(228,228,69)" fg:x="1887" fg:w="46"/><text x="89.7661%" y="399.50">c..</text></g><g><title>[libc.so.6] (46 samples, 2.18%)</title><rect x="89.5161%" y="373" width="2.1822%" height="15" fill="rgb(214,214,64)" fg:x="1887" fg:w="46"/><text x="89.7661%" y="383.50">[..</text></g><g><title>[libc.so.6] (46 samples, 2.18%)</title><rect x="89.5161%" y="357" width="2.1822%" height="15" fill="rgb(209,209,62)" fg:x="1887" fg:w="46"/><text x="89.7661%" y="367.50">[..</text></g><g><title>[libc.so.6] (13 samples, 0.62%)</title><rect x="91.0816%" y="341" width="0.6167%" height="15" fill="rgb(228,228,69)" fg:x="1920" fg:w="13"/><text x="91.3316%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt;&gt; (7 samples, 0.33%)</title><rect x="91.6983%" y="421" width="0.3321%" height="15" fill="rgb(243,143,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.33%)</title><rect x="91.6983%" y="405" width="0.3321%" height="15" fill="rgb(192,92,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;]&gt; (7 samples, 0.33%)</title><rect x="91.6983%" y="389" width="0.3321%" height="15" fill="rgb(203,103,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layer::Layer&lt;4_usize,12_usize,alc::keyboard::key::KeycodeKey&gt;&gt; (7 samples, 0.33%)</title><rect x="91.6983%" y="373" width="0.3321%" height="15" fill="rgb(222,122,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;array2d::Array2D&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (7 samples, 0.33%)</title><rect x="91.6983%" y="357" width="0.3321%" height="15" fill="rgb(194,94,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (7 samples, 0.33%)</title><rect x="91.6983%" y="341" width="0.3321%" height="15" fill="rgb(233,133,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::key::KeycodeKey&gt;&gt; (7 samples, 0.33%)</title><rect x="91.6983%" y="325" width="0.3321%" height="15" fill="rgb(194,94,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.33%)</title><rect x="91.6983%" y="309" width="0.3321%" height="15" fill="rgb(229,129,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.33%)</title><rect x="91.6983%" y="293" width="0.3321%" height="15" fill="rgb(210,110,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.33%)</title><rect x="91.6983%" y="277" width="0.3321%" height="15" fill="rgb(242,142,0)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="287.50"></text></g><g><title>cfree (7 samples, 0.33%)</title><rect x="91.6983%" y="261" width="0.3321%" height="15" fill="rgb(226,226,68)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="271.50"></text></g><g><title>[libc.so.6] (7 samples, 0.33%)</title><rect x="91.6983%" y="245" width="0.3321%" height="15" fill="rgb(210,210,62)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="255.50"></text></g><g><title>[libc.so.6] (7 samples, 0.33%)</title><rect x="91.6983%" y="229" width="0.3321%" height="15" fill="rgb(218,218,65)" fg:x="1933" fg:w="7"/><text x="91.9483%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="91.9829%" y="213" width="0.0474%" height="15" fill="rgb(228,228,69)" fg:x="1939" fg:w="1"/><text x="92.2329%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="92.0304%" y="325" width="0.0474%" height="15" fill="rgb(104,215,215)" fg:x="1940" fg:w="1"/><text x="92.2804%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="92.0304%" y="309" width="0.0474%" height="15" fill="rgb(54,169,169)" fg:x="1940" fg:w="1"/><text x="92.2804%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="92.0304%" y="293" width="0.0474%" height="15" fill="rgb(103,213,213)" fg:x="1940" fg:w="1"/><text x="92.2804%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.05%)</title><rect x="92.0304%" y="277" width="0.0474%" height="15" fill="rgb(81,193,193)" fg:x="1940" fg:w="1"/><text x="92.2804%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 1.42%)</title><rect x="92.7894%" y="165" width="1.4231%" height="15" fill="rgb(217,117,0)" fg:x="1956" fg:w="30"/><text x="93.0394%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 1.42%)</title><rect x="92.7894%" y="149" width="1.4231%" height="15" fill="rgb(208,108,0)" fg:x="1956" fg:w="30"/><text x="93.0394%" y="159.50"></text></g><g><title>cfree (26 samples, 1.23%)</title><rect x="92.9791%" y="133" width="1.2334%" height="15" fill="rgb(194,194,56)" fg:x="1960" fg:w="26"/><text x="93.2291%" y="143.50"></text></g><g><title>[libc.so.6] (10 samples, 0.47%)</title><rect x="93.7381%" y="117" width="0.4744%" height="15" fill="rgb(217,217,65)" fg:x="1976" fg:w="10"/><text x="93.9881%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 2.18%)</title><rect x="92.0778%" y="261" width="2.1822%" height="15" fill="rgb(242,142,0)" fg:x="1941" fg:w="46"/><text x="92.3278%" y="271.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::LayoutPositionSequence]&gt; (43 samples, 2.04%)</title><rect x="92.2201%" y="245" width="2.0398%" height="15" fill="rgb(196,96,0)" fg:x="1944" fg:w="43"/><text x="92.4701%" y="255.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::LayoutPositionSequence&gt; (42 samples, 1.99%)</title><rect x="92.2676%" y="229" width="1.9924%" height="15" fill="rgb(237,137,0)" fg:x="1945" fg:w="42"/><text x="92.5176%" y="239.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPosition&gt;&gt; (42 samples, 1.99%)</title><rect x="92.2676%" y="213" width="1.9924%" height="15" fill="rgb(208,108,0)" fg:x="1945" fg:w="42"/><text x="92.5176%" y="223.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPosition&gt;&gt; (42 samples, 1.99%)</title><rect x="92.2676%" y="197" width="1.9924%" height="15" fill="rgb(201,101,0)" fg:x="1945" fg:w="42"/><text x="92.5176%" y="207.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 1.99%)</title><rect x="92.2676%" y="181" width="1.9924%" height="15" fill="rgb(199,99,0)" fg:x="1945" fg:w="42"/><text x="92.5176%" y="191.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="94.2125%" y="165" width="0.0474%" height="15" fill="rgb(245,145,0)" fg:x="1986" fg:w="1"/><text x="94.4625%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.05%)</title><rect x="94.2125%" y="149" width="0.0474%" height="15" fill="rgb(239,139,0)" fg:x="1986" fg:w="1"/><text x="94.4625%" y="159.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="94.3548%" y="197" width="0.0474%" height="15" fill="rgb(222,222,67)" fg:x="1989" fg:w="1"/><text x="94.6048%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 2.99%)</title><rect x="92.0304%" y="373" width="2.9886%" height="15" fill="rgb(78,190,190)" fg:x="1940" fg:w="63"/><text x="92.2804%" y="383.50">&lt;ha..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (63 samples, 2.99%)</title><rect x="92.0304%" y="357" width="2.9886%" height="15" fill="rgb(96,207,207)" fg:x="1940" fg:w="63"/><text x="92.2804%" y="367.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (63 samples, 2.99%)</title><rect x="92.0304%" y="341" width="2.9886%" height="15" fill="rgb(59,173,173)" fg:x="1940" fg:w="63"/><text x="92.2804%" y="351.50">has..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (62 samples, 2.94%)</title><rect x="92.0778%" y="325" width="2.9412%" height="15" fill="rgb(59,173,173)" fg:x="1941" fg:w="62"/><text x="92.3278%" y="335.50">ha..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (62 samples, 2.94%)</title><rect x="92.0778%" y="309" width="2.9412%" height="15" fill="rgb(242,142,0)" fg:x="1941" fg:w="62"/><text x="92.3278%" y="319.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt; (62 samples, 2.94%)</title><rect x="92.0778%" y="293" width="2.9412%" height="15" fill="rgb(201,101,0)" fg:x="1941" fg:w="62"/><text x="92.3278%" y="303.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (62 samples, 2.94%)</title><rect x="92.0778%" y="277" width="2.9412%" height="15" fill="rgb(203,103,0)" fg:x="1941" fg:w="62"/><text x="92.3278%" y="287.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt; (16 samples, 0.76%)</title><rect x="94.2600%" y="261" width="0.7590%" height="15" fill="rgb(199,99,0)" fg:x="1987" fg:w="16"/><text x="94.5100%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.76%)</title><rect x="94.2600%" y="245" width="0.7590%" height="15" fill="rgb(220,120,0)" fg:x="1987" fg:w="16"/><text x="94.5100%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.71%)</title><rect x="94.3074%" y="229" width="0.7116%" height="15" fill="rgb(217,117,0)" fg:x="1988" fg:w="15"/><text x="94.5574%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.71%)</title><rect x="94.3074%" y="213" width="0.7116%" height="15" fill="rgb(226,126,0)" fg:x="1988" fg:w="15"/><text x="94.5574%" y="223.50"></text></g><g><title>cfree (13 samples, 0.62%)</title><rect x="94.4023%" y="197" width="0.6167%" height="15" fill="rgb(197,197,58)" fg:x="1990" fg:w="13"/><text x="94.6523%" y="207.50"></text></g><g><title>[libc.so.6] (10 samples, 0.47%)</title><rect x="94.5446%" y="181" width="0.4744%" height="15" fill="rgb(178,178,51)" fg:x="1993" fg:w="10"/><text x="94.7946%" y="191.50"></text></g><g><title>[libc.so.6] (7 samples, 0.33%)</title><rect x="94.6869%" y="165" width="0.3321%" height="15" fill="rgb(177,177,51)" fg:x="1996" fg:w="7"/><text x="94.9369%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 3.61%)</title><rect x="91.6983%" y="469" width="3.6053%" height="15" fill="rgb(206,106,0)" fg:x="1933" fg:w="76"/><text x="91.9483%" y="479.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;]&gt; (76 samples, 3.61%)</title><rect x="91.6983%" y="453" width="3.6053%" height="15" fill="rgb(248,148,0)" fg:x="1933" fg:w="76"/><text x="91.9483%" y="463.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt; (76 samples, 3.61%)</title><rect x="91.6983%" y="437" width="3.6053%" height="15" fill="rgb(253,153,0)" fg:x="1933" fg:w="76"/><text x="91.9483%" y="447.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;&gt;&gt; (69 samples, 3.27%)</title><rect x="92.0304%" y="421" width="3.2732%" height="15" fill="rgb(194,94,0)" fg:x="1940" fg:w="69"/><text x="92.2804%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;,std::hash::random::RandomState&gt;&gt; (69 samples, 3.27%)</title><rect x="92.0304%" y="405" width="3.2732%" height="15" fill="rgb(202,102,0)" fg:x="1940" fg:w="69"/><text x="92.2804%" y="415.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alc::text_processor::keycode::Keycode,alloc::vec::Vec&lt;alc::keyboard::LayoutPositionSequence&gt;)&gt;&gt; (69 samples, 3.27%)</title><rect x="92.0304%" y="389" width="3.2732%" height="15" fill="rgb(244,144,0)" fg:x="1940" fg:w="69"/><text x="92.2804%" y="399.50">cor..</text></g><g><title>cfree (6 samples, 0.28%)</title><rect x="95.0190%" y="373" width="0.2846%" height="15" fill="rgb(191,191,55)" fg:x="2003" fg:w="6"/><text x="95.2690%" y="383.50"></text></g><g><title>[libc.so.6] (6 samples, 0.28%)</title><rect x="95.0190%" y="357" width="0.2846%" height="15" fill="rgb(220,220,66)" fg:x="2003" fg:w="6"/><text x="95.2690%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.28%)</title><rect x="95.0190%" y="341" width="0.2846%" height="15" fill="rgb(226,226,68)" fg:x="2003" fg:w="6"/><text x="95.2690%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="95.2562%" y="325" width="0.0474%" height="15" fill="rgb(217,217,65)" fg:x="2008" fg:w="1"/><text x="95.5062%" y="335.50"></text></g><g><title>_start (1,690 samples, 80.17%)</title><rect x="17.6945%" y="773" width="80.1708%" height="15" fill="rgb(186,186,54)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="783.50">_start</text></g><g><title>__libc_start_main (1,690 samples, 80.17%)</title><rect x="17.6945%" y="757" width="80.1708%" height="15" fill="rgb(194,194,57)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="767.50">__libc_start_main</text></g><g><title>[libc.so.6] (1,690 samples, 80.17%)</title><rect x="17.6945%" y="741" width="80.1708%" height="15" fill="rgb(198,198,58)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="751.50">[libc.so.6]</text></g><g><title>main (1,690 samples, 80.17%)</title><rect x="17.6945%" y="725" width="80.1708%" height="15" fill="rgb(195,195,57)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="735.50">main</text></g><g><title>std::rt::lang_start_internal (1,690 samples, 80.17%)</title><rect x="17.6945%" y="709" width="80.1708%" height="15" fill="rgb(203,103,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="719.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,690 samples, 80.17%)</title><rect x="17.6945%" y="693" width="80.1708%" height="15" fill="rgb(193,93,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,690 samples, 80.17%)</title><rect x="17.6945%" y="677" width="80.1708%" height="15" fill="rgb(211,111,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,690 samples, 80.17%)</title><rect x="17.6945%" y="661" width="80.1708%" height="15" fill="rgb(237,137,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="671.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1,690 samples, 80.17%)</title><rect x="17.6945%" y="645" width="80.1708%" height="15" fill="rgb(251,151,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="655.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (1,690 samples, 80.17%)</title><rect x="17.6945%" y="629" width="80.1708%" height="15" fill="rgb(254,154,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="639.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,690 samples, 80.17%)</title><rect x="17.6945%" y="613" width="80.1708%" height="15" fill="rgb(236,136,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="623.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,690 samples, 80.17%)</title><rect x="17.6945%" y="597" width="80.1708%" height="15" fill="rgb(252,152,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="607.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,690 samples, 80.17%)</title><rect x="17.6945%" y="581" width="80.1708%" height="15" fill="rgb(227,127,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="591.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (1,690 samples, 80.17%)</title><rect x="17.6945%" y="565" width="80.1708%" height="15" fill="rgb(237,137,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="575.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,690 samples, 80.17%)</title><rect x="17.6945%" y="549" width="80.1708%" height="15" fill="rgb(213,113,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="559.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,690 samples, 80.17%)</title><rect x="17.6945%" y="533" width="80.1708%" height="15" fill="rgb(191,91,0)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="543.50">core::ops::function::FnOnce::call_once</text></g><g><title>alc::main (1,690 samples, 80.17%)</title><rect x="17.6945%" y="517" width="80.1708%" height="15" fill="rgb(109,219,219)" fg:x="373" fg:w="1690"/><text x="17.9445%" y="527.50">alc::main</text></g><g><title>alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize (1,683 samples, 79.84%)</title><rect x="18.0266%" y="501" width="79.8387%" height="15" fill="rgb(106,217,217)" fg:x="380" fg:w="1683"/><text x="18.2766%" y="511.50">alc::optimizer::LayoutOptimizer&lt;_,_,S&gt;::optimize</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (130 samples, 6.17%)</title><rect x="91.6983%" y="485" width="6.1670%" height="15" fill="rgb(245,145,0)" fg:x="1933" fg:w="130"/><text x="91.9483%" y="495.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alc::keyboard::layout::Layout&lt;4_usize,12_usize&gt;&gt;&gt; (54 samples, 2.56%)</title><rect x="95.3036%" y="469" width="2.5617%" height="15" fill="rgb(220,120,0)" fg:x="2009" fg:w="54"/><text x="95.5536%" y="479.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 2.56%)</title><rect x="95.3036%" y="453" width="2.5617%" height="15" fill="rgb(254,154,0)" fg:x="2009" fg:w="54"/><text x="95.5536%" y="463.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 2.56%)</title><rect x="95.3036%" y="437" width="2.5617%" height="15" fill="rgb(198,98,0)" fg:x="2009" fg:w="54"/><text x="95.5536%" y="447.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (54 samples, 2.56%)</title><rect x="95.3036%" y="421" width="2.5617%" height="15" fill="rgb(209,109,0)" fg:x="2009" fg:w="54"/><text x="95.5536%" y="431.50">al..</text></g><g><title>cfree (54 samples, 2.56%)</title><rect x="95.3036%" y="405" width="2.5617%" height="15" fill="rgb(200,200,59)" fg:x="2009" fg:w="54"/><text x="95.5536%" y="415.50">cf..</text></g><g><title>[libc.so.6] (54 samples, 2.56%)</title><rect x="95.3036%" y="389" width="2.5617%" height="15" fill="rgb(202,202,60)" fg:x="2009" fg:w="54"/><text x="95.5536%" y="399.50">[l..</text></g><g><title>[libc.so.6] (54 samples, 2.56%)</title><rect x="95.3036%" y="373" width="2.5617%" height="15" fill="rgb(211,211,63)" fg:x="2009" fg:w="54"/><text x="95.5536%" y="383.50">[l..</text></g><g><title>[libc.so.6] (10 samples, 0.47%)</title><rect x="97.3909%" y="357" width="0.4744%" height="15" fill="rgb(176,176,50)" fg:x="2053" fg:w="10"/><text x="97.6409%" y="367.50"></text></g><g><title>alc::keyboard::layout::Layout&lt;_,_&gt;::ngram_to_sequences (4 samples, 0.19%)</title><rect x="97.8653%" y="773" width="0.1898%" height="15" fill="rgb(89,200,200)" fg:x="2063" fg:w="4"/><text x="98.1153%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.43%)</title><rect x="98.0550%" y="773" width="0.4269%" height="15" fill="rgb(242,142,0)" fg:x="2067" fg:w="9"/><text x="98.3050%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.19%)</title><rect x="98.2922%" y="757" width="0.1898%" height="15" fill="rgb(201,101,0)" fg:x="2072" fg:w="4"/><text x="98.5422%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.19%)</title><rect x="98.2922%" y="741" width="0.1898%" height="15" fill="rgb(237,137,0)" fg:x="2072" fg:w="4"/><text x="98.5422%" y="751.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.19%)</title><rect x="98.2922%" y="725" width="0.1898%" height="15" fill="rgb(220,120,0)" fg:x="2072" fg:w="4"/><text x="98.5422%" y="735.50"></text></g><g><title>cfree (14 samples, 0.66%)</title><rect x="98.4820%" y="773" width="0.6641%" height="15" fill="rgb(226,226,68)" fg:x="2076" fg:w="14"/><text x="98.7320%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.09%)</title><rect x="99.1461%" y="773" width="0.0949%" height="15" fill="rgb(238,138,0)" fg:x="2090" fg:w="2"/><text x="99.3961%" y="783.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.05%)</title><rect x="99.2410%" y="773" width="0.0474%" height="15" fill="rgb(73,186,186)" fg:x="2092" fg:w="1"/><text x="99.4910%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.05%)</title><rect x="99.2410%" y="757" width="0.0474%" height="15" fill="rgb(100,211,211)" fg:x="2092" fg:w="1"/><text x="99.4910%" y="767.50"></text></g><g><title>all (2,108 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(192,192,56)" fg:x="0" fg:w="2108"/><text x="0.2500%" y="815.50"></text></g><g><title>alc (2,108 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(200,200,59)" fg:x="0" fg:w="2108"/><text x="0.2500%" y="799.50">alc</text></g><g><title>malloc (15 samples, 0.71%)</title><rect x="99.2884%" y="773" width="0.7116%" height="15" fill="rgb(227,227,69)" fg:x="2093" fg:w="15"/><text x="99.5384%" y="783.50"></text></g></svg></svg>